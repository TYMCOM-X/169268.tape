CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

*       (MSNTRACK:28)DUBAK.FTF (formerly NTRBAK.FTF)

*       DATA GATHERING PROGRAM FOR THE pseudo "NTRACK" PACKAGE.
*       EXTRACTS XRAY INFORMATION FROM NODES ABOUT NODE AND LINE
*       PERFORMANCE. THE NODES, LINES, AND COMMANDS TO BE EXECUTED ARE
*       TAKEN FROM A 1022 DATA BASE. DATA DUMPED TO FLAT FILES, ONE
*       FILE FOR EACH COMMAND. FLAT FILES ARE LATER LOADED INTO 1022
*       AND DELETED. THE PROGRAM ONLY RUNS DURING PEAK TRAFFIC TIMES.

*       JOANN JOELS JUN 83
*       DENNIS COFFEY 4TH Q 83
*       ROY ROSKILLY MAR 84

C Revision by:		Jason Ma
C Revision date:	2-5-86
C Revision purpose:	(1) To rename the main I/O files to DU####.*
C			    (for "Delay/Utilization").  The old and 
C			    new filenames are as follows:
C			    
C				OLD		NEW
C				---		---
C				NTRBAK		DUBAK
C				NTRQUE		DUQUE
C				NS		DUNS
C				KS		DUKS
C				NTRLOG		DULOG
C
C			(2) To tailor the function of this program for
C			    the "Delay/Utilization" reports.  The 
C			    following revisions were done:
C
C			    a) The statement "CALL DBSORT ('XRETRY',
C			       'CDATE', 'CTIME', 'NODE') is modified
C			       to "CALL DBSORT ('CDATE', 'CTIME').
C
C			    b) The subroutine-program NS.FTF (renamed to
C			       DUNS.FTF) is modified to avoid collecting
C			       XRAY ND info.
C			       
C
C REVISION: MAY, 1991
C REVIOSION BY: JO ANN JOELS
C REVISION MADE:
C
C       Due to increased security this program is becoming a
C       manual program.  It will prompt the user for the
C       xray password each time it is started up.
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

*       STORAGE DECLARATIONS

        INTEGER JOBNAM, PORT, MTRPOS, PROMPT, IDATE(2), TDATE, ERRD,
     +  STIME, SDATE, RETRY, ERRT, ERRCKT, NUMCIR, MNTMOD, MTIME,
     +  CDATE, CTIME, KERNEL, NODE, XCOM, NEIGH, ITIME, TTIME,
     +  GNAME(4),GNAMES(4),GHOSTI(4),GHOSTS(4),XNAMES(4),XNAME(4),
     +  XPASS(3),XPASSS(3),GHOST

*       COMMON DATA SHARED WITH SUBROUTINE

        COMMON /AUX/ PORT
        COMMON /OUTPOS/ MTRPOS
        COMMON /GATE/GNAME,GHOST
        COMMON /XRAY/XNAME,XPASS

*       PROMPT (62) IS AN UP-ARROW SIGNALING END OF XRAY OUTPUT

        DATA PROMPT /62/

*       GET ORIGINAL JOB NAME

        CALL GETNAM (-1, JOBNAM)

*       INIT 1022

        CALL DBSTRT (1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,
     +     1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,
     +     1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,
     +     1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,
     +     1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,
     +     1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,
     +     1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,
     +     1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,
     +     1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1)
        CALL DBERR ($890, IERT, IERC)

*       RE-ESTABLISH ORIGINAL JOB NAME FOR SYSTAT

        CALL SETN (JOBNAM)

*       CONVERT CURRENT DATE TO YYMMDD FORMAT

        CALL DATE (IDATE)
        CALL DATCON (IDATE, TDATE, ERRD)
        IF (ERRD .EQ. -1) GOTO 997

*       OPEN LOG FILE FOR RECORDING CIRCUIT BUILDS, FAILURES, AND OTHER
*       ERROR CONDITIONS.

        OPEN (22, '(MSNTRACK)DULOG', RANDOUT)

*       WRITE 2 BLANK LINES TO LOG FILE.

        CALL TIME(ITIME)
        CALL TIMCON(ITIME,TTIME,ERRT)
        MTRPOS = SIZE(22) + 1
        WRITE (22#MTRPOS, 5015),TDATE,TTIME
5015    FORMAT (1X/,'PROGRAM STARTUP: ',I6,1X,I4)

*       OPEN 1022 NODE-COMMAND QUEUE FILE DATA BASE

        CALL DBOPEN ('(MSNTRACK)DUQUE')

*       GET PROGRAM STOP TIME FROM CONTROL FILE. PROGRAM NORMALLY ONLY
*       RUNS DURING PEAK TRAFFIC TIMES.

        OPEN (24, '(MSNTRACK)DUBAK.CTL',INPUT)
        READ (24, 5020) STIME
5020    FORMAT (I4)
        CLOSE(24)

*

30      OPEN (21,'MGXI',INPUT,ERR=45)
        READ (21,35)GNAMES,GHOSTS(1),XNAMES,XPASSS
35      FORMAT (4O,O,4O,3O)
        CLOSE(21)
40      CALL NETU(GNAMES,GNAME)
        CALL NETU(GHOSTS,GHOSTI)
        GHOST=GHOSTI(1)
        CALL NETU(XNAMES,XNAME)
        CALL NETU(XPASSS,XPASS)

        GOTO 50

45      WRITE (22#MTRPOS,47)TTIME
47      FORMAT (1X,'UNABLE TO OPEN PASSWORD FILE. TIME: ',I4)
        GOTO 999

*       SORT NODE-COMMAND QUEUE

50      CALL DBCLR
        CALL DBFIND ('ALL')
        CALL DBSORT ('CDATE', 'CTIME')

*       PULL A JOB (NODE-COMMAND, ETC. FROM QUEUE

60      CALL DBGREC ($50)

*       EXTRACT VALUES FROM 1022 QUEUE DATA BASE AND INTO FORTRAN FIELDS

        CALL DBVAL ('NODE', NODE, 'NEIGH', NEIGH, 'KERNL', KERNEL,
     +  'COMND', XCOM, 'CDATE', CDATE, 'CTIME', CTIME, 
     +  'SDATE', SDATE, 'XRETRY', RETRY, 'MTIME', MTIME)
*       MAKE SURE THAT WE DON'T TRY TO BUILD A CIRCUIT TO A
*       KERNEL HOST NUMBER OF ZERO.

*
*       ALSO, LOGGING INTO HOST 2892 BRINGS DOWN THE NODE
*               THAT IT IS ON.  DO NOT LOG INTO KERNEL HOST 2892.
*               JJOELS - 6-25-90.
 61      IF (KERNEL.EQ.0.OR.KERNEL.EQ.2892) GOTO 60


C       IF THIS PROGRAM HAS TRIED MORE THAN 2 TIMES TO CONNECT TO
C       THIS NODE AND FAILED, THEN DON'T TRY ANYMORE THIS MONTH.
C       THE QUEUE WILL BE REBUILT AT THE BEGINNING OF NEXT MONTH AND
C       WE'LL TRY AGAIN THEN.
        IF ( RETRY.LT.-3) GOTO 60

*       MAKE SOME TESTS TO SEE IF CURRENT JOB SHOULD NOT BE EXECUTED

*       GET CURRENT TIME

        CALL TIME (ITIME)

*       CONVERT TIME TO HHMM FORMAT FOR COMPARISON WITH QUEUE DATA BASE
*       TIME IN LIKE FORMAT

        CALL TIMCON (ITIME, TTIME, ERRT)

*       IF CURRENT TIME OF DAY IS PAST THE STOP TIME FROM THE CONTROL
*       FILE, THEN STOP THE PROGRAM. DONE FOR THE DAY. ONLY RUN DURING
*       PEAK TRAFFIC TIME

        IF (TTIME .GE. STIME) GOTO 998

*       IF GETTING CLOSE TO THE HOUR, STOP PROGRAM. IT WILL BE STARTED
*       AGAIN BY A PERP JOB.

C        MNTMOD=MOD (TTIME,100)
C        IF (MNTMOD.GE.57) GOTO 996

CCCCC
C DO NOT DO THIS NEXT CHECK!!
CCCCC
*       IF CURRENT DATE IS AFTER THE STOP DATE FOR THIS QUEUE ENTRY,
*       THEN SKIP THIS QUEUE ENTRY AND GO ON TO THE NEXT ONE.

C       IF (TDATE .GT. SDATE) GOTO 60

*	IF LESS THAN THE MINIMUM TIME BETWEEN SNAPS, SKIP THIS RECORD

        IF (TTIME .LT. CTIME) GOTO 10
	IF ((TTIME-CTIME) .LT. MTIME) GOTO 60

*       IF NOT IN RETRY MODE ON THIS QUEUE ENTRY, GO PROCESS IT.

10	CONTINUE
        IF (RETRY .EQ. 0) GOTO 100

*       IF THE LAST RETRY WAS NOT AT LEAST 15 MINUTES AGO, SKIP IT.

        IF ((TDATE .EQ. CDATE) .AND. ((TTIME-CTIME) .LT. 15)) GOTO 60

*       BUILD CIRCUIT TO XRAY

100     ERRCKT = 0
        CALL TIME(ITIME)
        CALL TIMCON(ITIME,TTIME,ERRT)
        MTRPOS=SIZE(22)+1
        WRITE (22#MTRPOS,101)NODE,TTIME
101     FORMAT('LOGGING INTO NODE: ', I6, '. TIME =', I5)

        CALL GXRCIR (KERNEL,ERRCKT)
        IF (ERRCKT .NE. 0) GOTO 300

*       CIRCUIT BUILT

        CALL TIME(ITIME)
        CALL TIMCON(ITIME,TTIME,ERRT)
        MTRPOS=SIZE(22)+1
        WRITE (22#MTRPOS, 5025) NODE, TTIME
5025     FORMAT ('LOGGED IN TO NODE ', I6, '.  TIME =', I5)

*       TEST WHICH COMMAND IS TO BE EXECUTED AND EXECUTE IT.

        IF (XCOM .EQ. 'NS   ') CALL DUNS (NODE,TDATE,TTIME)
        IF (XCOM .EQ. 'KS   ') CALL DUKS (NODE,NEIGH,TDATE,TTIME)
        CALL TIME(ITIME)
        CALL TIMCON(ITIME,TTIME,ERRT)
        MTRPOS=SIZE(22)+1
        WRITE(22#MTRPOS,5026)XCOM,TTIME
5026    FORMAT('COMPLETED COMMAND: ',A5,'.  TIME = ',I5)
        MTRPOS=SIZE(22)+1
        CALL ZAP (PORT)

*       UPDATE QUEUE DATA BASE WITH THE TIME OF THIS SUCCESSFUL XRAY
*       EXTRACTION.

        CALL DBCHNG ('CDATE', TDATE, 'CTIME', TTIME, 'XRETRY', 0)
        GOTO 350

*       CIRCUIT BUILD FAILED. UPDATE RETRY SWITCH IN QUEUE DATA BASE.
*       DUMP MSG TO LOG FILE, TOO.

300     IF (ERRCKT.NE.0) MTRPOS=SIZE(22)+1
        IF (ERRCKT .GT. 0) WRITE (22#MTRPOS, 5035) NODE, TTIME,
     +  ERRCKT 
5035    FORMAT ('CIRCUIT BUILD FAILED. NODE: ',I4,
     +  1X,'TIME: ',I5,' ERROR: ',I3)

        IF (ERRCKT.EQ.-1) WRITE (22#MTRPOS,5040) KERNEL,TTIME
5040    FORMAT ('BAD RESPONSE, KERNEL: ',I6,' TIME: ',I4)

        RETRY = RETRY-1
        CALL DBCHNG ('XRETRY', RETRY)

*       GET NUMBER AUX CIRCUITS UP. THERE SHOULD BE NONE. IF MORE THAN ONE,
*       STOP PROGRAM. GARBAGE AUX CIRCUITS CAN PREVENT USERS FROM
*       LOGGING INTO THE SYSTEM DUE TO OUT OF PORTS.

350     CALL ZAP (PORT)
        CALL AUXCHK (NUMCIR)

*       IF MORE THAN ONE CIRCUIT IS UP, STOP PROGRAM

        IF (NUMCIR .LT. 2) GOTO 60

*       GOT GARBAGE CIRCUITS, RECORD ERROR IN LOG AND STOP PROGRAM

        WRITE (22#MTRPOS, 5045) NODE, TTIME
5045    FORMAT ('GARBAGE CIRCUITS, NODE-TIME = ',I,1X,I)
        GOTO 999

*       1022 ERROR - EXIT PROGRAM

890     MTRPOS = SIZE(22) + 1
        WRITE (22#MTRPOS, 5050) IERT, IERC
5050    FORMAT (/ '!!! ERROR EXIT PROGRAM:  1022 ERROR.  ',
     +  'TYPE =', I3, ', CODE =', I3, '.  !!!' /)
        GO TO 999

*       DATE CONVERSION ERROR, STOP PROGRAM

997     MTRPOS=SIZE(22)+1
        WRITE (22#MTRPOS,5110) TDATE,TTIME
5110    FORMAT ('PROGRAM EXIT, DATE CONVERSION ERROR AT: ',I6,1X,I4)
        GOTO 999

*       CURRENT TIME IS PAST PROGRAM STOP TIME IN CONTROL FILE

998     MTRPOS=SIZE(22)+1
        WRITE (22#MTRPOS,5100) TDATE,TTIME
5100    FORMAT ('CONTROL FILE EXIT, PAST STOP TIME: ',I6,1X,I4)

*       EXIT DUE TO GETTING CLOSE TO THE NEXT HOUR

996     MTRPOS=SIZE(22)+1
        WRITE (22#MTRPOS,5205) TDATE,TTIME
5205    FORMAT ('PROGRAM STOP AT THE HOUR, TIME: ',I6,1X,I4)
        GOTO 999
*       NORMAL EXIT

999     CLOSE(22)
C       CALL RENAME('MGXI',0,0,0,0,IERR)
        CALL DBEND
        CALL BYE

*       PROGRAM END

        END
  