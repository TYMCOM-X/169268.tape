10 DIM CARD.DECK(20), CARD.STRING$(10), PIN.DECK(10), COLUMN.DECK(3,5), &
       FRAME.VALUE.X(2,12), FRAME.VALUE.Y(2,12), BOX.SCORE.X(2,10), &
       BOX.SCORE.Y(2,10), NEXT.BALL.PTR(2), NEXT.FRAME.PTR(2)
15 DIM PREVIOUS.BALLS$(2), NEXT.BOX.SCORE(2), SCORE(2), FRAME.VALUE$(2,12), &
       ERASE.STRING$(3,5)
20 DIM NAME$(2), NAME.X(2), NAME.Y(2), PIN.POS.X(10), PIN.POS.Y(10), &
       COLUMN.X(3,5), COLUMN.Y(3,5), PIN.FRAME$(10), COLUMN.MAX(3), &
       COLUMN.COUNT(3), COLUMN.FRAME$(3,5), CONTIG.PINS$(10)
30 X=RND(-1)
35 DEF EXTERNAL SIMPL STUFIB(STRING S)
40 PRINT "Are you running on a model 444 terminal":
45 INPUT RESPONSE$
50 IF LEFT(RESPONSE$,1)<>"Y" THEN END " "
51 U.ON$ = CHAR(27) + "&dA"
52 U.OFF$ = CHAR(27) + "&d@"
55 GOSUB 1000 !INITIALIZE ARRAYS
60 PRINT
75 PRINT "Do you need instructions":
80 INPUT RESPONSE$
85 IF LEFT(RESPONSE$,1)="Y" THEN GOSUB 10000
90 PRINT CHAR(27)+"H"+CHAR(27)+"J"+"How many players (1-2)":
95 INPUT NUM.PLAYERS
100 IF NUM.PLAYERS < 1 OR NUM.PLAYERS > 2 THEN GOTO 90
105 PRINT
110 FOR X=1 TO NUM.PLAYERS
115   PRINT "Name of player":x:": ":
120   INPUT IN IMAGE "#":NAME$(X)
125   NAME$(X) = CPAD(NAME$(X),9)
130   NEXT X
135 PRINT "Were all names input correctly":
140 INPUT RESPONSE$
145 IF LEFT(RESPONSE$,1) = "N" THEN GOTO 90
150 GOSUB 2000 !CLEAR VARIABLES, FORMAT SCREEN AND PLAY GAME
155 END " "

1000 X = 1
1010 FOR Y = 1 TO 19 STEP 2
1020   CARD.DECK(Y) = X
1030   CARD.DECK(Y+1) = X
1040   X = X + 1
1050   NEXT Y
1060 DATA " ACE ","  2  ","  3  ","  4  ","  5  ","  6  ","  7  ", &
          "  8  ","  9  "," 1 0 "
1070 FOR X = 1 TO 10
1080   READ TEMP$
1090   CARD.STRING$(X) = CHAR(27) + "B" + TEMP$ + "|"
1100   NEXT X
1110 DATA 11,16,21,27,33,39,45,51,57,63
1120 FOR X = 1 TO 10
1130   READ TEMP.NUM
1140   BOX.SCORE.X(1,X) = TEMP.NUM
1150   BOX.SCORE.X(2,X) = TEMP.NUM
1160   NEXT X
1170 FOR X = 1 TO 10
1180   BOX.SCORE.Y(1,X) = 19
1190   BOX.SCORE.Y(2,X) = 21
1200 NEXT X
1210 NAME.X(X) = 1 FOR X=1 TO 2
1220 NAME.Y(1) = 18
1230 NAME.Y(2) = 20
1240 DATA 14,19,24,30,36,42,48,54,60,62,64,66
1250 FOR X = 1 TO 12
1260   READ TEMP.NUM
1270   FRAME.VALUE.X(1,X) = TEMP.NUM
1280   FRAME.VALUE.X(2,X) = TEMP.NUM
1290   NEXT X
1300 FOR X = 1 TO 12
1310   FRAME.VALUE.Y(1,X) = 18
1320   FRAME.VALUE.Y(2,X) = 20
1330   NEXT X
1340 TEMP$ = "ABCDEFGHIJ"
1350 RIGHT.SIDE$="|"+CHAR(27)+"B"+CHAR(27)+"D"+"|"+CHAR(27)+"B"+ &
                 RPT(CHAR(27)+"D",7)
1360 BOTTOM.LINE$="|"+U.ON$+RPT(" ",5)+U.OFF$+"|"+ &
                  RPT(CHAR(27)+"D",7)+CHAR(27)+"A"
1370 LEFT.SIDE$="|"+CHAR(27)+"A"+CHAR(27)+"D"+"|"
1380 FOR X = 1 TO 10
1390   TOP.LINE$=" "+U.ON$+CPAD(SUBSTR(TEMP$,X,1),5)+CHAR(27)+"B"
1400   PIN.FRAME$(X)=TOP.LINE$+RIGHT.SIDE$+BOTTOM.LINE$+LEFT.SIDE$
1410   NEXT X
1420 DATA 16,12,20,8,16,24,4,12,20,28
1430 READ PIN.POS.X(X) FOR X = 1 TO 10
1440 DATA 12,8,8,4,4,4,0,0,0,0
1450 READ PIN.POS.Y(X) FOR X = 1 TO 10
1460 DATA 5,3,2
1470 READ COLUMN.MAX(X) FOR X = 1 TO 3
1480 DATA 1,1,18,20
1490 READ NAME.X(X) FOR X = 1 TO 2
1500 READ NAME.Y(X) FOR X = 1 TO 2
1510 DATA 42,52,62,43,53,63,44,54,45,46
1520 FOR Y = 1 TO 5
1530   FOR X = 1 TO 3
1540     COLUMN.COUNT(X) = COLUMN.COUNT(X) + 1
1550     IF COLUMN.COUNT(X) > COLUMN.MAX(X) THEN
1560       COLUMN.COUNT(X) = COLUMN.COUNT(X) - 1
1570     ELSE
1580       READ COLUMN.X(X,Y) 
1600     ENDIF
1610     NEXT X
1620   NEXT Y
1630 COLUMN.COUNT(X) = 0 FOR X = 1 TO 3
1640 DATA 2,2,2,3,3,3,4,4,5,6
1650 FOR Y = 1 TO 5
1660   FOR X = 1 TO 3
1670     COLUMN.COUNT(X) = COLUMN.COUNT(X) + 1
1680     IF COLUMN.COUNT(X) > COLUMN.MAX(X) THEN
1690       COLUMN.COUNT(X) = COLUMN.COUNT(X) - 1
1700     ELSE
1710       READ COLUMN.Y(X,Y) 
1720     ENDIF
1730     NEXT X
1740   NEXT Y
1750 COLUMN.FRAME$(1,1) = LEFT(PIN.FRAME$(1),7) + &
                          " " + RIGHT(PIN.FRAME$(1),63)
1760 COLUMN.FRAME$(2,1), COLUMN.FRAME$(3,1) = COLUMN.FRAME$(1,1)
1770 COLUMN.FRAME$(1,2) = &
          " " + U.ON$ + "    |" + U.OFF$ + " " + &
          RPT(CHAR(27) + "B" + RPT(CHAR(27)+"D",7) + "|     |",2) 
1775 COLUMN.FRAME$(1,2) = COLUMN.FRAME$(1,2) + CHAR(27) + "B" + &
          RPT(CHAR(27)+"D",7) + "|" + U.ON$ + &
          "     " + U.OFF$ + "|"
1780 COLUMN.FRAME$(2,2), COLUMN.FRAME$(3,2), COLUMN.FRAME$(1,3), &
     COLUMN.FRAME$(2,3), COLUMN.FRAME$(1,4), COLUMN.FRAME$(1,5) = &
     COLUMN.FRAME$(1,2)
1790 SCORE.LINE.1$ = U.ON$+RPT(" ",13)+"1"+RPT(" ",4)+ &
      "2"+RPT(" ",4)+"3"+RPT(" ",4)+"4"+RPT(" ",5)+"5"+RPT(" ",5)+ &
      "6"+RPT(" ",5)+"7"+RPT(" ",5)+"8"+RPT(" ",5)+"9"+RPT(" ",4)+ &
      "10"+RPT(" ",3)+U.OFF$
1800 SCORE.LINE.2$ = "|         "+RPT("|  | ",3)+RPT("|   | ",6)+ &
      "| | | |"
1810 SCORE.LINE.3$ = U.ON$+"|"+RPT(" ",9)+RPT("|"+RPT(" ",4),3)+ &
      RPT("|"+RPT(" ",5),7)+"|"+U.OFF$
1820 DATA "BC", "ACDE", "ABEF", "BEGH", "BCDFHI", "CEIJ", "DH", &
          "DEGI", "EFHJ", "FI"
1830 READ CONTIG.PINS$(X) FOR X = 1 TO 10
1840 ERASE.STRING$(1,1)=RPT(RPT(" ",7)+CHAR(27)+"B"+RPT(CHAR(27)+"D",7),3)+ &
       RPT(" ",7)+CHAR(27)+"D"
1845 ERASE.STRING$(2,1),ERASE.STRING$(3,1)=ERASE.STRING$(1,1)
1850 ERASE.STRING$(1,2)=RPT(" ",5)+"| "+CHAR(27)+"B"+RPT(CHAR(27)+ &
       "D",7)+"     | "+CHAR(27)+"B"+RPT(CHAR(27)+"D",7)+U.ON$+ &
       RPT(" ",5)+U.OFF$+"| "+CHAR(27)+"B"+RPT(CHAR(27)+"D",7)+ &
       RPT(" ",7)+U.OFF$
1855 ERASE.STRING$(1,3),ERASE.STRING$(1,4),ERASE.STRING$(1,5), &
     ERASE.STRING$(2,2),ERASE.STRING$(2,3),ERASE.STRING$(3,2)= &
     ERASE.STRING$(1,2)
1860 VALID.PINS$ = "ABCDEFGHIJ"
1865 VALID.COLUMNS$ = "LCR"
1870 RETURN

2000 GOSUB 4000 !CLEAR SCORE VARIABLES
2005 GOSUB 7000 !PUT SCORE SHEET ON SCREEN
2010 GOSUB 2500 !PLAY 1 GAME
2015 PRINT CHAR(27)+"&a17r0C"+CHAR(27)+"&pF":
2017 INPUT IN IMAGE "#": STATUS.COMP$
2020 PRINT CHAR(27)+"H"+CHAR(27)+"J"
2025 PRINT "Would you like to play another game":
2030 INPUT RESPONSE$
2035 IF LEFT(RESPONSE$,1) = "Y" THEN GOTO 2000
2040 RETURN

2500 FOR FRAME = 1 TO 10
2505   FOR PLAYER = 1 TO NUM.PLAYERS
2510     PINS.DOWN = 0
2511     PINS.DELETED$ = ""
2512     FIRST.CARD$ = "Y"
2513     EXTRA.BALL$ = "N"
2515     BALL = 1 
2520     GOSUB 3000 !ROLL ONE BALL
2522     GOSUB 8000 !FIGURE SCORE
2525     IF PINS.DOWN # 10 AND BALL < 2 THEN
2535       BALL = 2
2540       GOTO 2520
2542     ENDIF
2550     IF BALLS.ALLOWED > 0 THEN
2551       PINS.DOWN = 0
2552       PINS.DELETED$ = ""
2553       FIRST.CARD$ = "Y"
2554       EXTRA.BALL$ = "Y"
2555       BALL = 1 
2557       BALL.COUNT = 1
2560       GOSUB 3000 !ROLL ONE BALL
2565       GOSUB 8000 !FIGURE SCORE
2567       IF BALL.COUNT < BALLS.ALLOWED THEN
2568         IF PINS.DOWN # 10 THEN
2569           BALL.COUNT = 2
2570           BALL = 2
2571           GOTO 2560
2572         ELSE
2573           BALL.COUNT = 2
2574           BALL = 1
2575           PINS.DOWN = 0
2576           PINS.DELETED$ = ""
2577           FIRST.CARD$ = "Y"
2579           GOTO 2560
2580         ENDIF
2582       ENDIF
2585     ENDIF
2590     BALLS.ALLOWED = 0
2595     NEXT PLAYER
2600   NEXT FRAME
2605 RETURN

3000 IF BALL = 1 THEN
3005   GOSUB 3900 !SHUFFLE DECK
3010   GOSUB 3800 !DEAL TEN PINS
3015   GOSUB 3700 !DEAL THREE COLUMNS
3020 ELSE
3025   GOSUB 3600 !REMOVE 1 CARD FROM EACH COLUMN
3030 ENDIF
3035 GOSUB 5000 !GET COLUMN SELECTION
3040 IF COL.SELECTED$ = "X" THEN RETURN
3045 GOSUB 5500 !GET PIN SELECTION
3050 IF ERROR.SW # 0 THEN
3055   ON ERROR.SW GOTO 3065, 3085, 3105, 3125, 3145, 3165, 3185, 3205, 3225
3060 ELSE
3062   GOTO 3300
3063 ENDIF
3065 ERROR.LINE1$ = "Maximum no. of pins to be removed"
3066 ERROR.LINE2$ = " at one time not to exceed three"
3067 GOSUB 3400
3068 GOTO 3035
3085 ERROR.LINE1$ = "Invalid pin indicator was input;"
3086 ERROR.LINE2$ = " please enter only letters A - J"
3087 GOSUB 3400
3088 GOTO 3035
3105 ERROR.LINE1$ = "Invalid pin grouping; all pins"
3106 ERROR.LINE2$ = " selected must be contiguous"
3107 GOSUB 3400
3108 GOTO 3035
3125 ERROR.LINE1$ = "Invalid pin selection; first card"
3126 ERROR.LINE2$ = " may not remove pins G through J"
3127 GOSUB 3400
3128 GOTO 3035
3145 ERROR.LINE1$ = "Invalid pin selection; pin E may"
3146 ERROR.LINE2$ = " not be removed by itself"
3147 GOSUB 3400
3148 GOTO 3035
3165 ERROR.LINE1$ = "Invalid pin selection; input includes"
3166 ERROR.LINE2$ = " previously removed pin"
3167 GOSUB 3400
3168 GOTO 3035
3185 ERROR.LINE1$ = "Invalid pin selection; pins to be removed"
3186 ERROR.LINE2$ = " must border one previously removed pin"
3187 GOSUB 3400
3188 GOTO 3035
3205 ERROR.LINE1$ = "Invalid pin selection; the same"
3206 ERROR.LINE2$ = " pin is indicated twice or more"
3207 GOSUB 3400
3208 GOTO 3035
3225 ERROR.LINE1$ = "Selection ignored; total of pins to"
3226 ERROR.LINE2$ = " be removed not equal to column card"
3227 GOSUB 3400
3228 GOTO 3035
3300 PINS.DELETED$ = PINS.DELETED$ + PINS.SELECTED$
3305 PINS.DOWN = PINS.DOWN + LENGTH(PINS.SELECTED$)
3310 FOR X = 1 TO LENGTH(PINS.SELECTED$)
3315   PIN.DECK(INDEX(VALID.PINS$,SUBSTR(PINS.SELECTED$,X,1))) = -1
3320   PRINT CHAR(27)+"&a"+STR(PIN.POS.Y(INDEX(VALID.PINS$, &
          SUBSTR(PINS.SELECTED$,X,1))))+"r"+STR(PIN.POS.X(INDEX(VALID.PINS$, &
          SUBSTR(PINS.SELECTED$,X,1))))+"C"+ERASE.STRING$(1,1)
3325   NEXT X
3330 X1=INDEX(VALID.COLUMNS$,COL.SELECTED$)
3335 PRINT CHAR(27)+"&a"+STR(COLUMN.Y(X1,COLUMN.COUNT(X1)))+"r"+ &
     STR(COLUMN.X(X1,COLUMN.COUNT(X1)))+"C"+ERASE.STRING$(X1,COLUMN.COUNT(X1))
3340 COLUMN.COUNT(X1) = COLUMN.COUNT(X1) - 1
3345 PRINT CHAR(27)+"&a"+STR(COLUMN.Y(X1,COLUMN.COUNT(X1))+1)+"r"+ &
       STR(COLUMN.X(X1,COLUMN.COUNT(X1))+1)+"C"+CARD.STRING$(COLUMN.DECK( &
       X1,COLUMN.COUNT(X1))) IF COLUMN.COUNT(X1) > 0
3350 FIRST.CARD$ = "N"
3355 IF PINS.DOWN = 10 THEN RETURN ELSE GOTO 3035

3400 PRINT CHAR(7)
3405 PRINT CHAR(27)+"&a14r38C"+ERROR.LINE1$+CHAR(27)+"K"
3410 PRINT CHAR(27)+"&a15r38C"+ERROR.LINE2$+CHAR(27)+"K"
3415 WAIT -1
3420 WAIT 3
3422 PRINT CHAR(27)+"&a12r44C"+CHAR(27)+"K"
3425 PRINT CHAR(27)+"&a14r38C"+CHAR(27)+"K"
3430 PRINT CHAR(27)+"&a15r38C"+CHAR(27)+"K"
3435 RETURN

3600 FOR COLUMN = 1 TO 3
3605   IF COLUMN.COUNT(COLUMN) > 0 THEN
3610     PRINT CHAR(27)+"&a"+STR(COLUMN.Y(COLUMN,COLUMN.COUNT(COLUMN)))+ &
           "r"+STR(COLUMN.X(COLUMN,COLUMN.COUNT(COLUMN)))+"C"+ &
           ERASE.STRING$(COLUMN,COLUMN.COUNT(COLUMN))
3615     COLUMN.COUNT(COLUMN) = COLUMN.COUNT(COLUMN) - 1
3620     IF COLUMN.COUNT(COLUMN) > 0 THEN
3625       PRINT CHAR(27)+"&a"+STR(COLUMN.Y(COLUMN,COLUMN.COUNT(COLUMN))+1)+ &
             "r"+STR(COLUMN.X(COLUMN,COLUMN.COUNT(COLUMN))+1)+"C"+ &
             CARD.STRING$(COLUMN.DECK(COLUMN,COLUMN.COUNT(COLUMN)))
3630     ENDIF
3635   ENDIF
3640   NEXT COLUMN
3645 RETURN

3700 COLUMN.COUNT(COLUMN) = 0 FOR COLUMN = 1 TO 3
3705 NEXT.CARD = 11
3710 FOR CARD = 1 TO 5
3715   FOR COLUMN = 1 TO 3
3720     COLUMN.COUNT(COLUMN) = COLUMN.COUNT(COLUMN) + 1
3725     IF COLUMN.COUNT(COLUMN) > COLUMN.MAX(COLUMN) THEN
3730       COLUMN.COUNT(COLUMN) = COLUMN.COUNT(COLUMN) - 1
3735     ELSE
3740       PRINT CHAR(27)+"&a"+STR(COLUMN.Y(COLUMN,CARD))+"r"+ &
                 STR(COLUMN.X(COLUMN,CARD))+"C"+COLUMN.FRAME$(COLUMN,CARD):
3742       IF COLUMN.COUNT(COLUMN) = COLUMN.MAX(COLUMN) THEN 
3743         PRINT CHAR(27)+"&a"+STR(COLUMN.Y(COLUMN,CARD)+1)+"r"+ &
                   STR(COLUMN.X(COLUMN,CARD)+1)+"C"+ &
                   CARD.STRING$(CARD.DECK(NEXT.CARD))
3744       ENDIF
3745       COLUMN.DECK(COLUMN,CARD) = CARD.DECK(NEXT.CARD)
3750       NEXT.CARD = NEXT.CARD + 1
3755     ENDIF
3760     NEXT COLUMN
3765   NEXT CARD
3770 PRINT CHAR(27)+"&a1r43C"+"Left     Center     Right"
3775 RETURN

3800 PRINT CHAR(27)+"&a"+STR(ROW)+"r0C"+CHAR(27)+"K" FOR ROW=0 TO 16
3805 FOR PIN = 1 TO 10
3810   PRINT CHAR(27)+"&a"+STR(PIN.POS.Y(PIN))+"r"+STR(PIN.POS.X(PIN))+ &
             "C"+PIN.FRAME$(PIN)+CARD.STRING$(CARD.DECK(PIN))
3820   PIN.DECK(PIN) = CARD.DECK(PIN)
3825   NEXT PIN
3830 RETURN

3900 SHUFFLE.NUM = (RND * 40) + 81
3905 FOR X = 1 TO SHUFFLE.NUM
3910   CARD.POS.1 = INT((RND * 20) + 1)
3915   CARD.POS.2 = INT((RND * 20) + 1)
3920   IF CARD.POS.1 = CARD.POS.2 THEN GOTO 3905
3925   TEMP.NUM = CARD.DECK(CARD.POS.1)
3930   CARD.DECK(CARD.POS.1) = CARD.DECK(CARD.POS.2)
3935   CARD.DECK(CARD.POS.2) = TEMP.NUM
3940   NEXT X
3945 RETURN

4000 SCORE(X) = 0 FOR X = 1 TO NUM.PLAYERS
4005 PREVIOUS.BALLS$(X) = "-" FOR X = 1 TO NUM.PLAYERS
4010 NEXT.BALL.PTR(X) = 1 FOR X = 1 TO NUM.PLAYERS
4015 NEXT.FRAME.PTR(X) = 1 FOR X = 1 TO NUM.PLAYERS
4020 NEXT.BOX.SCORE(X) = 1 FOR X = 1 TO NUM.PLAYERS
4025 FRAME.VALUE$(X,Y) = " " FOR X = 1 TO NUM.PLAYERS FOR Y = 1 TO 12
4030 RETURN

5000 PRINT CHAR(27)+"&a12r44C"+CHAR(27)+"K"+CHAR(27)+"&a11r42C"+ &
           CHAR(27)+"K"+"Column: ":
5005 INPUT IN IMAGE "#": COL.SELECTED$ 
5010 IF LENGTH(COL.SELECTED$) = 1 AND (COL.SELECTED$ = "L" OR &
          COL.SELECTED$ = "C" OR COL.SELECTED$ = "R" OR &
          COL.SELECTED$ = "X") THEN
5011   IF COL.SELECTED$ = "X" THEN RETURN
5015   IF COLUMN.COUNT(INDEX(VALID.COLUMNS$,COL.SELECTED$)) > 0 OR &
            COL.SELECTED$ = "X" THEN
5020     RETURN
5025   ELSE
5030     PRINT CHAR(27)+"&a14r38C"+"Column <"+COL.SELECTED$+"> has no cards;"
5035     PRINT CHAR(27)+"&a15r38C"+"Please select a different column"
5040   ENDIF
5045 ELSE
5050   PRINT CHAR(27)+"&a14r38C"+"Please enter <L>, <C>, <R> or <X>"
5055   PRINT CHAR(27)+"&a15r38C"+"<X> = Finished with current ball"
5060 ENDIF
5065 WAIT -1
5070 WAIT 3
5075 PRINT CHAR(27)+"&a14r38C"+CHAR(27)+"K"+CHAR(27)+"&a15r38C"+CHAR(27)+"K"
5080 GOTO 5000

5500 PRINT CHAR(27)+"&a12r44C"+CHAR(27)+"K"+"Pins: ":
5502 INPUT IN IMAGE "#": PINS.SELECTED$
5503 PS$ = ""
5505 FOR X = 1 TO LENGTH(PINS.SELECTED$)
5506   PS$=PS$+SUBSTR(PINS.SELECTED$,X,1) IF SUBSTR(PINS.SELECTED$,X,1) # " "
5507   NEXT X
5508 PINS.SELECTED$ = PS$
5510 FOR X = 1 TO LENGTH(PINS.SELECTED$)
5515   INDEX.PTR = 1
5520   IF INDEX(VALID.PINS$,SUBSTR(PINS.SELECTED$,X,1),INDEX.PTR) # 0 THEN
5525     INDEX.PTR=INDEX(VALID.PINS$,SUBSTR(PINS.SELECTED$,X,1),INDEX.PTR)+1
5530     IF INDEX(VALID.PINS$,SUBSTR(PINS.SELECTED$,X,1),INDEX.PTR) = 0 THEN
5535       NEXT X
5540     ELSE
5545       ERROR.SW = 8
5550       RETURN
5555     ENDIF
5560   ELSE
5565     ERROR.SW = 2
5570     RETURN
5575   ENDIF
5580 IF LENGTH(PINS.SELECTED$) > 3 THEN
5585   ERROR.SW = 1
5590   RETURN
5595 ENDIF
5600 IF FIRST.CARD$ = "Y" THEN
5605   FOR X = 1 TO LENGTH(PINS.SELECTED$)
5610     IF INDEX("GHIJ",SUBSTR(PINS.SELECTED$,X,1)) # 0 THEN
5615       ERROR.SW = 4
5620       RETURN
5625     ELSE
5630       NEXT X
5635     ENDIF
5640   IF LENGTH(PINS.SELECTED$) = 1 AND PINS.SELECTED$ = "E" THEN
5645     ERROR.SW = 5
5650     RETURN
5655   ENDIF
5660 ELSE
5665   TEMP$ = ""
5670   FOR X = 1 TO LENGTH(PINS.DELETED$)
5675     TEMP$=TEMP$+CONTIG.PINS$(INDEX(VALID.PINS$,SUBSTR(PINS.DELETED$, &
               X,1)))
5680     NEXT X
5685   FOR X = 1 TO LENGTH(PINS.SELECTED$)
5690     IF INDEX(TEMP$,SUBSTR(PINS.SELECTED$,X,1)) = 0 THEN
5695       NEXT X
5700       ERROR.SW = 7
5705       RETURN
5710     ENDIF
5715 ENDIF
5720 FOR X = 1 TO LENGTH(PINS.SELECTED$)
5725   IF PIN.DECK(INDEX(VALID.PINS$,SUBSTR(PINS.SELECTED$,X,1))) = -1 THEN
5730     ERROR.SW = 6
5735     RETURN
5740   ELSE
5745     NEXT X
5750   ENDIF
5755 IF LENGTH(PINS.SELECTED$) > 1 THEN
5760   FOR X = 1 TO LENGTH(PINS.SELECTED$)
5765     TEMP$ = ""
5770     FOR Y = 1 TO LENGTH(PINS.SELECTED$)
5775       IF X = Y THEN
5780         GOTO 5805
5790       ENDIF
5795       TEMP$=TEMP$+CONTIG.PINS$(INDEX(VALID.PINS$,SUBSTR(PINS.SELECTED$, &
                 Y,1)))
5805       NEXT Y
5810     IF INDEX(TEMP$,SUBSTR(PINS.SELECTED$,X,1))=0 THEN
5815       ERROR.SW = 3
5820       RETURN
5825     ELSE
5830       NEXT X
5835     ENDIF
5840 ENDIF
5845 TOTAL.VALUES = 0
5850 FOR X = 1 TO LENGTH(PINS.SELECTED$)
5855   TOTAL.VALUES = TOTAL.VALUES + PIN.DECK(INDEX(VALID.PINS$, &
            SUBSTR(PINS.SELECTED$,X,1)))
5865   NEXT X
5870 IF TOTAL.VALUES MOD 10 # COLUMN.DECK(INDEX(VALID.COLUMNS$, &
             COL.SELECTED$),COLUMN.COUNT(INDEX(VALID.COLUMNS$, &
             COL.SELECTED$))) MOD 10 THEN
5875   ERROR.SW = 9
5880 ELSE
5890   ERROR.SW = 0
5895 ENDIF
5900 RETURN

7000 PRINT CHAR(27)+"H"+CHAR(27)+"J"
7002 PRINT CHAR(27)+"&a17r0C"+SCORE.LINE.1$
7005 PRINT CHAR(27)+"&a18r0C"+SCORE.LINE.2$
7010 PRINT CHAR(27)+"&a19r0C"+SCORE.LINE.3$
7012 IF NUM.PLAYERS = 2 THEN
7015   PRINT CHAR(27)+"&a20r0C"+SCORE.LINE.2$
7020   PRINT CHAR(27)+"&a21r0C"+SCORE.LINE.3$
7022 ENDIF
7025 PRINT CHAR(27)+"&a"+STR(FRAME.VALUE.Y(X,Y))+"r"+STR(FRAME.VALUE.X(X,Y))+ &
     "C"+CHAR(27)+"&dA"+" "+CHAR(27)+"&d@" FOR Y=1 TO 12 FOR X=1 TO NUM.PLAYERS
7030 PRINT CHAR(27)+"&a"+STR(NAME.Y(X))+"r"+STR(NAME.X(X))+"C"+ &
      NAME$(X) FOR X = 1 TO NUM.PLAYERS
7035 RETURN

8000 IF PREVIOUS.BALLS$(PLAYER) = "XX" THEN
8005   IF BALL = 1 THEN
8010     IF PINS.DOWN = 10 THEN
8015       PRINT CHAR(27)+"&a"+ &
             STR(FRAME.VALUE.Y(PLAYER,NEXT.FRAME.PTR(PLAYER)))+"r"+ &
             STR(FRAME.VALUE.X(PLAYER,NEXT.FRAME.PTR(PLAYER)))+"C"+ &
             U.ON$+"X"+U.OFF$
8020       NEXT.FRAME.PTR(PLAYER)=NEXT.FRAME.PTR(PLAYER) + 1
8025       SCORE(PLAYER) = SCORE(PLAYER) + 30
8030       PRINT CHAR(27)+"&a"+ &
             STR(BOX.SCORE.Y(PLAYER,NEXT.BOX.SCORE(PLAYER)))+"r"+ &
             STR(BOX.SCORE.X(PLAYER,NEXT.BOX.SCORE(PLAYER)))+"C"+U.ON$:
8040       PRINT IN IMAGE "%%%": SCORE(PLAYER):
8045       PRINT U.OFF$
8050       NEXT.BOX.SCORE(PLAYER) = NEXT.BOX.SCORE(PLAYER) + 1
8055       PREVIOUS.BALLS$(PLAYER) = "XX"
8057       GOTO 8500
8060     ELSE
8065       SCORE(PLAYER) = SCORE(PLAYER) + 20 + PINS.DOWN
8070       PRINT CHAR(27)+"&a"+ &
             STR(BOX.SCORE.Y(PLAYER,NEXT.BOX.SCORE(PLAYER)))+"r"+ &
             STR(BOX.SCORE.X(PLAYER,NEXT.BOX.SCORE(PLAYER)))+"C"+U.ON$:
8075       PRINT IN IMAGE "%%%": SCORE(PLAYER):
8080       PRINT U.OFF$
8085       NEXT.BOX.SCORE(PLAYER) = NEXT.BOX.SCORE(PLAYER) + 1
8090       PREVIOUS.BALLS$(PLAYER) = "X"
8093       GOTO 8500
8095     ENDIF
8100   ENDIF ENDIF
8110 IF PREVIOUS.BALLS$(PLAYER) = "X" THEN
8115   IF BALL = 1 THEN
8120     IF PINS.DOWN = 10 THEN
8125       PRINT CHAR(27)+"&a"+ &
             STR(FRAME.VALUE.Y(PLAYER,NEXT.FRAME.PTR(PLAYER)))+"r"+ &
             STR(FRAME.VALUE.X(PLAYER,NEXT.FRAME.PTR(PLAYER)))+"C"+ &
             U.ON$+"X"+U.OFF$
8130       NEXT.FRAME.PTR(PLAYER)=NEXT.FRAME.PTR(PLAYER) + 1
8135       PREVIOUS.BALLS$(PLAYER) = "XX"
8137       GOTO 8500
8140     ENDIF
8145   ELSE
8150     IF PINS.DOWN = 10 THEN
8155       PRINT CHAR(27)+"&a"+ &
             STR(FRAME.VALUE.Y(PLAYER,NEXT.FRAME.PTR(PLAYER)))+"r"+ &
             STR(FRAME.VALUE.X(PLAYER,NEXT.FRAME.PTR(PLAYER)))+"C"+ &
             U.ON$+"/"+U.OFF$
8160       NEXT.FRAME.PTR(PLAYER)=NEXT.FRAME.PTR(PLAYER) + 1
8165       SCORE(PLAYER)=SCORE(PLAYER) + 20
8170       PRINT CHAR(27)+"&a"+ &
             STR(BOX.SCORE.Y(PLAYER,NEXT.BOX.SCORE(PLAYER)))+"r"+ &
             STR(BOX.SCORE.X(PLAYER,NEXT.BOX.SCORE(PLAYER)))+"C"+U.ON$:
8175       PRINT IN IMAGE "%%%": SCORE(PLAYER):
8180       PRINT U.OFF$
8185       NEXT.BOX.SCORE(PLAYER)=NEXT.BOX.SCORE(PLAYER) + 1
8187       PREVIOUS.BALLS$(PLAYER) = "/"
8188       GOTO 8500
8190     ELSE
8195       PRINT CHAR(27)+"&a"+ &
             STR(FRAME.VALUE.Y(PLAYER,NEXT.FRAME.PTR(PLAYER)))+"r"+ &
             STR(FRAME.VALUE.X(PLAYER,NEXT.FRAME.PTR(PLAYER)))+"C"+ &
             U.ON$+"-"+U.OFF$
8200       NEXT.FRAME.PTR(PLAYER)=NEXT.FRAME.PTR(PLAYER) + 1
8205       SCORE(PLAYER)=SCORE(PLAYER) + 10 + PINS.DOWN
8210       PRINT CHAR(27)+"&a"+ &
             STR(BOX.SCORE.Y(PLAYER,NEXT.BOX.SCORE(PLAYER)))+"r"+ &
             STR(BOX.SCORE.X(PLAYER,NEXT.BOX.SCORE(PLAYER)))+"C"+U.ON$:
8215       PRINT IN IMAGE "%%%": SCORE(PLAYER):
8220       PRINT U.OFF$
8221       IF NEXT.BOX.SCORE(PLAYER) < 10 THEN
8225         NEXT.BOX.SCORE(PLAYER) = NEXT.BOX.SCORE(PLAYER) + 1
8230         SCORE(PLAYER)=SCORE(PLAYER) + PINS.DOWN
8235         PRINT CHAR(27)+"&a"+ &
               STR(BOX.SCORE.Y(PLAYER,NEXT.BOX.SCORE(PLAYER)))+"r"+ &
               STR(BOX.SCORE.X(PLAYER,NEXT.BOX.SCORE(PLAYER)))+"C"+U.ON$:
8245         PRINT IN IMAGE "%%%": SCORE(PLAYER):
8250         PRINT U.OFF$
8255         NEXT.BOX.SCORE(PLAYER) = NEXT.BOX.SCORE(PLAYER) + 1
8256       ENDIF
8260       PREVIOUS.BALLS$(PLAYER) = "-"
8263       GOTO 8500
8265     ENDIF
8270   ENDIF
8275 ENDIF
8280 IF PREVIOUS.BALLS$(PLAYER) = "/" THEN
8285   IF BALL = 1 THEN
8290     IF PINS.DOWN = 10 THEN
8295       PRINT CHAR(27)+"&a"+ &
             STR(FRAME.VALUE.Y(PLAYER,NEXT.FRAME.PTR(PLAYER)))+"r"+ &
             STR(FRAME.VALUE.X(PLAYER,NEXT.FRAME.PTR(PLAYER)))+"C"+ &
             U.ON$+"X"+U.OFF$
8300       NEXT.FRAME.PTR(PLAYER)=NEXT.FRAME.PTR(PLAYER) + 1
8305       SCORE(PLAYER) = SCORE(PLAYER) + 20
8310       PRINT CHAR(27)+"&a"+ &
             STR(BOX.SCORE.Y(PLAYER,NEXT.BOX.SCORE(PLAYER)))+"r"+ &
             STR(BOX.SCORE.X(PLAYER,NEXT.BOX.SCORE(PLAYER)))+"C"+U.ON$:
8315       PRINT IN IMAGE "%%%": SCORE(PLAYER):
8320       PRINT U.OFF$
8322       NEXT.BOX.SCORE(PLAYER)=NEXT.BOX.SCORE(PLAYER) + 1
8325       PREVIOUS.BALLS$(PLAYER) = "X"
8328       GOTO 8500
8330     ELSE
8335       SCORE(PLAYER) = SCORE(PLAYER) + 10 + PINS.DOWN
8340       PRINT CHAR(27)+"&a"+ &
             STR(BOX.SCORE.Y(PLAYER,NEXT.BOX.SCORE(PLAYER)))+"r"+ &
             STR(BOX.SCORE.X(PLAYER,NEXT.BOX.SCORE(PLAYER)))+"C"+U.ON$:
8345       PRINT IN IMAGE "%%%": SCORE(PLAYER):
8350       PRINT U.OFF$
8355       NEXT.BOX.SCORE(PLAYER)=NEXT.BOX.SCORE(PLAYER) + 1
8360       PREVIOUS.BALLS$(PLAYER) = "-"
8363       GOTO 8500
8365     ENDIF
8370   ENDIF
8375 ENDIF
8380 IF PREVIOUS.BALLS$(PLAYER) = "-" THEN
8385   IF BALL = 1 THEN
8390     IF PINS.DOWN = 10 THEN
8395       PRINT CHAR(27)+"&a"+ &
             STR(FRAME.VALUE.Y(PLAYER,NEXT.FRAME.PTR(PLAYER)))+"r"+ &
             STR(FRAME.VALUE.X(PLAYER,NEXT.FRAME.PTR(PLAYER)))+"C"+ &
             U.ON$+"X"+U.OFF$
8400       NEXT.FRAME.PTR(PLAYER)=NEXT.FRAME.PTR(PLAYER) + 1
8405       PREVIOUS.BALLS$(PLAYER) = "X"
8407       GOTO 8500
8410     ENDIF
8415   ELSE
8420     IF PINS.DOWN = 10 THEN
8425       PRINT CHAR(27)+"&a"+ &
             STR(FRAME.VALUE.Y(PLAYER,NEXT.FRAME.PTR(PLAYER)))+"r"+ &
             STR(FRAME.VALUE.X(PLAYER,NEXT.FRAME.PTR(PLAYER)))+"C"+ &
             U.ON$+"/"+U.OFF$
8430       NEXT.FRAME.PTR(PLAYER)=NEXT.FRAME.PTR(PLAYER) + 1
8435       PREVIOUS.BALLS$(PLAYER) = "/"
8437       GOTO 8500
8440     ELSE
8445       PRINT CHAR(27)+"&a"+ &
             STR(FRAME.VALUE.Y(PLAYER,NEXT.FRAME.PTR(PLAYER)))+"r"+ &
             STR(FRAME.VALUE.X(PLAYER,NEXT.FRAME.PTR(PLAYER)))+"C"+ &
             U.ON$+"-"+U.OFF$
8450       NEXT.FRAME.PTR(PLAYER)=NEXT.FRAME.PTR(PLAYER) + 1
8455       SCORE(PLAYER) = SCORE(PLAYER) + PINS.DOWN
8460       PRINT CHAR(27)+"&a"+ &
             STR(BOX.SCORE.Y(PLAYER,NEXT.BOX.SCORE(PLAYER)))+"r"+ &
             STR(BOX.SCORE.X(PLAYER,NEXT.BOX.SCORE(PLAYER)))+"C"+U.ON$:
8465       PRINT IN IMAGE "%%%": SCORE(PLAYER):
8470       PRINT U.OFF$
8475       NEXT.BOX.SCORE(PLAYER)=NEXT.BOX.SCORE(PLAYER) + 1
8480       PREVIOUS.BALLS$(PLAYER) = "-"
8483       GOTO 8500
8485     ENDIF
8490   ENDIF
8495 ENDIF
8500 IF FRAME = 10 AND ((BALL = 1 AND PINS.DOWN = 10) OR &
                        (BALL = 2)) AND EXTRA.BALL$ = "N" THEN
8505   IF PREVIOUS.BALLS$(PLAYER)="XX" OR PREVIOUS.BALLS$(PLAYER)="X" THEN
8510     BALLS.ALLOWED = 2
8515   ELSE
8520     IF PREVIOUS.BALLS$(PLAYER)="/" THEN
8522       BALLS.ALLOWED = 1
8525     ELSE
8530       BALLS.ALLOWED = 0
8535     ENDIF
8540   ENDIF
8555 ENDIF
8560 RETURN

10000 PRINT CHAR(27)+"H"+CHAR(27)+"J"
10005 PRINT CHAR(27)+"&a1r31C"+U.ON$+"Bowling Solitaire"+U.OFF$
10010 PRINT CHAR(27)+"&a2r33C"+"by Sid Sackson"
10015 PRINT CHAR(27)+"&a4r22C"+"TYMBASIC Version 1.0 by Mark Nichols"
10020 PRINT CHAR(27)+"&a5r17C"+"Inspired by Sid Sackson's book "+ U.ON$+ &
        "A Gamut of Games"+U.OFF$
10025 PRINT
10030 PRINT "     Bowling Solitaire is a solitaire card game played with "+ &
"a twenty card"
10035 PRINT "subset of a standard deck of cards.  The subset deck consists"+ &
" of the cards"
10040 PRINT "ace through ten of any two suits.  Because the suit of the "+ &
"card is irrelevant,"
10045 PRINT "no attention is paid to the suit of the cards as they are "+ &
"displayed on the"
10050 PRINT "screen.  Only the numeric values of the cards matter in the "+ &
"play of the game."
10055 PRINT 
10060 PRINT "     Bowling Solitaire is scored just like regular bowling.  "+ &
"If you are not"
10065 PRINT "familiar with the rules for keeping score in bowling,"+ &
" you need not worry;"
10070 PRINT "the computer will handle all of the scorekeeping"+ &
" functions (without expecting"
10075 PRINT "a tip at the end of the game!)."
10080 GOSUB 15000
10085 PRINT CHAR(27)+"H"+CHAR(27)+"J"
10090 CARD.DECK(1) = 8
10095 CARD.DECK(2) = 2
10100 CARD.DECK(3) = 10
10105 CARD.DECK(4) = 5
10110 CARD.DECK(5) = 4
10115 CARD.DECK(6) = 4
10120 CARD.DECK(7) = 1
10125 CARD.DECK(8) = 3
10130 CARD.DECK(9) = 8
10135 CARD.DECK(10) = 7
10140 CARD.DECK(11) = 5
10145 CARD.DECK(12) = 9
10150 CARD.DECK(13) = 9
10155 CARD.DECK(14) = 1
10160 CARD.DECK(15) = 6
10165 CARD.DECK(16) = 10
10170 CARD.DECK(17) = 3
10175 CARD.DECK(18) = 2
10180 CARD.DECK(19) = 6
10185 CARD.DECK(20) = 7
10190 GOSUB 3800
10195 GOSUB 3700
10200 PRINT CHAR(27)+"&a11r30C"+"At the beginning of each frame, the deck is"
10205 PRINT CHAR(27)+"&a12r30C"+"dealt to the screen as shown here.  The cards"
10210 PRINT CHAR(27)+"&a13r26C"+"on the left represent the bowling pins;"+ &
" the cards in"
10215 PRINT CHAR(27)+"&a14r26C"+"the three piles on the right are used to"+ &
" 'knock down'"
10220 PRINT CHAR(27)+"&a15r26C"+"the pins.  The rules for knocking down the"+ &
" pins are"
10225 PRINT CHAR(27)+"&a16r26C"+"not complex, but will require that you "+ &
"give them some"
10230 PRINT CHAR(27)+"&a17r26C"+"thought, so pay attention!"
10235 GOSUB 15000
10240 PRINT CHAR(27)+"&a11r30C"+CHAR(27)+"K"
10245 PRINT CHAR(27)+"&a12r30C"+CHAR(27)+"K"
10250 PRINT CHAR(27)+"&a13r26C"+CHAR(27)+"K"
10255 PRINT CHAR(27)+"&a14r26C"+CHAR(27)+"K"
10260 PRINT CHAR(27)+"&a15r26C"+CHAR(27)+"K"
10265 PRINT CHAR(27)+"&a16r26C"+CHAR(27)+"K"
10270 PRINT CHAR(27)+"&a17r26C"+CHAR(27)+"K"
10275 PRINT CHAR(27)+"&a11r30C"+ &
"The basic rule is that 1, 2 or 3 of the pins"
10280 PRINT CHAR(27)+"&a12r30C"+ &
"may be removed if the last digit of the total"
10285 PRINT CHAR(27)+"&a13r26C"+ &
"equals the last digit of the column card selected to"
10290 PRINT CHAR(27)+"&a14r26C"+ &
"'knock down' the pins.  In other words, pins A, C and"
10295 PRINT CHAR(27)+"&a15r26C"+ &
"F could be removed by using the center column card"
10300 PRINT CHAR(27)+"&a16r26C"+ &
"because their total (22) matches the last digit of"
10305 PRINT CHAR(27)+"&a17r26C"+ &
"the card in the center column (2).  By the same"
10310 PRINT CHAR(27)+"&a18r26C"+ &
"reasoning, card groups B-C, A-C-E or card B by"
10315 PRINT CHAR(27)+"&a19r26C"+ &
"itself could be removed by using the same column card."
10320 GOSUB 15000
10325 PRINT CHAR(27)+"&a11r30C"+CHAR(27)+"K"
10330 PRINT CHAR(27)+"&a12r30C"+CHAR(27)+"K"
10335 PRINT CHAR(27)+"&a13r26C"+CHAR(27)+"K"
10340 PRINT CHAR(27)+"&a14r26C"+CHAR(27)+"K"
10345 PRINT CHAR(27)+"&a15r26C"+CHAR(27)+"K"
10350 PRINT CHAR(27)+"&a16r26C"+CHAR(27)+"K"
10355 PRINT CHAR(27)+"&a17r26C"+CHAR(27)+"K"
10360 PRINT CHAR(27)+"&a18r26C"+CHAR(27)+"K"
10365 PRINT CHAR(27)+"&a19r26C"+CHAR(27)+"K"
10370 PRINT CHAR(27)+"&a11r30C"+ &
"Please note that you may not remove pins B-H-J"
10375 PRINT CHAR(27)+"&a12r30C"+ &
"using the center column card because all pins"
10380 PRINT CHAR(27)+"&a13r26C"+ &
"removed together must be touching.  B-E-F, D-B, H-I-J"
10385 PRINT CHAR(27)+"&a14r26C"+ &
"and G-D-H all are examples of correct grouping, while"
10390 PRINT CHAR(27)+"&a15r26C"+ &
"A-E-I, G-H-J, B-J and A-D are incorrect."
10400 GOSUB 15000
10405 PRINT CHAR(27)+"&a11r30C"+CHAR(27)+"K"
10410 PRINT CHAR(27)+"&a12r30C"+CHAR(27)+"K"
10415 PRINT CHAR(27)+"&a13r26C"+CHAR(27)+"K"
10420 PRINT CHAR(27)+"&a14r26C"+CHAR(27)+"K"
10425 PRINT CHAR(27)+"&a15r26C"+CHAR(27)+"K"
10430 PRINT CHAR(27)+"&a11r30C"+ &
"Each game consists of 10 frames, with two balls"
10435 PRINT CHAR(27)+"&a12r30C"+ &
"allowed in each frame.  You are probably wondering"
10440 PRINT CHAR(27)+"&a13r26C"+ &
"how the first ball is distinguished from the second"
10445 PRINT CHAR(27)+"&a14r26C"+ &
"ball if the card deck is only shuffled at the"
10450 PRINT CHAR(27)+"&a15r26C"+ &
"beginning of each frame; "
10455 GOSUB 15000
10460 RETURN

15000 PRINT CHAR(27)+"&a22r50C"+"Press <return> to continue":
15005 CALL STUFIB("-")
15010 INPUT IN IMAGE "#": RESPONSE$
15015 RETURN
   @`)7-