
C	PROGRAM:ORDER.FTF
C	AUTHOR:	EDSEL GARCIAMENDEZ BUDAR
C	DATE:	JUNE 2, 1984.
C	PURPOSE:To compute the exact number of lines (ports) needed for
C		each rotary, and therefore the number of lines to order
C		at each rotary. The program access a file with the current
C		status of each rotary (including forecasted traffic)
C		named CONHRS.MCR, and the output results from the 
C		program (ANALYSIS)PORTS contained in the file 
C		PORTS.OUT. The final results are printed in the file
C		CONHRS.ORD, which contains for each rotary the
C		number of lines to add (delete if negative) and other
C		general information.

C		The main program starts here. There are two main subroutines.
C		One to compute the number of lines to order in the case of a 
C		Low Foreign Exchange rotary (less than N = 6 ports). The
C		other subroutine determines the number of ports for public
C		rotaries, from the results of (ANALYSIS)PORTS program.

	DIMENSION FILIN1(4), FILIN2(4), FILO1(4), FILO2(4)
	INTEGER AREA,PREFI,PHON,PEAKHR,AREA1,PREFI1
	DOUBLEPRECISION PLACE

	K =  1
	NACTPT = 0
	NREQPT = 0
	NADDPT = 0
	NDELPT = 0


	FILIN1(1) = 'CONHR'
	FILIN1(2) = 'S.MCR'
	FILIN1(3) = '     '
	FILIN1(4) = '     '
	FILIN2(1) = 'PORTS'
	FILIN2(2) = '.OUT '
	FILIN2(3) = '     '
	FILIN2(4) = '     '
	FILO1(1) = 'CONHR'
	FILO1(2) = 'S.ORD'
	FILO1(3) = '     '
	FILO1(4) = '     '
	FILO2(1) = 'PROBL'
	FILO2(2) = 'E.EGB'
	FILO2(3) = '     '
	FILO2(4) = '     '


6	TYPE 7, FILIN1, FILIN2, FILO1, FILO2
7	FORMAT (///,10X,'HI! THE PROGRAM ORDER.FTF SALUTES YOU. ',
     1		'THE DEFAULT VALUES ARE:',//,5X,'INPUT 1 FILE =',
     2		' ',4A5,/,5X,'INPUT 2 FILE = ',4A5,/,5X,'OUTPUT 1 FI',
     3		'LE = ',4A5,/,5X,'OUTPUT 2 FILE = ',4A5,//,5X,'DO ',
     4		'YOU WANT TO CHANGE THE NAMES? (Y/N) : ',$)
	READ (5,8,ERR=6)JESEL
8	FORMAT (A1)
	IF (JESEL.EQ.'N') GO TO 19
	IF (JESEL.EQ.'Y') GO TO 9
	GO TO 6

9	TYPE 10
10	FORMAT (' ENTER THE INPUT 1 FILE (ROTARY INF.) : ',$)
	READ (5,11,ERR=9)FILIN1
11	FORMAT (4A5)
12	TYPE 13
13	FORMAT (' ENTER THE INPUT 2 FILE (OUTPUT FROM PORTS) : ',$)
	READ (5,11,ERR=12)FILIN2
14	TYPE 15
15	FORMAT (' ENTER THE FINAL OUTPUT FILE : ',$)
	READ (5,11,ERR=14) FILO1
16	TYPE 17
17	FORMAT (' ENTER THE OUTPUT FILE FOR ERRORS : ',$)
	READ (5,11,ERR=16)

19	OPEN (10, FILIN1, INPUT)
	OPEN (15, FILIN2, INPUT)
	OPEN (20, FILO1, OUTPUT)
	OPEN (30, FILO2, OUTPUT)

	WRITE (20,5)
5	FORMAT (//,45X,'ROTARY SUMMARY',/,45X,14('*'),//,3X,'PI',
     1		'LOT',8X,'CITY',6X,'ST',2X,'NODE',2X,'TYP',2X,
     2		'MODEM',3X,'DAILY',4X,'PK-HR',3X,'CNSNT',3X,'EXPSM',
     3		3X,'ERLNG',3X,'PEAK',3X,'AVRGE',2X,'FLAGS',
     4		1X,'ACTAL REQRD ORDER',/,49X,'CN.HR',4X,'CN.HR',3X,
     5		'CN-HR',3X,'CN-HR',3X,'VALUE','PERCT',2X,'PGRDE',
     6		26X,'PORTS PORTS PORTS'/,3X,'=====',8X,'====',
     7		6X,'==',2X,'====',2X,'===',2X,'=====',3X,'=====',4X,
     8		'=====',3X,'=====',2X,'===',1X,'=====',2X,'=====',2X,
     9		'=====',1X,'===== ===== =====  ====',/)

20	READ (10,30,ERR=31,END=1000)AREA,PREFI,PHON,PLACE,STATE,NODE,
     1		DENSI,TMODEM,NPORT,PEAKHR,TOCOHR,AVGCHR,AVGPGR,CNST,
     2		EXPSMO,AVGPPC,WARN1,WARN2,WARN3,FLAG,ADDPHT
30	FORMAT (I3,1X,I3,1X,I4,2X,A10,A2,4X,I5,2X,A3,2X,A5,2X,I3,
     1		3X,I2,3X,F7.2,3X,F6.2,3X,F5.1,2X,2F7.2,1X,F4.1,
     2		3(2X,A5),1X,A3,1X,F6.2)
	GO TO 40

31	WRITE (30,32)PLACE,STATE
32	FORMAT ('PROBLEM READING AAA/PPP-NNNN',A10,A2)
	GO TO 20

40	CALL READIN (AREA1,PREFI1,IPORT,PGRD,FINI)
	MMPORT = IPORT
	IF (FINI.EQ.'YES')GO TO 55

	GO TO 60

55	K = K + 1
	IPORT = NPORT
	NORDER = IPORT - NPORT
	FOREIG = '     '
	NACTPT = NACTPT + NPORT
	NREQPT = NREQPT + IPORT
	IF (WARN3.EQ.'INCMP') WARN3 = '*****'
	WRITE (20,58)AREA,PREFI,PHON,PLACE,STATE,NODE,DENSI,TMODEM,
     1		TOCOHR,AVGCHR,CNST,EXPSMO,ADDPHT,AVGPPC,AVGPGR,FLAG,
     2		WARN3,NPORT,IPORT,NORDER
58	FORMAT (I3,'/',I3,'-',I4,2X,A10,1X,A2,1X,I5,2X,A3,2X,A5,2X,
     1		6(F7.2),1X,F5.1,1X,A1,1X,A1,2X,I3,3X,I3,3X,I4)

	GO TO 20


60	IF (AREA.EQ.AREA1.AND.PREFI.EQ.PREFI1)GO TO 80

C		Even if the rotary was not modified, we rewrite its record.

	IPORT = NPORT
	NORDER = IPORT - NPORT
	NACTPT = NACTPT + NPORT
	NREQPT = NREQPT + IPORT
	WRITE (20,58)AREA,PREFI,PHON,PLACE,STATE,NODE,DENSI,TMODEM,
     1		TOCOHR,AVGCHR,CNST,EXPSMO,ADDPHT,AVGPPC,AVGPGR,FLAG,
     2		WARN3,NPORT,IPORT,NORDER

	IF (AREA.GT.AREA1) GO TO 900
	IF (AREA.EQ.AREA1.AND.PREFI.GT.PREFI1) GO TO 950

	IF (AREA.LT.AREA1)GO TO 70
	IF (AREA.EQ.AREA1.AND.PREFI.LT.PREFI1) GO TO 70

	GO TO 980

70	READ (10,30,ERR=71,END=1000)AREA,PREFI,PHON,PLACE,STATE,NODE,
     1		DENSI,TMODEM,NPORT,PEAKHR,TOCOHR,AVGCHR,AVGPGR,CNST,
     2		EXPSMO,AVGPPC,WARN1,WARN2,WARN3,FLAG,ADDPHT
	GO TO 73

71	WRITE (30,72)PLACE,STATE
72	FORMAT ('PROBLEM READING AAA/PPP-NNNN',A10,A2)
	GO TO 70

73	K = K + 1
	GO TO 60

80	FOREIG = '     '
	IF (WARN2.EQ.'     ') GO TO 90
	CALL WARNIN(AVGCHR,IPORT,PROBLE)
	MMPORT = IPORT
	IF (PROBLE.EQ.'YES') FOREIG = 'CONVR'

90	IPORT = MMPORT
	NORDER = IPORT - NPORT
	NACTPT = NACTPT + NPORT
	NREQPT = NREQPT + IPORT
	IF (NORDER.GE.0)NADDPT = NADDPT + NORDER
	IF (NORDER.LT.0)NDELPT = NDELPT + (-1)*NORDER
	WRITE (20,58)AREA,PREFI,PHON,PLACE,STATE,NODE,DENSI,TMODEM,
     1		TOCOHR,AVGCHR,CNST,EXPSMO,ADDPHT,AVGPPC,AVGPGR,FLAG,
     2		WARN3,NPORT,IPORT,NORDER

	TYPE 160,K
160	FORMAT (2X,'K = ',I4)
	K = K+1

	GO TO 20

C		The following section refers to the potential problems:

900	WRITE (30,910)AREA,PREFI,AREA1,PREFI1
910	FORMAT ('NEIGHBOR ROTARY ',I3,'/',I3,2X,'FOR',
     1		'NONEXISTING ACCESS ',I3,'/',I3,'  AREA PROBLM')
	GO TO 40

950	WRITE (30,960)AREA,PREFI,AREA1,PREFI1
960	FORMAT ('NEIGHBOR ROTARY ',I3,'/',I3,2X,'FOR',
     1		'NONEXISTING ACCESS ',I3,'/',I3,'  PREFIX PROBLM')
	GO TO 40

980	WRITE (30,990)AREA,PREFI,AREA1,PREFI1
990	FORMAT (' SOME OTHER PROBLEM IDENTIFIED BETWEEN ',
     1		'ROTARY ',I3,'/',I3,'  AND ACCESS ',I3,'/',I3)
	GO TO 20
1000	WRITE (20,1005)NACTPT,NREQPT,NADDPT,NDELPT
1005	FORMAT (///,20X,'TOTAL NUMBER OF PRESENT PORTS  = ',I5,//,20X,
     1		'TOTAL NUMBER OF REQUIRED PORTS = ',I5,//,20X,'NUMBER',
     2		' OF PORTS TO ADD = ',I5,//,20X,'NUMBER OF PORTS TO ',
     3		'DELETE = ',I5,//)

	WRITE (20,1010)
1010	FORMAT (////,4X,'TYP = TYPE OF ROTARY ACCORDING TO ',
     1		'DENSITY',/,4X,'DAILY CN.HR = AVERAGE CONNECT-',
     2		'HOURS PER BUSINESS DAY',/,4X,'PK-HR CN.HR = ',
     3		'AVERAGE OF HIGHEST PEAK-HOUR CONNECT-',
     4		'HOURS',/,4X,'AFF = INDICATES THAT THE NEW TRAFFIC ',
     5		'AFFECTED THE ROTARY',/,4X,'WARN1 = WARNS FOR ',
     6		'SPECIAL TYPE OF MODEM (v.g., CONCORD)',/,4x,'WARN2',
     7		' = WARNS FOR SMALL ROTARIES (Foreign ',
     8		'Exchange)',/,4X,'WARN3 = WARNS FOR SMALL OR ',
     9		'INCOMPLETE SAMPLE SIZE WHEN AVERAGING')

	WRITE (20,1015)
1015	FORMAT (4X,'FLAG = INDICATES THAT FX ROTARY SHOULD BE ',
     1		'CONVERTED TO NODAL.',///,10X,'NUMBER OF PORTS REQUI',
     2		'RED IS OBTAINED FOR A P-GRADE OF 1 % FOR NODAL ',
     3		'ROTARIES, AND 20 % FOR FX.',///,20X,'PREPARED BY ',
     4		'EDSEL G. B.')


	STOP
	END


C	**********************************************************************
C			Subroutine READIN
C	**********************************************************************

		SUBROUTINE READIN(AREA1,PREFI1,IPORT,PGRD,FINI)


	DOUBLEPRECISION GARBAG
	INTEGER AREA1,PREFI1,ARPRE

C		The purpose of this subroutine is to read the output
C		from the PORTS program, and to select the desired information.

5	FINI = 'NO'

	DO 10 I = 1,7
		READ (15,20,END = 65)GARBAG
20		FORMAT (1X,A5)
10	CONTINUE

30	READ (15,40,ERR=30,END = 65) GARBAG,ARPRE
40	FORMAT (15X,A10,28X,I6)

	IF (GARBAG.NE.'CALLS PER ')GO TO 30

	AREA1 = ARPRE/1000
	PREFI1 = ARPRE - AREA1*1000

	DO 50  I = 1,12
50	READ (15,20,END = 65)GARBAG
55	READ (15,60,ERR=55,END = 65)IPORT
60	FORMAT (39X,I4)
		IF (IPORT.EQ.0) GO TO 55

	READ (15,20,END = 65) GARBAG

	READ (15,63,END = 65)PGRD
63	FORMAT (38X,F4.1)

	GO TO 70

65	FINI = 'YES'
C	CLOSE (15)
C	OPEN (15, 'PORTS1.OUT', INPUT)
C	GO TO 5

70	RETURN
	END


C	**********************************************************************
C			Subroutine WARNIN 
C	**********************************************************************

		SUBROUTINE WARNIN (ADDCHR,IPORT,PROBLE)

C		This subroutine determines the number of ports necessary
C		for the given Low Foreign Exchange rotary (usually less than
C		6 ports). The number of ports is determined from a table
C		provided by Network  Engineering, Marketing and Management 
C		Sciences, and is valid for rotaries with less than 30
C		connect-hours per day.

	PROBLE = 'NO'

	IPORT = 1
	IF (ADDCHR.LE.0.14) GO TO 100
	IPORT = 2
	IF (ADDCHR.LE.0.69) GO TO 100
	IPORT = 3
	IF (ADDCHR.LE.1.44) GO TO 100
	IPORT = 4
	IF (ADDCHR.LE.2.22) GO TO 100
	IPORT = 5
	IF (ADDCHR.LE.3.06) GO TO 100
	IPORT = 6
	IF (ADDCHR.LE.3.89) GO TO 100
	IPORT = 7
	IF (ADDCHR.LE.4.75) GO TO 100
	IPORT = 8
	IF (ADDCHR.LE.5.67) GO TO 100
	IPORT = 9
	IF (ADDCHR.LE.6.56) GO TO 100
	IPORT = 10
	IF (ADDCHR.LE.7.50) GO TO 100
	IPORT = 11
	IF (ADDCHR.LE.8.42) GO TO 100
	IPORT = 12
	IF (ADDCHR.LE.9.36) GO TO 100
	IPORT = 13
	IF (ADDCHR.LE.10.28) GO TO 100
	IPORT = 14
	IF (ADDCHR.LE.11.22) GO TO 100
	IPORT = 15
	IF (ADDCHR.LE.12.19) GO TO 100
	PROBLE = 'YES'
	IPORT = 16
	IF (ADDCHR.LE.13.14) GO TO 100
	IPORT = 17
	IF (ADDCHR.LE.14.08) GO TO 100
	IPORT = 18
	IF (ADDCHR.LE.15.00) GO TO 100
	IPORT = 19
	IF (ADDCHR.LE.15.97) GO TO 100
	IPORT = 20
	IF (ADDCHR.LE.16.94) GO TO 100
	IPORT = 21
	IF (ADDCHR.LE.17.89) GO TO 100
	IPORT = 22
	IF (ADDCHR.LE.18.89) GO TO 100
	IPORT = 23
	IF (ADDCHR.LE.19.86) GO TO 100
	IPORT = 24
	IF (ADDCHR.LE.20.81) GO TO 100
	IPORT = 25
	IF (ADDCHR.LE.21.75) GO TO 100
	IPORT = 26
	IF (ADDCHR.LE.22.78) GO TO 100
	IPORT = 27
	IF (ADDCHR.LE.23.75) GO TO 100
	IPORT = 28
	IF (ADDCHR.LE.24.69) GO TO 100
	IPORT = 29
	IF (ADDCHR.LE.25.72) GO TO 100
	IPORT = 30
	IF (ADDCHR.LE.26.69) GO TO 100
	IPORT = 31
	IF (ADDCHR.LE.27.64) GO TO 100
	IPORT = 32
	IF (ADDCHR.LE.28.61) GO TO 100
	IPORT = 33
	IF (ADDCHR.LE.29.58) GO TO 100
	IPORT = 34
	IF (ADDCHR.LE.30.53) GO TO 100
	IPORT = 35
	IF (ADDCHR.LE.31.56) GO TO 100
	IPORT = 36
	IF (ADDCHR.LE.32.53) GO TO 100
	IPORT = 37
	IF (ADDCHR.LE.33.50) GO TO 100
	IPORT = 38
	IF (ADDCHR.LE.34.44) GO TO 100
	IPORT = 39
	IF (ADDCHR.LE.35.42) GO TO 100
	IPORT = 50
	IF (ADDCHR.LE.36.44) GO TO 100
	IPORT = 51

100	RETURN
	END


