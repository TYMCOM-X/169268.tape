     
   
                        M E M O R A N D U M
     
                                                                     
     DATE>      DECEMBER 14, 1978                     []T Y M S H A R E
     
     TO>        DON JOHNSON
     
     COPIES>    ALL COMMUNICATION PERSONNEL
                NETWORK CONTROL
                TYMNET TECH SUPPORT
     
     FROM>      TYMSHARE TECHNICAL SUPPORT
                   DAVE SMITH
                   DAN LASATER
                   BILL SCHEIBLE
     
     SUBJECT>   UPDATED DOWNSTREAM LOADER (VER. 9)
     
     
     -----------------------------------------------------------------
     
     
     
     ON THE 20TH OF DECEMBER, THE DOWNSTREAM LOADER WILL BE UPDATED
     TO REFLECT ALL OF THE CHANGES AND IMPROVEMENTS THAT HAVE BEEN
     MADE SINCE THE ORIGINAL RELEASE.  THE CHANGE WILL BE MADE AT
     TWO P.M. PACIFIC TIME.
     
     BE AWARE THAT THE LOADER HAS A MINOR MODIFICATION TO IT AND THAT
     THE LOADERS ARE NOT INCLUDED IN THIS DOCUMENT.  THE LOADERS AND
     BOOTSTRAPS MAY BE FOUND UNDER THE SPECIFIED FILE NAMES.  THE
     DOCUMENTATION HAS BEEN CHANGED TO REFLECT ALL CHANGES AND THE 
     WRITTEN DOCUMENTATION IS ATTACHED.  SINCE THERE ARE NO CHANGES
     TO THE BOOTSTRAPS, THAT CHANGE-OVER TAKES ABOUT FIVE MINUTES.
     
     I WOULD SUGGEST THAT YOU READ THE FOLLOWING LIST SO THAT YOU WILL
     BE AWARE OF ALL THE CHANGES.
     
     1.  ABORTING THE PROGRAM ON "TIMEOUT...NO RESPONSE TO LOADER" HAS
         BEEN REMOVED.  THE MESSAGE STILL APPEARS, BUT THE PROGRAM
         WILL CONTINUE (EVERY 20 SECONDS) TO SEND THE LOADER UNTIL
         IT IS ACKNOWLEDGED OR THE PROGRAM IS ABORTED (ESCAPED).
     
     2.  TIMEOUTS FOR RECEIPT OF LOADER AND DATA BLOCKS (TIME TO
         RECEIVE AN ENTIRE BLOCK) INCREASED TO TWENTY SECONDS.
     
     3.  THE PROGRAM WILL NOW WARN (BUT NOT ABORT) IF 100 BLOCKS
         ARE OUTSTANDING.  THE PROGRAM WILL NOW ALLOW UP TO 800
         BLOCKS TO BE OUTSTANDING AT ONE TIME.
     
     4.  AS THE PROGRAM NO LONGER HALTS WITH 100 ACKS OUTSTANDING,
         THE PROGRAM WILL CONTINUE TO RETRANSMIT ALL DATA UNTIL IT
         IS EITHER ACKNOWLEDGED OR THE PROGRAM IS ABORTED (ESCAPED).
     
     
     5.  REPORTS ON THE PROGRESS OF A LOAD OR DUMP NOW INCLUDES COUNTS
         OF BOTH THE NUMBER OF BLOCKS SENT AND THE ACKS RECEIVED.
     
     6.  THE QUESTION FORMAT HAS BEEN CHANGED SLIGHTLY (THE EXTRA
         CARRIAGE RETURNS HAVE BEEN REMOVED).
     
     7.  THE PROGRAM WILL NOW ALLOW 25000 DECIMAL WORDS TO BE LOADED.
     
     8.  THE USER IS NOW INFORMED OF THE NODE NUMBER AND VERSION
         OF THE CODE BEING LOADED.
     
     9.  SOME NEW REASONS FOR THE FAILURE OF THE PROGRAM HAVE BEEN 
         ADDED TO THE ACCOUNTING FILE.  CES AND NETCON HAVE THAT LIST.
     
     10. THE WAIT LOGIC HAS BEEN IMPROVED, RESULTING IN A MINIMUM WAIT
         TIME FOR DATA COMING INTO THE HOST.
     
     11. IF THE ACK FOR THE LOADER SAYS THAT THE MACHINE IS 24K AND THE
         CODE IS FOR A 32K MACHINE, THEN A 32K BOOT IS SENT.  THE 32K
         BOOT WILL ONLY BE SENT 5 TIMES.  IF IT IS NOT ACKNOWLEDGED
         THE PROGRAM WILL ABORT.
     
     THIS MEMO CAN BE FOUND ON SYSTEMS 33 AND 36 IN (CES)DSLMEM .
     ANY QUESTIONS SHOULD BE DIRECTED TO DAVE SMITH OR DAN LASATER.
   

                         M E M O R A N D U M
      
                                                                      
      DATE>      DECEMBER 14, 1978                     []T Y M S H A R E
      
      TO>        DON JOHNSON
      
      COPIES>    ALL COMMUNICATIONS PERSONNEL
                 NETWORK CONTROL
                 TYMNET TECHNICAL SUPPORT
      
      FROM>      TYMSHARE TECHNICAL SUPPORT
                     DAVE SMITH
                     BILL SCHEIBLE
                     DAN LASATER
      
      SUBJECT>   UPDATED DOWNSTREAM LOADER (VER. 9)
      
      -----------------------------------------------------------------
      
      THERE HAVE BEEN SEVERAL SIGNIFICANT CHANGES TO THE PROCEDURE
      FOR USING DOWNSTREAM LOADING.  TO REREAD THIS PACKAGE, YOU WOULD
      FIND THAT THE CHANGES ESSENTIALLY CAUSE THE PROGRAM TO KEEP TRYING
      UNTIL IT IS ABORTED BY THE USER.  THIS PACKAGE CONTAINS THE
      FOLLOWING:

      DSLCON.DOC - CONVENTIONS THAT HAVE BEEN ADOPTED FOR THE NAMING
                   OF FILES, SYSTEM USAGE, ETC.
      
      DSLGEN.DOC - GENERAL PROCEDURES USED IN DEPLOYMENT AND USE
                   OF NETWORK DOWNSTREAM LOADING.
      
      DSLPRO.DOC - PROCEDURES FOR USING DOWNSTREAM LOADING.
      
      DSLTCH.DOC - TECHNICAL DESCRIPTION OF HOW IT WORKS.
      
      DSLTRB.DOC - TECHNICAL INFORMATION FOR TROUBLESHOOTING

       NEW72.16K - BOOTSTRAP AND LOADER FOR 16K V72 OR V77.
       
       NEW72.24K - BOOTSTRAP AND LOADER FOR 24K V72.
      
       NEW72.32K - BOOTSTRAP AND LOADER FOR 32K V72 OR V77.
      
      NEW620.12K - BOOTSTRAP AND LOADER FOR 12K 620.
      
      NEW620.16K - BOOTSTRAP AND LOADER FOR 16K 620.
      
      NEW620.20K - BOOTSTRAP AND LOADER FOR 20K 620.
      
      NEW620.24K - BOOTSTRAP AND LOADER FOR 24K 620.
      
      ANY OF THESE DOCUMENTS MAY BE FOUND ON SYSTEM 33 UNDER THE 
      USER NAME  CES .  THE FILE THAT CONTAINS THE COMPLETE PACKAGE
      IS CALLED  NEWDSL.PAK .

                   DOWNSTREAM LOADING CONVENTIONS
                       (CES:33)DSLCON.DOC

     WITH THE ADVENT OF NETWORK DOWNSTREAM LOADING, IT IS NECCESSARY TO
     DEFINE SOME CONVENTIONS WITH REFERENCE TO NAMING OF FILES, SYSTEM
     USAGE AND CONTROL.  THIS DOCUMENT IS IN (CES:33)DSLCON.DOC.

     THE FOLLOWING IS A LIST OF CONVENTIONS (OR EDICTS) THAT HAVE BEEN
     DECIDED ON THOUGH DISCUSSIONS WITH RPA, TYMNET, SYSTEMS RESOURCES
     AND THE NETWORK SUPPORT GROUP.

     1.     NETWORK DOWNSTREAM LOADING (NDL) USES BINARY IMAGE FILES
            (.REL FILES).  AS SUCH, CASSETTE IMAGE ( .CI) NEED NOT BE
            GENERATED IN THE FUTURE.

     2.     AS THERE WILL NOT BE ANY CASSETTES GENERATED, THE ONLY
            SOURCE OF CODE TO LOAD A NODE MUST BE KEPT RESIDENT ON A
            PDP-10 HOST.

     3.     ALL NODE CODES MUST BE BACKED UP ON ANOTHER PDP-10 HOST.
            THIS IMPLIES THAT CODE FOR EACH NODE MUST BE KEPT ON TWO(2)
            SYSTEMS AT ALL TIMES. UNDER NO CIRCUMSTANCES CAN THE CODE
            FILES BE REMOVED FROM THE SYSTEM(S).  ADDITIONALLY, THE CODE
            FILES MUST BE THE SAME ON BOTH SYSTEMS AT ALL TIMES.

     4.     SYSTEM C33 SHALL BE THE PRIMARY SYSTEM FROM WHICH NDL SHALL
            BE DONE FROM. SYSTEM C36 SHALL BE THE BACKUP SYSTEM SHOULD
            C33 BE DOWN, OR THE PROGRAMS UNABLE TO RUN FROM C33.

     5.     ALL USERS OF NDL SHALL HAVE UNLIMITED TRU'S ON C33. ALL
            USERS OF NDL SHALL BE LIMITED TO 500 TRU'S ON C36.

     6.     REMOTE NODE CODES (NODE NUMBERS GREATER THAN 1000) SHALL BE
            CREATED AND REFERRED TO BY THEIR "NETWORK NAME".  (I.E. NODE
            1072 IN PALO ALTO HAS THE NETWORK NAME "PCOSR1"). BASES ARE
            KNOWN AS NODXXX.* (XXX IS THE NODE NUMBER).

     7.     ALL CURRENT NODE CODE FILES SHALL BE STORED AS  NETWORK
            NAME.REL (I.E. THE CURRENT CODE FOR PCOSR1 SHALL BE
            PCOSR1.REL ) WHEN A CURRENT CODE IS SUPERCEEDED, THE OLD
            CODE SHALL BE KNOWN AS NETWORK NAME.BAK .  (I.E. PCOSR1'S
            OLD CODE WILL BE CALLED PCOSR1.BAK ).  THE OLD CODE SHALL
            REMAIN ON THE SYSTEM A MINIMUM OF ONE(1) WEEK AFTER NEW CODE
            IS LOADED.

     8.     RPA SHALL HAVE THE RESPONSIBILITY OF INSURING THAT NODE
            CODES BE KEPT CURRENT ON BOTH PDP-10 HOSTS.

     9.     THERE SHALL BE ONLY ONE NDL PROGRAM ON EACH SYSTEM. THE
            PROGRAM WILL ONLY EXECUTE FROM THE "NETCON" DIRECTORY. A
            BACKUP COPY OF THE PROGRAMS WILL BE MAINTAINED BY THE
            NETWORK SUPPORT GROUP.

     10.    ONLY NETWORK CONTROL SHALL BE EMPOWERED TO FORCE A NODE TO
            BRANCH TO ITS BOOTSTRAP.

     11.    ALL NETWORK DOWNSTREAM LOADS SHALL BE DONE BY NETWORK
            CONTROL OR WITH THEIR CONSENT SHOULD THE SITUATION WARRANT
            OTHER GROUP INVOLVEMENT.

     12.    NDL IS A VERY POWERFUL TOOL. AS SUCH, GREAT CARE MUST BE
            TAKEN TO INSURE THAN THE CORRECT CODE IS LOADED, AND THAT
            ALL RECONFIGURATIONS ARE SCHEDULED AND PERFORMED CORRECTLY.


              DOWNSTREAM LOADING GENERAL INFORMATION
                       (CES:33)DSLGEN.DOC

     THIS DOCUMENT IS INTENDED TO DISCRIBE THE MORE GENERAL PROCEDURES
     USED TO PLAN THE DEPLOYMNENT AND USE OF NETWORK DOWNSTREAM LOADING.

     THE FOLLOWING ESSENTIAL REQUIREMENTS MUST BE MET IN ORDER TO
     EFFECTIVELY INSTALL DOWNSTREAM LOADING.

     1)  DOWNSTREAM LOADING IS A SPECIAL COMMUNICATION BETWEEN TWO
     NETWORK MACHINES.  THERE MUST BE ONE MACHINE LOADED WITH A VERSION
     OF CODE THAT IS ABLE TO TRANSMIT THE DOWNSTREAM LOADING DATA.

     2)  ASSUME THAT MACHINE A IN FIGURE 1 IS LOADED WITH VERSION 512
     CODE. IF YOU ARE GOING TO LOAD MACHINE B BY DOWNSTREAM LOADING, THE
     LINE CONNECTED TO B FROM A MUST BE LINE 0,1,2,3,4,5,6, OR 7. THAT
     IS, DOWNSTREAM LOADING MAY ONLY BE RECEIVED ON LINES 0-7.  IT MAY BE
     TRANSMITTED ON ANY LINE, BUT THE BOOTSTRAP AND LOADER CAN ONLY
     RECEIVE ON LINES 0-7.

            AAAAA        BBBBB
           A     A      B     B
     -----A   A   A----B   B   B
           A     A      B     B
            AAAAA        BBBBB

           FIGURE 1

     3)  THE NEW VERSION OF CODE TO BE LOADED MUST HAVE BEEN DESIGNED TO
     BE LOADED SYNCHRONOUSLY. THE VERSION OF CODE MUST BE 512 OR GREATER
     FOR REMOTES, 41300 OR GREATER FOR BASES, 116XXX OR GREATER FOR
     ASYNC TYMCOMS AND VERSION 21 OR GREATER FOR BYSYNC TYMCOMS.

     4)  THE SYNCHRONOUS BOOT MUST HAVE BEEN LOADED IN THE MACHINE TO BE
     LOADED.


     INITIAL INSTALLATION
     ------- ------------

     WITH THE FIRST INSTALLATIONS OF DOWNSTREAM LOADING THERE ARE SOME
     SPECIAL OCCURANCES AND UTILITIES PROVIDED.  THE FIRST MACHINE TO BE
     LOADED CANNOT BE LOADED BY THE NETWORK TECHNIQUE.  IT MUST BE
     LOADED BY CONVENTIONAL TECHNIQUES.  FOR PRACTICAL REASONS, THIS MAY
     BE DONE IN SEVERAL PLACES RATHER THAN STARTING WITH ONE MACHINE AND
     PROPAGATING THE ENTIRE NET.  THE FOLLOWING ARE SOME RECOMENDATIONS
     AND REQUIRED PROCEDURES FOR HANDLING THIS SITUATION.

     1)  SELECT A PAIR OF MACHINES PREFERABLY LOCATED AT THE SAME SITE.
     EACH MACHINE SHOULD MEET ALL CRITERIA FOR LOADING EACH OTHER AND
     EACH SHOULD IDEALLY HAVE A LARGE NUMBER OF OTHER NETWORK LINES SO
     THAT THEY CAN BOTH LOAD A NUMBER OF OTHER MACHINES.  THIS ALSO
     ALLOWS THEM TO LOAD EACH OTHER.


     2)  LOAD THE DOWNLINE LOADING CODE IN ONE MACHINE VIA CASSETTE.
     THEN LOAD THE SYNCHRONOUS BOOT INTO THE SECOND MACHINE AND LOAD IT
     THROUGH THE FIRST MACHINE.

     3)  NOW LOAD THE SYNCHRONOUS BOOT INTO THE FIRST MACHINE AND RELOAD
     IT FROM THE SECOND MACHINE.

     THE PROCEDURES FOR LOADING THE BOOTSTRAP AND SETTING IT UP FOR THE
     CORRECT LINE IS DISCRIBED IN ANOTHER DOCUMENT AVAILABLE ON SYSTEM
     33 AS (CES)DSLPRO.DOC  OR  NETLOD.DOC .

     MACHINES THAT ALREADY HAVE A NEIGHBOR ON AN APPROPRIATE LINE WITH
     DOWNSTREAM LOADING CODE, MAY BE LOADED THROUGH THE NET FROM THAT
     NEIGHBOR.  IT WILL STILL BE NECESSARY FOR SOMEONE TO BE ON SITE TO
     LOAD THE SYNCHRONOUS BOOTSTRAP.


     ***************** SOME WARNINGS *** SOME WARNINGS ***************

     IN PLANNING CONFIGURATIONS THERE ARE SOME THINGS TO CAREFULLY
     AVOID.  MOST ARE OBVIOUS, SOME MAY NOT BE.

     1)  BE CERTAIN THAT THE BOOTSTRAP IS SET TO RECEIVE ON THE CORRECT
     LINE.  THE "DLOAD COMMAND WILL SET THE LINE YOU SELECT, HOWEVER,
     MANUAL EXECUTION OF THE BOOT REQUIRES MANUAL CHECKING AND MODIFING
     OF THE BOOT. (REFER TO (CES:33)NETLOD.DOC FOR INSTRUCTIONS).

     2)  WHEN ISSUING A "DLOAD" COMMAND BE CERTAIN THAT THE NEIGHBOR YOU
     INTEND TO LOAD FROM IS ABLE TO (IE HAS THE RIGHT CODE) AND THAT YOU
     WILL BE ABLE TO BUILD A CIRCUIT TO THAT NEIGHBOR.  FOR EXAMPLE IN
     FIGURE 2 SUPPOSE THAT FOR SOME REASON THE LINE BETWEEN A AND B IS
     OUT.  A AND C ARE STILL IN THE NET.  IF YOU WISH TO LOAD C DO NOT
     PLAN TO DO IT FROM A BECAUSE WHEN C IS EXECUTING ITS BOOTSTRAP A
     WILL NOT BE IN THE NET.  IN THIS EXAMPLE YOU COULD LOAD THROUGH B
     IF THE LINE IS IN THE RIGHT PLACE ON C.

            AAAAAA         BBBBBB
           A      A       B      B
          A   A    A-----B   B    B---------
           A      A       B      B
            AAAAAA         BBBBBB
               I              I
               I   CCCCCC     I
               I  C      C    I
               I-C    C   C---I
                  C      C
                   CCCCCC

              FIGURE 2

     3)  BEWARE OF TRYING TO LOAD THROUGH A NOISY LINE.  THE DATA IS
     CHECKSUMMED AND RETRANSMITTED BUT IF YOU ARE UNABLE TO GET THE
     LOADER ACROSS YOU ARE OUT OF LUCK.  THE NDL WILL CONTINUE TO

     TRY TO SUCCESSFULLY GET THE LOADER TO THE TARGET MACHINE.
     ONCE THAT IS COMPLETED, THE NDL WILL TRY CONTINUOUSLY, NO 
     MATTER HOW MANY ACKS OR RECORDS MAY BE OUTSTANDING.
     ALWAYS BE SURE TO SELECT THE CLEANEST LINE POSSIBLE.  THIS IS NOT
     ALWAYS A HARD WIRED LINE. ALSO 25 OR 30 ERRORS IS NOT MANY ON A
     MODERATE TO HEAVILY LOADED LINE BUT ON A LINE WITH NO TRAFFIC, THAT
     MANY ERRORS IS A NOISY LINE.  IT IS ADVISED THAT YOU CHECK A
     NETWORK LOGGER FOR LINE ERRORS BEFORE COMMITTING A NODE TO A
     DOWNSTREAM LOAD.

     4)  WHEN DOING RECONFIGURATIONS DO NOT ALLOW MACHINES TO COME UP IN
     A FASHION THAT COULD RESULT IN TEMPORARY CONFIGURATION ERRORS.  THE
     RESULT IS A MACHINE THAT YOU MAY NOT BE ABLE TO GET INTO THE NET.
     THE DOWNSTREAM LOAD CODE DOES NOT CARE WHO THE NEIGHBOR IS ON THE
     OTHER END OF THE LINE NOR HOW MANY GROUPS THERE IS SUPPOSED TO BE
     ON THAT LINE. AN EXAMPLE USING FIGURE 1 AGAIN.  SUPPOSE THAT YOU
     WISH TO CHANGE THE NUMBER OF GROUPS ON THE LINE BETWEEN A AND B.
     IF YOU ARE NOT THINKING TO WELL, YOU MIGHT SEND A TO ITS BOOTSTRAP,
     RELOAD IT AND THEN TRY TO SEND B TO ITS BOOTSTRAP. ASSUMING THAT B
     HAS ONLY ONE LINE UP AT THE TIME AND THAT IS THE LINE TO A, YOU HAVE
     LOST CONTROL OVER B SINCE IT CANNOT COME BACK INTO THE NET. THE
     SAFEST THING TO DO IN GENERAL IS TO CAREFULLY PLAN AN ORDER OF
     LOADING THAT WILL NOT RESULT IN ERRORS.  THEN CAREFULLY SEND ALL
     THE MACHINES THAT NEED TO BE LOADED TO THEIR BOOTSTRAPS.  THEN
     FOLLOW THE RELOAD PATTERN PLANNED OUT.  IN GENERAL AVOID RELOADING
     LARGE PORTIONS OF THE NET IN ONE SESSION. FAMILIARITY CAN CAUSE
     CARELESSNESS.

     5)  MAKE CERTAIN THAT THE CODE YOU LOAD AGRESS WITH THE
     CONFIGURATION THAT THE CODE WILL FIND WHEN IT COMES UP.  IF LINES
     HAVE BEEN PATCHED AND MOVED THE MAP MAY NOT REFLECT THE CHANGE AND
     THE CODE MIGHT NOT EITHER.  SUPPOSE A MACHINE WITH TWO LINES HAS
     FOR SOME REASON HAD THOSE LINES SWAPPED AND THE CODE PATCHED TO
     WORK.  IF NEW CODE IS REMOTELY LOADED THAT DOES NOT REFLECT THE
     CHANGE, THAT MACHINE WILL LOAD BUT NO REPORT OF THAT FACT WILL
     APPEAR SINCE THE MACHINE CANNOT ENTER THE NET.  THE NEIGHBORS MAY
     REPORT A RESET OUT CONDITION.  THE ONLY WAY OUT IS TO HAVE THE
     MACHINE MANUALLY BRANCHED TO THE BOOT AND CODE CORRECTLY ASSEMBLED.
     THIS ASSUMES THAT SOMEONE IS ABLE TO FIGURE OUT WHAT HAPPENED.  TO
     DETERMINE THIS ONLY FROM THE EVIDENCE AT NETWORK CONTROL MAY BE
     VERY DIFFICULT. NOTE SUGGESTIONS 7 AND 8 BELOW.

     6)  ALWAYS PLAN AHEAD AND REVIEW EVEN SIMPLE OPERATIONS COMPLETELY
     BEFOR EXECUTING.

     7)  BEFORE SENDING ANY MACHINE TO ITS BOOTSTRAP, GET A HARDCOPY
     PICTURE OF THAT PART OF THE NET THAT IS AFFECTED.  THIS WILL BE
     VERY USEFUL IF SOMETHING GOES WRONG LATER.

     8)  REVIEW THE "TYM" FILES AGAINST THE PICTURE OF THE NET OBTAINED
     IN "7" ABOVE.  MAKE CERTAIN THAT GROUPS AND LINES WILL MATCH
     CORRECTLY WHEN THE MACHINES ARE LOADED.  EXAMINE CAREFULLY THE

     AREAS WHERE CHANGES ARE TO BE MADE. BE CERTAIN THAT NO TEMPORARY
     CONFIGURATION ERROR WILL OCCUR DURING THE UPGRADE.  IF FOR SOME
     REASON THIS IS UNAVOIDABLE, MAKE CERTAIN THAT THERE WILL ALWAYS BE
     AT LEAST ONE LINE THAT THE MACHINE CAN BE BROUGHT INTO THE NET.
     THIS CASE SHOULD NEVER BE ALLOWED TO HAPPEN.

     9)  WHEN USING THE "DLOAD" COMMAND, DO IT ON A HARD COPY TERMINAL
     SO THAT YOU CAN RETRACE YOUR STEPS WHEN NECESSARY.

     10)  WHEN SENDING ONE MACHINE TO ITS BOOT, WAIT FOR THE LINE OUT
     REPORTS TO ARRIVE ON THE CONSOLIDATOR LOG BEFORE DOING ANOTHER ONE.
     THE BOOTSTRAP MAY NOT CHECKSUM RESULTING IN THE MACHINE REJECTING
     THE "DLOAD" COMMAND.  IF ANOTHER MACHINE GOES DOWN IN THE UPSTREAM
     PATH OF THE FIRST MACHINE THE REJECTION MESSAGE MAY NOT REACH YOU.

     11)  KEEP A LOG OF WHAT YOU DO.  IF SOMETHING GOES WRONG THIS WILL
     BE OF GREAT VALUE.

     COPIES OF THIS DOCUMENT MAY BE OBTAINED FROM (CES:33)DSLGEN.DOC .

                   DOWNSTREAM LOADING PROCEDURES
                        (CES:33)DSLPRO.DOC

     THIS DOCUMENT DISCRIBES THE PROCEDURES USED TO LOAD A VARIAN NODE
     THROUGH THE NETWORK AND MAY BE FOUND IN (CES:33)DSLPRO.DOC .  FOR A
     TECHNICAL DESCRIPTION OF WHAT HAPPENS AND HOW, REFER TO THE FILE
     (CES:33)DSLTCH.DOC .

     1)  THE .REL FILE FOR THE MACHINE MUST BE AVAILABLE ON SYSTEM 33 OR
     36 AND YOU MUST HAVE ACCESS TO IT.  THESE WILL ALWAYS BE
     MAINTAINED IN TYMNET'S DIRECTORY.

     2)  DOWNLINE LOADING OPERATES THROUGH A 201 LINE FROM A NEIGHBOR TO
     THE NODE TO BE LOADED.  NORMALLY THIS IS LINE ZERO ON THE MACHINE
     TO BE LOADED.  YOU MUST KNOW WHICH NODE MUMBER THAT IS THE NEIGHBOR
     ON THIS LINE, AND WHICH LINE NUMBER IT IS ON THAT NEIGHBOR.
     IF SUCH A NEIGIS NOT AVAILABLE ON LINE ZERO OF THE TARGET
     MACHINE, SELECT THE LOWEST POSSIBLE LINE NUMBER ON THE
     TARGET MACHINE THAT MEETS THE REQUIREMENTS.  IN NO CASE MAY THE
     LINE NUMBER BE GREATER THAN 7 .

     3)  THE CORRECT BOOTSTRAP MUST BE LOADED INTO THE MACHINE.  IF IT
     IS NOT ALREADY LOADED IT MAY BE ENTERED THROUGH THE FRONT PANEL BY
     THE "BOOT" FUNCTION IF THE MACHINE IS A V70 SERIES EQUIPPED WITH
     THE CORRECT PROMS. IF IT IS A 620 SERIES MACHINE THE BOOT MUST BE
     LOADED THROUGH THE FRONT PANEL.  IN THOSE CASES WHERE THE NORMAL
     ASYNC BOOTSTRAP IS IN THE MACHINE AND THERE IS SOMEONE ON SITE TO
     DO THE LOADING, A PROGRAM IS AVAILABLE TO LOAD THE SYNCHRONOUS BOOT
     WITH THE ASYNC BOOT.  REFER TO APPENDIX A FOR THE PROCEDURES ON
     THIS PROGRAM.  LISTINGS OF THE BOOTSTRAP (AND LOADER) ARE AVAILABLE
     ON SYSTEM 33 IN CES'S DIRECTORY:


     XXBOOT.YYY              XX=12  12K BOOT
                                16  16K BOOT
                                24  24K BOOT
                                32  32K BOOT

                             YYY=V72 OR 620


     4)  ONCE THE BOOTSTRAP IS LOADED IT MUST BE SET UP TO RECEIVE ON
     THE CORRECT LINE.  IF THE "DLOAD" COMMAND IS USED (SEE "5") THIS
     WILL BE SET UP AUTOMATICALLY.  ALSO THE BOOTSTRAP LOAD PROGRAM CAN
     SET UP A PRE-MODIFIED BOOT FOR THIS PURPOSE. (SEE APPENDIX A) THE
     PROM BOOTSTRAPS WILL ASSUME LINE ZERO AS A DEFAULT.  IF IT IS

     NECESSARY TO DO THIS MANUALLY THE FOLLOWING ARE THE LOCATIONS THAT
     MUST BE ALTERED:

           LINE  LINE  LINE  LINE  LINE  LINE  LINE  LINE
             0     1     2     3     4     5     6     7
     X7655 50040 50044 50050 50054 50060 50064 50070 50074
     X7656 50042 50046 50052 50056 50062 50066 50072 50076
     X7663 50043 50047 50053 50057 50063 50067 50073 50077
     X7666 50041 50045 50051 50055 50061 50065 50071 50075
     X7770 00021 00023 00025 00027 00031 00033 00035 00037

     X=2 FOR 12K
       3     16K
       5     24K
       7     32K

     5)  THE BOOTSTRAP MUST BE EXECUTED IN THE MACHINE TO BE LOADED. IF
     THE MACHINE IS UP IN THE NET AND THE BOOTSTRAP IS LOADED THE
     MACHINE MAY BE SENT TO THE BOOTSTRAP BY THE "DLOAD" COMMAND. THIS
     IS A PRIVILEGED PROBE COMMAND.  REFER TO PROBE DOCUMENTATION FOR
     THE FORMATS.  THIS COMMAND WILL CAUSE THE MACHINE TO AUTOMATICALLY
     MODIFY THE BOOT FOR THE LINE SPECIFIED IN THE "DLOAD" COMMAND.  THE
     BOOT WILL THEN BE CHECKSUMMED, AND IF CORRECT, EXECUTED.  IF THE
     CHECKSUM IS BAD, THE CONSOLIDATOR LOG WILL DISPLAY THE ERROR AND
     THE NODE WILL REMAIN IN THE NET.  IF THE BOOT MUST BE MANUALLY
     EXECUTED, THE STARTING ADDRESS IS X7640.

     6)  ONCE RUNNING, THE BOOT IS PROTECTED AGAINST POWERFAIL. (THE
     LOADER IS ALSO BUT POWER RESTART WILL RESTART THE BOOT)

     7)  YOU MUST NOW LOG INTO THE NDL SYSTEM AND ENTER:

     GO (NETCON)NLOAD

     A RECORD IS KEPT OF WHO DOES WHAT BY THE PROGRAM.  AT THIS POINT
     THE PROGRAM WILL RETURN WITH A COLON (:) PROMPT, THE OPTIONS
     AVAILABLE ARE:

     L  FOR LOADING NETWORK CODE
     D  FOR DUMPING THE MACHINE
     T  FOR LOADING DIAGNOSTICS

     IF YOU REQUEST A DUMP YOU WILL BE ASKED FOR AN OUTPUT FILE AS WELL
     AS THE STARTING AND ENDING LOCATIONS OF THE DUMP.  THESE NUMBERS
     ARE ENTERED IN OCTAL.  YOU WILL ALSO BE ASKED IF YOU WANT TO LOAD
     THE MACHINE AFTER THE DUMP. IF YOU DO NOT YOU WILL BE GIVEN THE
     OPTION OF DOING A RESTART ON THE MACHINE OR RETURNING TO THE BOOT.
     THE REST OF THE INPUT FOR THE DUMP PROCEEDS LIKE THE LOAD FUNCTION.

     8)  THE LOAD, LOAD DIAGNOSTIC OR DUMP FUNCTION WILL REQUIRE YOU TO
     ENTER THE NEIGHBOR NUMBER AND LINE NUMBER THAT THE DATA IS TO BE
     SENT OUT ON, FROM THAT NEIGHBOR.  EACH OF THEM MUST BE ENTERED
     TWICE TO INSURE AN ACCURATE ENTRY.

     9)  IF YOU ARE USING THE DUMP OR THE LOAD DIAGNOSTIC FUNCTION YOU
     WILL BE ASKED TO ENTER THE CORE SIZE.  IF THE "L" FUNCTION IS USED
     THE PROGRAM WILL FIND THE CORE SIZE FROM THE REL FILE. BE SURE THAT
     THE REL FILE OR THE VALUE YOU ENTER IS CORRECT.

     10)  IF YOU ARE LOADING CODE, THE PROGRAM WILL ASK FOR THE NAME OF
     THE REL FILE.  IF THE FILE NAME EXCEEDS 20 CHARACTERS, THE FILE
     WILL NOT BE OPENED (I.E. "UNABLE TO OPEN FILE CALLED XXXXXX.XXX").
     THE LENGTH OF THE FILE NAME INCLUDES REFERENCES TO OTHER USER
     DIRECTORIES (I.E. (CES)TEST.REL HAS A TOTAL OF 13 CHARACTERS).

     11)  THE REST IS AUTOMATIC. THE PROGRAM WILL READ YOUR REL FILE (IF
     REQUIRED) AS WELL AS THE CORRECT LOADER. YOU WILL BE TOLD THE
     NUMBER OF WORDS TO BE LOADED, THE SIZE OF THE LOADER, THE NODE
     NUMBER AND THE VERSION NUMBER OF THE CODE BEING LOADED.  A CIRCUIT
     WILL BE BUILT TO THE SPECIFIED NEIGHBOR AND YOU WILL BE INFORMED OF
     THIS. THE NEIGHBOR WILL BE PASSED THE LINE NUMBER. IF THE NEIGHBOR
     AGREES, YOU WILL BE INFORMED THAT THE NEIGHBOR HAS ACKNOWLEGED THE
     REQUEST AND A NOTE OF THE FACT WILL APPEAR ON THE CONSOLIDATOR LOG.
     EVERY 40 RECORDS YOU WILL BE INFORMED THAT RECORDS HAVE BEEN
     TRANSMITTED AND ADDITIONALY TOLD HOW MANY HAVE BEEN ACKNOWLEDGED.
     THIS IS TO HELP YOU KEEP TRACK OF THE PROGRESS BEING MADE.
     IT MAY TAKE AS MUCH AS 450 OR MORE RECORDS TO LOAD A MACHINE WHILE
     A DUMP MAY TAKE MUCH MORE.  YOU CAN ESTIMATE THE TOTAL RECORDS BY
     ASSUMING THAT EACH RECORD TRANSFERS 28 WORDS.  REMEMBER THAT DURING
     A LOAD SOME RECORDS WILL NOT BE FULL.

     YOU MAY BE INFORMED THAT THE CIRCUIT IS ZAPPED. THIS COULD BE
     CAUSED BY ONE OF THE FOLLOWING:

     A)  YOU ENTERED THE WRONG LINE NUMBER AND THE NEIGHBOR SAW THAT THE
     LINE WAS NOT DOWN OR THE LINE NUMBER WAS OUT OF RANGE.

     B)  THAT NEIGHBOR IS ALREADY DOING A LOAD AND WILL ALLOW ONLY ONE
     LOAD IN PROGRESS AT A TIME.

     C)  A NODE IN THE LINK HAS FAILED.

     THE HOST MAY BE UNABLE TO BUILD AN AUX CIRCUIT BECAUSE OF
     SUPERVISOR PROBLEMS. (HEAVY LOAD, THE SUP JUST CRASHED OR DOES NOT
     HAVE CONTROL OF THE BASE).  NOTE: YOU CANNOT LOAD A MACHINE THAT
     IS A NEIGHBOR OF THE BASE FOR THE HOST FROM WHICH YOU ARE 
     RUNNING THE NLOAD PROGRAM.

     ONCE THE NEIGHBOR HAS ACKNOWLEGED THE REQUEST, THE LOADER IS SENT
     OUT.  THE HOST WILL WAIT A FEW SECONDS FOR AN ACKNOWLEGEMENT AND IF
     NONE IS RECEIVED IT WILL TELL YOU AND THEN THE LOADER WILL BE
     RESENT EVERY TWENTY SECONDS UNTIL IT IS ACKNOWLEDGED OR ABORTED
     BY THE USER RUNNING NLOAD.  ONCE THE LOADER IS
     RECEIVED SUCCESSFULLY YOU WILL BE INFORMED AND THE LOAD OR DUMP
     WILL PROCEED.  NOTE: ON VERY RARE OCCASIONS, THE NODE MAY
     HAVE RECEIVED AND ACKNOWLEDGED THE LOADER, BUT THE HOST

     PROGRAM NEVER RECEIVES THE ACKNOWLEDGEMENT.  THE HOST PROGRAM
     WILL START RETRANSMITTING THE LOADER, BUT SINCE THE LOADER IS
     RUNNING IN THE TARGET MACHINE, THE DATA THAT IS SENT (LOADER)
     WILL NOT CHECKSUM, CAUSING THE LOADER TO BE RETRANSMITTED
     OVER AND OVER AGAIN.  YOU MAY RECEIVE A WARNING MESSAGE
     THAT 100 ACKS ARE OUTSTANDING BUT THE PROGRAM WILL CONTINUE
     TRYING TO LOAD.  A LARGE NUMBER OF OUTSTANDING ACKS CAN BE
     CAUSED BY THE FOLLOWING REASONS:

     A)  THE NODE BEING LOADED HAS FAILED.

     B)  THE LINK TO THE NEIGHBOR IS LOST.

     C)  THE HOST IS OVERLOADED CAUSING TOO MUCH DELAY BETWEEN RECORDS.

     D)  THE LINE IS EXTREMELY NOISY AND THE DATA CANNOT BE SENT THROUGH
         EASILY.

     IF THE NODE TO BE LOADED FAILS TO HEAR A RECORD WITHIN 53 TO 224
     SECONDS (DEPENDING ON LINE SPEED) IT WILL RETURN TO THE BOOTSTRAP.
     THUS IF ANY OF THE ABOVE ERRORS OCCUR TRY AGAIN IN A FEW MINUTES.
     WHEN ALL THE DATA IS SENT (OR THE REQUESTS IF A DUMP) YOU WILL BE
     INFORMED AND THE PROGRAM WILL WAIT FOR ALL ACKNOWLEGEMENTS TO BE
     RECEIVED. ANY RECORDS NOT RECEIVED WILL BE RETRANSMITTED AND YOU
     WILL BE INFORMED OF THE NUMBER OF RETRANSMISSIONS.  IF YOU ARE
     RUNNING A DUMP FOLLOWED BY A LOAD, THE LOAD WILL BEGIN IMMEDIATLY
     AFTER RETRANSMISSIONS.

     WHEN LOADING IS COMPLETE THE LOADER WILL BE ORDERED TO DO A MANUAL
     RESTART (UNLESS YOU HAVE REQUESTED OTHERWISE AS IN  A DUMP) AND THE
     PROGRAM WILL EXIT.


        APPENDIX I  BOOTSTRAP LOADER

     THIS PROGRAM MAY BE LOADED INTO A VARIAN NODE AND EXECUTED TO
     CREATE A SYNCHRONOUS BOOTSTRAP IN THE MACHINE.  THE PROGRAM
     DETERMINES THE MEMORY SIZE AND I/O ADDRESSES INTERNALLY AND READS
     THE SENSE SWITCHES TO DETERMINE WHAT LINE TO SET UP THE BOOT FOR.

     THE PROGRAM IS LOCATED ON SYSTEM 33 IN THE CES DIRECTORY UNDER THE
     FOLLOWING NAMES:

     SYNCLD.VAS      SOURCE FILE
     SYNCLD.REL      REL FILE
     SYNCLD.CI       CI FILE

     THE PROGRAM MAY BE LOADED EITHER FROM CASSETTE TAPE OR VIA THE
     PROGRAM NETLOA.  BEFORE IT IS LOADED, SET THE SENSE SWITCHES TO THE
     LINE NUMBER YOU INTEND TO RECEIVE THE LOADER ON ( SET THE SENSE
     SWITCHES AS IF THEY WERE AN OCTAL NUMBER, NOT BY THE SENSE SWITCH
     NUMBERS ).  THE PROGRAM WILL EXECUTE UPON LOADING AND WILL BRANCH
     TO THE BOOTSTRAP AS SOON AS IT LOADS IT INTO THE CORRECT PLACE.

              DOWNSTREAM LOADING TECHNICAL DOCUMENT
                           (CES:33)DSLTCH.DOC

     THIS DOCUMENT DISCRIBES THE SEQUENCE OF EVENTS USED TO LOAD A
     VARIAN NODE THROUGH THE NETWORK ON A SYNCHRONOUS LINE.

     1) A SPECIAL SYNCHRONOUS BOOTSTRAP IS EXECUTED IN THE NODE TO BE
        LOADED.

     2) A CIRCUIT IS TERMINATED IN THE NEIGHBOR TO THIS NODE FROM A
        PDP-10 HOST.  THE NEIGHBOR IS THE ONE ON THE LINE THROUGH WHICH
        THE MACHINE TO BE LOADED IS TO BE LOADED.  THIS IS USUALLY LINE
        ZERO ON THE NODE TO BE LOADED AND MAY BE ANY LINE ON THE NEIGHBOR
        AS REQUIRED.  THE BOOT MAY BE PATCHED TO LOAD ON A DIFFERENT
        LINE WITHOUT MODIFING THE LOADER PROGRAM.  THE CIRCUIT BUILT IS
        A SPECIAL PASSTHRU CIRCUIT TERMINATED IN THE NEIGHBOR FOR THIS
        PURPOSE.

     3) THE HOST PASSES A 1 CHARACTER LINE NUMBER TO THE NEIGHBOR NODE.
        THE NEIGHBOR CHECKS TO MAKE SURE THAT THIS LINE IS OUT.  IF IT
        IS NOT, THE CIRCUIT TO THE HOST IS ZAPPED.  IF THE LINE IS OUT,
        THE LINE NUMBER IS RETURNED TO THE HOST AS AN ACKNOWLEGEMENT.
        THE NEIGHBOR THEN PLACES THAT LINE INTO LOAD NODE STATE AND
        WAITS FOR THE HOST TO SEND DATA DOWN. DURING THIS TIME THE LINE
        WILL BE SILENT.  ONLY ONE CIRCUIT AT A TIME MAY BE BUILT TO A
        NODE. A SECOND CIRCUIT WILL BE IMMEDIATELY ZAPPED.  THIS DOES
        NOT ELIMINATE THE POSSIBILITY OF BUILDING A CIRCUIT TO A
        DIFFERENT MACHINE AT THE SAME TIME.

     4) THE HOST WILL NEXT SEND THE LOADER DOWN TO THE NEIGHBOR.  THE
        LOADER IS FORMATTED INTO 33 WORD BLOCKS.  EACH BLOCK STARTS WITH
        A ONE WORD (16 BIT) SYNCH CHARACTER (031062 OCTAL).  THE LAST
        WORD OF THE LAST BLOCK CONTAINS AN ADDITIVE CHECKSUM WHICH WAS
        INITIALIZED AT 2000 OCTAL FOR THE CONVIENCE OF THE BOOTSTRAP.
        THERE ARE 8 BLOCKS.

     5) THE NEIGHBOR NODE WILL ACCUMULATE 33 WORD BLOCKS AND SEND THEM
        OUT ON THE LOADING LINE.

     6) THE BOOTSTRAP WILL WAIT FOR A SYNCH CHARACTER AND THEN TRANSFER
        INTO MEMORY THE NEXT 32 WORDS OF DATA.  A CHECKSUM WILL BE
        ACCUMULATED WITH EACH WORD RECEIVED.  WHEN THE LAST BLOCK IS
        RECEIVED,  THE CHECKSUM IS VERIFIED AND CONTROL IS PASSED TO THE
        LOADER IF THE SUM IS CORRECT.  IF THE CHECKSUM IS BAD, THE BOOT
        STRAP RESTARTS ITSELF.

     7) UPON STARTING, THE LOADER LOCATES THE BOOTSTRAP AND DETERMINES
        THE LINE NUMBER AND I/O ADDRESSES FOR THE LOADING LINE. IT THEN
        TRANSMITS AN ACKNOWLEGMENT TO THE HOST.  THE ACKNOWLEGEMENT IS
        IS IDENTICAL TO THE TRANSMIT BLOCKS (SEE ITEM 9) WITH A COUNT OF
        ZERO.

     8) THE NEIGHBOR NODE WILL BE MONITORING THE LINE FOR THE SYNC WORD.
        ONCE THIS IS FOUND THE NEXT 32 WORDS ARE READ.  THE SYNCH AND 32
        DATA WORDS ARE PASSED ON TO THE HOST PROGRAM.

     9)  UPON RECEIPT OF THE ACKNOWLEGEMENT, THE HOST PROGRAM WILL PASS
         DOWN TO THE LOADER THE PROGRAM TO BE LOADED INTO THE MACHINE.
         THIS IS FORMATTED AS FOLLOWS:

         SYNC WORD                            =="
         DATA COUNT              =="            "
         DATA ADR                   "           "
         DATA    =="                "           "    33 WORDS
            "       "INCLUDED       "INCLUDED   "     LONG
            "       "IN DATA        "IN CHECKSUM"
            "       "COUNT          "           "
            "       "               "           "
            "    =="                "           "
         FILL DATA                  "           "
            "                       "           "
            "                    =="            "
         CHECKSUM                             =="

         EACH BLOCK IS READ INTO A BUFFER SPACE.  THE CHECKSUM IS
         COMPUTED AS A VERTICAL AND DIAGONAL EXCLUSIVE OR SUM. THE
         VERTICAL SUM IS INCLUDED IN THE DIAGONAL SUM.

     10) EACH GOOD BLOCK IS ACKNOWLEGED BY RETURNING TO THE HOST A
         SIMILAR BLOCK WITH THE SAME ADDRESS.  THE BLOCK WILL HAVE DATA
         IF THE HOST TRANSMITTED A NEGATIVE COUNT.  ON V72'S AND V73'S
         THE ADDRESS OF THE LAST BLOCK TRANSFERRED WILL BE DISPLAYED
         IN THE FRONT PANEL LIGHTS.

     11) ONCE THE HOST HAS TRANSMITTED ALL THE DATA IT CHECKS TO SEE
         WHICH RECORDS HAVE NOT BEEN ACKNOWLEGED.  THESE RECORDS ARE
         RETRANSMITTED UNTIL ALL RECORDS ARE ACKNOWLEDGED.  AT THIS
         TIME THE HOST SENDS A BLOCK WITH A COUNT OF ZERO.

     12) WHEN THE LOADER RECEIVES A VALID BLOCK WITH A COUNT OF ZERO, IT
         BRANCHES TO LOCATION 0.

     13) SHORTLY AFTER THE ZERO RECORD IS SENT OUT THE HOST ZAPS THE
         CIRCUIT TO THE NEIGHBOR.

     14) WHENEVER THE NEIGHBOR RECEIVES A ZAPPER ON THE LOADING CIRCUIT
         IT RESTORES THE LINE TO NORMAL STATE.  WHEN THIS HAPPENS THE
         RESET PATTERN WILL COME IN FROM THE NEIGHBOR THAT WAS LOADED
         (HOPEFULLY!) AND THE LINE WILL PROCEDE TO COME UP.

     15) IF THE NEIGHBOR NODE RECEIVES A ZAPPER AT ANY TIME DURING THE
         LOAD, IT RESETS ITSELF TO ITS ORIGINAL STATE AS IF NO LOADING
         WERE IN PROGRESS.

     16) THE BOOTSTRAP RUNS A COUNTER BASED ON THE TRANSMIT INTERRUPTS.
         EACH RECORD RESETS THE COUNTER. IF THE COUNTER EXPIRES BEFORE
         THE THE NEXT RECORD IS RECEIVED THE BOOTSTRAP RESTARTS ITSELF.
         PRESENTLY THE TIMEOUT PERIOD IS:

         20 SEC  2400 BAUD LINE
         10 SEC  4800 BAUD LINE
          5 SEC  9600 BAUD LINE

     17) THE LOADER RUNS A COUNTER SIMILAR TO THE BOOTSTRAP BUT LONGER.
         EACH RECORD WHETHER GOOD OR BAD WILL RESET THE COUNTER.  THE
         TIMOUT PERIOD FOR THIS TIMER IS:

         224 SEC 2400 BAUD LINE
         112 SEC 4800 BAUD LINE
          56 SEC 9600 BAUD LINE

         IF THE TIMER EXPIRES THE LOADER BRANCHES TO THE BOOTSTRAP.

     18) TO PERFORM A DUMP, THE HOST PROGRAM SENDS A COUNT WITH THE HIGH
         ORDER BIT ON.  THE BLOCK TRANSMITTED BY  THE HOST MAY CONTAIN
         DATA TO BE TRANSMITTED INTO MEMORY.  IF NO DATA IS TO BE
         ENTERED THE COUNT MAY BE ZERO OTHERWISE.  AS LONG AS THE SIGN
         BIT IS ON, THE CODE WILL NOT BRANCH TO LOCATION ZERO.  THE
         RECORD RETURNED WILL CONTAIN TWENTY EIGHT (28 DECIMAL) WORDS
         STARTING FROM THE LOCATION SPECIFIED BY THE HOST PROGRAM.  IF A
         COUNT IS TRANSFERED, THE DATA IS LOADED FOR THE DUMP BEFORE
         MEMORY IS MODIFIED.  ON RECORDS FROM THE LOADER THE COUNT FIELD
         WILL NORMALLY BE ZERO, BUT IF A DUMP WAS SPECIFIED THE COUNT
         WILL BE 28 REGARDLESS OF THE COUNT SPECIFIED BY THE HOST.
     

                     DOWNSTREAM LOADING TROUBLESHOOTING
                             (CES:33)DSLTRB.DOC
     
     THE EXPERIENCE TO DATE WITH DOWNSTREAM LOADING SUGGESTS THAT SOME
     FACTORS SHOULD BE EXPLAINED IN A LITTLE MORE DETAIL.  ALSO WE HAVE
     GAINED SOME EXPERIENCE WITH USING IT AND HAVE DISCOVERED PROBLEMS.
     I FEEL THAT ALL THINGS CONSIDERED IT HAS GONE WELL.  NOW TO THE
     DETAILS.
     
     FIRST I WISH TO GO OVER SOME OF THE EXTERNAL FACTORS INVOLVED IN DOING
     A DOWNSTREAM LOAD.  I WILL START WITH THE HOST PROGRAM BUILDING A 
     CIRCUIT.  
     
       A REQUEST IS MADE THROUGH THE PDP-10 MONITOR FOR AN AUXILIARY
       CIRCUIT.  THE MONITOR MAY NOT HONOR THIS REQUEST IF THE PROGRAM DOES
       NOT HAVE THE PROPER LICENSE TO MAKE SUCH A REQUEST.  THE REASON
       IS THAT NOT EVERYONE SHOULD BE ALLOWED TO USE SUCH CIRCUITS.  THE
       NLOAD PROGRAM HAS THIS LICENCE AS IT IS INSTALLED IN THE NETCON
       DIRECTORY ON SYSTEMS 33 AND 36. SOMETIME THESE PROGRAMS MAY BE RELOADED
       BECAUSE OF SYSTEM PROBLEMS AND THEY WILL NOT HAVE THE LICENSE.
       THIS IS NOT A VERY LIKELY THING TO HAPPEN.  IF IT DOES, CONTACT
       EITHER DAVE SMITH OR DAN LASATER.
     
       IF THE MONITOR ACCEPTS THE REQUEST,  THE BASE IS ASKED FOR AN AUX
       CIRCUIT ON AN AVAILABLE PORT.  THIS IS ESSENTIALY PASSED ON TO
       THE SUPERVISOR IN A FASHION SIMILAR TO A LOG IN.  AT THIS
       POINT SEVERAL THINGS CAN HAPPEN.  THE BASE MAY NOT HAVE ANY PORTS
       AVAILABLE.  THE BASE MAY NOT BE TALKING TO THE SUPERVISOR.  THE
       SUPERVISOR MAY BE TOO BUSY TO BUILD AN AUX CIRCUIT.  THE LINES ON
       THE BASE MAY ALL BE SHUT.  THE SUPERVISOR MAY NOT BE ABLE TO BUILD
       A CIRCUIT TO THE NEIGHBOR NODE BECAUSE ALL OF ITS LINES ARE SHUT
       OR IT IS NETWORK ISOLATED BY OTHER MACHINES WHOSE LINES ARE SHUT
       OR OUT.  SIMILAR SORTS OF THINGS MAY HAPPEN IF THE NEIGHBOR NODE
       DOES NOT HAVE PASSTHRUS OR IS ISOLATED BY OTHER MACHINES THAT DON'T
       HAVE PASSTHRUS.  WATCH OUT FOR COMBINATIONS OF THESE THINGS.  ALL
       THAT YOU WILL SEE IF ANY OF THESE THINGS HAPPEN IS A MESSAGE
       TELLING YOU THAT IT IS UNABLE TO BUILD AN AUX CIRCUIT.  MOST OF 
       THESE PROBLEMS CAN BE PREVENTED BY CAREFUL OBSERVATION AND PLANNING.
     
       ONCE THE SUP HAS DETERMINED THAT IT CAN BUILD A CIRCUIT, IT PROCEEDS
       TO DO JUST THAT.  THERE IS A SMALL CHANCE THAT IT CANNOT FINISH
       DUE TO A SUDDEN FAILURE IN THE NETWORK.  ONE OTHER THING THAT 
       HAS BEEN OBSERVED IS THAT THE SUP IS SLOW TO TELL THE BASE THAT
       THE CIRCUIT IS COMPLETE. (THE PDP-10 MONITOR WAITS ONLY A CERTAIN
       AMOUNT OF TIME FOR THE CIRCUIT TO BE MADE BEFORE GIVING UP.) THIS
       ALSO RESULTS IN A MESSAGE TELLING YOU THAT THE PROGRAM IS UNABLE
       TO BUILD AN AUX CIRCUIT.  YOU'LL HAVE TO TRY AGAIN.
     
       IF NONE OF THE ABOVE PROBLEMS HAPPEN AND WE HAVEN'T FOUND A NEW ONE,
       YOU WILL BE INFORMED THAT YOU HAVE AN AUX CIRCUIT AND WHAT PORT IT
       IS ON. THIS PORT NUMBER IS A HOST PORT NUMBER.  IT IS RELATED
       TO THE PORT NUMBERS SHOWN ON A "CT" FROM PROBE ON THE BASE BUT
       IT IS NECESSARY TO DO SOME ARITHMETIC ON THE NUMBERS TO MATCH THEM
       UP.  IT IS GIVEN MAINLY AS AN AID IN DETERMINING HOST PROBLEMS.
     

       AT THIS POINT THE NEIGHBOR NODE HAS BEEN INFORMED BY THE SUPERVISOR
       THAT THERE IS A DOWNSTREAM LOAD CIRCUIT AND WHERE THAT CIRCUIT
       IS COMING FROM, BUT THE NEIGHBOR HAS NO IDEA WHERE THE DATA IS
       TO BE SENT.  HOWEVER, THE NODE DOES KNOW IF IT IS ALREADY DOING A LOAD
       ON SOME LINE.  IF IT IS, THE NODE WILL IMMEDIATELY SEND A ZAPPER
       DOWN THE CIRCUIT TO PREVENT MORE THAN ONE LOAD FROM BEING DONE
       FROM A PARTICULAR NODE.  IF THE HOST PROGRAM FINDS THAT THE CIRCUIT
       IS ZAPPED IT WILL TELL YOU AND EXIT.
     
       IF THE NEIGHBOR NODE IS NOT DOING ANOTHER LOAD ALREADY, IT SIMPLY
       WAITS FOR THE HOST TO TELL IT WHAT LINE IT IS TO TRANSMIT THE DATA
       ON. THE HOST WILL SEND ONE BYTE OF DATA CONTAINING THE LINE
       NUMBER THAT YOU HAVE REQUESTED TO TRANSMIT ON.  THE HOST THEN WAITS,
       WHEN THE NODE RECEIVES THE LINE NUMBER, IT DETERMINES IF THE LINE
       IS OUT.  (LINE OUTAGE IS DETERMINED BY THE SAME LOGIC AS THE LINOUT
       REPORTS IN THE CONSOLIDATOR LOG).  IF THE LINE IS NOT OUT, THE NODE
       WILL RETURN A ZAPPER TO THE HOST TERMINATING THE LOAD REQUEST.  IF
       THE LINE IS OUT THE NODE RETURNS THE LINE NUMBER TO THE HOST.
       (A ZAPPER IS ALSO SENT IF THE LINE NUMBER IS OUT OF RANGE) WHILE THE
       LINE NUMBER IS RETURNING TO THE HOST, THE NEIGHBOR NODE
       WILL GIVE UP CONTROL OF THE LINE TO THE HOST PROGRAM.  THIS IS WHY
       THE LINE WILL GO SILENT.
     
       THE HOST PROGRAM WILL INFORM YOU THAT THE NEIGHBOR HAS ACKNOWLEGED THE
       REQUEST AND SEND THE LOADER DOWN.  THE LOADER IS SENT AS A GROUP
       OF 33 WORD BLOCKS.  THE NEIGHBOR NODE SIMPLY ACCUMULATES THE DATA INTO
       33 WORD BLOCKS AND TRANSMITS IT.  IT IS ALSO LOOKING TO RECEIVE A 
       SPECIAL PATTERN ON THE LINE TO SIGNAL THE BEGINNING OF A BLOCK OF
       DATA FOR THE HOST.  THE ONLY OTHER INVOLVEMENT OF THE NEIGHBOR NODE
       IS THAT IT LOOKS FOR A CIRCUIT ZAPPER.  IF IT RECEIVES ONE IT RETAKES
       CONTROL OF THE LINE AND RETURNS IT TO ITS NORMAL STATE.
       (TRANSMITTING RESET PATTERNS).
      
       WHEN THE HOST HAS TRANSMITTED ALL OF THE BOOTSTRAP, IT WAITS FOR
       THE ACKNOWLEGEMENT FROM THE LOADER.  THIS IS A CRITICAL POINT AND
       HAS BEEN KNOWN TO CAUSE MANY PEOPLE GREAT STRESS.  SEVERAL THINGS
       CAN HAPPEN.  THE LINE MAY NOT BE WORKING. THE BOOTSTRAP MAY NOT
       BE LOADED OR MAY NOT BE LOOKING ON THE CORRECT LINE.  THE LINE MAY
       NOT BE WIRED CORRECTLY.  THE LINE MAY BE NOISY CAUSING THE NODE
       NOT TO RECEIVE THE DATA CORRECTLY (THE LOADER IS CHECKSUMMED).
       THE NODE MAY NOT BE RECEIVING INTERRUPTS FROM THE PROCESSOR. (IN
       EITHER DIRECTION OR BOTH).  THE NODE MAY GO INTO STEP BECAUSE OF
       PROCESSOR OR MEMORY PROBLEMS.  THE NODE MAY TAKE A POWER FAILURE
       DURING THE LOAD. (THE BOOTSTRAP WILL RESTART ON A POWER UP ASSUMING
       THE POWER FAILURE DIDN'T SCRAMBLE ITS BRAINS), THE WRONG LOADER MAY
       HAVE BEEN SENT. (IE THE CODE MAY HAVE BEEN ASSEMBLED FOR 16K BUT
       SOMEBODY FORGOT TO TELL THE 12K MACHINE IT WAS SUPPOSED TO GROW
       ANOTHER 4K OF MEMORY) IF THIS LAST HAPPENS, THE LOADER WILL 
       DISCOVER THE ERROR AND QUIETLY RETURN TO THE BOOTSTRAP.  THE HOST
       MAY BE SO SLOW SENDING OUT THE DATA THAT THE BOOTSTRAP THINKS THE
       HOST IS DEAD. (MOST OF THE TIME IT IS PROBABLY RIGHT). IF THIS HAPPENS
       THE BOOTSTRAP RESTARTS ITSELF.  ANY OF THESE WILL RESULT IN
       THE HOST PROGRAM TELLING "TIMEOUT NO RESPONSE TO LOADER".  WEAK
       HEARTS HAVE BEEN KNOW TO FAIL WHEN THIS HAPPENS.  A LITTLE THOUGHT AS
       TO WHAT MAY CAUSE SUCH A HAPPENING WOULD SUGGEST THAT YOU SHOULD
       NOT GIVE UP ON THE FIRST TRY.  THE NEW NDL PROGRAM WILL TRY

       AGAIN, AND CONTINUE TRYING EVERY 20 SECONDS UNTIL IT IS
       ACKNOWLEDGED OR ABORTED BY THE USER.  IF THE LOADER CANNOT BE
       RECEIVED BY THE TARGET MACHINE, YOU MAY WISH TO TRY
       AND TALK SOMEONE AT THE OTHER END THROUGH A FEW TESTS.  HOW MUCH
       YOU TRY DEPENDS ON YOUR ESTIMATION OF THE OTHER END'S INTELLEGENCE
       AND YOUR PATIENCE.  SOME THINGS TO TRY:
        
         ARE YOU SURE THE BOOT IS IN THERE AND "GOOD".  IF YOU USED A 
         "DLOAD" IT PROBABLY IS AND YOU CAN FORGET THIS AS A FIRST TRY.
         IF IT WAS LOADED FROM TAPE, IT MAY NOT HAVE LOADED.  CHECKING
         A FEW LOCATION IN THE AREA WHERE THE CASSETTE BOOT NORMALLY RESIDES
         WILL TELL YOU IF THE SYNC BOOT IS THERE. (IE IF 77720 CONTAINS A
         6030 THE SYNC BOOT DID NOT LOAD, HOWEVER IF IT CONTAINS A 134050
         THERE MAY BE A SYNC BOOT IN THE MACHINE. (IT MIGHT NOT HURT IF
         YOU FEEL SUSPICIOUS, TO CHECK THE WHOLE BOOT BUT YOU MIGHT
         TRY A FEW OTHER THINGS FIRST)).
     
         TAKE A LOOK AT THE LOCATIONS LABELED OUTPUT AND INPUT IN THE LISTING
         FOR THE BOOTSTRAP. (LOCATIONS 77753 AND 77762 IN A 32K MACHINE)
         IF LOADED BY CASSETTE, THESE CELLS ARE INITIALLY ZERO.  IF THE 
         BOOT HAS BEEN RUNNING THE CELLS WILL HOLD SOME POSITIVE VALUE
         (WHAT THE VALUE IS, IS NORMALLY NOT IMPORTANT AND WILL VARY)
         IF THE LOCATIONS REMAINED ZERO, YOU ARE NOT GETTING INTERRUPTS.
         AT THIS POINT YOU WILL NEED SOME HARDWARE ASSISTANCE TO FIX
         THE MACHINE. (IT MAY BE SOMETHING SIMPLE LIKE THE LINE IS NOT
         PLUGGED IN BUT NOT USUALLY... I HOPE).
     
         WELL, LETS SUPPOSE THE BOOT IS THERE AND YOU ARE GETTING INTERRUPTS.
         EXAMINE THE PORTION OF MEMORY WHERE THE LOADER IS SUPPOSED TO GO.
         SEE IF THE LOADER IS BEING RECEIVED.  IF THE LOADER IS BEING 
         RECEIVED, YOU MAY WISH TO TRY AN EXPERIMENT.  SET THE FIRST 6
         LOCATIONS OF THE LOADER TO ZERO (NOTE LOADER, NOT BOOT!  PLEASE
         DON'T DESTROY A GOOD BOOTSTRAP!!!). ONCE THIS IS DONE, RESTART
         THE BOOT AND TRY A LOAD.  WHEN THE HOST TIMES OUT AGAIN, EXAMINE
         THE FIRST LOCATIONS OF THE LOADER.  IF THEY ARE STILL ZERO, YOU
         ARE NOT RECEIVING ANY DATA.  YOU MAY HAVE SELECTED THE WRONG LINE.
         (CHECK AND MAKE SURE...DON'T GUESS AND BELIEVE HALF OF WHAT YOU
         SEE AND NONE OF WHAT YOU HEAR).  IF YOU'VE REACHED THIS POINT 
         YOU MAY HAVE FOUND A NEW PROBLEM.  AT LEAST YOU NEED HELP.
     
         MAKE SURE THAT THE BOOT IS SET TO RECEIVE ON THE CORRECT LINE.
     
         SUPPOSE THAT YOU ARE GETTING DATA IN THE FIRST FEW CELLS OF THE LOADER.
         IF IT IS NOT THE RIGHT DATA YOU ARE RECEIVING NOISE. IF IT
         SEEMS LIKE THE RIGHT DATA YOU MIGHT CHECK THE WHOLE LOADER.
         (THIS TAKES A LOT OF PATIENCE) YOU MIGHT TRY ANOTHER EXPERIMENT
         FIRST.  RESTART THE BOOTSTRAP.  SEND DOWN THE LOADER AGAIN.
         AFTER THE HOST TIMES OUT AGAIN, STOP THE MACHINE.  EXAMINE THE
         CONTENTS OF THE "P" REGISTER.  IF IT IS A VALUE SOMEWHERE
         IN THE AREA OF THE LOADER YOU HAVE RECEIVED THE LOADER CORRECTLY.
         IF IT IS NOT, YOU MAY HAVE TOO MUCH NOISE OR SOME OTHER PROBLEM
         IN THE RECEIVE SIDE.  GIVE SOME THOUGHT TO THE PROPER WIRING OF
         THE CIRCUIT.  CHECK OUT THE MODEMS AND THE TELCO LINES.
         IF YOU HAVE THE OPTION BY ALL MEANS TRY ANOTHER LINE.  IF
         YOU DID NOT LOAD THE BOOT BY CASSETTE TAPE THE OLD CODE MAY
         STILL BE IN THE MACHINE.  YOU COULD TRY A MANUAL RESTART
         IF YOU MUST, SEEK A TEMPORARY SOLUTION TO A STICKY SITUATION.  DON'T
         EXPECT THIS TO ALWAYS WORK.  IN ANY CASE, IT IS A LAST RESORT.
     

         SUPPOSE YOU HAVE EVIDENCE THAT THE LOADER IS GETTING THERE INTACT.
         THE TRANSMIT PORTION OF THE MACHINE MAY NOT BE WORKING. (ARE YOU
         GETTING TRANSMIT INTERRUPTS.  YOU DONT NEED THEM TO RECEIVE THE
         LOADER)  AGAIN YOU MAY HAVE TELCO PROBLEMS.  CHECK OUT THE CIRCUIT
         IF YOU CAN.  
     
         USE A LITTLE IMAGINATION: TRY AND THINK OF SOMETHING ELSE TO
         TRY.  (CRYING DOESN'T HELP).
     
       THESE SUGGESTIONS ARE SOME OF THE POSSIBILITIES.  THIS IS NOT
       EXHAUSTIVE.  NEITHER IS THIS THE ORDER IN WHICH IT IS ALWAYS REASONABLE
       TO TRY THESE THINGS.  ANY KIND OF TROUBLE SHOOTING SHOULD BE CONDUCTED
       WITH SOME THOUGHT AND INTUITION.  ALSO, DO NOT ASSUME THAT THE GIVEN
       CAUSE IS NECESSARILY THE ONLY CAUSE.  IF YOU DON'T KNOW WHAT IS WRONG
       IT MAY CAUSE SOMEONE ELSE TO GET TRAPPED IN THE SAME DEAD END 
       REASONING IF YOU SUGGEST A CAUSE FOR A PROBLEM.
     
       RETURNING TO THE NORMAL SEQUENCE OF EVENTS,  THE LOADER WILL BE
       CHECKSUMMED BY THE BOOTSTRAP.  IF IT IS CORRECT,  THE BOOTSTRAP WILL
       BRANCH TO THE LOADER.  THE LOADER IMMEDIATLY TRANSMITS AN ACKNOWLEGEMENT
       TO THE HOST.  
     
       THE HOST WILL TELL YOU THAT THE LOADER HAS BEEN RECEIVED AND BEGIN
       TRANSMITTING THE LOAD DATA TO THE NODE.  THE DATA IS SENT IN BLOCKS.
       EACH BLOCK IS CHECKSUMMED AND THIS SUM IS VERIFIED BY THE LOADER.
       (ACTUALLY THERE ARE TWO CHECKSUMS FOR THIS PART OF THE DATA
       BUT I WILL CALL IT ONE).  IF THE SUM IS GOOD, THE DATA IS MOVED
       INTO MEMORY AND AN ACKNOWLEGEMENT FOR THAT RECORD IS RETURNED TO
       THE HOST.  DUMP DATA MAY BE RETURNED WITH THE ACKNOWLEGEMENT
       IF IT WAS REQUESTED.  IF THE RECORD IS RECEIVED WITH A BAD SUM
       IT IS IGNORED. NO ACKNOWLEGEMENT IS RETURNED.
     
       THE HOST WILL MAKE ONE COMPLETE PASS THROUGH ALL OF THE DATA TO BE
       SENT.  IF DURING THIS TIME THE HOST FINDS THAT THERE ARE ONE
       HUNDRED RECORDS NOT ACKNOWLEGED, IT KNOWS THAT SOMETHING MAY HAVE
       GONE WRONG AND WARNS YOU.  IF THIS HAPPENS THE LOADER MAY HAVE
       TIMED OUT THINKING THAT THE HOST HAS DIED.  IF THIS HAPPENS
       THE LOADER WILL RESTART THE BOOT.  SINCE THE DATA AND THE 
       ACKNOWLEDGEMENTS ARE BOTH ON THE LINE AT THE SAME TIME, THE
       LINE MAY SHOW A CERTAIN SENSITIVITY TO SENDING DATA
       SIMULTANEOUSLY IN BOTH DIRECTIONS.  IN ALMOST EVERY CASE
       TRYING AGAIN WILL BE SUCCESSFUL.  ALLOW A LITTLE TIME TO MAKE
       SURE THAT THE BOOT HAS BEEN RESTARTED.
       
       ASSUMING THAT THE LOAD CONTINUES, THE HOST WILL GO BACK AND RETRANSMIT
       ANY RECORDS THAT IT RECEIVED NO ACKNOWLEGEMENTS FOR.  IT IS POSSIBLE
       THAT IT COULD HANG IN A LOOP RETRANSMITTING THE SAME RECORDS MANY 
       TIMES.  THIS IS CAUSED BY THE SAME KINDS OF THINGS THAT WOULD
       CAUSE 100 ACKNOWLEGEMENTS TO BE OUTSTANDING. (IN THE TEST TOMORROW
       ON THIS LESSON YOU WILL BE ASKED TO EXPLAIN WHY THIS IS TRUE).
     

       ONE MORE CRITICAL ACTION MUST HAPPEN.  THE HOST COMMANDS THE LOADER TO
       DO A MANUAL RESTART.  THE HOST DOES NOT WAIT FOR AN ACKNOWLEGEMENT TO
       THIS RECORD.  NOR DOES THE LOADER SEND ONE.  IF THIS RECORD DOES NOT
       MAKE IT CORRECTLY THE LOADER WILL TIME OUT AND RETURN TO THE BOOTSTRAP.
       IN ANY EVENT THE HOST SENDS A ZAPPER ON THE CIRCUIT WHICH WILL CAUSE
       THE NEIGHBOR NODE TO RECLAIM THE LINE AND LOOK FOR A RESET PATTERN.
     
       ONE OTHER NASTINESS COULD HAPPEN IN THIS PROCESS.  DURING THE
       LOAD A NODE IN THE DOWNSTREAM LOAD CIRCUIT COULD DIE.  (SO COULD
       ONE OF THE LINES WITH THE SAME EFFECT "PLEASE LOG IN").  THE
       HOST PROGRAM WILL TELL YOU AND EXIT.  THE NEIGHBOR NODE WILL ALSO
       RECEIVE A ZAPPER AND RETAKE THE LINE.  EVENTUALLY THE NODE
       BEING LOADED WILL TIME OUT AND RETURN TO THE BOOTSTRAP.  TRY AGAIN
       IN ABOUT 4 MINUTES.
     
       ONE FINAL PRECAUTION:  NEVER USE A LINE ON A NEIGHBOR NODE
       THAT DOES NOT HAVE CLOCKS ON THE LINE.  IF YOU DO, THE 
       NEIGHBOR NODE COULD BE JAMMED, AND WOULD THEN BELIEVE
       A DOWNSTREAM LOAD IS ALWAYS IN PROGRESS.  IF THIS OCCURS,
       THE NEIGHBOR NODE CANNOT BE USED FOR ANY OTHER LOADS UNTIL
       IT IS EITHER RESTARTED OR RELOADED.
     
   
                           16K  V72


         THIS IS THE LOADER THAT IS USED FOR LOADING A 16K MACHINE. THE
         SYNCHRONOUS BOOTSTRAP FOR 16K IS AT THE END OF THIS LISTING.
   
         THE TWO ARE LISTED TOGETHER TO GIVE YOU A BETTER UNDERSTANDING
         OF WHAT THE MACHINE IS DOING.
   
         THIS DOCUMENT IS IN THE FILE (CES:33)NEW72.16K .  THE COMPLETE
         ASSEMBLY LISTING IS UNDER (CES:33)16KV72.LST .
   
                 *
                 * INITIALIZATION FOR LOADER
                 *
   37240 014056 START   LDA     ENTRY   LOCATE THE ENTRY
   37241 006140         SUBI    NWDSB           LOCATE START OF BOOT
   37242 000111 
   37243 005014         TAX
   37244 054102         STA     BOOTRT+1        SAVE RETURN TO BOOT
                 *
   37245 015000         LDA     EXEA,X          FETCH I/O INS FROM BOOT
   37246 154340         ANA     OCT77           REMOVE ADDRESS
   37247 054047         STA     ENTRY           SAVE FOR NOW
                 *
   37250 124017         ADD     ST01            TURN OFF 'RUPTS
   37251 054016         STA     ST01
                 *
   37252 014037         LDA     ST02            ENABLE 'RUPTS
   37253 124043         ADD     ENTRY
   37254 054035         STA     ST02
   37255 054250         STA     ST03
   37256 054212         STA     ST07
                 *
   37257 014227         LDA     ST04            INPUT INST
   37260 124036         ADD     ENTRY
   37261 005311         DAR
   37262 054224         STA     ST04
                 *
   37263 014257         LDA     ST05            OUTPUT ZERO DET
   37264 124032         ADD     ENTRY
   37265 054255         STA     ST05
                 *
   37266 005311         DAR                     OUTPUT DATA
   37267 054155         STA     ST06
                 *
   37270 100000 ST01    EXC     IDA+00         TURN OFF 'RUPTS
   37271 015015         LDA     VECT,X          LOCATE IVECTS
   37272 154314         ANA     OCT77           REMOVE UNWANTED BITS
   37273 005012         TAB                     POINT B AT IT
                 *
   37274 006010         LDAI    INPUT1          SET INPUT VEC
   37275 037505 
   37276 056003         STA     3,B
                 *
   37277 006010         LDAI    OUTPUT1         SET OUTPUT
   37300 037444 
   37301 056001         STA     1,B
                 *
   
   37302 015130         LDA     ZDET2,X          FETCH ZERO DETECT
   37303 054317         STA     ZDET1
                 *
   37304 024303         LDB     LSTADR
   37305 014314         LDA     SYNCIT          BUILD ACKNOWLEGEMENT RECORD
   37306 056000         STA     0,B
   37307 005001         TZA                     CLEAR OUT COUNT
   37310 056001         STA     1,B
   37311 076002         STX     2,B
   37312 100200 ST02    EXC     IDA+200         ENABLE 'RUPTS
   37313 001000         JMP     ACK             LOOK OUT HERE WE GO!!!!
   37314 037333 
   37315 103277 FPANL   OBR     77              DRIVES FRONT PANEL
   37316 001000         JMP     *-*             RETURN TO BOOT
   37317 000000 
                ENTRY   E       *-1             LABEL DEFINITION
   37320 005041         TXA                     SEE IF LOADED WRONG
   37321 006140         SUBI    ENDLD           BETTER BE ZERO
   37322 037640 
   37323 001010         JAZ     START
   37324 037240 
   37325 005041         TXA                     LOADED IN WRONG PLACE
   37326 006140         SUBI    ENDLD-ENTRY+1   GET BACK TO THE BOOT
   37327 000322 
   37330 054001         STA     *+2
   37331 001000         JMP     *-*
   37332 000000 
   37333 024254 ACK     LDB     LSTADR          FETCH LAST BUFFER
   37334 064254         STB     SNDBLK          START THE TRANSMITTER
   37335 002000         JMPM    CKSUM           COMPUTE THE CHECKSUM
   37336 037555 
                 *
   37337 014264         LDA     VIRT            GET VIRTICAL SUM
   37340 056000         STA     0,B             PUT INTO BUFFER
   37341 014263         LDA     DIAG            AND THE DIAGONAL SUM
   37342 056001         STA     1,B
                 *
   37343 014016 NAK     LDA     LIMIT           RESET RECORD TIMER
   37344 054261         STA     ICNT
                 *
                 * WAIT OUT TIMEOUT WHILE LOOKING FOR A RECORD
                 *
   37345 014260 NA01    LDA     ICNT            IF TIME IS UP
   37346 001010 BOOTRT  JAZ     0               RETURN TO BOOT
   37347 000000 
   37350 024241         LDB     RECVD           IF NOT UP SEE IF A RECORD
   37351 001020         JBZ     NA01            IS IN
   37352 037345 
   37353 064234         STB     LSTADR          SAVE LAST RECEIVED REC ADDRESS
                 *
   37354 005001         TZA                     SET RECORD RECEIVED FLAG OFF
   37355 054234         STA     RECVD
                 *
   
   37356 002000 RECRCV  JMPM    CKSUM           ITS HERE, IS IT GOOD?
   37357 037555 
   37360 014243         LDA     VIRT            CHECK VIRTICAL SUM
   37361 136000         ERA     0,B
   37362 114242 LIMIT   ORA     DIAG            CHECK DIAGONAL SUM
   37363 136001         ERA     1,B
   37364 001010         JAZ     GOOD            ITS GOOD!!!
   37365 037370 
   37366 001000         JMP     NAK             ITS BAD!!!
   37367 037343 
                 *
   37370 014217 GOOD    LDA     LSTADR          FETCH BEGGINING OF RECORD
   37371 005014         TAX                     SET  TO BUFFER ADR
   37372 124213         ADD     DATSIZ          LOCATE END OF BUFFER
   37373 054233         STA     FILSTOP
                 *
   37374 015001         LDA     1,X             GET THE COUNT
   37375 001010         JAZ     0               COUNT ZERO GO START LOADED CODE
   37376 000000 
                 *
   37377 024065         LDB     COM             BUILD INSTRUCTION COM  ,A
   37400 064035         STB     OPT             FILL WITH ZEROES
   37401 005002         TZB                     SET COUNT ZERO
   37402 065001         STB     1,X
   37403 001002         JAP     SETOK           BR IF POSITIVE COUNT
   37404 037411 
                 *
   37405 024156         LDB     LOAD            BUILD LOAD INSTRUCTION
   37406 064027         STB     OPT
   37407 024175         LDB     MAXCHA          SET COUNT FOR ALL CHARACTERS
   37410 065001         STB     1,X             SET AS COUNT FOR RETURN
                 *
   37411 025002 SETOK   LDB     2,X             GET MEMORY ADDRESS
   37412 154174         ANA     OCT77           STRIP UNUSED BITS
   37413 001010         JAZ     FILLIT          BR IF DUMP ONLY
   37414 037432 
                 *
   37415 124172         ADD     LSTADR          LOCATE STOPPING POINT
   37416 054213         STA     MSTOP
                 *
   37417 015003 MOVIT   LDA     3,X             GET ONE FROM THE INPUT BUFFER
   37420 056000         STA     0,B             PUT IT INTO CORE
                 *
   37421 005201         COM     ,A              RETURN -1
   37422 055003         STA     3,X
                 *
   37423 005122         IBR                     BUMP THE POINTERS
   37424 003026         XBNZ    FPANL           DRIVE THE FRONT PANEL IF V70
   37425 037315 
   37426 005145         INC     X,AX
   37427 144202         SUB     MSTOP           CHECK FOR THE END
   
   37430 001004         JAN     MOVIT           KEEP GOING
   37431 037417 
                 *
                 * THE FOLLOWING FILLS IN WITH -1 OR TRANSFERS MEMORY FOR OUTPUT
                 *
   37432 005041 FILLIT  TXA                     CHECK FOR END OF FILL
   37433 144173 FILL1   SUB     FILSTOP
   37434 001002         JAP     ACK             GO ACKNOWLEGE IF DONE
   37435 037333 
                 *
   37436 000000 OPT     *-*                     FILLED IN LATTER
   37437 055003         STA     3,X             TUCK IT AWAY
   37440 005122         IBR                     POINT TO NEXT MEMORY WORD
   37441 005145         INC     X,AX
   37442 001000         JMP     FILL1           GO TRY AGAIN
   37443 037433 
                 *
                 * OUTPUT INTERRUPT PROCESSING
                 *
   37444 000000 OUTPUT1 0
   37445 103000 ST06    OME     IDA,OTDATA              SEND OUT THE DATA
   37446 037633 
   37447 044156         INR     ICNT            BUMP THE TIMER
   37450 054163         STA     OTASAV
                 *
   37451 064163         STB     OTBSAV
   37452 014141         LDA     OTSTAT          CHECK OUTPUT STATE
   37453 001004         JAN     OZSTAT          BR STATE ZERO
   37454 037474 
                 *
                 * STATE 1 XFER STATE
                 *
   37455 024136         LDB     OTPOS           GET NEXT CHAR
   37456 016000         LDA     0,B
   37457 054153         STA     OTDATA
   37460 005121         INC     B,A             GET NEW POSITION
   37461 054132         STA     OTPOS
                 *
   37462 144153         SUB     OTEND
   37463 001004         JAN     OTEXIT          EXIT IF NOT DONE
   37464 037467 
   37465 005201 COM     COM     ,A
                 *
   37466 054125         STA     OTSTAT          RETURN TO STATE ZERO
                 *
   37467 014144 OTEXIT  LDA     OTASAV          RESTORE + RETURN
   37470 024144         LDB     OTBSAV
   37471 100200 ST07    EXC     200+IDA         ENABLE INTERRUPTS
   37472 001000         JMP     OUTPUT1,I
   37473 137444 
                 *
   37474 014114 OZSTAT  LDA     SNDBLK          LOOK FOR SNDBLK
   37475 054116         STA     OTSTAT          SET OUTPUT STATE
   37476 124114         ADD     WDSREC          LOCATE END OF BUFFER
   37477 054136         STA     OTEND
   37500 005201         COM     ,A
   37501 054107         STA     SNDBLK          CLEAR SEND FLAG
   37502 054130         STA     OTDATA          AT LEAST 1 PAD SEND
   
   37503 001000         JMP     OTEXIT
   37504 037467 
                 *
                 * INPUT INTERRUPT PROCESSING
                 *
   37505 000000 INPUT1  0
   37506 054125         STA     INASAV          SAVE A
   37507 102500 ST04    CIA     0               BRING IN THE DATA
   37510 074124         STX     INXSAV
   37511 034103         LDX     INPOS
   37512 055000         STA     0,X             PUT AWAY THE DATA
                 *
   37513 014102         LDA     INSTAT          WHAT STATE ARE WE IN?
   37514 001002         JAP     INZSTA          BR SYNC LOOK MODE
   37515 037547 
                 *
   37516 005141 IN01    INC     X,A             CHECK FOR END
   37517 054075         STA     INPOS
   37520 144100         SUB     INEND
   37521 054074         STA     INSTAT          SET NEW STATE IF NEED BE
   37522 001002         JAP     RECIN           BR IF ALL HERE
   37523 037531 
                 *
   37524 014107 INRET   LDA     INASAV          RESTORE AND RETURN
   37525 034107         LDX     INXSAV
   37526 100200 ST03    EXC     200+IDA         RESTORE INTERRUPTS
   37527 001000         JMP     INPUT1,I
   37530 137505 
                 *
   37531 014065 RECIN   LDA     LSTREC          INDICATE RECORD IS IN
   37532 054057         STA     RECVD
                 *
   37533 014064         LDA     NXTREC          REVERSE BUFFERS
   37534 054060         STA     INPOS
   37535 124055         ADD     WDSREC
   37536 054062         STA     INEND
   37537 014057         LDA     LSTREC
   37540 054057         STA     NXTREC
   37541 014053         LDA     INPOS
   37542 054054         STA     LSTREC
                 *
   37543 103000 ST05    OME     IDA,ZDET1       SET ZERO DET
   37544 037623 
   37545 001000         JMP     INRET
   37546 037524 
                 *
   37547 015000 INZSTA  LDA     0,X             GET BACK THE DATA
   37550 134051         ERA     SYNCIT
   37551 001010         JAZ     IN01
   37552 037516 
   
   37553 001000         JMP     ST05
   37554 037543 
                 *
                 * CHECKSUM COMPUTATION SUBROUTINE
                 *
   37555 000000 CKSUM   0
   37556 005123         INC     B,AB            GET AROUND SYNC WORD
   37557 124026         ADD     DATSIZ   
   37560 054046         STA     FILSTOP         SAVE END OF RECORD
                 *
   37561 005001         TZA                     RESET SUMS
   37562 054041         STA     VIRT
   37563 054041         STA     DIAG
                 *
                LOAD    E       *               LABEL DEFINITION
   37564 016000 CKLOOP  LDA     0,B             COMPUTE EACH SUM
   37565 134036         ERA     VIRT
   37566 054035         STA     VIRT
   37567 014035         LDA     DIAG
   37570 004241         LRLA    1
   37571 136000         ERA     0,B
   37572 054032         STA     DIAG
   37573 005123         INC     B,AB
   37574 144032         SUB     FILSTOP         CHECK IF DONE
   37575 001004         JAN     CKLOOP
   37576 037564 
                 *
   37577 014025         LDA     DIAG            INCLUDE DIAGONAL IN VIRTICAL
   37600 004241         LRLA    1
   37601 134022         ERA     VIRT
   37602 054022         STA     DIAG
   37603 001000         JMP     CKSUM,I
   37604 137555 
                 *
                 * CONSTANTS AND INITIALIZED VARIABLEBS
                 *
   37605 000034 MAXCHA  +NWORDS-5
   37606 000036 DATSIZ  +NWORDS-3
   37607 000077 OCT77   +77
   37610 037212 LSTADR  +BUF1
   37611 177777 SNDBLK  -1
   37612 000000 RECVD   0
   37613 000041 WDSREC  +NWORDS
   37614 177777 OTSTAT  -1
   37615 037254 INPOS   +BUF2
   37616 000000 INSTAT  +0
   37617 037254 LSTREC  +BUF2
   37620 037212 NXTREC  +BUF1
   37621 037315 INEND   +BUF2+NWORDS
   37622 031062 SYNCIT  +SYN
                OTPOS   E       OTSTAT          LABEL DEFINITION
   
                 *
                 * VARIABLE DATA SPACE
                 *
   37623        ZDET1   R       *+1
   37624        VIRT    R       *+1
   37625        DIAG    R       *+1
   37626        ICNT    R       *+1
   37627        FILSTOP R       *+1
   37630        SAV     R       *+1
   37631        SAVE    R       *+1
   37632        MSTOP   R       *+1
   37633        OTDATA  R       *+1
   37634        OTASAV  R       *+1
   37635        OTBSAV  R       *+1
   37636        OTEND   R       *+1
                INASAV  E       OTASAV          LABEL DEFINITION
                INXSAV  E       OTBSAV          LABEL DEFINITION
                 *
                 * SPECIAL EQUATES
                 *
         000021 ZEROD   E       21
         000000 IDA     E       0
         000041 NWORDS  E       33D
         000010 POWFAL  E       10
         000012 POWST   E       12
         000027 IDAB    E       27
         000010 NBLOCKS E       (SYNCIT-START+1+NWORDS-2)/(NWORDS-1)
         031062 SYN     E       031062
         000041 WDPBLK  E       NWORDS
         011300 LINSP   E       4800D
         037254 BUF2    E       FPANL-NWORDS
         037212 BUF1    E       BUF2-NWORDS-1
   37637                R       LOADER+10*40
   37640                R       77640           
   
                *
                *SYNCHRONOUS BOOTSTRAP
                *
   37640 100027 SETUP   EXC     000+IDAB        TURN OFF 201 INTERRUPTS
                *
   37641 014126         LDA     ZDET            DISABLE ALL LINES
   37642 005311 DISABLE DAR
   37643 103127         OAR     IDAB
   37644 103125         OAR     25              TURN OFF SECOND CARD
   37645 005311         DAR
   37646 001002         JAP     DISABLE
   37647 037642 
                *
   37650 124117         ADD     ZDET            ENABLE LOAD LINE
   37651 103127         OAR     IDAB
                *
   37652 050010         STA     POWFAL          PUT HALT IN POWERFAIL 'RUPT
   37653 006010         LDAI    2000            LOAD INPUT 'RUPT
   37654 002000 
   37655 050040 STVEC   STA     LINE0
   37656 050042         STA     LINE0+2
   37657 054114         STA     CKSUMB
   37660 050012         STA     POWST           SETUP RESTART
   37661 006010         LDAI    INPUT
   37662 037762 
   37663 050043         STA     LINE0+3
   37664 006010         LDAI    OUTPUT
   37665 037753 
   37666 050041         STA     LINE0+1
   37667 006010         LDAI    SETUP-1         SET RESTART BRANCH
   37670 037637 
   37671 050013         STA     POWST+1
   37672 100227         EXC     200+IDAB        TURN ON 'RUPTS
                *
   37673 006030 BEGIN   LDXI    START
   37674 037240 
   37675 006020         LDBI    -(NBLOCKS+1)    NUMBER OF BLOCKS
   37676 177767 
                *
   37677 014073         LDA     DELAYP          SET UP DELAY LIMIT
   37700 054076         STA     DELAY
   37701 005122 SBLOCK  IBR                     RECEIVED ALL BLOCKS?
   37702 001020         JBZ     DONE            CHECK CKSUM IF YES
   37703 037746 
   37704 006010         LDAI    -(WDPBLK-1)     BLOCK WORD COUNT MINUS
   37705 177740                                 CHECKSUM
   37706 054066         STA     BLCKCNT
                *
   37707 103027 SYNC    OME     IDAB,ZDET       SET ZERO DETECT
   37710 037770 
   37711 064064         STB     WRDIN           RESET INPUT WORD
   37712 014064 SYNC1   LDA     DELAY           HAVE WAITED LONG ENOUGH?
   37713 001002         JAP     SETUP           RESTART IF YES
   37714 037640 
   37715 014060         LDA     WRDIN           WAIT FOR A CHAR
   37716 001004         JAN     SYNC1
   37717 037712 
                *
   
   37720 134050         ERA     SYNCH           SYNC?
   37721 001010         JAZ     SYNCED          YES START REC
   37722 037725 
   37723 001000         JMP     SYNC            GO SYNC AGAIN
   37724 037707 
                *
   37725 014045 SYNCED  LDA     DELAYP          RESET DELAY
   37726 054050         STA     DELAY
   37727 064032 SYNCD1  STB     INPUT           WAIT FOR 'RUPT
   37730 014031 SYNCD2  LDA     INPUT
   37731 001004         JAN     SYNCD2
   37732 037730 
                *
   37733 014042         LDA     WRDIN           PUT IN WORD
   37734 055000         STA     0,X
   37735 134036         ERA     CKSUMB
   37736 054035         STA     CKSUMB
   37737 005144         IXR
   37740 044034         INR     BLCKCNT         ALL OF BLOCK IN?
   37741 014033         LDA     BLCKCNT
   37742 001010         JAZ     SBLOCK          YES GET NEXT ONE
   37743 037701 
   37744 001000         JMP     SYNCD1          NO GET MORE
   37745 037727 
                *
   37746 014025 DONE    LDA     CKSUMB
   37747 002010         JAZM    ENTRY           GO TO LOADER
   37750 037317 
   37751 001000         JMP     SETUP
   37752 037640 
   37753 000000 OUTPUT  0
   37754 103026         OME     IDAB-1,WRDOUT   PUT OUT WORD
   37755 037772 
   37756 044020         INR     DELAY           BUMP DELAY COUNTER
   37757 100227         EXC     200+IDAB        TURN ON 'RUPTS
   37760 001000         JMP     OUTPUT,I
   37761 137753 
                *
   37762 000000 INPUT   0
   37763 102026         IME     IDAB-1,WRDIN    GET THE WORD
   37764 037776 
   37765 100227         EXC     200+IDAB        TURN ON 'RUPTS
   37766 001000         JMP     INPUT,I
   37767 137762 
                *
   37770 000021 ZDET    +ZEROD
   37771 031062 SYNCH   +SYN
   37772 177777 WRDOUT  -1
   37773 172110 DELAYP  -(+LINSP/16D)*10D
   37774 002000 CKSUMB  2000
   37775 000000 BLCKCNT 0
   37776 000000 WRDIN   0
   37777 000000 DELAY   0
                *
         000111 NWDSB   E       DONE+3-SETUP
         000000 EXEA    E       SETUP-SETUP
         000015 VECT    E       STVEC-SETUP
         000040 LINE0   E       40
         000130 ZDET2   E       ZDET-SETUP
     
   
                           24K  V72


         THIS IS THE LOADER THAT IS USED FOR LOADING A 24K MACHINE. THE
         SYNCHRONOUS BOOTSTRAP FOR 24K IS AT THE END OF THIS LISTING.
   
         THE TWO ARE LISTED TOGETHER TO GIVE YOU A BETTER UNDERSTANDING
         OF WHAT THE MACHINE IS DOING.
   
         THIS DOCUMENT IS IN THE FILE (CES:33)NEW72.24K .  THE COMPLETE
         ASSEMBLY LISTING IS UNDER (CES:33)24KV72.LST .
   
                 *
                 * INITIALIZATION FOR LOADER
                 *
   57240 014056 START   LDA     ENTRY   LOCATE THE ENTRY
   57241 006140         SUBI    NWDSB           LOCATE START OF BOOT
   57242 000111 
   57243 005014         TAX
   57244 054102         STA     BOOTRT+1        SAVE RETURN TO BOOT
                 *
   57245 015000         LDA     EXEA,X          FETCH I/O INS FROM BOOT
   57246 154340         ANA     OCT77           REMOVE ADDRESS
   57247 054047         STA     ENTRY           SAVE FOR NOW
                 *
   57250 124017         ADD     ST01            TURN OFF 'RUPTS
   57251 054016         STA     ST01
                 *
   57252 014037         LDA     ST02            ENABLE 'RUPTS
   57253 124043         ADD     ENTRY
   57254 054035         STA     ST02
   57255 054250         STA     ST03
   57256 054212         STA     ST07
                 *
   57257 014227         LDA     ST04            INPUT INST
   57260 124036         ADD     ENTRY
   57261 005311         DAR
   57262 054224         STA     ST04
                 *
   57263 014257         LDA     ST05            OUTPUT ZERO DET
   57264 124032         ADD     ENTRY
   57265 054255         STA     ST05
                 *
   57266 005311         DAR                     OUTPUT DATA
   57267 054155         STA     ST06
                 *
   57270 100000 ST01    EXC     IDA+00         TURN OFF 'RUPTS
   57271 015015         LDA     VECT,X          LOCATE IVECTS
   57272 154314         ANA     OCT77           REMOVE UNWANTED BITS
   57273 005012         TAB                     POINT B AT IT
                 *
   57274 006010         LDAI    INPUT1          SET INPUT VEC
   57275 057505 
   57276 056003         STA     3,B
                 *
   57277 006010         LDAI    OUTPUT1         SET OUTPUT
   57300 057444 
   57301 056001         STA     1,B
                 *
   
   57302 015130         LDA     ZDET2,X          FETCH ZERO DETECT
   57303 054317         STA     ZDET1
                 *
   57304 024303         LDB     LSTADR
   57305 014314         LDA     SYNCIT          BUILD ACKNOWLEGEMENT RECORD
   57306 056000         STA     0,B
   57307 005001         TZA                     CLEAR OUT COUNT
   57310 056001         STA     1,B
   57311 076002         STX     2,B
   57312 100200 ST02    EXC     IDA+200         ENABLE 'RUPTS
   57313 001000         JMP     ACK             LOOK OUT HERE WE GO!!!!
   57314 057333 
   57315 103277 FPANL   OBR     77              DRIVES FRONT PANEL
   57316 001000         JMP     *-*             RETURN TO BOOT
   57317 000000 
                ENTRY   E       *-1             LABEL DEFINITION
   57320 005041         TXA                     SEE IF LOADED WRONG
   57321 006140         SUBI    ENDLD           BETTER BE ZERO
   57322 057640 
   57323 001010         JAZ     START
   57324 057240 
   57325 005041         TXA                     LOADED IN WRONG PLACE
   57326 006140         SUBI    ENDLD-ENTRY+1   GET BACK TO THE BOOT
   57327 000322 
   57330 054001         STA     *+2
   57331 001000         JMP     *-*
   57332 000000 
   57333 024254 ACK     LDB     LSTADR          FETCH LAST BUFFER
   57334 064254         STB     SNDBLK          START THE TRANSMITTER
   57335 002000         JMPM    CKSUM           COMPUTE THE CHECKSUM
   57336 057555 
                 *
   57337 014264         LDA     VIRT            GET VIRTICAL SUM
   57340 056000         STA     0,B             PUT INTO BUFFER
   57341 014263         LDA     DIAG            AND THE DIAGONAL SUM
   57342 056001         STA     1,B
                 *
   57343 014016 NAK     LDA     LIMIT           RESET RECORD TIMER
   57344 054261         STA     ICNT
                 *
                 * WAIT OUT TIMEOUT WHILE LOOKING FOR A RECORD
                 *
   57345 014260 NA01    LDA     ICNT            IF TIME IS UP
   57346 001010 BOOTRT  JAZ     0               RETURN TO BOOT
   57347 000000 
   57350 024241         LDB     RECVD           IF NOT UP SEE IF A RECORD
   57351 001020         JBZ     NA01            IS IN
   57352 057345 
   57353 064234         STB     LSTADR          SAVE LAST RECEIVED REC ADDRESS
                 *
   57354 005001         TZA                     SET RECORD RECEIVED FLAG OFF
   57355 054234         STA     RECVD
                 *
   
   57356 002000 RECRCV  JMPM    CKSUM           ITS HERE, IS IT GOOD?
   57357 057555 
   57360 014243         LDA     VIRT            CHECK VIRTICAL SUM
   57361 136000         ERA     0,B
   57362 114242 LIMIT   ORA     DIAG            CHECK DIAGONAL SUM
   57363 136001         ERA     1,B
   57364 001010         JAZ     GOOD            ITS GOOD!!!
   57365 057370 
   57366 001000         JMP     NAK             ITS BAD!!!
   57367 057343 
                 *
   57370 014217 GOOD    LDA     LSTADR          FETCH BEGGINING OF RECORD
   57371 005014         TAX                     SET  TO BUFFER ADR
   57372 124213         ADD     DATSIZ          LOCATE END OF BUFFER
   57373 054233         STA     FILSTOP
                 *
   57374 015001         LDA     1,X             GET THE COUNT
   57375 001010         JAZ     0               COUNT ZERO GO START LOADED CODE
   57376 000000 
                 *
   57377 024065         LDB     COM             BUILD INSTRUCTION COM  ,A
   57400 064035         STB     OPT             FILL WITH ZEROES
   57401 005002         TZB                     SET COUNT ZERO
   57402 065001         STB     1,X
   57403 001002         JAP     SETOK           BR IF POSITIVE COUNT
   57404 057411 
                 *
   57405 024156         LDB     LOAD            BUILD LOAD INSTRUCTION
   57406 064027         STB     OPT
   57407 024175         LDB     MAXCHA          SET COUNT FOR ALL CHARACTERS
   57410 065001         STB     1,X             SET AS COUNT FOR RETURN
                 *
   57411 025002 SETOK   LDB     2,X             GET MEMORY ADDRESS
   57412 154174         ANA     OCT77           STRIP UNUSED BITS
   57413 001010         JAZ     FILLIT          BR IF DUMP ONLY
   57414 057432 
                 *
   57415 124172         ADD     LSTADR          LOCATE STOPPING POINT
   57416 054213         STA     MSTOP
                 *
   57417 015003 MOVIT   LDA     3,X             GET ONE FROM THE INPUT BUFFER
   57420 056000         STA     0,B             PUT IT INTO CORE
                 *
   57421 005201         COM     ,A              RETURN -1
   57422 055003         STA     3,X
                 *
   57423 005122         IBR                     BUMP THE POINTERS
   57424 003026         XBNZ    FPANL           DRIVE THE FRONT PANEL IF V70
   57425 057315 
   57426 005145         INC     X,AX
   57427 144202         SUB     MSTOP           CHECK FOR THE END
   
   57430 001004         JAN     MOVIT           KEEP GOING
   57431 057417 
                 *
                 * THE FOLLOWING FILLS IN WITH -1 OR TRANSFERS MEMORY FOR OUTPUT
                 *
   57432 005041 FILLIT  TXA                     CHECK FOR END OF FILL
   57433 144173 FILL1   SUB     FILSTOP
   57434 001002         JAP     ACK             GO ACKNOWLEGE IF DONE
   57435 057333 
                 *
   57436 000000 OPT     *-*                     FILLED IN LATTER
   57437 055003         STA     3,X             TUCK IT AWAY
   57440 005122         IBR                     POINT TO NEXT MEMORY WORD
   57441 005145         INC     X,AX
   57442 001000         JMP     FILL1           GO TRY AGAIN
   57443 057433 
                 *
                 * OUTPUT INTERRUPT PROCESSING
                 *
   57444 000000 OUTPUT1 0
   57445 103000 ST06    OME     IDA,OTDATA              SEND OUT THE DATA
   57446 057633 
   57447 044156         INR     ICNT            BUMP THE TIMER
   57450 054163         STA     OTASAV
                 *
   57451 064163         STB     OTBSAV
   57452 014141         LDA     OTSTAT          CHECK OUTPUT STATE
   57453 001004         JAN     OZSTAT          BR STATE ZERO
   57454 057474 
                 *
                 * STATE 1 XFER STATE
                 *
   57455 024136         LDB     OTPOS           GET NEXT CHAR
   57456 016000         LDA     0,B
   57457 054153         STA     OTDATA
   57460 005121         INC     B,A             GET NEW POSITION
   57461 054132         STA     OTPOS
                 *
   57462 144153         SUB     OTEND
   57463 001004         JAN     OTEXIT          EXIT IF NOT DONE
   57464 057467 
   57465 005201 COM     COM     ,A
                 *
   57466 054125         STA     OTSTAT          RETURN TO STATE ZERO
                 *
   57467 014144 OTEXIT  LDA     OTASAV          RESTORE + RETURN
   57470 024144         LDB     OTBSAV
   57471 100200 ST07    EXC     200+IDA         ENABLE INTERRUPTS
   57472 001000         JMP     OUTPUT1,I
   57473 137444 
                 *
   57474 014114 OZSTAT  LDA     SNDBLK          LOOK FOR SNDBLK
   57475 054116         STA     OTSTAT          SET OUTPUT STATE
   57476 124114         ADD     WDSREC          LOCATE END OF BUFFER
   57477 054136         STA     OTEND
   57500 005201         COM     ,A
   57501 054107         STA     SNDBLK          CLEAR SEND FLAG
   57502 054130         STA     OTDATA          AT LEAST 1 PAD SEND
   
   57503 001000         JMP     OTEXIT
   57504 057467 
                 *
                 * INPUT INTERRUPT PROCESSING
                 *
   57505 000000 INPUT1  0
   57506 054125         STA     INASAV          SAVE A
   57507 102500 ST04    CIA     0               BRING IN THE DATA
   57510 074124         STX     INXSAV
   57511 034103         LDX     INPOS
   57512 055000         STA     0,X             PUT AWAY THE DATA
                 *
   57513 014102         LDA     INSTAT          WHAT STATE ARE WE IN?
   57514 001002         JAP     INZSTA          BR SYNC LOOK MODE
   57515 057547 
                 *
   57516 005141 IN01    INC     X,A             CHECK FOR END
   57517 054075         STA     INPOS
   57520 144100         SUB     INEND
   57521 054074         STA     INSTAT          SET NEW STATE IF NEED BE
   57522 001002         JAP     RECIN           BR IF ALL HERE
   57523 057531 
                 *
   57524 014107 INRET   LDA     INASAV          RESTORE AND RETURN
   57525 034107         LDX     INXSAV
   57526 100200 ST03    EXC     200+IDA         RESTORE INTERRUPTS
   57527 001000         JMP     INPUT1,I
   57530 137505 
                 *
   57531 014065 RECIN   LDA     LSTREC          INDICATE RECORD IS IN
   57532 054057         STA     RECVD
                 *
   57533 014064         LDA     NXTREC          REVERSE BUFFERS
   57534 054060         STA     INPOS
   57535 124055         ADD     WDSREC
   57536 054062         STA     INEND
   57537 014057         LDA     LSTREC
   57540 054057         STA     NXTREC
   57541 014053         LDA     INPOS
   57542 054054         STA     LSTREC
                 *
   57543 103000 ST05    OME     IDA,ZDET1       SET ZERO DET
   57544 057623 
   57545 001000         JMP     INRET
   57546 057524 
                 *
   57547 015000 INZSTA  LDA     0,X             GET BACK THE DATA
   57550 134051         ERA     SYNCIT
   57551 001010         JAZ     IN01
   57552 057516 
   
   57553 001000         JMP     ST05
   57554 057543 
                 *
                 * CHECKSUM COMPUTATION SUBROUTINE
                 *
   57555 000000 CKSUM   0
   57556 005123         INC     B,AB            GET AROUND SYNC WORD
   57557 124026         ADD     DATSIZ   
   57560 054046         STA     FILSTOP         SAVE END OF RECORD
                 *
   57561 005001         TZA                     RESET SUMS
   57562 054041         STA     VIRT
   57563 054041         STA     DIAG
                 *
                LOAD    E       *               LABEL DEFINITION
   57564 016000 CKLOOP  LDA     0,B             COMPUTE EACH SUM
   57565 134036         ERA     VIRT
   57566 054035         STA     VIRT
   57567 014035         LDA     DIAG
   57570 004241         LRLA    1
   57571 136000         ERA     0,B
   57572 054032         STA     DIAG
   57573 005123         INC     B,AB
   57574 144032         SUB     FILSTOP         CHECK IF DONE
   57575 001004         JAN     CKLOOP
   57576 057564 
                 *
   57577 014025         LDA     DIAG            INCLUDE DIAGONAL IN VIRTICAL
   57600 004241         LRLA    1
   57601 134022         ERA     VIRT
   57602 054022         STA     DIAG
   57603 001000         JMP     CKSUM,I
   57604 137555 
                 *
                 * CONSTANTS AND INITIALIZED VARIABLEBS
                 *
   57605 000034 MAXCHA  +NWORDS-5
   57606 000036 DATSIZ  +NWORDS-3
   57607 000077 OCT77   +77
   57610 057212 LSTADR  +BUF1
   57611 177777 SNDBLK  -1
   57612 000000 RECVD   0
   57613 000041 WDSREC  +NWORDS
   57614 177777 OTSTAT  -1
   57615 057254 INPOS   +BUF2
   57616 000000 INSTAT  +0
   57617 057254 LSTREC  +BUF2
   57620 057212 NXTREC  +BUF1
   57621 057315 INEND   +BUF2+NWORDS
   57622 031062 SYNCIT  +SYN
                OTPOS   E       OTSTAT          LABEL DEFINITION
   
                 *
                 * VARIABLE DATA SPACE
                 *
   57623        ZDET1   R       *+1
   57624        VIRT    R       *+1
   57625        DIAG    R       *+1
   57626        ICNT    R       *+1
   57627        FILSTOP R       *+1
   57630        SAV     R       *+1
   57631        SAVE    R       *+1
   57632        MSTOP   R       *+1
   57633        OTDATA  R       *+1
   57634        OTASAV  R       *+1
   57635        OTBSAV  R       *+1
   57636        OTEND   R       *+1
                INASAV  E       OTASAV          LABEL DEFINITION
                INXSAV  E       OTBSAV          LABEL DEFINITION
                 *
                 * SPECIAL EQUATES
                 *
         000021 ZEROD   E       21
         000000 IDA     E       0
         000041 NWORDS  E       33D
         000010 POWFAL  E       10
         000012 POWST   E       12
         000027 IDAB    E       27
         000010 NBLOCKS E       (SYNCIT-START+1+NWORDS-2)/(NWORDS-1)
         031062 SYN     E       031062
         000041 WDPBLK  E       NWORDS
         011300 LINSP   E       4800D
         057254 BUF2    E       FPANL-NWORDS
         057212 BUF1    E       BUF2-NWORDS-1
   57637                R       LOADER+10*40
   57640                R       77640           
   
                *
                *SYNCHRONOUS BOOTSTRAP
                *
   57640 100027 SETUP   EXC     000+IDAB        TURN OFF 201 INTERRUPTS
                *
   57641 014126         LDA     ZDET            DISABLE ALL LINES
   57642 005311 DISABLE DAR
   57643 103127         OAR     IDAB
   57644 103125         OAR     25              TURN OFF SECOND CARD
   57645 005311         DAR
   57646 001002         JAP     DISABLE
   57647 057642 
                *
   57650 124117         ADD     ZDET            ENABLE LOAD LINE
   57651 103127         OAR     IDAB
                *
   57652 050010         STA     POWFAL          PUT HALT IN POWERFAIL 'RUPT
   57653 006010         LDAI    2000            LOAD INPUT 'RUPT
   57654 002000 
   57655 050040 STVEC   STA     LINE0
   57656 050042         STA     LINE0+2
   57657 054114         STA     CKSUMB
   57660 050012         STA     POWST           SETUP RESTART
   57661 006010         LDAI    INPUT
   57662 057762 
   57663 050043         STA     LINE0+3
   57664 006010         LDAI    OUTPUT
   57665 057753 
   57666 050041         STA     LINE0+1
   57667 006010         LDAI    SETUP-1         SET RESTART BRANCH
   57670 057637 
   57671 050013         STA     POWST+1
   57672 100227         EXC     200+IDAB        TURN ON 'RUPTS
                *
   57673 006030 BEGIN   LDXI    START
   57674 057240 
   57675 006020         LDBI    -(NBLOCKS+1)    NUMBER OF BLOCKS
   57676 177767 
                *
   57677 014073         LDA     DELAYP          SET UP DELAY LIMIT
   57700 054076         STA     DELAY
   57701 005122 SBLOCK  IBR                     RECEIVED ALL BLOCKS?
   57702 001020         JBZ     DONE            CHECK CKSUM IF YES
   57703 057746 
   57704 006010         LDAI    -(WDPBLK-1)     BLOCK WORD COUNT MINUS
   57705 177740                                 CHECKSUM
   57706 054066         STA     BLCKCNT
                *
   57707 103027 SYNC    OME     IDAB,ZDET       SET ZERO DETECT
   57710 057770 
   57711 064064         STB     WRDIN           RESET INPUT WORD
   57712 014064 SYNC1   LDA     DELAY           HAVE WAITED LONG ENOUGH?
   57713 001002         JAP     SETUP           RESTART IF YES
   57714 057640 
   57715 014060         LDA     WRDIN           WAIT FOR A CHAR
   57716 001004         JAN     SYNC1
   57717 057712 
                *
   
   57720 134050         ERA     SYNCH           SYNC?
   57721 001010         JAZ     SYNCED          YES START REC
   57722 057725 
   57723 001000         JMP     SYNC            GO SYNC AGAIN
   57724 057707 
                *
   57725 014045 SYNCED  LDA     DELAYP          RESET DELAY
   57726 054050         STA     DELAY
   57727 064032 SYNCD1  STB     INPUT           WAIT FOR 'RUPT
   57730 014031 SYNCD2  LDA     INPUT
   57731 001004         JAN     SYNCD2
   57732 057730 
                *
   57733 014042         LDA     WRDIN           PUT IN WORD
   57734 055000         STA     0,X
   57735 134036         ERA     CKSUMB
   57736 054035         STA     CKSUMB
   57737 005144         IXR
   57740 044034         INR     BLCKCNT         ALL OF BLOCK IN?
   57741 014033         LDA     BLCKCNT
   57742 001010         JAZ     SBLOCK          YES GET NEXT ONE
   57743 057701 
   57744 001000         JMP     SYNCD1          NO GET MORE
   57745 057727 
                *
   57746 014025 DONE    LDA     CKSUMB
   57747 002010         JAZM    ENTRY           GO TO LOADER
   57750 057317 
   57751 001000         JMP     SETUP
   57752 057640 
   57753 000000 OUTPUT  0
   57754 103026         OME     IDAB-1,WRDOUT   PUT OUT WORD
   57755 057772 
   57756 044020         INR     DELAY           BUMP DELAY COUNTER
   57757 100227         EXC     200+IDAB        TURN ON 'RUPTS
   57760 001000         JMP     OUTPUT,I
   57761 157753 
                *
   57762 000000 INPUT   0
   57763 102026         IME     IDAB-1,WRDIN    GET THE WORD
   57764 057776 
   57765 100227         EXC     200+IDAB        TURN ON 'RUPTS
   57766 001000         JMP     INPUT,I
   57767 157762 
                *
   57770 000021 ZDET    +ZEROD
   57771 031062 SYNCH   +SYN
   57772 177777 WRDOUT  -1
   57773 172110 DELAYP  -(+LINSP/16D)*10D
   57774 002000 CKSUMB  2000
   57775 000000 BLCKCNT 0
   57776 000000 WRDIN   0
   57777 000000 DELAY   0
                *
         000111 NWDSB   E       DONE+3-SETUP
         000000 EXEA    E       SETUP-SETUP
         000015 VECT    E       STVEC-SETUP
         000040 LINE0   E       40
         000130 ZDET2   E       ZDET-SETUP
     
   
                           32K  V72


         THIS IS THE LOADER THAT IS USED FOR LOADING A 32K MACHINE. THE
         SYNCHRONOUS BOOTSTRAP FOR 32K IS AT THE END OF THIS LISTING.
   
         THE TWO ARE LISTED TOGETHER TO GIVE YOU A BETTER UNDERSTANDING
         OF WHAT THE MACHINE IS DOING.
   
         THIS DOCUMENT IS IN THE FILE (CES:33)NEW72.32K .  THE COMPLETE
         ASSEMBLY LISTING IS UNDER (CES:33)32KV72.LST .
   
                 *
                 * INITIALIZATION FOR LOADER
                 *
   57240 014056 START   LDA     ENTRY   LOCATE THE ENTRY
   57241 006140         SUBI    NWDSB           LOCATE START OF BOOT
   57242 000111 
   57243 005014         TAX
   57244 054102         STA     BOOTRT+1        SAVE RETURN TO BOOT
                 *
   57245 015000         LDA     EXEA,X          FETCH I/O INS FROM BOOT
   57246 154340         ANA     OCT77           REMOVE ADDRESS
   57247 054047         STA     ENTRY           SAVE FOR NOW
                 *
   57250 124017         ADD     ST01            TURN OFF 'RUPTS
   57251 054016         STA     ST01
                 *
   57252 014037         LDA     ST02            ENABLE 'RUPTS
   57253 124043         ADD     ENTRY
   57254 054035         STA     ST02
   57255 054250         STA     ST03
   57256 054212         STA     ST07
                 *
   57257 014227         LDA     ST04            INPUT INST
   57260 124036         ADD     ENTRY
   57261 005311         DAR
   57262 054224         STA     ST04
                 *
   57263 014257         LDA     ST05            OUTPUT ZERO DET
   57264 124032         ADD     ENTRY
   57265 054255         STA     ST05
                 *
   57266 005311         DAR                     OUTPUT DATA
   57267 054155         STA     ST06
                 *
   57270 100000 ST01    EXC     IDA+00         TURN OFF 'RUPTS
   57271 015015         LDA     VECT,X          LOCATE IVECTS
   57272 154314         ANA     OCT77           REMOVE UNWANTED BITS
   57273 005012         TAB                     POINT B AT IT
                 *
   57274 006010         LDAI    INPUT1          SET INPUT VEC
   57275 057505 
   57276 056003         STA     3,B
                 *
   57277 006010         LDAI    OUTPUT1         SET OUTPUT
   57300 057444 
   57301 056001         STA     1,B
                 *
   
   57302 015130         LDA     ZDET2,X          FETCH ZERO DETECT
   57303 054317         STA     ZDET1
                 *
   57304 024303         LDB     LSTADR
   57305 014314         LDA     SYNCIT          BUILD ACKNOWLEGEMENT RECORD
   57306 056000         STA     0,B
   57307 005001         TZA                     CLEAR OUT COUNT
   57310 056001         STA     1,B
   57311 076002         STX     2,B
   57312 100200 ST02    EXC     IDA+200         ENABLE 'RUPTS
   57313 001000         JMP     ACK             LOOK OUT HERE WE GO!!!!
   57314 057333 
   57315 103277 FPANL   OBR     77              DRIVES FRONT PANEL
   57316 001000         JMP     *-*             RETURN TO BOOT
   57317 000000 
                ENTRY   E       *-1             LABEL DEFINITION
   57320 005041         TXA                     SEE IF LOADED WRONG
   57321 006140         SUBI    ENDLD           BETTER BE ZERO
   57322 057640 
   57323 001010         JAZ     START
   57324 057240 
   57325 005041         TXA                     LOADED IN WRONG PLACE
   57326 006140         SUBI    ENDLD-ENTRY+1   GET BACK TO THE BOOT
   57327 000322 
   57330 054001         STA     *+2
   57331 001000         JMP     *-*
   57332 000000 
   57333 024254 ACK     LDB     LSTADR          FETCH LAST BUFFER
   57334 064254         STB     SNDBLK          START THE TRANSMITTER
   57335 002000         JMPM    CKSUM           COMPUTE THE CHECKSUM
   57336 057555 
                 *
   57337 014264         LDA     VIRT            GET VIRTICAL SUM
   57340 056000         STA     0,B             PUT INTO BUFFER
   57341 014263         LDA     DIAG            AND THE DIAGONAL SUM
   57342 056001         STA     1,B
                 *
   57343 014016 NAK     LDA     LIMIT           RESET RECORD TIMER
   57344 054261         STA     ICNT
                 *
                 * WAIT OUT TIMEOUT WHILE LOOKING FOR A RECORD
                 *
   57345 014260 NA01    LDA     ICNT            IF TIME IS UP
   57346 001010 BOOTRT  JAZ     0               RETURN TO BOOT
   57347 000000 
   57350 024241         LDB     RECVD           IF NOT UP SEE IF A RECORD
   57351 001020         JBZ     NA01            IS IN
   57352 057345 
   57353 064234         STB     LSTADR          SAVE LAST RECEIVED REC ADDRESS
                 *
   57354 005001         TZA                     SET RECORD RECEIVED FLAG OFF
   57355 054234         STA     RECVD
                 *
   
   57356 002000 RECRCV  JMPM    CKSUM           ITS HERE, IS IT GOOD?
   57357 057555 
   57360 014243         LDA     VIRT            CHECK VIRTICAL SUM
   57361 136000         ERA     0,B
   57362 114242 LIMIT   ORA     DIAG            CHECK DIAGONAL SUM
   57363 136001         ERA     1,B
   57364 001010         JAZ     GOOD            ITS GOOD!!!
   57365 057370 
   57366 001000         JMP     NAK             ITS BAD!!!
   57367 057343 
                 *
   57370 014217 GOOD    LDA     LSTADR          FETCH BEGGINING OF RECORD
   57371 005014         TAX                     SET  TO BUFFER ADR
   57372 124213         ADD     DATSIZ          LOCATE END OF BUFFER
   57373 054233         STA     FILSTOP
                 *
   57374 015001         LDA     1,X             GET THE COUNT
   57375 001010         JAZ     0               COUNT ZERO GO START LOADED CODE
   57376 000000 
                 *
   57377 024065         LDB     COM             BUILD INSTRUCTION COM  ,A
   57400 064035         STB     OPT             FILL WITH ZEROES
   57401 005002         TZB                     SET COUNT ZERO
   57402 065001         STB     1,X
   57403 001002         JAP     SETOK           BR IF POSITIVE COUNT
   57404 057411 
                 *
   57405 024156         LDB     LOAD            BUILD LOAD INSTRUCTION
   57406 064027         STB     OPT
   57407 024175         LDB     MAXCHA          SET COUNT FOR ALL CHARACTERS
   57410 065001         STB     1,X             SET AS COUNT FOR RETURN
                 *
   57411 025002 SETOK   LDB     2,X             GET MEMORY ADDRESS
   57412 154174         ANA     OCT77           STRIP UNUSED BITS
   57413 001010         JAZ     FILLIT          BR IF DUMP ONLY
   57414 057432 
                 *
   57415 124172         ADD     LSTADR          LOCATE STOPPING POINT
   57416 054213         STA     MSTOP
                 *
   57417 015003 MOVIT   LDA     3,X             GET ONE FROM THE INPUT BUFFER
   57420 056000         STA     0,B             PUT IT INTO CORE
                 *
   57421 005201         COM     ,A              RETURN -1
   57422 055003         STA     3,X
                 *
   57423 005122         IBR                     BUMP THE POINTERS
   57424 003026         XBNZ    FPANL           DRIVE THE FRONT PANEL IF V70
   57425 057315 
   57426 005145         INC     X,AX
   57427 144202         SUB     MSTOP           CHECK FOR THE END
   
   57430 001004         JAN     MOVIT           KEEP GOING
   57431 057417 
                 *
                 * THE FOLLOWING FILLS IN WITH -1 OR TRANSFERS MEMORY FOR OUTPUT
                 *
   57432 005041 FILLIT  TXA                     CHECK FOR END OF FILL
   57433 144173 FILL1   SUB     FILSTOP
   57434 001002         JAP     ACK             GO ACKNOWLEGE IF DONE
   57435 057333 
                 *
   57436 000000 OPT     *-*                     FILLED IN LATTER
   57437 055003         STA     3,X             TUCK IT AWAY
   57440 005122         IBR                     POINT TO NEXT MEMORY WORD
   57441 005145         INC     X,AX
   57442 001000         JMP     FILL1           GO TRY AGAIN
   57443 057433 
                 *
                 * OUTPUT INTERRUPT PROCESSING
                 *
   57444 000000 OUTPUT1 0
   57445 103000 ST06    OME     IDA,OTDATA              SEND OUT THE DATA
   57446 057633 
   57447 044156         INR     ICNT            BUMP THE TIMER
   57450 054163         STA     OTASAV
                 *
   57451 064163         STB     OTBSAV
   57452 014141         LDA     OTSTAT          CHECK OUTPUT STATE
   57453 001004         JAN     OZSTAT          BR STATE ZERO
   57454 057474 
                 *
                 * STATE 1 XFER STATE
                 *
   57455 024136         LDB     OTPOS           GET NEXT CHAR
   57456 016000         LDA     0,B
   57457 054153         STA     OTDATA
   57460 005121         INC     B,A             GET NEW POSITION
   57461 054132         STA     OTPOS
                 *
   57462 144153         SUB     OTEND
   57463 001004         JAN     OTEXIT          EXIT IF NOT DONE
   57464 057467 
   57465 005201 COM     COM     ,A
                 *
   57466 054125         STA     OTSTAT          RETURN TO STATE ZERO
                 *
   57467 014144 OTEXIT  LDA     OTASAV          RESTORE + RETURN
   57470 024144         LDB     OTBSAV
   57471 100200 ST07    EXC     200+IDA         ENABLE INTERRUPTS
   57472 001000         JMP     OUTPUT1,I
   57473 137444 
                 *
   57474 014114 OZSTAT  LDA     SNDBLK          LOOK FOR SNDBLK
   57475 054116         STA     OTSTAT          SET OUTPUT STATE
   57476 124114         ADD     WDSREC          LOCATE END OF BUFFER
   57477 054136         STA     OTEND
   57500 005201         COM     ,A
   57501 054107         STA     SNDBLK          CLEAR SEND FLAG
   57502 054130         STA     OTDATA          AT LEAST 1 PAD SEND
   
   57503 001000         JMP     OTEXIT
   57504 057467 
                 *
                 * INPUT INTERRUPT PROCESSING
                 *
   57505 000000 INPUT1  0
   57506 054125         STA     INASAV          SAVE A
   57507 102500 ST04    CIA     0               BRING IN THE DATA
   57510 074124         STX     INXSAV
   57511 034103         LDX     INPOS
   57512 055000         STA     0,X             PUT AWAY THE DATA
                 *
   57513 014102         LDA     INSTAT          WHAT STATE ARE WE IN?
   57514 001002         JAP     INZSTA          BR SYNC LOOK MODE
   57515 057547 
                 *
   57516 005141 IN01    INC     X,A             CHECK FOR END
   57517 054075         STA     INPOS
   57520 144100         SUB     INEND
   57521 054074         STA     INSTAT          SET NEW STATE IF NEED BE
   57522 001002         JAP     RECIN           BR IF ALL HERE
   57523 057531 
                 *
   57524 014107 INRET   LDA     INASAV          RESTORE AND RETURN
   57525 034107         LDX     INXSAV
   57526 100200 ST03    EXC     200+IDA         RESTORE INTERRUPTS
   57527 001000         JMP     INPUT1,I
   57530 137505 
                 *
   57531 014065 RECIN   LDA     LSTREC          INDICATE RECORD IS IN
   57532 054057         STA     RECVD
                 *
   57533 014064         LDA     NXTREC          REVERSE BUFFERS
   57534 054060         STA     INPOS
   57535 124055         ADD     WDSREC
   57536 054062         STA     INEND
   57537 014057         LDA     LSTREC
   57540 054057         STA     NXTREC
   57541 014053         LDA     INPOS
   57542 054054         STA     LSTREC
                 *
   57543 103000 ST05    OME     IDA,ZDET1       SET ZERO DET
   57544 057623 
   57545 001000         JMP     INRET
   57546 057524 
                 *
   57547 015000 INZSTA  LDA     0,X             GET BACK THE DATA
   57550 134051         ERA     SYNCIT
   57551 001010         JAZ     IN01
   57552 057516 
   
   57553 001000         JMP     ST05
   57554 057543 
                 *
                 * CHECKSUM COMPUTATION SUBROUTINE
                 *
   57555 000000 CKSUM   0
   57556 005123         INC     B,AB            GET AROUND SYNC WORD
   57557 124026         ADD     DATSIZ   
   57560 054046         STA     FILSTOP         SAVE END OF RECORD
                 *
   57561 005001         TZA                     RESET SUMS
   57562 054041         STA     VIRT
   57563 054041         STA     DIAG
                 *
                LOAD    E       *               LABEL DEFINITION
   57564 016000 CKLOOP  LDA     0,B             COMPUTE EACH SUM
   57565 134036         ERA     VIRT
   57566 054035         STA     VIRT
   57567 014035         LDA     DIAG
   57570 004241         LRLA    1
   57571 136000         ERA     0,B
   57572 054032         STA     DIAG
   57573 005123         INC     B,AB
   57574 144032         SUB     FILSTOP         CHECK IF DONE
   57575 001004         JAN     CKLOOP
   57576 057564 
                 *
   57577 014025         LDA     DIAG            INCLUDE DIAGONAL IN VIRTICAL
   57600 004241         LRLA    1
   57601 134022         ERA     VIRT
   57602 054022         STA     DIAG
   57603 001000         JMP     CKSUM,I
   57604 137555 
                 *
                 * CONSTANTS AND INITIALIZED VARIABLEBS
                 *
   57605 000034 MAXCHA  +NWORDS-5
   57606 000036 DATSIZ  +NWORDS-3
   57607 000077 OCT77   +77
   57610 057212 LSTADR  +BUF1
   57611 177777 SNDBLK  -1
   57612 000000 RECVD   0
   57613 000041 WDSREC  +NWORDS
   57614 177777 OTSTAT  -1
   57615 057254 INPOS   +BUF2
   57616 000000 INSTAT  +0
   57617 057254 LSTREC  +BUF2
   57620 057212 NXTREC  +BUF1
   57621 057315 INEND   +BUF2+NWORDS
   57622 031062 SYNCIT  +SYN
                OTPOS   E       OTSTAT          LABEL DEFINITION
   
                 *
                 * VARIABLE DATA SPACE
                 *
   57623        ZDET1   R       *+1
   57624        VIRT    R       *+1
   57625        DIAG    R       *+1
   57626        ICNT    R       *+1
   57627        FILSTOP R       *+1
   57630        SAV     R       *+1
   57631        SAVE    R       *+1
   57632        MSTOP   R       *+1
   57633        OTDATA  R       *+1
   57634        OTASAV  R       *+1
   57635        OTBSAV  R       *+1
   57636        OTEND   R       *+1
                INASAV  E       OTASAV          LABEL DEFINITION
                INXSAV  E       OTBSAV          LABEL DEFINITION
                 *
                 * SPECIAL EQUATES
                 *
         000021 ZEROD   E       21
         000000 IDA     E       0
         000041 NWORDS  E       33D
         000010 POWFAL  E       10
         000012 POWST   E       12
         000027 IDAB    E       27
         000010 NBLOCKS E       (SYNCIT-START+1+NWORDS-2)/(NWORDS-1)
         031062 SYN     E       031062
         000041 WDPBLK  E       NWORDS
         011300 LINSP   E       4800D
         057254 BUF2    E       FPANL-NWORDS
         057212 BUF1    E       BUF2-NWORDS-1
   57637                R       LOADER+10*40
   57640                R       77640           
   
                *
                *SYNCHRONOUS BOOTSTRAP
                *
   77640 100027 SETUP   EXC     000+IDAB        TURN OFF 201 INTERRUPTS
                *
   77641 014126         LDA     ZDET            DISABLE ALL LINES
   77642 005311 DISABLE DAR
   77643 103127         OAR     IDAB
   77644 103125         OAR     25              TURN OFF SECOND CARD
   77645 005311         DAR
   77646 001002         JAP     DISABLE
   77647 077642 
                *
   77650 124117         ADD     ZDET            ENABLE LOAD LINE
   77651 103127         OAR     IDAB
                *
   77652 050010         STA     POWFAL          PUT HALT IN POWERFAIL 'RUPT
   77653 006010         LDAI    2000            LOAD INPUT 'RUPT
   77654 002000 
   77655 050040 STVEC   STA     LINE0
   77656 050042         STA     LINE0+2
   77657 054114         STA     CKSUMB
   77660 050012         STA     POWST           SETUP RESTART
   77661 006010         LDAI    INPUT
   77662 077762 
   77663 050043         STA     LINE0+3
   77664 006010         LDAI    OUTPUT
   77665 077753 
   77666 050041         STA     LINE0+1
   77667 006010         LDAI    SETUP-1         SET RESTART BRANCH
   77670 077637 
   77671 050013         STA     POWST+1
   77672 100227         EXC     200+IDAB        TURN ON 'RUPTS
                *
   77673 006030 BEGIN   LDXI    START
   77674 057240 
   77675 006020         LDBI    -(NBLOCKS+1)    NUMBER OF BLOCKS
   77676 177767 
                *
   77677 014073         LDA     DELAYP          SET UP DELAY LIMIT
   77700 054076         STA     DELAY
   77701 005122 SBLOCK  IBR                     RECEIVED ALL BLOCKS?
   77702 001020         JBZ     DONE            CHECK CKSUM IF YES
   77703 077746 
   77704 006010         LDAI    -(WDPBLK-1)     BLOCK WORD COUNT MINUS
   77705 177740                                 CHECKSUM
   77706 054066         STA     BLCKCNT
                *
   77707 103027 SYNC    OME     IDAB,ZDET       SET ZERO DETECT
   77710 077770 
   77711 064064         STB     WRDIN           RESET INPUT WORD
   77712 014064 SYNC1   LDA     DELAY           HAVE WAITED LONG ENOUGH?
   77713 001002         JAP     SETUP           RESTART IF YES
   77714 077640 
   77715 014060         LDA     WRDIN           WAIT FOR A CHAR
   77716 001004         JAN     SYNC1
   77717 077712 
                *
   
   77720 134050         ERA     SYNCH           SYNC?
   77721 001010         JAZ     SYNCED          YES START REC
   77722 077725 
   77723 001000         JMP     SYNC            GO SYNC AGAIN
   77724 077707 
                *
   77725 014045 SYNCED  LDA     DELAYP          RESET DELAY
   77726 054050         STA     DELAY
   77727 064032 SYNCD1  STB     INPUT           WAIT FOR 'RUPT
   77730 014031 SYNCD2  LDA     INPUT
   77731 001004         JAN     SYNCD2
   77732 077730 
                *
   77733 014042         LDA     WRDIN           PUT IN WORD
   77734 055000         STA     0,X
   77735 134036         ERA     CKSUMB
   77736 054035         STA     CKSUMB
   77737 005144         IXR
   77740 044034         INR     BLCKCNT         ALL OF BLOCK IN?
   77741 014033         LDA     BLCKCNT
   77742 001010         JAZ     SBLOCK          YES GET NEXT ONE
   77743 077701 
   77744 001000         JMP     SYNCD1          NO GET MORE
   77745 077727 
                *
   77746 014025 DONE    LDA     CKSUMB
   77747 002010         JAZM    ENTRY           GO TO LOADER
   77750 057317 
   77751 001000         JMP     SETUP
   77752 077640 
   77753 000000 OUTPUT  0
   77754 103026         OME     IDAB-1,WRDOUT   PUT OUT WORD
   77755 077772 
   77756 044020         INR     DELAY           BUMP DELAY COUNTER
   77757 100227         EXC     200+IDAB        TURN ON 'RUPTS
   77760 001000         JMP     OUTPUT,I
   77761 177753 
                *
   77762 000000 INPUT   0
   77763 102026         IME     IDAB-1,WRDIN    GET THE WORD
   77764 077776 
   77765 100227         EXC     200+IDAB        TURN ON 'RUPTS
   77766 001000         JMP     INPUT,I
   77767 177762 
                *
   77770 000021 ZDET    +ZEROD
   77771 031062 SYNCH   +SYN
   77772 177777 WRDOUT  -1
   77773 172110 DELAYP  -(+LINSP/16D)*10D
   77774 002000 CKSUMB  2000
   77775 000000 BLCKCNT 0
   77776 000000 WRDIN   0
   77777 000000 DELAY   0
                *
         000111 NWDSB   E       DONE+3-SETUP
         000000 EXEA    E       SETUP-SETUP
         000015 VECT    E       STVEC-SETUP
         000040 LINE0   E       40
         000130 ZDET2   E       ZDET-SETUP
     
   
                           12K  620


         THIS IS THE LOADER THAT IS USED FOR LOADING A 12K MACHINE. THE
         SYNCHRONOUS BOOTSTRAP FOR 12K IS AT THE END OF THIS LISTING.
   
         THE TWO ARE LISTED TOGETHER TO GIVE YOU A BETTER UNDERSTANDING
         OF WHAT THE MACHINE IS DOING.
   
         THIS DOCUMENT IS IN THE FILE (CES:33)NEW620.12K .  THE COMPLETE
         ASSEMBLY LISTING IS UNDER (CES:33)12K620.LST .
   
                 *
                 * INITIALIZATION FOR LOADER
                 *
   27240 014056 START   LDA     ENTRY   LOCATE THE ENTRY
   27241 006140         SUBI    NWDSB           LOCATE START OF BOOT
   27242 000111 
   27243 005014         TAX
   27244 054102         STA     BOOTRT+1        SAVE RETURN TO BOOT
                 *
   27245 015000         LDA     EXEA,X          FETCH I/O INS FROM BOOT
   27246 154340         ANA     OCT77           REMOVE ADDRESS
   27247 054047         STA     ENTRY           SAVE FOR NOW
                 *
   27250 124017         ADD     ST01            TURN OFF 'RUPTS
   27251 054016         STA     ST01
                 *
   27252 014037         LDA     ST02            ENABLE 'RUPTS
   27253 124043         ADD     ENTRY
   27254 054035         STA     ST02
   27255 054250         STA     ST03
   27256 054212         STA     ST07
                 *
   27257 014227         LDA     ST04            INPUT INST
   27260 124036         ADD     ENTRY
   27261 005311         DAR
   27262 054224         STA     ST04
                 *
   27263 014257         LDA     ST05            OUTPUT ZERO DET
   27264 124032         ADD     ENTRY
   27265 054255         STA     ST05
                 *
   27266 005311         DAR                     OUTPUT DATA
   27267 054155         STA     ST06
                 *
   27270 100000 ST01    EXC     IDA+00         TURN OFF 'RUPTS
   27271 015015         LDA     VECT,X          LOCATE IVECTS
   27272 154314         ANA     OCT77           REMOVE UNWANTED BITS
   27273 005012         TAB                     POINT B AT IT
                 *
   27274 006010         LDAI    INPUT1          SET INPUT VEC
   27275 027505 
   27276 056003         STA     3,B
                 *
   27277 006010         LDAI    OUTPUT1         SET OUTPUT
   27300 027444 
   27301 056001         STA     1,B
                 *
   
   27302 015130         LDA     ZDET2,X          FETCH ZERO DETECT
   27303 054317         STA     ZDET1
                 *
   27304 024303         LDB     LSTADR
   27305 014314         LDA     SYNCIT          BUILD ACKNOWLEGEMENT RECORD
   27306 056000         STA     0,B
   27307 005001         TZA                     CLEAR OUT COUNT
   27310 056001         STA     1,B
   27311 076002         STX     2,B
   27312 100200 ST02    EXC     IDA+200         ENABLE 'RUPTS
   27313 001000         JMP     ACK             LOOK OUT HERE WE GO!!!!
   27314 027333 
   27315 103277 FPANL   OBR     77              DRIVES FRONT PANEL
   27316 001000         JMP     *-*             RETURN TO BOOT
   27317 000000 
                ENTRY   E       *-1             LABEL DEFINITION
   27320 005041         TXA                     SEE IF LOADED WRONG
   27321 006140         SUBI    ENDLD           BETTER BE ZERO
   27322 027640 
   27323 001010         JAZ     START
   27324 027240 
   27325 005041         TXA                     LOADED IN WRONG PLACE
   27326 006140         SUBI    ENDLD-ENTRY+1   GET BACK TO THE BOOT
   27327 000322 
   27330 054001         STA     *+2
   27331 001000         JMP     *-*
   27332 000000 
   27333 024254 ACK     LDB     LSTADR          FETCH LAST BUFFER
   27334 064254         STB     SNDBLK          START THE TRANSMITTER
   27335 002000         JMPM    CKSUM           COMPUTE THE CHECKSUM
   27336 027555 
                 *
   27337 014264         LDA     VIRT            GET VIRTICAL SUM
   27340 056000         STA     0,B             PUT INTO BUFFER
   27341 014263         LDA     DIAG            AND THE DIAGONAL SUM
   27342 056001         STA     1,B
                 *
   27343 014016 NAK     LDA     LIMIT           RESET RECORD TIMER
   27344 054261         STA     ICNT
                 *
                 * WAIT OUT TIMEOUT WHILE LOOKING FOR A RECORD
                 *
   27345 014260 NA01    LDA     ICNT            IF TIME IS UP
   27346 001010 BOOTRT  JAZ     0               RETURN TO BOOT
   27347 000000 
   27350 024241         LDB     RECVD           IF NOT UP SEE IF A RECORD
   27351 001020         JBZ     NA01            IS IN
   27352 027345 
   27353 064234         STB     LSTADR          SAVE LAST RECEIVED REC ADDRESS
                 *
   27354 005001         TZA                     SET RECORD RECEIVED FLAG OFF
   27355 054234         STA     RECVD
                 *
   
   27356 002000 RECRCV  JMPM    CKSUM           ITS HERE, IS IT GOOD?
   27357 027555 
   27360 014243         LDA     VIRT            CHECK VIRTICAL SUM
   27361 136000         ERA     0,B
   27362 114242 LIMIT   ORA     DIAG            CHECK DIAGONAL SUM
   27363 136001         ERA     1,B
   27364 001010         JAZ     GOOD            ITS GOOD!!!
   27365 027370 
   27366 001000         JMP     NAK             ITS BAD!!!
   27367 027343 
                 *
   27370 014217 GOOD    LDA     LSTADR          FETCH BEGGINING OF RECORD
   27371 005014         TAX                     SET  TO BUFFER ADR
   27372 124213         ADD     DATSIZ          LOCATE END OF BUFFER
   27373 054233         STA     FILSTOP
                 *
   27374 015001         LDA     1,X             GET THE COUNT
   27375 001010         JAZ     0               COUNT ZERO GO START LOADED CODE
   27376 000000 
                 *
   27377 024065         LDB     COM             BUILD INSTRUCTION COM  ,A
   27400 064035         STB     OPT             FILL WITH ZEROES
   27401 005002         TZB                     SET COUNT ZERO
   27402 065001         STB     1,X
   27403 001002         JAP     SETOK           BR IF POSITIVE COUNT
   27404 027411 
                 *
   27405 024156         LDB     LOAD            BUILD LOAD INSTRUCTION
   27406 064027         STB     OPT
   27407 024175         LDB     MAXCHA          SET COUNT FOR ALL CHARACTERS
   27410 065001         STB     1,X             SET AS COUNT FOR RETURN
                 *
   27411 025002 SETOK   LDB     2,X             GET MEMORY ADDRESS
   27412 154174         ANA     OCT77           STRIP UNUSED BITS
   27413 001010         JAZ     FILLIT          BR IF DUMP ONLY
   27414 027432 
                 *
   27415 124172         ADD     LSTADR          LOCATE STOPPING POINT
   27416 054213         STA     MSTOP
                 *
   27417 015003 MOVIT   LDA     3,X             GET ONE FROM THE INPUT BUFFER
   27420 056000         STA     0,B             PUT IT INTO CORE
                 *
   27421 005201         COM     ,A              RETURN -1
   27422 055003         STA     3,X
                 *
   27423 005122         IBR                     BUMP THE POINTERS
   27424 003026         XBNZ    FPANL           DRIVE THE FRONT PANEL IF V70
   27425 027315 
   27426 005145         INC     X,AX
   27427 144202         SUB     MSTOP           CHECK FOR THE END
   
   27430 001004         JAN     MOVIT           KEEP GOING
   27431 027417 
                 *
                 * THE FOLLOWING FILLS IN WITH -1 OR TRANSFERS MEMORY FOR OUTPUT
                 *
   27432 005041 FILLIT  TXA                     CHECK FOR END OF FILL
   27433 144173 FILL1   SUB     FILSTOP
   27434 001002         JAP     ACK             GO ACKNOWLEGE IF DONE
   27435 027333 
                 *
   27436 000000 OPT     *-*                     FILLED IN LATTER
   27437 055003         STA     3,X             TUCK IT AWAY
   27440 005122         IBR                     POINT TO NEXT MEMORY WORD
   27441 005145         INC     X,AX
   27442 001000         JMP     FILL1           GO TRY AGAIN
   27443 027433 
                 *
                 * OUTPUT INTERRUPT PROCESSING
                 *
   27444 000000 OUTPUT1 0
   27445 103000 ST06    OME     IDA,OTDATA              SEND OUT THE DATA
   27446 027633 
   27447 044156         INR     ICNT            BUMP THE TIMER
   27450 054163         STA     OTASAV
                 *
   27451 064163         STB     OTBSAV
   27452 014141         LDA     OTSTAT          CHECK OUTPUT STATE
   27453 001004         JAN     OZSTAT          BR STATE ZERO
   27454 027474 
                 *
                 * STATE 1 XFER STATE
                 *
   27455 024136         LDB     OTPOS           GET NEXT CHAR
   27456 016000         LDA     0,B
   27457 054153         STA     OTDATA
   27460 005121         INC     B,A             GET NEW POSITION
   27461 054132         STA     OTPOS
                 *
   27462 144153         SUB     OTEND
   27463 001004         JAN     OTEXIT          EXIT IF NOT DONE
   27464 027467 
   27465 005201 COM     COM     ,A
                 *
   27466 054125         STA     OTSTAT          RETURN TO STATE ZERO
                 *
   27467 014144 OTEXIT  LDA     OTASAV          RESTORE + RETURN
   27470 024144         LDB     OTBSAV
   27471 100200 ST07    EXC     200+IDA         ENABLE INTERRUPTS
   27472 001000         JMP     OUTPUT1,I
   27473 137444 
                 *
   27474 014114 OZSTAT  LDA     SNDBLK          LOOK FOR SNDBLK
   27475 054116         STA     OTSTAT          SET OUTPUT STATE
   27476 124114         ADD     WDSREC          LOCATE END OF BUFFER
   27477 054136         STA     OTEND
   27500 005201         COM     ,A
   27501 054107         STA     SNDBLK          CLEAR SEND FLAG
   27502 054130         STA     OTDATA          AT LEAST 1 PAD SEND
   
   27503 001000         JMP     OTEXIT
   27504 027467 
                 *
                 * INPUT INTERRUPT PROCESSING
                 *
   27505 000000 INPUT1  0
   27506 054125         STA     INASAV          SAVE A
   27507 102500 ST04    CIA     0               BRING IN THE DATA
   27510 074124         STX     INXSAV
   27511 034103         LDX     INPOS
   27512 055000         STA     0,X             PUT AWAY THE DATA
                 *
   27513 014102         LDA     INSTAT          WHAT STATE ARE WE IN?
   27514 001002         JAP     INZSTA          BR SYNC LOOK MODE
   27515 027547 
                 *
   27516 005141 IN01    INC     X,A             CHECK FOR END
   27517 054075         STA     INPOS
   27520 144100         SUB     INEND
   27521 054074         STA     INSTAT          SET NEW STATE IF NEED BE
   27522 001002         JAP     RECIN           BR IF ALL HERE
   27523 027531 
                 *
   27524 014107 INRET   LDA     INASAV          RESTORE AND RETURN
   27525 034107         LDX     INXSAV
   27526 100200 ST03    EXC     200+IDA         RESTORE INTERRUPTS
   27527 001000         JMP     INPUT1,I
   27530 137505 
                 *
   27531 014065 RECIN   LDA     LSTREC          INDICATE RECORD IS IN
   27532 054057         STA     RECVD
                 *
   27533 014064         LDA     NXTREC          REVERSE BUFFERS
   27534 054060         STA     INPOS
   27535 124055         ADD     WDSREC
   27536 054062         STA     INEND
   27537 014057         LDA     LSTREC
   27540 054057         STA     NXTREC
   27541 014053         LDA     INPOS
   27542 054054         STA     LSTREC
                 *
   27543 103000 ST05    OME     IDA,ZDET1       SET ZERO DET
   27544 027623 
   27545 001000         JMP     INRET
   27546 027524 
                 *
   27547 015000 INZSTA  LDA     0,X             GET BACK THE DATA
   27550 134051         ERA     SYNCIT
   27551 001010         JAZ     IN01
   27552 027516 
   
   27553 001000         JMP     ST05
   27554 027543 
                 *
                 * CHECKSUM COMPUTATION SUBROUTINE
                 *
   27555 000000 CKSUM   0
   27556 005123         INC     B,AB            GET AROUND SYNC WORD
   27557 124026         ADD     DATSIZ   
   27560 054046         STA     FILSTOP         SAVE END OF RECORD
                 *
   27561 005001         TZA                     RESET SUMS
   27562 054041         STA     VIRT
   27563 054041         STA     DIAG
                 *
                LOAD    E       *               LABEL DEFINITION
   27564 016000 CKLOOP  LDA     0,B             COMPUTE EACH SUM
   27565 134036         ERA     VIRT
   27566 054035         STA     VIRT
   27567 014035         LDA     DIAG
   27570 004241         LRLA    1
   27571 136000         ERA     0,B
   27572 054032         STA     DIAG
   27573 005123         INC     B,AB
   27574 144032         SUB     FILSTOP         CHECK IF DONE
   27575 001004         JAN     CKLOOP
   27576 027564 
                 *
   27577 014025         LDA     DIAG            INCLUDE DIAGONAL IN VIRTICAL
   27600 004241         LRLA    1
   27601 134022         ERA     VIRT
   27602 054022         STA     DIAG
   27603 001000         JMP     CKSUM,I
   27604 137555 
                 *
                 * CONSTANTS AND INITIALIZED VARIABLEBS
                 *
   27605 000034 MAXCHA  +NWORDS-5
   27606 000036 DATSIZ  +NWORDS-3
   27607 000077 OCT77   +77
   27610 027212 LSTADR  +BUF1
   27611 177777 SNDBLK  -1
   27612 000000 RECVD   0
   27613 000041 WDSREC  +NWORDS
   27614 177777 OTSTAT  -1
   27615 027254 INPOS   +BUF2
   27616 000000 INSTAT  +0
   27617 027254 LSTREC  +BUF2
   27620 027212 NXTREC  +BUF1
   27621 027315 INEND   +BUF2+NWORDS
   27622 031062 SYNCIT  +SYN
                OTPOS   E       OTSTAT          LABEL DEFINITION
   
                 *
                 * VARIABLE DATA SPACE
                 *
   27623        ZDET1   R       *+1
   27624        VIRT    R       *+1
   27625        DIAG    R       *+1
   27626        ICNT    R       *+1
   27627        FILSTOP R       *+1
   27630        SAV     R       *+1
   27631        SAVE    R       *+1
   27632        MSTOP   R       *+1
   27633        OTDATA  R       *+1
   27634        OTASAV  R       *+1
   27635        OTBSAV  R       *+1
   27636        OTEND   R       *+1
                INASAV  E       OTASAV          LABEL DEFINITION
                INXSAV  E       OTBSAV          LABEL DEFINITION
                 *
                 * SPECIAL EQUATES
                 *
         000021 ZEROD   E       21
         000000 IDA     E       0
         000041 NWORDS  E       33D
         000010 POWFAL  E       10
         000012 POWST   E       12
         000027 IDAB    E       27
         000010 NBLOCKS E       (SYNCIT-START+1+NWORDS-2)/(NWORDS-1)
         031062 SYN     E       031062
         000041 WDPBLK  E       NWORDS
         011300 LINSP   E       4800D
         027254 BUF2    E       FPANL-NWORDS
         027212 BUF1    E       BUF2-NWORDS-1
   27637                R       LOADER+10*40
   
                *
                *SYNCHRONOUS BOOTSTRAP
                *
   27640 100077 SETUP   EXC     000+IDAB        TURN OFF 201 INTERRUPTS
                *
   27641 014126         LDA     ZDET            DISABLE ALL LINES
   27642 005311 DISABLE DAR
   27643 103177         OAR     IDAB
   27644 103125         OAR     25              TURN OFF SECOND CARD
   27645 005311         DAR
   27646 001002         JAP     DISABLE
   27647 027642 
                *
   27650 124117         ADD     ZDET            ENABLE LOAD LINE
   27651 103177         OAR     IDAB
                *
   27652 050010         STA     POWFAL          PUT HALT IN POWERFAIL 'RUPT
   27653 006010         LDAI    2000            LOAD INPUT 'RUPT
   27654 002000 
   27655 050040 STVEC   STA     LINE0
   27656 050042         STA     LINE0+2
   27657 054114         STA     CKSUMB
   27660 050012         STA     POWST           SETUP RESTART
   27661 006010         LDAI    INPUT
   27662 027762 
   27663 050043         STA     LINE0+3
   27664 006010         LDAI    OUTPUT
   27665 027753 
   27666 050041         STA     LINE0+1
   27667 006010         LDAI    SETUP-1         SET RESTART BRANCH
   27670 027637 
   27671 050013         STA     POWST+1
   27672 100277         EXC     200+IDAB        TURN ON 'RUPTS
                *
   27673 006030 BEGIN   LDXI    START
   27674 027240 
   27675 006020         LDBI    -(NBLOCKS+1)    NUMBER OF BLOCKS
   27676 177767 
                *
   27677 014073         LDA     DELAYP          SET UP DELAY LIMIT
   27700 054076         STA     DELAY
   27701 005122 SBLOCK  IBR                     RECEIVED ALL BLOCKS?
   27702 001020         JBZ     DONE            CHECK CKSUM IF YES
   27703 027746 
   27704 006010         LDAI    -(WDPBLK-1)     BLOCK WORD COUNT MINUS
   27705 177740                                 CHECKSUM
   27706 054066         STA     BLCKCNT
                *
   27707 103077 SYNC    OME     IDAB,ZDET       SET ZERO DETECT
   27710 027770 
   27711 064064         STB     WRDIN           RESET INPUT WORD
   27712 014064 SYNC1   LDA     DELAY           HAVE WAITED LONG ENOUGH?
   27713 001002         JAP     SETUP           RESTART IF YES
   27714 027640 
   27715 014060         LDA     WRDIN           WAIT FOR A CHAR
   27716 001004         JAN     SYNC1
   27717 027712 
                *
   
   27720 134050         ERA     SYNCH           SYNC?
   27721 001010         JAZ     SYNCED          YES START REC
   27722 027725 
   27723 001000         JMP     SYNC            GO SYNC AGAIN
   27724 027707 
                *
   27725 014045 SYNCED  LDA     DELAYP          RESET DELAY
   27726 054050         STA     DELAY
   27727 064032 SYNCD1  STB     INPUT           WAIT FOR 'RUPT
   27730 014031 SYNCD2  LDA     INPUT
   27731 001004         JAN     SYNCD2
   27732 027730 
                *
   27733 014042         LDA     WRDIN           PUT IN WORD
   27734 055000         STA     0,X
   27735 134036         ERA     CKSUMB
   27736 054035         STA     CKSUMB
   27737 005144         IXR
   27740 044034         INR     BLCKCNT         ALL OF BLOCK IN?
   27741 014033         LDA     BLCKCNT
   27742 001010         JAZ     SBLOCK          YES GET NEXT ONE
   27743 027701 
   27744 001000         JMP     SYNCD1          NO GET MORE
   27745 027727 
                *
   27746 014025 DONE    LDA     CKSUMB
   27747 002010         JAZM    ENTRY           GO TO LOADER
   27750 027317 
   27751 001000         JMP     SETUP
   27752 027640 
   27753 000000 OUTPUT  0
   27754 103076         OME     IDAB-1,WRDOUT   PUT OUT WORD
   27755 027772 
   27756 044020         INR     DELAY           BUMP DELAY COUNTER
   27757 100277         EXC     200+IDAB        TURN ON 'RUPTS
   27760 001000         JMP     OUTPUT,I
   27761 127753 
                *
   27762 000000 INPUT   0
   27763 102076         IME     IDAB-1,WRDIN    GET THE WORD
   27764 027776 
   27765 100277         EXC     200+IDAB        TURN ON 'RUPTS
   27766 001000         JMP     INPUT,I
   27767 127762 
                *
   27770 000021 ZDET    +ZEROD
   27771 031062 SYNCH   +SYN
   27772 177777 WRDOUT  -1
   27773 172110 DELAYP  -(+LINSP/16D)*10D
   27774 002000 CKSUMB  2000
   27775 000000 BLCKCNT 0
   27776 000000 WRDIN   0
   27777 000000 DELAY   0
                *
         000111 NWDSB   E       DONE+3-SETUP
         000000 EXEA    E       SETUP-SETUP
         000015 VECT    E       STVEC-SETUP
         000040 LINE0   E       40
         000130 ZDET2   E       ZDET-SETUP
     
   
                           16K  620


         THIS IS THE LOADER THAT IS USED FOR LOADING A 16K MACHINE. THE
         SYNCHRONOUS BOOTSTRAP FOR 16K IS AT THE END OF THIS LISTING.
   
         THE TWO ARE LISTED TOGETHER TO GIVE YOU A BETTER UNDERSTANDING
         OF WHAT THE MACHINE IS DOING.
   
         THIS DOCUMENT IS IN THE FILE (CES:33)NEW620.16K .  THE COMPLETE
         ASSEMBLY LISTING IS UNDER (CES:33)16K620.LST .
   
                 *
                 * INITIALIZATION FOR LOADER
                 *
   37240 014056 START   LDA     ENTRY   LOCATE THE ENTRY
   37241 006140         SUBI    NWDSB           LOCATE START OF BOOT
   37242 000111 
   37243 005014         TAX
   37244 054102         STA     BOOTRT+1        SAVE RETURN TO BOOT
                 *
   37245 015000         LDA     EXEA,X          FETCH I/O INS FROM BOOT
   37246 154340         ANA     OCT77           REMOVE ADDRESS
   37247 054047         STA     ENTRY           SAVE FOR NOW
                 *
   37250 124017         ADD     ST01            TURN OFF 'RUPTS
   37251 054016         STA     ST01
                 *
   37252 014037         LDA     ST02            ENABLE 'RUPTS
   37253 124043         ADD     ENTRY
   37254 054035         STA     ST02
   37255 054250         STA     ST03
   37256 054212         STA     ST07
                 *
   37257 014227         LDA     ST04            INPUT INST
   37260 124036         ADD     ENTRY
   37261 005311         DAR
   37262 054224         STA     ST04
                 *
   37263 014257         LDA     ST05            OUTPUT ZERO DET
   37264 124032         ADD     ENTRY
   37265 054255         STA     ST05
                 *
   37266 005311         DAR                     OUTPUT DATA
   37267 054155         STA     ST06
                 *
   37270 100000 ST01    EXC     IDA+00         TURN OFF 'RUPTS
   37271 015015         LDA     VECT,X          LOCATE IVECTS
   37272 154314         ANA     OCT77           REMOVE UNWANTED BITS
   37273 005012         TAB                     POINT B AT IT
                 *
   37274 006010         LDAI    INPUT1          SET INPUT VEC
   37275 037505 
   37276 056003         STA     3,B
                 *
   37277 006010         LDAI    OUTPUT1         SET OUTPUT
   37300 037444 
   37301 056001         STA     1,B
                 *
   
   37302 015130         LDA     ZDET2,X          FETCH ZERO DETECT
   37303 054317         STA     ZDET1
                 *
   37304 024303         LDB     LSTADR
   37305 014314         LDA     SYNCIT          BUILD ACKNOWLEGEMENT RECORD
   37306 056000         STA     0,B
   37307 005001         TZA                     CLEAR OUT COUNT
   37310 056001         STA     1,B
   37311 076002         STX     2,B
   37312 100200 ST02    EXC     IDA+200         ENABLE 'RUPTS
   37313 001000         JMP     ACK             LOOK OUT HERE WE GO!!!!
   37314 037333 
   37315 103277 FPANL   OBR     77              DRIVES FRONT PANEL
   37316 001000         JMP     *-*             RETURN TO BOOT
   37317 000000 
                ENTRY   E       *-1             LABEL DEFINITION
   37320 005041         TXA                     SEE IF LOADED WRONG
   37321 006140         SUBI    ENDLD           BETTER BE ZERO
   37322 037640 
   37323 001010         JAZ     START
   37324 037240 
   37325 005041         TXA                     LOADED IN WRONG PLACE
   37326 006140         SUBI    ENDLD-ENTRY+1   GET BACK TO THE BOOT
   37327 000322 
   37330 054001         STA     *+2
   37331 001000         JMP     *-*
   37332 000000 
   37333 024254 ACK     LDB     LSTADR          FETCH LAST BUFFER
   37334 064254         STB     SNDBLK          START THE TRANSMITTER
   37335 002000         JMPM    CKSUM           COMPUTE THE CHECKSUM
   37336 037555 
                 *
   37337 014264         LDA     VIRT            GET VIRTICAL SUM
   37340 056000         STA     0,B             PUT INTO BUFFER
   37341 014263         LDA     DIAG            AND THE DIAGONAL SUM
   37342 056001         STA     1,B
                 *
   37343 014016 NAK     LDA     LIMIT           RESET RECORD TIMER
   37344 054261         STA     ICNT
                 *
                 * WAIT OUT TIMEOUT WHILE LOOKING FOR A RECORD
                 *
   37345 014260 NA01    LDA     ICNT            IF TIME IS UP
   37346 001010 BOOTRT  JAZ     0               RETURN TO BOOT
   37347 000000 
   37350 024241         LDB     RECVD           IF NOT UP SEE IF A RECORD
   37351 001020         JBZ     NA01            IS IN
   37352 037345 
   37353 064234         STB     LSTADR          SAVE LAST RECEIVED REC ADDRESS
                 *
   37354 005001         TZA                     SET RECORD RECEIVED FLAG OFF
   37355 054234         STA     RECVD
                 *
   
   37356 002000 RECRCV  JMPM    CKSUM           ITS HERE, IS IT GOOD?
   37357 037555 
   37360 014243         LDA     VIRT            CHECK VIRTICAL SUM
   37361 136000         ERA     0,B
   37362 114242 LIMIT   ORA     DIAG            CHECK DIAGONAL SUM
   37363 136001         ERA     1,B
   37364 001010         JAZ     GOOD            ITS GOOD!!!
   37365 037370 
   37366 001000         JMP     NAK             ITS BAD!!!
   37367 037343 
                 *
   37370 014217 GOOD    LDA     LSTADR          FETCH BEGGINING OF RECORD
   37371 005014         TAX                     SET  TO BUFFER ADR
   37372 124213         ADD     DATSIZ          LOCATE END OF BUFFER
   37373 054233         STA     FILSTOP
                 *
   37374 015001         LDA     1,X             GET THE COUNT
   37375 001010         JAZ     0               COUNT ZERO GO START LOADED CODE
   37376 000000 
                 *
   37377 024065         LDB     COM             BUILD INSTRUCTION COM  ,A
   37400 064035         STB     OPT             FILL WITH ZEROES
   37401 005002         TZB                     SET COUNT ZERO
   37402 065001         STB     1,X
   37403 001002         JAP     SETOK           BR IF POSITIVE COUNT
   37404 037411 
                 *
   37405 024156         LDB     LOAD            BUILD LOAD INSTRUCTION
   37406 064027         STB     OPT
   37407 024175         LDB     MAXCHA          SET COUNT FOR ALL CHARACTERS
   37410 065001         STB     1,X             SET AS COUNT FOR RETURN
                 *
   37411 025002 SETOK   LDB     2,X             GET MEMORY ADDRESS
   37412 154174         ANA     OCT77           STRIP UNUSED BITS
   37413 001010         JAZ     FILLIT          BR IF DUMP ONLY
   37414 037432 
                 *
   37415 124172         ADD     LSTADR          LOCATE STOPPING POINT
   37416 054213         STA     MSTOP
                 *
   37417 015003 MOVIT   LDA     3,X             GET ONE FROM THE INPUT BUFFER
   37420 056000         STA     0,B             PUT IT INTO CORE
                 *
   37421 005201         COM     ,A              RETURN -1
   37422 055003         STA     3,X
                 *
   37423 005122         IBR                     BUMP THE POINTERS
   37424 003026         XBNZ    FPANL           DRIVE THE FRONT PANEL IF V70
   37425 037315 
   37426 005145         INC     X,AX
   37427 144202         SUB     MSTOP           CHECK FOR THE END
   
   37430 001004         JAN     MOVIT           KEEP GOING
   37431 037417 
                 *
                 * THE FOLLOWING FILLS IN WITH -1 OR TRANSFERS MEMORY FOR OUTPUT
                 *
   37432 005041 FILLIT  TXA                     CHECK FOR END OF FILL
   37433 144173 FILL1   SUB     FILSTOP
   37434 001002         JAP     ACK             GO ACKNOWLEGE IF DONE
   37435 037333 
                 *
   37436 000000 OPT     *-*                     FILLED IN LATTER
   37437 055003         STA     3,X             TUCK IT AWAY
   37440 005122         IBR                     POINT TO NEXT MEMORY WORD
   37441 005145         INC     X,AX
   37442 001000         JMP     FILL1           GO TRY AGAIN
   37443 037433 
                 *
                 * OUTPUT INTERRUPT PROCESSING
                 *
   37444 000000 OUTPUT1 0
   37445 103000 ST06    OME     IDA,OTDATA              SEND OUT THE DATA
   37446 037633 
   37447 044156         INR     ICNT            BUMP THE TIMER
   37450 054163         STA     OTASAV
                 *
   37451 064163         STB     OTBSAV
   37452 014141         LDA     OTSTAT          CHECK OUTPUT STATE
   37453 001004         JAN     OZSTAT          BR STATE ZERO
   37454 037474 
                 *
                 * STATE 1 XFER STATE
                 *
   37455 024136         LDB     OTPOS           GET NEXT CHAR
   37456 016000         LDA     0,B
   37457 054153         STA     OTDATA
   37460 005121         INC     B,A             GET NEW POSITION
   37461 054132         STA     OTPOS
                 *
   37462 144153         SUB     OTEND
   37463 001004         JAN     OTEXIT          EXIT IF NOT DONE
   37464 037467 
   37465 005201 COM     COM     ,A
                 *
   37466 054125         STA     OTSTAT          RETURN TO STATE ZERO
                 *
   37467 014144 OTEXIT  LDA     OTASAV          RESTORE + RETURN
   37470 024144         LDB     OTBSAV
   37471 100200 ST07    EXC     200+IDA         ENABLE INTERRUPTS
   37472 001000         JMP     OUTPUT1,I
   37473 137444 
                 *
   37474 014114 OZSTAT  LDA     SNDBLK          LOOK FOR SNDBLK
   37475 054116         STA     OTSTAT          SET OUTPUT STATE
   37476 124114         ADD     WDSREC          LOCATE END OF BUFFER
   37477 054136         STA     OTEND
   37500 005201         COM     ,A
   37501 054107         STA     SNDBLK          CLEAR SEND FLAG
   37502 054130         STA     OTDATA          AT LEAST 1 PAD SEND
   
   37503 001000         JMP     OTEXIT
   37504 037467 
                 *
                 * INPUT INTERRUPT PROCESSING
                 *
   37505 000000 INPUT1  0
   37506 054125         STA     INASAV          SAVE A
   37507 102500 ST04    CIA     0               BRING IN THE DATA
   37510 074124         STX     INXSAV
   37511 034103         LDX     INPOS
   37512 055000         STA     0,X             PUT AWAY THE DATA
                 *
   37513 014102         LDA     INSTAT          WHAT STATE ARE WE IN?
   37514 001002         JAP     INZSTA          BR SYNC LOOK MODE
   37515 037547 
                 *
   37516 005141 IN01    INC     X,A             CHECK FOR END
   37517 054075         STA     INPOS
   37520 144100         SUB     INEND
   37521 054074         STA     INSTAT          SET NEW STATE IF NEED BE
   37522 001002         JAP     RECIN           BR IF ALL HERE
   37523 037531 
                 *
   37524 014107 INRET   LDA     INASAV          RESTORE AND RETURN
   37525 034107         LDX     INXSAV
   37526 100200 ST03    EXC     200+IDA         RESTORE INTERRUPTS
   37527 001000         JMP     INPUT1,I
   37530 137505 
                 *
   37531 014065 RECIN   LDA     LSTREC          INDICATE RECORD IS IN
   37532 054057         STA     RECVD
                 *
   37533 014064         LDA     NXTREC          REVERSE BUFFERS
   37534 054060         STA     INPOS
   37535 124055         ADD     WDSREC
   37536 054062         STA     INEND
   37537 014057         LDA     LSTREC
   37540 054057         STA     NXTREC
   37541 014053         LDA     INPOS
   37542 054054         STA     LSTREC
                 *
   37543 103000 ST05    OME     IDA,ZDET1       SET ZERO DET
   37544 037623 
   37545 001000         JMP     INRET
   37546 037524 
                 *
   37547 015000 INZSTA  LDA     0,X             GET BACK THE DATA
   37550 134051         ERA     SYNCIT
   37551 001010         JAZ     IN01
   37552 037516 
   
   37553 001000         JMP     ST05
   37554 037543 
                 *
                 * CHECKSUM COMPUTATION SUBROUTINE
                 *
   37555 000000 CKSUM   0
   37556 005123         INC     B,AB            GET AROUND SYNC WORD
   37557 124026         ADD     DATSIZ   
   37560 054046         STA     FILSTOP         SAVE END OF RECORD
                 *
   37561 005001         TZA                     RESET SUMS
   37562 054041         STA     VIRT
   37563 054041         STA     DIAG
                 *
                LOAD    E       *               LABEL DEFINITION
   37564 016000 CKLOOP  LDA     0,B             COMPUTE EACH SUM
   37565 134036         ERA     VIRT
   37566 054035         STA     VIRT
   37567 014035         LDA     DIAG
   37570 004241         LRLA    1
   37571 136000         ERA     0,B
   37572 054032         STA     DIAG
   37573 005123         INC     B,AB
   37574 144032         SUB     FILSTOP         CHECK IF DONE
   37575 001004         JAN     CKLOOP
   37576 037564 
                 *
   37577 014025         LDA     DIAG            INCLUDE DIAGONAL IN VIRTICAL
   37600 004241         LRLA    1
   37601 134022         ERA     VIRT
   37602 054022         STA     DIAG
   37603 001000         JMP     CKSUM,I
   37604 137555 
                 *
                 * CONSTANTS AND INITIALIZED VARIABLEBS
                 *
   37605 000034 MAXCHA  +NWORDS-5
   37606 000036 DATSIZ  +NWORDS-3
   37607 000077 OCT77   +77
   37610 037212 LSTADR  +BUF1
   37611 177777 SNDBLK  -1
   37612 000000 RECVD   0
   37613 000041 WDSREC  +NWORDS
   37614 177777 OTSTAT  -1
   37615 037254 INPOS   +BUF2
   37616 000000 INSTAT  +0
   37617 037254 LSTREC  +BUF2
   37620 037212 NXTREC  +BUF1
   37621 037315 INEND   +BUF2+NWORDS
   37622 031062 SYNCIT  +SYN
                OTPOS   E       OTSTAT          LABEL DEFINITION
   
                 *
                 * VARIABLE DATA SPACE
                 *
   37623        ZDET1   R       *+1
   37624        VIRT    R       *+1
   37625        DIAG    R       *+1
   37626        ICNT    R       *+1
   37627        FILSTOP R       *+1
   37630        SAV     R       *+1
   37631        SAVE    R       *+1
   37632        MSTOP   R       *+1
   37633        OTDATA  R       *+1
   37634        OTASAV  R       *+1
   37635        OTBSAV  R       *+1
   37636        OTEND   R       *+1
                INASAV  E       OTASAV          LABEL DEFINITION
                INXSAV  E       OTBSAV          LABEL DEFINITION
                 *
                 * SPECIAL EQUATES
                 *
         000021 ZEROD   E       21
         000000 IDA     E       0
         000041 NWORDS  E       33D
         000010 POWFAL  E       10
         000012 POWST   E       12
         000027 IDAB    E       27
         000010 NBLOCKS E       (SYNCIT-START+1+NWORDS-2)/(NWORDS-1)
         031062 SYN     E       031062
         000041 WDPBLK  E       NWORDS
         011300 LINSP   E       4800D
         037254 BUF2    E       FPANL-NWORDS
         037212 BUF1    E       BUF2-NWORDS-1
   37637                R       LOADER+10*40
   37640                R       77640           
   
                *
                *SYNCHRONOUS BOOTSTRAP
                *
   37640 100077 SETUP   EXC     000+IDAB        TURN OFF 201 INTERRUPTS
                *
   37641 014126         LDA     ZDET            DISABLE ALL LINES
   37642 005311 DISABLE DAR
   37643 103177         OAR     IDAB
   37644 103125         OAR     25              TURN OFF SECOND CARD
   37645 005311         DAR
   37646 001002         JAP     DISABLE
   37647 037642 
                *
   37650 124117         ADD     ZDET            ENABLE LOAD LINE
   37651 103177         OAR     IDAB
                *
   37652 050010         STA     POWFAL          PUT HALT IN POWERFAIL 'RUPT
   37653 006010         LDAI    2000            LOAD INPUT 'RUPT
   37654 002000 
   37655 050040 STVEC   STA     LINE0
   37656 050042         STA     LINE0+2
   37657 054114         STA     CKSUMB
   37660 050012         STA     POWST           SETUP RESTART
   37661 006010         LDAI    INPUT
   37662 037762 
   37663 050043         STA     LINE0+3
   37664 006010         LDAI    OUTPUT
   37665 037753 
   37666 050041         STA     LINE0+1
   37667 006010         LDAI    SETUP-1         SET RESTART BRANCH
   37670 037637 
   37671 050013         STA     POWST+1
   37672 100277         EXC     200+IDAB        TURN ON 'RUPTS
                *
   37673 006030 BEGIN   LDXI    START
   37674 037240 
   37675 006020         LDBI    -(NBLOCKS+1)    NUMBER OF BLOCKS
   37676 177767 
                *
   37677 014073         LDA     DELAYP          SET UP DELAY LIMIT
   37700 054076         STA     DELAY
   37701 005122 SBLOCK  IBR                     RECEIVED ALL BLOCKS?
   37702 001020         JBZ     DONE            CHECK CKSUM IF YES
   37703 037746 
   37704 006010         LDAI    -(WDPBLK-1)     BLOCK WORD COUNT MINUS
   37705 177740                                 CHECKSUM
   37706 054066         STA     BLCKCNT
                *
   37707 103077 SYNC    OME     IDAB,ZDET       SET ZERO DETECT
   37710 037770 
   37711 064064         STB     WRDIN           RESET INPUT WORD
   37712 014064 SYNC1   LDA     DELAY           HAVE WAITED LONG ENOUGH?
   37713 001002         JAP     SETUP           RESTART IF YES
   37714 037640 
   37715 014060         LDA     WRDIN           WAIT FOR A CHAR
   37716 001004         JAN     SYNC1
   37717 037712 
                *
   
   37720 134050         ERA     SYNCH           SYNC?
   37721 001010         JAZ     SYNCED          YES START REC
   37722 037725 
   37723 001000         JMP     SYNC            GO SYNC AGAIN
   37724 037707 
                *
   37725 014045 SYNCED  LDA     DELAYP          RESET DELAY
   37726 054050         STA     DELAY
   37727 064032 SYNCD1  STB     INPUT           WAIT FOR 'RUPT
   37730 014031 SYNCD2  LDA     INPUT
   37731 001004         JAN     SYNCD2
   37732 037730 
                *
   37733 014042         LDA     WRDIN           PUT IN WORD
   37734 055000         STA     0,X
   37735 134036         ERA     CKSUMB
   37736 054035         STA     CKSUMB
   37737 005144         IXR
   37740 044034         INR     BLCKCNT         ALL OF BLOCK IN?
   37741 014033         LDA     BLCKCNT
   37742 001010         JAZ     SBLOCK          YES GET NEXT ONE
   37743 037701 
   37744 001000         JMP     SYNCD1          NO GET MORE
   37745 037727 
                *
   37746 014025 DONE    LDA     CKSUMB
   37747 002010         JAZM    ENTRY           GO TO LOADER
   37750 037317 
   37751 001000         JMP     SETUP
   37752 037640 
   37753 000000 OUTPUT  0
   37754 103076         OME     IDAB-1,WRDOUT   PUT OUT WORD
   37755 037772 
   37756 044020         INR     DELAY           BUMP DELAY COUNTER
   37757 100277         EXC     200+IDAB        TURN ON 'RUPTS
   37760 001000         JMP     OUTPUT,I
   37761 137753 
                *
   37762 000000 INPUT   0
   37763 102076         IME     IDAB-1,WRDIN    GET THE WORD
   37764 037776 
   37765 100277         EXC     200+IDAB        TURN ON 'RUPTS
   37766 001000         JMP     INPUT,I
   37767 137762 
                *
   37770 000021 ZDET    +ZEROD
   37771 031062 SYNCH   +SYN
   37772 177777 WRDOUT  -1
   37773 172110 DELAYP  -(+LINSP/16D)*10D
   37774 002000 CKSUMB  2000
   37775 000000 BLCKCNT 0
   37776 000000 WRDIN   0
   37777 000000 DELAY   0
                *
         000111 NWDSB   E       DONE+3-SETUP
         000000 EXEA    E       SETUP-SETUP
         000015 VECT    E       STVEC-SETUP
         000040 LINE0   E       40
         000130 ZDET2   E       ZDET-SETUP
     
   
                           20K  620


         THIS IS THE LOADER THAT IS USED FOR LOADING A 20K MACHINE. THE
         SYNCHRONOUS BOOTSTRAP FOR 20K IS AT THE END OF THIS LISTING.
   
         THE TWO ARE LISTED TOGETHER TO GIVE YOU A BETTER UNDERSTANDING
         OF WHAT THE MACHINE IS DOING.
   
         THIS DOCUMENT IS IN THE FILE (CES:33)NEW620.20K .  THE COMPLETE
         ASSEMBLY LISTING IS UNDER (CES:33)20K620.LST .
   
                 *
                 * INITIALIZATION FOR LOADER
                 *
   37240 014056 START   LDA     ENTRY   LOCATE THE ENTRY
   37241 006140         SUBI    NWDSB           LOCATE START OF BOOT
   37242 000111 
   37243 005014         TAX
   37244 054102         STA     BOOTRT+1        SAVE RETURN TO BOOT
                 *
   37245 015000         LDA     EXEA,X          FETCH I/O INS FROM BOOT
   37246 154340         ANA     OCT77           REMOVE ADDRESS
   37247 054047         STA     ENTRY           SAVE FOR NOW
                 *
   37250 124017         ADD     ST01            TURN OFF 'RUPTS
   37251 054016         STA     ST01
                 *
   37252 014037         LDA     ST02            ENABLE 'RUPTS
   37253 124043         ADD     ENTRY
   37254 054035         STA     ST02
   37255 054250         STA     ST03
   37256 054212         STA     ST07
                 *
   37257 014227         LDA     ST04            INPUT INST
   37260 124036         ADD     ENTRY
   37261 005311         DAR
   37262 054224         STA     ST04
                 *
   37263 014257         LDA     ST05            OUTPUT ZERO DET
   37264 124032         ADD     ENTRY
   37265 054255         STA     ST05
                 *
   37266 005311         DAR                     OUTPUT DATA
   37267 054155         STA     ST06
                 *
   37270 100000 ST01    EXC     IDA+00         TURN OFF 'RUPTS
   37271 015015         LDA     VECT,X          LOCATE IVECTS
   37272 154314         ANA     OCT77           REMOVE UNWANTED BITS
   37273 005012         TAB                     POINT B AT IT
                 *
   37274 006010         LDAI    INPUT1          SET INPUT VEC
   37275 037505 
   37276 056003         STA     3,B
                 *
   37277 006010         LDAI    OUTPUT1         SET OUTPUT
   37300 037444 
   37301 056001         STA     1,B
                 *
   
   37302 015130         LDA     ZDET2,X          FETCH ZERO DETECT
   37303 054317         STA     ZDET1
                 *
   37304 024303         LDB     LSTADR
   37305 014314         LDA     SYNCIT          BUILD ACKNOWLEGEMENT RECORD
   37306 056000         STA     0,B
   37307 005001         TZA                     CLEAR OUT COUNT
   37310 056001         STA     1,B
   37311 076002         STX     2,B
   37312 100200 ST02    EXC     IDA+200         ENABLE 'RUPTS
   37313 001000         JMP     ACK             LOOK OUT HERE WE GO!!!!
   37314 037333 
   37315 103277 FPANL   OBR     77              DRIVES FRONT PANEL
   37316 001000         JMP     *-*             RETURN TO BOOT
   37317 000000 
                ENTRY   E       *-1             LABEL DEFINITION
   37320 005041         TXA                     SEE IF LOADED WRONG
   37321 006140         SUBI    ENDLD           BETTER BE ZERO
   37322 037640 
   37323 001010         JAZ     START
   37324 037240 
   37325 005041         TXA                     LOADED IN WRONG PLACE
   37326 006140         SUBI    ENDLD-ENTRY+1   GET BACK TO THE BOOT
   37327 000322 
   37330 054001         STA     *+2
   37331 001000         JMP     *-*
   37332 000000 
   37333 024254 ACK     LDB     LSTADR          FETCH LAST BUFFER
   37334 064254         STB     SNDBLK          START THE TRANSMITTER
   37335 002000         JMPM    CKSUM           COMPUTE THE CHECKSUM
   37336 037555 
                 *
   37337 014264         LDA     VIRT            GET VIRTICAL SUM
   37340 056000         STA     0,B             PUT INTO BUFFER
   37341 014263         LDA     DIAG            AND THE DIAGONAL SUM
   37342 056001         STA     1,B
                 *
   37343 014016 NAK     LDA     LIMIT           RESET RECORD TIMER
   37344 054261         STA     ICNT
                 *
                 * WAIT OUT TIMEOUT WHILE LOOKING FOR A RECORD
                 *
   37345 014260 NA01    LDA     ICNT            IF TIME IS UP
   37346 001010 BOOTRT  JAZ     0               RETURN TO BOOT
   37347 000000 
   37350 024241         LDB     RECVD           IF NOT UP SEE IF A RECORD
   37351 001020         JBZ     NA01            IS IN
   37352 037345 
   37353 064234         STB     LSTADR          SAVE LAST RECEIVED REC ADDRESS
                 *
   37354 005001         TZA                     SET RECORD RECEIVED FLAG OFF
   37355 054234         STA     RECVD
                 *
   
   37356 002000 RECRCV  JMPM    CKSUM           ITS HERE, IS IT GOOD?
   37357 037555 
   37360 014243         LDA     VIRT            CHECK VIRTICAL SUM
   37361 136000         ERA     0,B
   37362 114242 LIMIT   ORA     DIAG            CHECK DIAGONAL SUM
   37363 136001         ERA     1,B
   37364 001010         JAZ     GOOD            ITS GOOD!!!
   37365 037370 
   37366 001000         JMP     NAK             ITS BAD!!!
   37367 037343 
                 *
   37370 014217 GOOD    LDA     LSTADR          FETCH BEGGINING OF RECORD
   37371 005014         TAX                     SET  TO BUFFER ADR
   37372 124213         ADD     DATSIZ          LOCATE END OF BUFFER
   37373 054233         STA     FILSTOP
                 *
   37374 015001         LDA     1,X             GET THE COUNT
   37375 001010         JAZ     0               COUNT ZERO GO START LOADED CODE
   37376 000000 
                 *
   37377 024065         LDB     COM             BUILD INSTRUCTION COM  ,A
   37400 064035         STB     OPT             FILL WITH ZEROES
   37401 005002         TZB                     SET COUNT ZERO
   37402 065001         STB     1,X
   37403 001002         JAP     SETOK           BR IF POSITIVE COUNT
   37404 037411 
                 *
   37405 024156         LDB     LOAD            BUILD LOAD INSTRUCTION
   37406 064027         STB     OPT
   37407 024175         LDB     MAXCHA          SET COUNT FOR ALL CHARACTERS
   37410 065001         STB     1,X             SET AS COUNT FOR RETURN
                 *
   37411 025002 SETOK   LDB     2,X             GET MEMORY ADDRESS
   37412 154174         ANA     OCT77           STRIP UNUSED BITS
   37413 001010         JAZ     FILLIT          BR IF DUMP ONLY
   37414 037432 
                 *
   37415 124172         ADD     LSTADR          LOCATE STOPPING POINT
   37416 054213         STA     MSTOP
                 *
   37417 015003 MOVIT   LDA     3,X             GET ONE FROM THE INPUT BUFFER
   37420 056000         STA     0,B             PUT IT INTO CORE
                 *
   37421 005201         COM     ,A              RETURN -1
   37422 055003         STA     3,X
                 *
   37423 005122         IBR                     BUMP THE POINTERS
   37424 003026         XBNZ    FPANL           DRIVE THE FRONT PANEL IF V70
   37425 037315 
   37426 005145         INC     X,AX
   37427 144202         SUB     MSTOP           CHECK FOR THE END
   
   37430 001004         JAN     MOVIT           KEEP GOING
   37431 037417 
                 *
                 * THE FOLLOWING FILLS IN WITH -1 OR TRANSFERS MEMORY FOR OUTPUT
                 *
   37432 005041 FILLIT  TXA                     CHECK FOR END OF FILL
   37433 144173 FILL1   SUB     FILSTOP
   37434 001002         JAP     ACK             GO ACKNOWLEGE IF DONE
   37435 037333 
                 *
   37436 000000 OPT     *-*                     FILLED IN LATTER
   37437 055003         STA     3,X             TUCK IT AWAY
   37440 005122         IBR                     POINT TO NEXT MEMORY WORD
   37441 005145         INC     X,AX
   37442 001000         JMP     FILL1           GO TRY AGAIN
   37443 037433 
                 *
                 * OUTPUT INTERRUPT PROCESSING
                 *
   37444 000000 OUTPUT1 0
   37445 103000 ST06    OME     IDA,OTDATA              SEND OUT THE DATA
   37446 037633 
   37447 044156         INR     ICNT            BUMP THE TIMER
   37450 054163         STA     OTASAV
                 *
   37451 064163         STB     OTBSAV
   37452 014141         LDA     OTSTAT          CHECK OUTPUT STATE
   37453 001004         JAN     OZSTAT          BR STATE ZERO
   37454 037474 
                 *
                 * STATE 1 XFER STATE
                 *
   37455 024136         LDB     OTPOS           GET NEXT CHAR
   37456 016000         LDA     0,B
   37457 054153         STA     OTDATA
   37460 005121         INC     B,A             GET NEW POSITION
   37461 054132         STA     OTPOS
                 *
   37462 144153         SUB     OTEND
   37463 001004         JAN     OTEXIT          EXIT IF NOT DONE
   37464 037467 
   37465 005201 COM     COM     ,A
                 *
   37466 054125         STA     OTSTAT          RETURN TO STATE ZERO
                 *
   37467 014144 OTEXIT  LDA     OTASAV          RESTORE + RETURN
   37470 024144         LDB     OTBSAV
   37471 100200 ST07    EXC     200+IDA         ENABLE INTERRUPTS
   37472 001000         JMP     OUTPUT1,I
   37473 137444 
                 *
   37474 014114 OZSTAT  LDA     SNDBLK          LOOK FOR SNDBLK
   37475 054116         STA     OTSTAT          SET OUTPUT STATE
   37476 124114         ADD     WDSREC          LOCATE END OF BUFFER
   37477 054136         STA     OTEND
   37500 005201         COM     ,A
   37501 054107         STA     SNDBLK          CLEAR SEND FLAG
   37502 054130         STA     OTDATA          AT LEAST 1 PAD SEND
   
   37503 001000         JMP     OTEXIT
   37504 037467 
                 *
                 * INPUT INTERRUPT PROCESSING
                 *
   37505 000000 INPUT1  0
   37506 054125         STA     INASAV          SAVE A
   37507 102500 ST04    CIA     0               BRING IN THE DATA
   37510 074124         STX     INXSAV
   37511 034103         LDX     INPOS
   37512 055000         STA     0,X             PUT AWAY THE DATA
                 *
   37513 014102         LDA     INSTAT          WHAT STATE ARE WE IN?
   37514 001002         JAP     INZSTA          BR SYNC LOOK MODE
   37515 037547 
                 *
   37516 005141 IN01    INC     X,A             CHECK FOR END
   37517 054075         STA     INPOS
   37520 144100         SUB     INEND
   37521 054074         STA     INSTAT          SET NEW STATE IF NEED BE
   37522 001002         JAP     RECIN           BR IF ALL HERE
   37523 037531 
                 *
   37524 014107 INRET   LDA     INASAV          RESTORE AND RETURN
   37525 034107         LDX     INXSAV
   37526 100200 ST03    EXC     200+IDA         RESTORE INTERRUPTS
   37527 001000         JMP     INPUT1,I
   37530 137505 
                 *
   37531 014065 RECIN   LDA     LSTREC          INDICATE RECORD IS IN
   37532 054057         STA     RECVD
                 *
   37533 014064         LDA     NXTREC          REVERSE BUFFERS
   37534 054060         STA     INPOS
   37535 124055         ADD     WDSREC
   37536 054062         STA     INEND
   37537 014057         LDA     LSTREC
   37540 054057         STA     NXTREC
   37541 014053         LDA     INPOS
   37542 054054         STA     LSTREC
                 *
   37543 103000 ST05    OME     IDA,ZDET1       SET ZERO DET
   37544 037623 
   37545 001000         JMP     INRET
   37546 037524 
                 *
   37547 015000 INZSTA  LDA     0,X             GET BACK THE DATA
   37550 134051         ERA     SYNCIT
   37551 001010         JAZ     IN01
   37552 037516 
   
   37553 001000         JMP     ST05
   37554 037543 
                 *
                 * CHECKSUM COMPUTATION SUBROUTINE
                 *
   37555 000000 CKSUM   0
   37556 005123         INC     B,AB            GET AROUND SYNC WORD
   37557 124026         ADD     DATSIZ   
   37560 054046         STA     FILSTOP         SAVE END OF RECORD
                 *
   37561 005001         TZA                     RESET SUMS
   37562 054041         STA     VIRT
   37563 054041         STA     DIAG
                 *
                LOAD    E       *               LABEL DEFINITION
   37564 016000 CKLOOP  LDA     0,B             COMPUTE EACH SUM
   37565 134036         ERA     VIRT
   37566 054035         STA     VIRT
   37567 014035         LDA     DIAG
   37570 004241         LRLA    1
   37571 136000         ERA     0,B
   37572 054032         STA     DIAG
   37573 005123         INC     B,AB
   37574 144032         SUB     FILSTOP         CHECK IF DONE
   37575 001004         JAN     CKLOOP
   37576 037564 
                 *
   37577 014025         LDA     DIAG            INCLUDE DIAGONAL IN VIRTICAL
   37600 004241         LRLA    1
   37601 134022         ERA     VIRT
   37602 054022         STA     DIAG
   37603 001000         JMP     CKSUM,I
   37604 137555 
                 *
                 * CONSTANTS AND INITIALIZED VARIABLEBS
                 *
   37605 000034 MAXCHA  +NWORDS-5
   37606 000036 DATSIZ  +NWORDS-3
   37607 000077 OCT77   +77
   37610 037212 LSTADR  +BUF1
   37611 177777 SNDBLK  -1
   37612 000000 RECVD   0
   37613 000041 WDSREC  +NWORDS
   37614 177777 OTSTAT  -1
   37615 037254 INPOS   +BUF2
   37616 000000 INSTAT  +0
   37617 037254 LSTREC  +BUF2
   37620 037212 NXTREC  +BUF1
   37621 037315 INEND   +BUF2+NWORDS
   37622 031062 SYNCIT  +SYN
                OTPOS   E       OTSTAT          LABEL DEFINITION
   
                 *
                 * VARIABLE DATA SPACE
                 *
   37623        ZDET1   R       *+1
   37624        VIRT    R       *+1
   37625        DIAG    R       *+1
   37626        ICNT    R       *+1
   37627        FILSTOP R       *+1
   37630        SAV     R       *+1
   37631        SAVE    R       *+1
   37632        MSTOP   R       *+1
   37633        OTDATA  R       *+1
   37634        OTASAV  R       *+1
   37635        OTBSAV  R       *+1
   37636        OTEND   R       *+1
                INASAV  E       OTASAV          LABEL DEFINITION
                INXSAV  E       OTBSAV          LABEL DEFINITION
                 *
                 * SPECIAL EQUATES
                 *
         000021 ZEROD   E       21
         000000 IDA     E       0
         000041 NWORDS  E       33D
         000010 POWFAL  E       10
         000012 POWST   E       12
         000027 IDAB    E       27
         000010 NBLOCKS E       (SYNCIT-START+1+NWORDS-2)/(NWORDS-1)
         031062 SYN     E       031062
         000041 WDPBLK  E       NWORDS
         011300 LINSP   E       4800D
         037254 BUF2    E       FPANL-NWORDS
         037212 BUF1    E       BUF2-NWORDS-1
   37637                R       LOADER+10*40
   37640                R       77640           
   
                *
                *SYNCHRONOUS BOOTSTRAP
                *
   47640 100077 SETUP   EXC     000+IDAB        TURN OFF 201 INTERRUPTS
                *
   47641 014126         LDA     ZDET            DISABLE ALL LINES
   47642 005311 DISABLE DAR
   47643 103177         OAR     IDAB
   47644 103125         OAR     25              TURN OFF SECOND CARD
   47645 005311         DAR
   47646 001002         JAP     DISABLE
   47647 047642 
                *
   47650 124117         ADD     ZDET            ENABLE LOAD LINE
   47651 103177         OAR     IDAB
                *
   47652 050010         STA     POWFAL          PUT HALT IN POWERFAIL 'RUPT
   47653 006010         LDAI    2000            LOAD INPUT 'RUPT
   47654 002000 
   47655 050040 STVEC   STA     LINE0
   47656 050042         STA     LINE0+2
   47657 054114         STA     CKSUMB
   47660 050012         STA     POWST           SETUP RESTART
   47661 006010         LDAI    INPUT
   47662 047762 
   47663 050043         STA     LINE0+3
   47664 006010         LDAI    OUTPUT
   47665 047753 
   47666 050041         STA     LINE0+1
   47667 006010         LDAI    SETUP-1         SET RESTART BRANCH
   47670 047637 
   47671 050013         STA     POWST+1
   47672 100277         EXC     200+IDAB        TURN ON 'RUPTS
                *
   47673 006030 BEGIN   LDXI    START
   47674 037240 
   47675 006020         LDBI    -(NBLOCKS+1)    NUMBER OF BLOCKS
   47676 177767 
                *
   47677 014073         LDA     DELAYP          SET UP DELAY LIMIT
   47700 054076         STA     DELAY
   47701 005122 SBLOCK  IBR                     RECEIVED ALL BLOCKS?
   47702 001020         JBZ     DONE            CHECK CKSUM IF YES
   47703 047746 
   47704 006010         LDAI    -(WDPBLK-1)     BLOCK WORD COUNT MINUS
   47705 177740                                 CHECKSUM
   47706 054066         STA     BLCKCNT
                *
   47707 103077 SYNC    OME     IDAB,ZDET       SET ZERO DETECT
   47710 047770 
   47711 064064         STB     WRDIN           RESET INPUT WORD
   47712 014064 SYNC1   LDA     DELAY           HAVE WAITED LONG ENOUGH?
   47713 001002         JAP     SETUP           RESTART IF YES
   47714 047640 
   47715 014060         LDA     WRDIN           WAIT FOR A CHAR
   47716 001004         JAN     SYNC1
   47717 047712 
                *
   
   47720 134050         ERA     SYNCH           SYNC?
   47721 001010         JAZ     SYNCED          YES START REC
   47722 047725 
   47723 001000         JMP     SYNC            GO SYNC AGAIN
   47724 047707 
                *
   47725 014045 SYNCED  LDA     DELAYP          RESET DELAY
   47726 054050         STA     DELAY
   47727 064032 SYNCD1  STB     INPUT           WAIT FOR 'RUPT
   47730 014031 SYNCD2  LDA     INPUT
   47731 001004         JAN     SYNCD2
   47732 047730 
                *
   47733 014042         LDA     WRDIN           PUT IN WORD
   47734 055000         STA     0,X
   47735 134036         ERA     CKSUMB
   47736 054035         STA     CKSUMB
   47737 005144         IXR
   47740 044034         INR     BLCKCNT         ALL OF BLOCK IN?
   47741 014033         LDA     BLCKCNT
   47742 001010         JAZ     SBLOCK          YES GET NEXT ONE
   47743 047701 
   47744 001000         JMP     SYNCD1          NO GET MORE
   47745 047727 
                *
   47746 014025 DONE    LDA     CKSUMB
   47747 002010         JAZM    ENTRY           GO TO LOADER
   47750 037317 
   47751 001000         JMP     SETUP
   47752 047640 
   47753 000000 OUTPUT  0
   47754 103076         OME     IDAB-1,WRDOUT   PUT OUT WORD
   47755 047772 
   47756 044020         INR     DELAY           BUMP DELAY COUNTER
   47757 100277         EXC     200+IDAB        TURN ON 'RUPTS
   47760 001000         JMP     OUTPUT,I
   47761 147753 
                *
   47762 000000 INPUT   0
   47763 102076         IME     IDAB-1,WRDIN    GET THE WORD
   47764 047776 
   47765 100277         EXC     200+IDAB        TURN ON 'RUPTS
   47766 001000         JMP     INPUT,I
   47767 147762 
                *
   47770 000021 ZDET    +ZEROD
   47771 031062 SYNCH   +SYN
   47772 177777 WRDOUT  -1
   47773 172110 DELAYP  -(+LINSP/16D)*10D
   47774 002000 CKSUMB  2000
   47775 000000 BLCKCNT 0
   47776 000000 WRDIN   0
   47777 000000 DELAY   0
                *
         000111 NWDSB   E       DONE+3-SETUP
         000000 EXEA    E       SETUP-SETUP
         000015 VECT    E       STVEC-SETUP
         000040 LINE0   E       40
         000130 ZDET2   E       ZDET-SETUP
     
   
                           24K  620


         THIS IS THE LOADER THAT IS USED FOR LOADING A 24K MACHINE. THE
         SYNCHRONOUS BOOTSTRAP FOR 24K IS AT THE END OF THIS LISTING.
   
         THE TWO ARE LISTED TOGETHER TO GIVE YOU A BETTER UNDERSTANDING
         OF WHAT THE MACHINE IS DOING.
   
         THIS DOCUMENT IS IN THE FILE (CES:33)NEW620.24K .  THE COMPLETE
         ASSEMBLY LISTING IS UNDER (CES:33)24K620.LST .
   
                 *
                 * INITIALIZATION FOR LOADER
                 *
   57240 014056 START   LDA     ENTRY   LOCATE THE ENTRY
   57241 006140         SUBI    NWDSB           LOCATE START OF BOOT
   57242 000111 
   57243 005014         TAX
   57244 054102         STA     BOOTRT+1        SAVE RETURN TO BOOT
                 *
   57245 015000         LDA     EXEA,X          FETCH I/O INS FROM BOOT
   57246 154340         ANA     OCT77           REMOVE ADDRESS
   57247 054047         STA     ENTRY           SAVE FOR NOW
                 *
   57250 124017         ADD     ST01            TURN OFF 'RUPTS
   57251 054016         STA     ST01
                 *
   57252 014037         LDA     ST02            ENABLE 'RUPTS
   57253 124043         ADD     ENTRY
   57254 054035         STA     ST02
   57255 054250         STA     ST03
   57256 054212         STA     ST07
                 *
   57257 014227         LDA     ST04            INPUT INST
   57260 124036         ADD     ENTRY
   57261 005311         DAR
   57262 054224         STA     ST04
                 *
   57263 014257         LDA     ST05            OUTPUT ZERO DET
   57264 124032         ADD     ENTRY
   57265 054255         STA     ST05
                 *
   57266 005311         DAR                     OUTPUT DATA
   57267 054155         STA     ST06
                 *
   57270 100000 ST01    EXC     IDA+00         TURN OFF 'RUPTS
   57271 015015         LDA     VECT,X          LOCATE IVECTS
   57272 154314         ANA     OCT77           REMOVE UNWANTED BITS
   57273 005012         TAB                     POINT B AT IT
                 *
   57274 006010         LDAI    INPUT1          SET INPUT VEC
   57275 057505 
   57276 056003         STA     3,B
                 *
   57277 006010         LDAI    OUTPUT1         SET OUTPUT
   57300 057444 
   57301 056001         STA     1,B
                 *
   
   57302 015130         LDA     ZDET2,X          FETCH ZERO DETECT
   57303 054317         STA     ZDET1
                 *
   57304 024303         LDB     LSTADR
   57305 014314         LDA     SYNCIT          BUILD ACKNOWLEGEMENT RECORD
   57306 056000         STA     0,B
   57307 005001         TZA                     CLEAR OUT COUNT
   57310 056001         STA     1,B
   57311 076002         STX     2,B
   57312 100200 ST02    EXC     IDA+200         ENABLE 'RUPTS
   57313 001000         JMP     ACK             LOOK OUT HERE WE GO!!!!
   57314 057333 
   57315 103277 FPANL   OBR     77              DRIVES FRONT PANEL
   57316 001000         JMP     *-*             RETURN TO BOOT
   57317 000000 
                ENTRY   E       *-1             LABEL DEFINITION
   57320 005041         TXA                     SEE IF LOADED WRONG
   57321 006140         SUBI    ENDLD           BETTER BE ZERO
   57322 057640 
   57323 001010         JAZ     START
   57324 057240 
   57325 005041         TXA                     LOADED IN WRONG PLACE
   57326 006140         SUBI    ENDLD-ENTRY+1   GET BACK TO THE BOOT
   57327 000322 
   57330 054001         STA     *+2
   57331 001000         JMP     *-*
   57332 000000 
   57333 024254 ACK     LDB     LSTADR          FETCH LAST BUFFER
   57334 064254         STB     SNDBLK          START THE TRANSMITTER
   57335 002000         JMPM    CKSUM           COMPUTE THE CHECKSUM
   57336 057555 
                 *
   57337 014264         LDA     VIRT            GET VIRTICAL SUM
   57340 056000         STA     0,B             PUT INTO BUFFER
   57341 014263         LDA     DIAG            AND THE DIAGONAL SUM
   57342 056001         STA     1,B
                 *
   57343 014016 NAK     LDA     LIMIT           RESET RECORD TIMER
   57344 054261         STA     ICNT
                 *
                 * WAIT OUT TIMEOUT WHILE LOOKING FOR A RECORD
                 *
   57345 014260 NA01    LDA     ICNT            IF TIME IS UP
   57346 001010 BOOTRT  JAZ     0               RETURN TO BOOT
   57347 000000 
   57350 024241         LDB     RECVD           IF NOT UP SEE IF A RECORD
   57351 001020         JBZ     NA01            IS IN
   57352 057345 
   57353 064234         STB     LSTADR          SAVE LAST RECEIVED REC ADDRESS
                 *
   57354 005001         TZA                     SET RECORD RECEIVED FLAG OFF
   57355 054234         STA     RECVD
                 *
   
   57356 002000 RECRCV  JMPM    CKSUM           ITS HERE, IS IT GOOD?
   57357 057555 
   57360 014243         LDA     VIRT            CHECK VIRTICAL SUM
   57361 136000         ERA     0,B
   57362 114242 LIMIT   ORA     DIAG            CHECK DIAGONAL SUM
   57363 136001         ERA     1,B
   57364 001010         JAZ     GOOD            ITS GOOD!!!
   57365 057370 
   57366 001000         JMP     NAK             ITS BAD!!!
   57367 057343 
                 *
   57370 014217 GOOD    LDA     LSTADR          FETCH BEGGINING OF RECORD
   57371 005014         TAX                     SET  TO BUFFER ADR
   57372 124213         ADD     DATSIZ          LOCATE END OF BUFFER
   57373 054233         STA     FILSTOP
                 *
   57374 015001         LDA     1,X             GET THE COUNT
   57375 001010         JAZ     0               COUNT ZERO GO START LOADED CODE
   57376 000000 
                 *
   57377 024065         LDB     COM             BUILD INSTRUCTION COM  ,A
   57400 064035         STB     OPT             FILL WITH ZEROES
   57401 005002         TZB                     SET COUNT ZERO
   57402 065001         STB     1,X
   57403 001002         JAP     SETOK           BR IF POSITIVE COUNT
   57404 057411 
                 *
   57405 024156         LDB     LOAD            BUILD LOAD INSTRUCTION
   57406 064027         STB     OPT
   57407 024175         LDB     MAXCHA          SET COUNT FOR ALL CHARACTERS
   57410 065001         STB     1,X             SET AS COUNT FOR RETURN
                 *
   57411 025002 SETOK   LDB     2,X             GET MEMORY ADDRESS
   57412 154174         ANA     OCT77           STRIP UNUSED BITS
   57413 001010         JAZ     FILLIT          BR IF DUMP ONLY
   57414 057432 
                 *
   57415 124172         ADD     LSTADR          LOCATE STOPPING POINT
   57416 054213         STA     MSTOP
                 *
   57417 015003 MOVIT   LDA     3,X             GET ONE FROM THE INPUT BUFFER
   57420 056000         STA     0,B             PUT IT INTO CORE
                 *
   57421 005201         COM     ,A              RETURN -1
   57422 055003         STA     3,X
                 *
   57423 005122         IBR                     BUMP THE POINTERS
   57424 003026         XBNZ    FPANL           DRIVE THE FRONT PANEL IF V70
   57425 057315 
   57426 005145         INC     X,AX
   57427 144202         SUB     MSTOP           CHECK FOR THE END
   
   57430 001004         JAN     MOVIT           KEEP GOING
   57431 057417 
                 *
                 * THE FOLLOWING FILLS IN WITH -1 OR TRANSFERS MEMORY FOR OUTPUT
                 *
   57432 005041 FILLIT  TXA                     CHECK FOR END OF FILL
   57433 144173 FILL1   SUB     FILSTOP
   57434 001002         JAP     ACK             GO ACKNOWLEGE IF DONE
   57435 057333 
                 *
   57436 000000 OPT     *-*                     FILLED IN LATTER
   57437 055003         STA     3,X             TUCK IT AWAY
   57440 005122         IBR                     POINT TO NEXT MEMORY WORD
   57441 005145         INC     X,AX
   57442 001000         JMP     FILL1           GO TRY AGAIN
   57443 057433 
                 *
                 * OUTPUT INTERRUPT PROCESSING
                 *
   57444 000000 OUTPUT1 0
   57445 103000 ST06    OME     IDA,OTDATA              SEND OUT THE DATA
   57446 057633 
   57447 044156         INR     ICNT            BUMP THE TIMER
   57450 054163         STA     OTASAV
                 *
   57451 064163         STB     OTBSAV
   57452 014141         LDA     OTSTAT          CHECK OUTPUT STATE
   57453 001004         JAN     OZSTAT          BR STATE ZERO
   57454 057474 
                 *
                 * STATE 1 XFER STATE
                 *
   57455 024136         LDB     OTPOS           GET NEXT CHAR
   57456 016000         LDA     0,B
   57457 054153         STA     OTDATA
   57460 005121         INC     B,A             GET NEW POSITION
   57461 054132         STA     OTPOS
                 *
   57462 144153         SUB     OTEND
   57463 001004         JAN     OTEXIT          EXIT IF NOT DONE
   57464 057467 
   57465 005201 COM     COM     ,A
                 *
   57466 054125         STA     OTSTAT          RETURN TO STATE ZERO
                 *
   57467 014144 OTEXIT  LDA     OTASAV          RESTORE + RETURN
   57470 024144         LDB     OTBSAV
   57471 100200 ST07    EXC     200+IDA         ENABLE INTERRUPTS
   57472 001000         JMP     OUTPUT1,I
   57473 137444 
                 *
   57474 014114 OZSTAT  LDA     SNDBLK          LOOK FOR SNDBLK
   57475 054116         STA     OTSTAT          SET OUTPUT STATE
   57476 124114         ADD     WDSREC          LOCATE END OF BUFFER
   57477 054136         STA     OTEND
   57500 005201         COM     ,A
   57501 054107         STA     SNDBLK          CLEAR SEND FLAG
   57502 054130         STA     OTDATA          AT LEAST 1 PAD SEND
   
   57503 001000         JMP     OTEXIT
   57504 057467 
                 *
                 * INPUT INTERRUPT PROCESSING
                 *
   57505 000000 INPUT1  0
   57506 054125         STA     INASAV          SAVE A
   57507 102500 ST04    CIA     0               BRING IN THE DATA
   57510 074124         STX     INXSAV
   57511 034103         LDX     INPOS
   57512 055000         STA     0,X             PUT AWAY THE DATA
                 *
   57513 014102         LDA     INSTAT          WHAT STATE ARE WE IN?
   57514 001002         JAP     INZSTA          BR SYNC LOOK MODE
   57515 057547 
                 *
   57516 005141 IN01    INC     X,A             CHECK FOR END
   57517 054075         STA     INPOS
   57520 144100         SUB     INEND
   57521 054074         STA     INSTAT          SET NEW STATE IF NEED BE
   57522 001002         JAP     RECIN           BR IF ALL HERE
   57523 057531 
                 *
   57524 014107 INRET   LDA     INASAV          RESTORE AND RETURN
   57525 034107         LDX     INXSAV
   57526 100200 ST03    EXC     200+IDA         RESTORE INTERRUPTS
   57527 001000         JMP     INPUT1,I
   57530 137505 
                 *
   57531 014065 RECIN   LDA     LSTREC          INDICATE RECORD IS IN
   57532 054057         STA     RECVD
                 *
   57533 014064         LDA     NXTREC          REVERSE BUFFERS
   57534 054060         STA     INPOS
   57535 124055         ADD     WDSREC
   57536 054062         STA     INEND
   57537 014057         LDA     LSTREC
   57540 054057         STA     NXTREC
   57541 014053         LDA     INPOS
   57542 054054         STA     LSTREC
                 *
   57543 103000 ST05    OME     IDA,ZDET1       SET ZERO DET
   57544 057623 
   57545 001000         JMP     INRET
   57546 057524 
                 *
   57547 015000 INZSTA  LDA     0,X             GET BACK THE DATA
   57550 134051         ERA     SYNCIT
   57551 001010         JAZ     IN01
   57552 057516 
   
   57553 001000         JMP     ST05
   57554 057543 
                 *
                 * CHECKSUM COMPUTATION SUBROUTINE
                 *
   57555 000000 CKSUM   0
   57556 005123         INC     B,AB            GET AROUND SYNC WORD
   57557 124026         ADD     DATSIZ   
   57560 054046         STA     FILSTOP         SAVE END OF RECORD
                 *
   57561 005001         TZA                     RESET SUMS
   57562 054041         STA     VIRT
   57563 054041         STA     DIAG
                 *
                LOAD    E       *               LABEL DEFINITION
   57564 016000 CKLOOP  LDA     0,B             COMPUTE EACH SUM
   57565 134036         ERA     VIRT
   57566 054035         STA     VIRT
   57567 014035         LDA     DIAG
   57570 004241         LRLA    1
   57571 136000         ERA     0,B
   57572 054032         STA     DIAG
   57573 005123         INC     B,AB
   57574 144032         SUB     FILSTOP         CHECK IF DONE
   57575 001004         JAN     CKLOOP
   57576 057564 
                 *
   57577 014025         LDA     DIAG            INCLUDE DIAGONAL IN VIRTICAL
   57600 004241         LRLA    1
   57601 134022         ERA     VIRT
   57602 054022         STA     DIAG
   57603 001000         JMP     CKSUM,I
   57604 137555 
                 *
                 * CONSTANTS AND INITIALIZED VARIABLEBS
                 *
   57605 000034 MAXCHA  +NWORDS-5
   57606 000036 DATSIZ  +NWORDS-3
   57607 000077 OCT77   +77
   57610 057212 LSTADR  +BUF1
   57611 177777 SNDBLK  -1
   57612 000000 RECVD   0
   57613 000041 WDSREC  +NWORDS
   57614 177777 OTSTAT  -1
   57615 057254 INPOS   +BUF2
   57616 000000 INSTAT  +0
   57617 057254 LSTREC  +BUF2
   57620 057212 NXTREC  +BUF1
   57621 057315 INEND   +BUF2+NWORDS
   57622 031062 SYNCIT  +SYN
                OTPOS   E       OTSTAT          LABEL DEFINITION
   
                 *
                 * VARIABLE DATA SPACE
                 *
   57623        ZDET1   R       *+1
   57624        VIRT    R       *+1
   57625        DIAG    R       *+1
   57626        ICNT    R       *+1
   57627        FILSTOP R       *+1
   57630        SAV     R       *+1
   57631        SAVE    R       *+1
   57632        MSTOP   R       *+1
   57633        OTDATA  R       *+1
   57634        OTASAV  R       *+1
   57635        OTBSAV  R       *+1
   57636        OTEND   R       *+1
                INASAV  E       OTASAV          LABEL DEFINITION
                INXSAV  E       OTBSAV          LABEL DEFINITION
                 *
                 * SPECIAL EQUATES
                 *
         000021 ZEROD   E       21
         000000 IDA     E       0
         000041 NWORDS  E       33D
         000010 POWFAL  E       10
         000012 POWST   E       12
         000027 IDAB    E       27
         000010 NBLOCKS E       (SYNCIT-START+1+NWORDS-2)/(NWORDS-1)
         031062 SYN     E       031062
         000041 WDPBLK  E       NWORDS
         011300 LINSP   E       4800D
         057254 BUF2    E       FPANL-NWORDS
         057212 BUF1    E       BUF2-NWORDS-1
   57637                R       LOADER+10*40
   57640                R       77640           
   
                *
                *SYNCHRONOUS BOOTSTRAP
                *
   57640 100077 SETUP   EXC     000+IDAB        TURN OFF 201 INTERRUPTS
                *
   57641 014126         LDA     ZDET            DISABLE ALL LINES
   57642 005311 DISABLE DAR
   57643 103177         OAR     IDAB
   57644 103125         OAR     25              TURN OFF SECOND CARD
   57645 005311         DAR
   57646 001002         JAP     DISABLE
   57647 057642 
                *
   57650 124117         ADD     ZDET            ENABLE LOAD LINE
   57651 103177         OAR     IDAB
                *
   57652 050010         STA     POWFAL          PUT HALT IN POWERFAIL 'RUPT
   57653 006010         LDAI    2000            LOAD INPUT 'RUPT
   57654 002000 
   57655 050040 STVEC   STA     LINE0
   57656 050042         STA     LINE0+2
   57657 054114         STA     CKSUMB
   57660 050012         STA     POWST           SETUP RESTART
   57661 006010         LDAI    INPUT
   57662 057762 
   57663 050043         STA     LINE0+3
   57664 006010         LDAI    OUTPUT
   57665 057753 
   57666 050041         STA     LINE0+1
   57667 006010         LDAI    SETUP-1         SET RESTART BRANCH
   57670 057637 
   57671 050013         STA     POWST+1
   57672 100277         EXC     200+IDAB        TURN ON 'RUPTS
                *
   57673 006030 BEGIN   LDXI    START
   57674 057240 
   57675 006020         LDBI    -(NBLOCKS+1)    NUMBER OF BLOCKS
   57676 177767 
                *
   57677 014073         LDA     DELAYP          SET UP DELAY LIMIT
   57700 054076         STA     DELAY
   57701 005122 SBLOCK  IBR                     RECEIVED ALL BLOCKS?
   57702 001020         JBZ     DONE            CHECK CKSUM IF YES
   57703 057746 
   57704 006010         LDAI    -(WDPBLK-1)     BLOCK WORD COUNT MINUS
   57705 177740                                 CHECKSUM
   57706 054066         STA     BLCKCNT
                *
   57707 103077 SYNC    OME     IDAB,ZDET       SET ZERO DETECT
   57710 057770 
   57711 064064         STB     WRDIN           RESET INPUT WORD
   57712 014064 SYNC1   LDA     DELAY           HAVE WAITED LONG ENOUGH?
   57713 001002         JAP     SETUP           RESTART IF YES
   57714 057640 
   57715 014060         LDA     WRDIN           WAIT FOR A CHAR
   57716 001004         JAN     SYNC1
   57717 057712 
                *
   
   57720 134050         ERA     SYNCH           SYNC?
   57721 001010         JAZ     SYNCED          YES START REC
   57722 057725 
   57723 001000         JMP     SYNC            GO SYNC AGAIN
   57724 057707 
                *
   57725 014045 SYNCED  LDA     DELAYP          RESET DELAY
   57726 054050         STA     DELAY
   57727 064032 SYNCD1  STB     INPUT           WAIT FOR 'RUPT
   57730 014031 SYNCD2  LDA     INPUT
   57731 001004         JAN     SYNCD2
   57732 057730 
                *
   57733 014042         LDA     WRDIN           PUT IN WORD
   57734 055000         STA     0,X
   57735 134036         ERA     CKSUMB
   57736 054035         STA     CKSUMB
   57737 005144         IXR
   57740 044034         INR     BLCKCNT         ALL OF BLOCK IN?
   57741 014033         LDA     BLCKCNT
   57742 001010         JAZ     SBLOCK          YES GET NEXT ONE
   57743 057701 
   57744 001000         JMP     SYNCD1          NO GET MORE
   57745 057727 
                *
   57746 014025 DONE    LDA     CKSUMB
   57747 002010         JAZM    ENTRY           GO TO LOADER
   57750 057317 
   57751 001000         JMP     SETUP
   57752 057640 
   57753 000000 OUTPUT  0
   57754 103076         OME     IDAB-1,WRDOUT   PUT OUT WORD
   57755 057772 
   57756 044020         INR     DELAY           BUMP DELAY COUNTER
   57757 100277         EXC     200+IDAB        TURN ON 'RUPTS
   57760 001000         JMP     OUTPUT,I
   57761 157753 
                *
   57762 000000 INPUT   0
   57763 102076         IME     IDAB-1,WRDIN    GET THE WORD
   57764 057776 
   57765 100277         EXC     200+IDAB        TURN ON 'RUPTS
   57766 001000         JMP     INPUT,I
   57767 157762 
                *
   57770 000021 ZDET    +ZEROD
   57771 031062 SYNCH   +SYN
   57772 177777 WRDOUT  -1
   57773 172110 DELAYP  -(+LINSP/16D)*10D
   57774 002000 CKSUMB  2000
   57775 000000 BLCKCNT 0
   57776 000000 WRDIN   0
   57777 000000 DELAY   0
                *
         000111 NWDSB   E       DONE+3-SETUP
         000000 EXEA    E       SETUP-SETUP
         000015 VECT    E       STVEC-SETUP
         000040 LINE0   E       40
         000130 ZDET2   E       ZDET-SETUP
   
  V@
"S