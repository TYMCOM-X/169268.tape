C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C                                                                       C
C       PROGRAM: FTSP2 - PTS PART 2                                     C
C       AUTHOR: JO ANN JOELS                                            C
C       VERSION 1.0                                                     C
C       CREATED: APRIL, 1987                                            C
C       LAST UPDATED:                                                    C
C       LAST UPDATED BY:                                                 C
C                                                                        C
C       THIS PROGRAM IS PART 2 OF THE EFFORT TO DETERMINE THE PORTS      C
C       REQUIREMENTS FOR THE FTS2000 BID.  IT FINDS THE NEAREST LOCAL    C
C                                                                        C
C{_     ACCESS POINT IN TYMNET TO EACH OF THE FEDERAL LOCAL CALLING      C
C{_     AREAS.                                                           C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

        INTEGER FTSLATA,FTSNAM(2),FTSDMS(2),FTSOUT(2),IDATE(2),END,FREC,
     +  CNODE,CV,CH,CSITE,FTSV,FTSH,MILES,MMILES,MSITE,MNODE,CCITY(4),
     +  CSTATE,CTYPE(3),TPORTS,MTYPE(3),MCITY(4),MSTATE,MV,MH,FTSTEL,
     +  PORTS,FTSPRT,FTSCTY(4),FTSST,APORTS,IZERO,FTSNPA,FTSNXX,XEND,
     +  XFIRST,NEWCTY(4),NEWST,NEWLAT,NEWNXX,NEWNPA,NEWTEL

        REAL PC,PC100

        CALL DBSTRT(1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0)

        IZERO=0
        PC100=100.00
        XFIRST=0
        XEND=0

100     TYPE 110
110     FORMAT (1X,'FTS2000 PROGRAM - PART 2')
115     CALL DATE(IDATE)
120     TYPE 125,IDATE
125     FORMAT (1X,2A5)
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC


CCCCC
C GET FTS FILE NAME FROM USER
CCCCC
150     TYPE 160
160     FORMAT (//,1X,'ENTER FTS FILE NAME: ',$)
        ACCEPT 165,FTSNAM
165     FORMAT (2A5)

CCCCC
C BUILD OTHER FILE NAMES
CCCCC

170     ENCODE(10,175,FTSOUT)(FTSNAM(I),I=1,2)
175     FORMAT (A5,A1,'.RPT')
        ENCODE(9,180,FTSDMS)(FTSNAM(I),I=1,2)
180     FORMAT (A5,A1,'.P1')


CCCCC
C OPEN THE OUTPUT FILE
CCCCC
250     OPEN(21,FTSOUT,OUTPUT)

CCCCC
C OPEN THE DATA BASES
CCCCC
        CALL DBOPEN(FTSNAM,FTSDMS,'(DBTARIFF)LATA','(FJAVADI)CLSITE',
     +  '(NETSTAT)CKTS','(NEWPRT)PORTS')

CCCCC
C FIND ALL OF THE RECORDS IN THE FTS DATA BASE
CCCCC
        CALL DBSET(1)
        CALL DBFIND('ALL')
        CALL DBSORT('STATE','CITY','NPA','NXX','TELNO')

CCCCC
C LOOP THROUGH THE RECORDS ONE BY ONE
CCCCC
400     CALL DBGREC($900)
        CALL DBVAL('LATA',NEWLATA,'NPA',NEWNPA,'NXX',NEWNXX,'TELNO',
     +  NEWTEL,'CITY',NEWCTY,'STATE',NEWST)

CCCCC
C CHECK IF THIS IS THE FIRST RECORD ENCOUNTERED
CCCCC
405     IF (XFIRST.NE.0) GOTO 410
        XFIRST=1
        FTSLAT=NEWLAT
        FTSNPA=NEWNPA
        FTSNXX=NEWNXX
        FTSTEL=NEWTEL
        FTSST=NEWST
        DO 407 I = 1,4
        FTSCTY(I)=NEWCTY(I)
407     CONTINUE
        GOTO 400

CCCCC
C THIS IS NOT THE 1ST RECORD. CHECK IF THE CITY OR STATE HAS CHANGED.
CCCCC
410     IF ( ( (NEWCTY(1).EQ.FTSCTY(1)) .AND. (NEWCTY(2).EQ.FTSCTY(2))
     +  .AND.  (NEWCTY(3).EQ.FTSCTY(3)) .AND. (NEWCTY(4).EQ.FTSCTY(4)) )
     +  .AND.  (NEWST.EQ.FTSST) ) GOTO 400

C
CCCCC
C FTS ACCESS CITY HAS CHANGED.
C GET TOTAL PORTS FOR THIS FTS ACCESS CITY
CCCCC
415     CALL DBSET(2)
        CALL DBFIND('CITY','EQ',FTSCTY,'AND','STATE','EQ',FTSST)
        FTSPRT=0
420     CALL DBGREC($430)
        CALL DBVAL('PORTS',PORTS)
        FTSPRT=FTSPRT+PORTS
        GOTO 420

CCCCC
C FIND THE FTS CITY AREA CODE AND EXCHANGE IN THE LATA DATA BASE
CCCCC
430     CALL DBSET(3)
        CALL DBFIND('NPA','EQ',FTSNPA,'AND','NNX','EQ',FTSNXX)

C       CCCCC
C       C NOW GET THE V AND H FOR THE FTS CITY
C       CCCCC
435     CALL DBGREC($440)
        CALL DBVAL('V',FTSV,'H',FTSH)

CCCCC
C GO BACK AND FIND ALL CITIES WITHIN THE LATA FOR THE FTS CITY
CCCCC
440     CALL DBFIND('LATA','EQ',FTSLATA)
        CALL DBNREC(NREC)

CCCCC
C MAP THIS SET OF CITIES TO THE SITE DATA BASE TO FIND OUT IN WHICH
C OF THESE CITIES TYMNET HAS SITES.  THIS WILL DETERMINE
C THE SET OF CANDIDATES FOR THE CLOSEST TYMNET SITE TO THE FTS CITY.
CCCCC
        CALL DBEXEC ('MAP TO 4 VIA V TO V AND VIA H TO H')
        CALL DBNREC(NREC)
        IF (NREC.NE.0) GOTO 445
        MPORTS=0
        MMILES=9999
        NEW='*'
        GOTO 605

CCCCC
C NOW TO GET NEEDED INFORMATION ON THESE SITES WE NEED TO FIND THEM IN THE
C CKTS DATA BASE.
CCCCC
445     CALL DBEXEC('MAP TO 5 VIA SITEID TO SITE1')
        CALL DBNREC(NREC)
        IF (NREC.NE.0) GOTO 450
        TYPE 452,SITEID
452     FORMAT (1X,'WARNING!! NO RECORDS IN CKTS FOR SITE: ',I4)
        MPORTS=0
        MMILES=9999
        GOTO 605

CCCCC
C FURTHER REDUCE THE CANDIDATES BY MAKING SURE ALL SITES BELONG TO TYMNET
C AND HAVE LOCAL ACCESS CAPABILITY.
CCCCC
450     CALL DBEXEC('SEARCH LAST AND COMPANY1 CT TYMNET')
        CALL DBEXEC('SEARCH LAST AND POINTYPE1 EQ CONSAT TYMSAT ISIS')
        CALL DBNREC(NREC)

CCCCC
C NOW FIND OUT WHICH OF THESE NODES REALLY HAVE LOCAL ACCESS BY LOOKING
C THEM UP IN THE PORTS DATA BASE.  THROW OUT BAD AND UNUSED PORTS.
CCCCC
455     CALL DBEXEC ('MAP TO 6 VIA POINT1 TO NODE')
        CALL DBEXEC('FIND LAST AND PCODE NE 0 7 8')
        CALL DBNREC(NPORTS)
        IF (NPORTS.NE.0) GOTO 460
        MMILES=9999
        MPORTS=0
        GOTO 605

CCCCC
C SORT THESE PORT RECORDS BY NODE NUMBER AND LOOP THROUGH THEM ONE BY ONE
CCCCC
460     CALL DBSORT('NODE')
        CNODE=0
        END=0
        FREC=0
        TPORTS=0
        MMILES=9999

465     CALL DBGREC($575)
        CALL DBVAL('NODE',NODE)

CCCCC
CCK IF THIS IS THE FIRST RECORD ENCOUNTERED
CCCCC
470     IF (FREC.NE.0) GOTO 472
        FREC=1
        CNODE=NODE
        GOTO 550

CCCCC
C THIS IS NOT THE FIRST RECORD. CHECK IF THE NODE HAS CHANGED.
CCCCC
472     IF (CNODE.EQ.NODE)GOTO 550

CCCCC
C NODE HAS CHANGED.
C WE HAVE THE TOTAL NUMBER OF PORTS ON THE NODE.
C FIND OUT THE DISTANCE BETWEEN THIS NODE AND THE FTS CITY.
CCCCC
475     CALL DBSET(5)
        CALL DBFIND('POINT1','EQ',CNODE)
        CALL DBGREC($480)
        CALL DBVAL('V1',CV,'H1',CH,'PLACE1',CCITY,'ST1',CSTATE,'SITE1',
     +  CSITE,'POINTYPE1',CTYPE)

480     ITEMP=((FTSV-CV)**2 + (FTSH-CH)**2 + 9)/10
        MILES=INT(SQRT(FLOAT(ITEMP))+.9)

CCCCC
C CHECK IF THIS THE CLOSEST CITY SO FAR
CCCCC
490     IF (MILES.GE.MMILES)GOTO 500

CCCCC
C THIS IS THE CLOSEST CITY
CCCCC
495     MMILES=MILES
        MSITE=CSITE
        MNODE=CNODE
        MPORTS=TPORTS
        MSTATE=CSTATE
        MV=CV
        MH=CH
        DO 496 I=1,4
        MCITY(I)=CCITY(I)
496     CONTINUE
        DO 497 I=1,3
        MTYPE(I)=CTYPE(I)
497     CONTINUE

CCCCC
C GO LOOK AT NEXT NODE
CCCCC
500     CNODE=NODE
        TPORTS=0
        IF (END.EQ.1) GOTO 600

CCCCC
C NODE HAS NODE CHANGED. INCREMENT THE PORT COUNTER.
CCCCC
550     TPORTS=TPORTS+1

CCCCC
C GO GET ANOTHER RECORD
CCCCC
560     CALL DBSET(6)
        GOTO 465

CCCCC
C BRANCH TO HERE ON END OF PORTS RECORDS
CCCCC
575     END=1
        GOTO 475

CCCCC
C CHECK IF CLOSEST SITE IS WITHIN 30 MILES OF FTS CITY.
CCCCC
600     IF (MMILES.LE.30) GOTO 620
        NEW='*'

CCCCC
C THE CLOSEST SITE IS NOT CLOSE ENOUGH. WE NEED A NEW SITE.
CCCCC
605     WRITE(21,610)FTSLAT,FTSCTY,FTSST,MMILES,MSITE,(MCITY(I),I=1,3),
     +  MSTATE,MV,MH,MNODE,IZERO,FTSPRT,FTSPRT,PC100,NEW
610     FORMAT (I3,1X,4A5,1X,A2,1X,I4,1X,I4,1X,3A5,1X,A2,1X,I5,1X,I5,
     +  1X,I5,1X,I4,1X,I4,1X,I4,1X,F6.2,1X,A1)

CCCCC
C GO LOOK AT NEXT FTS FTS CITY
CCCCC
        GOTO 630

CCCCC
C THE CLOSEST SITE IS CLOSE ENOUGH.  OUTPU THE DATA
CCCCC
620     APORTS=MPORTS+FTSPRT
        PC=(FLOAT(FTSPRT)/FLOAT(APORTS))*100.
        NEW=' '
        WRITE(21,610)FTSLAT,FTSCTY,FTSST,MMILES,MSITE,(MCITY(I),I=1,3),
     +  MSTATE,MV,MH,MNODE,MPORTS,FTSPRT,APORTS,PC,NEW
625     FORMAT (I3,1X,I4,1X,4A5,6X,A2,1X,I5,1X,I5,1X,I5,1X,I4,1X,I4,
     +  1X,I4,1X,F6.2,1X,I4)

CCCCC
C GO LOOK AT NEXT FTS CITY
CCCCC
630     IF (XEND.EQ.1) GOTO 950
        FTSLAT=NEWLAT
        FTSNPA=NEWNPA
        FTSNXX=NEWNXX
        FTSTEL=NEWTEL
        FTSST=NEWST
        DO 635 I = 1,4
        FTSCTY(I)=NEWCTY(I)
635     CONTINUE

        MMILES=9999
        MSITE=0
        MNODE=0
        MPORTS=0
        MSITE=0
        MSTATE=' '
        MV=0
        MH=0
        DO 637 I=1,4
        MCITY(I)=' '
637     CONTINUE
        DO 638 I=1,3
        MTYPE(I)=' '
638     CONTINUE

        CALL DBSET(1)
        GOTO 400

CCCCC
C BRANCH TO HERE AT END OF FTS CITIES
CCCCC
900     XEND=1
        CALL DBSET(1)
        GOTO 415

CCCCC
C FINISHED.
CCCCC
950     CLOSE(21)
9999    CALL DBEND
        END
  