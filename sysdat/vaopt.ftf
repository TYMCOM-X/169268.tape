CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C PROGRAM: VAOPT
C
C AUTHOR: JO ANN JOELS, AUGUST 31, 1988
C
C THIS PROGRAM DETERMINES THE OPTIMAL CONFIURATION OF VERY VA USP.
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

        INTEGER ADDRESS(4),CONUSP

        CALL DBSTRT(1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,
     +          1,0,1,0,1,0,1,0,1,0,1,0,1,0)

CCCCC
C OPEN THE 1022 DATA BASES AND THE OUTPUT FILE
CCCCC
100     CALL DBOPEN('(NLAU)TURBO','(NLAU)TURBO')
        OPEN(21,'VAOPT.OUT',OUTPUT)

CCCCC
C SET THE DATA BASE TO THE FIRST COPY OF THE  DATA BASE.
C FIND ALL RECORDS AND SORT BY ADDRESS
CCCCC
120     CALL DBSET(1)
        CALL DBSORT('ADDRESS')

CCCCC
C GET A RECORD FROM THE 1ST COPY OF THE  DATA BASE
CCCCC
150     CALL DBGREC($800)
        CALL DBVAL('ADDRESS',ADDRESS)

CCCCC
C FROM THE 2ND COPY OF THE  DATA BASE GET THE NUMBER OF 
C USPS WITH THIS ADDRESS.
CCCCC
155     CALL DBSET(2)
        CALL DBFIND('ADDRESS','EQ',ADDRESS)
        CALL DBNREC(NREC)

CCCCC
C GET THE NEXT CONSOLIDATED SITE NUMBER
CCCCC
160     CONUSP = CONUSP+1

CCCCC
C IF THERE IS ONLY ONE USP AT THE ADDRESS
C USE THE SINGLE ALGORITHM FOR FINDING THE OPTIMAL CONFIGURATION
C THEN GO GET THE NEXT ADDRESS RECORD FROM THE 1ST COPY OF THE "REQURIED"
C DATA BASE.
CCCCC
170     IF (NREC.NE.1) GOTO 180
        CALL SINGLE(CONUSP)
        CALL DBSET(1)
        GOTO 150

CCCCC
C IF THERE IS MORE THAN ONE USP AT THE ADDRESS
C USE THE MULTIPLE ALGORITM FOR FINDING THE OPTIMAL CONFIGURATION
C FOR THE ADDRESS .
CCCCC
180     CALL MULTIPLE(CONUSP)

C       CCCCC
C       C GET PAST THE OTHER RECORDS FOR THIS SAME ADDRESS IN THE
C       C FIRST COPY OF THE DATA BASE.
C       CCCCC
        CALL DBSET(1)
        DO 185 I = 1,NREC-1
        CALL DBGREC($800)
185     CONTINUE

        GOTO 150

CCCCC
C FINISHED WITH ALL ADDRESSES.  CLOSE ALL INPUT AND OUTPUT FILES.
CCCCC
800     CLOSE(21)
        CALL DBEND

        END



CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C       SUBROUTINE: SINGLE(CONUSP)
C
C       THIS SUBROUTINE FINDS THE OPTIMAL CONFIGURATION FOR
C       VA ADDRESSES WITH ONLY ONE USP AT THE ADDRESS.
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

        SUBROUTINE SINGLE(CONUSP)

        INTEGER CONUSP,ADDRESS(4),CON,STATE,CITY(3),TCOST,
     +          TGP,TIOC4,TIOC8,TFS,TMEM,TTPUT,TMOD,TFCC,ASPCE,
     +          APOWR,ABTU,AFCC,MCOST,MMEM,MTPUT,MMOD,MFCC,
     +          PCOST,PMEM,PTPUT,PMOD,PFCC,GP,IOC4,IOC8,FS

        REAL USP,BW,TUTIL,TSPCE,TPOWR,TBTU,
     +          MUTIL,MSPCE,MPOWR,MBTU,
     +          PUTIL,PSPCE,PPOWR,PBTU

        CON = 'N'
        NUMUSP = 1
        NUMLNK = 1
        GP = 0
        IOC4 = 0
        IOC8 = 0
        FS = 0

CCCCC
C GET ALL OF THE INFORMATION FROM THE  RECORD.
CCCCC
100     CALL DBVAL('TCOST',TCOST,'TGP',TGP,'TIOC4',TIOC4,'TIOC8',
     +       TIOC8,'TFS',TFS,'TMEM',TMEM,'TTPUT',TTPUT,'TUTIL',
     +       TUTIL,'TMOD',TMOD,'TSPCE',TSPCE,'TPOWR',TPOWR,'TBTE',
     +       TBTU,'TFCC',TFCC,'MCOST',MCOST,'MMEM',MMEM,'MTPUT',
     +       MTPUT,'MUTIL',MUTIL,
     +       'MMOD',MMOD,'MSPCE',MSPCE,'MPOWR',MPOWR,'MBTU',
     +       MBTU,'MFCC',MFCC,'PCOST',PCOST,'PMEM',PMEM,'PTPUT',
     +       PTPUT,'PUTIL',PUTIL,
     +       'PMOD',PMOD,'PSPCE',PSPCE,'PPOWR',PPOWR,'PBTU',
     +       PBTU,'PFCC',PFCC,'USP',USP,'ADDRESS',ADDRESS)

        CALL DBVAL('ACCESS',BW,'SPACE',ASPCE,'POWER',APOWR,'BTU',ABTU,
     +             'FCC',AFCC,'CITY',CITY,'STATE',STATE)

CCCCC
C IF THERE ARE ANY FCC REQUIREMENTS ONLY A TURBO SOLUTION
C WILL MEET THE REQUIREMENT
CCCCC
200     IF (AFCC.NE.'N') GOTO 350

CCCCC
C ASSUME PICO IS THE CHEAPEST CONFIGURATION. CHECK IF PICO
C PASSES ALL OF THE REQUIREMENT TESTS.
CCCCC
300     IF (PCOST.EQ.0) GOTO 325
        HWTYPE = 'PICO '
        CARDS = 0
        CALL TEST(HWTYPE,CARDS,PMOD,ASPCE,PSPCE,APOWR,PPOWR,ABTU,
     +    PBTU,AFCC,PFCC,PASS,SFLAG,PFLAG,BFLAG,CFLAG,MFLAG,FFLAG)
        IF (PASS.EQ.'N') GOTO 325
310     WRITE (21,315)PASS,CON,CONSUP,USP,NUMUSP,ADDRESS,CITY,STATE,
     +        BW,NUMLNK,HWTYPE,PCOST,CARDS,GP,IOC4,IOC8,FS,
     +        PMEM,PTPUT,PUTIL,PMOD,
     +        PBTU,PFCC,SFLAG,PFLAG,FFLAG,BFLAG,CFLAG,MFLAG

315     FORMAT (A1,1X,A1,1X,I3,1X,F10.3,1X,I3,1X,4A5,1X,3A5,1X,
     +          A2,1X,I2,1X,A5,1X,I8,1X,I3,4(1X,I3),1X,I8,1X,1X,I8,
     +          1X,F5.1,1X,I3,1X,A1,6(1X,A1))
        GOTO 900

CCCCC
C PICO FAILS, TRY MICRO
CCCCC
325     IF (MCOST.EQ.0) GOTO 350
        HWTYPE = 'MICRO'
        CARDS = 0
        CALL TEST(HWTYPE,CARDS,MMOD,ASPCE,MSPCE,APOWR,MPOWR,ABTU,
     +    MBTU,AFCC,MFCC,PASS,SFLAG,PFLAG,BFLAG,CFLAG,MFLAG,FFLAG)
        IF (PASS.EQ.'N') GOTO 350
330     WRITE (21,315)PASS,CON,CONSUP,USP,NUMUSP,ADDRESS,CITY,STATE,
     +        BW,NUMLNK,HWTYPE,MCOST,CARDS,GP,IOC4,IOC8,FS,
     +        MMEM,MTPUT,MUTIL,MMOD,
     +        MBTU,MFCC,SFLAG,PFLAG,FFLAG,BFLAG,CFLAG,MFLAG
        GOTO 900

CCCCC
C MICRO FAILS, TRY TURBO
CCCCC
350     HWTYPE = 'TURBO'
        CARDS = TGP+TIOC4+TIOC8+TFS
        CALL TEST(HWTYPE,CARDS,TMOD,ASPCE,TSPCE,APOWR,TPOWR,ABTU,
     +    TBTU,AFCC,TFCC,PASS,SFLAG,PFLAG,BFLAG,CFLAG,MFLAG,FFLAG)
360     WRITE (21,315)PASS,CON,CONSUP,USP,NUMUSP,ADDRESS,CITY,STATE,
     +        BW,NUMLNK,HWTYPE,TCOST,CARDS,TGP,TIOC4,TIOC8,TFS
     +        TMEM,TTPUT,TUTIL,TMOD,
     +        TBTU,TFCC,SFLAG,PFLAG,FFLAG,BFLAG,CFLAG,MFLAG
        GOTO 900


CCCCC
C THERE IS NO "AVAILABLE" DATA FOR THIS USP
CCCCC
800     PASS = 'X'
        WRITE (21,810)PASS,CON,CONSUP,USP

810     FORMAT (A1,1X,A1,1X,I3,1X,I5)

900     RETURN
        END

CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C       SUBROUTINE: TEST
C
C       THIS SUBROUTINE TESTS TO SEE IF A GIVEN CONFIGUREATION MEETS
C       ALL OF THE REQUIREMENTS.
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

        SUBROUTINE TEST(HWTYPE,CARDS,MODEM,ASPCE,RSPCE,APOWR,RPOWR,
     +                  ABTU,RBTU,AFCC,RFCC,PASS,SFLAG,PFLAG,BFLAG,
     +                  CFLAG,MFLAG,FFLAG)

        INTEGER HWTYPE,CARDS,MODEM,ASPCE,RSPCE,APOWR,RPOWR,ABTU,
     +          RBTU,AFCC,RFCC,PASS,SFLAG,PFLAG,BFLAG,CFLAG,MFLAG,
     +          FFLAG

        PASS = 'Y'
        SFLAG = 0
        PFLAG = 0
        BFLAG = 0
        CFLAG = 0
        MFLAG = 0
        FFLAG = 0


CCCCC
C CHECK IF NUMBER OF MODEMS IS LESS THAN OR EQAL TO 16
CCCCC
100     IF (MODEM.LE.16) GOTO 125
        PASS = 'N'
        MFLAG = 1

CCCCC
C CHECK IF SPACE IS SUFFICIENT
CCCCC
125     IF (RSPCE.LE.ASPCE) GOTO 130
        PASS = 'N'
        SFLAG = 1

CCCCC
C CHECK IF POWER IS SUFFICIENT
CCCCC
130     IF (RPOWR.LE.APOWR) GOTO 135
        PASS = 'N'
        PFLAG = 1

CCCCC
C CHECK IF BTU IS SUFFICIENT
CCCCC
135     IF (RBTU.LE.ABTU) GOTO 140
        PASS = 'N'
        BFLAG = 1

CCCCC
C CHECK IF MEET FCC REQURIEMENTS
CCCCC
140     GOTO 150
        PASS = 'N'
        FFLAG = 1

CCCCC
C IF TESTING FOR TURBO REQUIREMENTS MAKE SURE NUMBER OF CARDS IS
C LESS THAN 80.
CCCCC
150     IF (HWTYPE.NE.'TURBO') RETURN
        IF (CARDS.LE.80) RETURN
        PASS = 'N'
        CFLAG = 1

200     RETURN
        END



CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C       SUBROUTINE: MULTIPLE(CONUSP)
C
C       THIS SUBOUTINE FINDS THE OPTIMAL CONFIGURATION FOR
C       A VA ADDRESS WITH MULTIPLE USPS.
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

        SUBROUTINE MULTIPLE(CONUSP)

        INTEGER CONUSP,ADDRESS(4),CON,STATE,CITY(3),TCOST,
     +          TGP,TIOC4,TIOC8,TFS,TMEM,TTPUT,TMOD,TFCC,ASPCE,
     +          APOWR,ABTU,AFCC,MCOST,MMEM,MTPUT,MMOD,MFCC,
     +          PCOST,PMEM,PTPUT,PMOD,PFCC,CCOST,CGP,CIOC4,CIOC8,
     +          CFS,CMEM,CTPUT,CMOD,CFCC

        REAL USP,BW,TUTIL,TSPCE,TPOWR,TBTU,
     +          MUTIL,MSPCE,MPOWR,MBTU,CUTIL,CSPCE,CPOWR,
     +          PUTIL,PSPCE,PPOWR,PBTU,CBTU


CCCCC
C FOR EACH USP WITH THE SAME ADDRESS
CCCCC
100     DO 600 I = 1,NREC

C       CCCCC
C       C GET A RECORD
C       CCCCC
125     CALL DBGREC($800)
        CALL DBVAL('USP','USP','ADDRESS',ADDRESS,'CITY',CITY,
     +          'STATE',STATE,'TCOST',TCOST,'TGP',TGP,'TIOC4',TIOC4,
     +          'TIOC8',TIOC8,'TFS',TFS,'TMEM',TMEM,'TTPUT',TTPUT,
     +          'TUTIL',TUTIL,'TMOD',TMOD,'TSPCE',TSPCE,'TPOWR',
     +          TPOWR,'TBTU',TBTU,'TFCC',TFCC)

C       CCCCC
C       C IF THIS IS THE FIRST USP FOR THIS ADDRESS OR IF
C       C THIS IS THE FIRST USP IN A NEW ADDRESS
C       CCCCC
130     IF (I.EQ.1 .OR. NEW.EQ.'Y') GOTO 250

C       CCCCC
C       C SET UP THE CURRENT SOLUTION VARIABLES TO BE THE LAST
C       C SET OF VARIABLES JUST READ
C       CCCC
150     CUSP = USP
        CCOST = TCOST
        CGP = TGP
        CIOC4 = TIOC4
        CIOC8 = TIOC8
        CFS = TFS
        CCARD = TGP+TIOC4+TIOC8+TFS
        CMEM = TMEM
        CTPUT = TTPUT
        CUTIL = TUTIL
        CMOD = TMOD
        CSPCE = TSPCE
        CPOWR = TPWOR
        CBTU = TBTU
        CFCC = TFCC

C       CCCCC
C       C SEE IF THE CURRENT SOLUTION MEETS THE
C       C REQUIREMENTS
C       CCCCC
175     CALL TEST('TURBO',CCARDS,CMOD,ASPCE,CSPCE,APOWR,CPOWR,ABTU,
     +    CBTU,AFCC,CFCC,PASS,SFLAG,PFLAG,BFLAG,CFLAG,MFLAG,FFLAG)

        IF (PASS.EQ.'Y') GOTO 200
        CON = 'N'
        NUMLNK = 1
180     WRITE (21,185)PASS,CON,CONSUP,USP,NUMUSP,ADDRESS,CITY,STATE,
     +        BW,NUMLNK,HWTYPE,PCOST,CARDS,TGP,TIOC4,TIOC8,TFS,
     +        TMEM,TTPUT,TUTIL,TMOD,
     +        TBTU,TFCC,SFLAG,PFLAG,FFLAG,BFLAG,CFLAG,MFLAG

185     FORMAT (A1,1X,A1,1X,I3,1X,F10.3,1X,I3,1X,4A5,1X,3A5,1X,
     +          A2,1X,I2,1X,A5,1X,I8,1X,I3,4(1X,I3),1X,I8,1X,1X,I8,
     +          1X,F5.1,1X,I3,1X,A1,6(1X,A1))

        CONUPS = CONUSP + 1
        GOTO 600

CCCCC
C PASSED ALL TESTS. SEE IF ANOTHER USP WILL FIT ON THIS 
C CONFIGURATION
CCCCC
200     NEW = 'N'
        NUMUSP = 1
        SCARDS = CCARDS
        SGP = CGP
        SIOC4 = CIOC4
        SIOC8 = CIOC8
        SFS = CFS
        SMOD = CMOD
        SPOWR = CPOWR
        SBTU = CBTU
        SUTIL = CUTIL
        STPUT = CTPUT
        SMEM = CMEM
        GOTO 600

CCCCC
C THIS IS NOT THE FIRST USP FOR THE ADDRESS.  ADD THE 
C INFO JUST READ TO THE TOTALS FOR THE ADDRESS.
CCCCC
250     SCARD = SCARD + TCARDS
        SGP = SGP + TGP
        SIOC4 = SIOC4 + TIOC4
        SIOC8 = SIOC8 + TIOC8
        SFS = SFS + TFS
        SMOD = SMOD + TMOD
        SPOWR = SPOWR + TPOWR
        SBTU = SBTU + TBTU
        SUTIL = (SUTIL+TUTIL)/2.
        STPUT = STPUT + TTPUT
        SMEM = SMEM + TMEM

        CALL TEST('TURBO',SCARDS,SMOD,ASPCE,PSPCE,APOWR,SPOWR,ABTU,
     +    SBTU,AFCC,TFCC,PASS,SFLAG,PFLAG,BFLAG,CFLAG,MFLAG,FFLAG)
        IF (PASS.EQ.'N') GOTO 300


CCCCC
C PASSED ALL TESTS.INCREMENT THE NUMBER OF USPS AT THIS ADDRESS.
CCCCC
        NUMUSP = NUMUSP + 1
        CON = 'Y'

CCCCC
C WRITE A PARTIAL RECORD FOR THE USP WHCIH WAS CONSOLIDATED WITH
C THIS NEW ONE.  WE NEED A RECORD FOR EACH USP.
CCCCC
        WRITE (21,275)PASS,CON,CONUSP,USP
275     FORMAT (A1,1X,A1,1X,I3,1X,F10.3)

CCCCC
C NOW MAKE THE CURRENT SOLUTION VARIABLES CONTAIN THE TOTLAS
C FOR THIS ADDRESS SO FAR.
CCCCC
        CUSP = USP
        CCOST = TCOST
        CGP = TGP
        CIOC4 = TIOC4
        CIOC8 = TIOC8
        CFS = TFS
        CCARD = TGP+TIOC4+TIOC8+TFS
        CMEM = TMEM
        CTPUT = TTPUT
        CUTIL = TUTIL
        CMOD = TMOD
        CSPCE = TSPCE
        CPOWR = TPWOR
        CBTU = TBTU
        CFCC = TFCC
        GOTO 600

CCCCC
C DID NOT PASS THE TEST.  CONNOT CONSOLIDATE THESE
C USPS.  WRITE OUT THE SOLUTION BEFORE THIS LAST USP WAS ADDED.
300     WRITE (21,185)PASS,CON,CONUSP,USP,NUMUSP,ADDRESS,CITY,STATE,
     +        BW,NUMLNK,HWTYPE,CCOST,CCARDS,CGP,CIOC4,CIOC8,CFS,
     +        CMEM,CTPUT,CUTIL,CMOD,
     +        CBTU,AFCC,SFLAG,PFLAG,FFLAG,BFLAG,CFLAG,MFLAG

CCCCC
C GET NEW ADDRESS NUMBER
CCCCC
CONUSP = CONUSP + 1

CCCCC
C GO TEST THE NEW RECORD TO SEE IF IT WILL FIT ON A TURBO
CCCCC
        GOTO 150

CCCCC
C END OF LOOP
CCCCC
600     CONTINUE


CCCCC
C FINSIHED LOOP. WRITE OUT THE CURRENT SOLUTION.
CCCCC
400     WRITE (21,185)PASS,CON,CONUSP,USP,NUMUSP,ADDRESS,CITY,STATE,
     +        BW,NUMLNK,HWTYPE,CCOST,CCARDS,CGP,CIOC4,CIOC8,CFS,
     +        CMEM,CTPUT,CUTIL,CMOD,
     +        CBTU,AFCC,SFLAG,PFLAG,FFLAG,BFLAG,CFLAG,MFLAG
        GOTO 900

CCCCC
C ERROR. UNABLE TO GET A RECORD FROM DATA BASE.
CCCCC
800     TYPE 805
805     FORMAT (1X,'UNABLE TO GET A RECORD FROM DATA BASE.')
        CALL EXIT()


CCCCC
C RETURN
CCCCC
900     RETURN
        END
    