C *********************************************
C *                                           *
C *    PROGRAM NAME : ANAL.FTF                *
C *    -------------                          *
C *                                           *
C *    OBJECTIVE : CALCULATE THE MAD BETWEN   *
C *                THE HISTORICAL DATA OF     *
C *                THE FILE "HSTRY1.CNT" AND  *
C *                THE FORCAST DATA FILE      *
C *                "FRCST.DAT"                *
C *                                           *
C *       AUTHOR : EDSEL GARCIAMENDEZ BUDAR   *
C *                                           *
C *                JAVIER MANRIQUEZ ANSO      *
C *                                           *
C *         DATE : 09/29/1985                 *
C *                                           *
C *********************************************
C            ***************************
C            *                         *
C            *       MAIN  PROGRAM     *
C            *                         *
C            ***************************
         DIMENSION X(1000,30), ELX(1000,5), EEX(1000,5), IT(5)
         DIMENSION ENX(1000,5), ERX(1000,5), GR(1000)
         DIMENSION BINTE(1000), SLOPE(1000), PILOT(1000,4) 
         DIMENSION NODE(1000), DENSI(1000), MODEM(1000,3)
         DIMENSION CITY(1000,4), INFILE(4), OUTFIL(4)
         DIMENSION ISTR(1000), IEND(1000), NN(8), CUMMAD(8,4)
         DIMENSION TOTACU(4), TOTAVE(4)

         OPEN (20, '(MSANAL)VALID1.EGB', OUTPUT)
         OPEN (25, '(MSANAL)VALID2.EGB', OUTPUT)
         NREC1 = 0
         NREC2 = 0
         ALPHA = 0.0
         BETHA = 0.0
         JT = 1
         G = 3.44
         NMAX = 30
         FIRST = 'Y'
C                                          The first loop varies the values of
C                                          the parameters Alpha and Betha.
         DO 5000 I = 1,4
            ALPHA = ALPHA + 0.05
            BETHA = ALPHA
C                                          The second loop varies the starting
C                                          historical month to consider.
            DO 4000 J = 1,24,3

C                                          The third loop varies the number
C                                          of historical months to consider.
                DO 3000 K = 6,18,6

C                                          The last loop varies the forecast
C                                          horizon.
                   DO 2000 L = 3,12,3
                      IT(1) = L
                      IHIS = K
                      IST = J
                      N = IST + IHIS - 1
                      IF (N.GT.NMAX) GO TO 2000

C                                         N contains the Nth month (1..30).
C                                         IST contains the starting historical
C                                         month, and IHIS the number of histo-
C                                         rical months to use for forecast.
                      CALL FRCST (ALPHA, BETHA, N, JT, IT, G,
     1                           INFILE, OUTFIL, PILOT, NODE,
     2                           DENSI, MODEM, CITY, ENX, ERX,
     3                           ELX, EEX, MAXROT, X, GR, 
     4                           MAXSIT, ISTR, IEND, FIRST, NMAX,
     5                           IST, IHIS)

                      CALL CLEAN(NN, CUMMAD)

C                                              The following loop simply
C                                              clasifies the rotary according
C                                  
C
                      IF (J + K - 1.GT.NMAX) GO TO 2000

                      DO 1000 M = 1, MAXSIT
                         IF (X(M,J + K - 1).LT.20.0)GO  TO 1001
                         IF (X(M,J + K - 1).LT.40.0)GO  TO 2001
                         IF (X(M,J + K - 1).LT.60.0)GO  TO 3001
                         IF (X(M,J + K - 1).LT.80.0)GO  TO 4001
                         IF (X(M,J + K - 1).LT.100.0)GO TO 5001
                         IF (X(M,J + K - 1).LT.150.0)GO TO 6001
                         IF (X(M,J + K - 1).LT.200.0)GO TO 7001  
                         IF (X(M,J + K - 1).GE.200.0)GO TO 8001

 1001                    IN = 1
                         NN(IN) = NN(IN) + 1
                         CALL MEANABSO(IN, J, K, L, M, CUMMAD, X, ENX,
     1                                           ERX, ELX, EEX)   
                         GO TO 1000
	     
 2001                    IN = 2
                         NN(IN) = NN(IN) + 1
                         CALL MEANABSO(IN, J, K, L, M, CUMMAD, X, ENX,
     1                                           ERX, ELX, EEX)   
                         GO TO 1000

 3001                    IN = 3
                         NN(IN) = NN(IN) + 1
                         CALL MEANABSO(IN, J, K, L, M, CUMMAD, X, ENX,
     1                                           ERX, ELX, EEX)   
                         GO TO 1000
       
 4001                    IN = 4
                         NN(IN) = NN(IN) + 1
                         CALL MEANABSO(IN, J, K, L, M, CUMMAD, X, ENX,
     1                                           ERX, ELX, EEX)   
                         GO TO 1000

 5001                    IN = 5
                         NN(IN) = NN(IN) + 1
                         CALL MEANABSO(IN, J, K, L, M, CUMMAD, X, ENX,
     1                                           ERX, ELX, EEX)   
                         GO TO 1000

 6001                    IN = 6
                         NN(IN) = NN(IN) + 1
                         CALL MEANABSO(IN, J, K, L, M, CUMMAD, X, ENX,
     1                                           ERX, ELX, EEX)   
                         GO TO 1000
	       
 7001                    IN = 7
                         NN(IN) = NN(IN) + 1
                         CALL MEANABSO(IN, J, K, L, M, CUMMAD, X, ENX,
     1                                           ERX, ELX, EEX)   
                         GO TO 1000 
       
 8001                    IN = 8
                         NN(IN) = NN(IN) + 1
                         CALL MEANABSO(IN, J, K, L, M, CUMMAD, X, ENX,
     1                                           ERX, ELX, EEX)   
                         GO TO 1000

1000                CONTINUE

                      CALL START(ALPHA, BETHA, J, K, L)    
                      CALL MADSUB(NN, CUMMAD)
                      CALL SUMAD(NN, CUMMAD, NREC1, NREC2,
     1                                TOTACU)
 
			
 2000             CONTINUE

 3000          CONTINUE

 4000       CONTINUE

 5000    CONTINUE

9999     DO 5100 LKJ=1,4
            IF (NREC2.LE.0) GO TO 5100  
            TOTAVE(LKJ) = TOTACU(LKJ)/NREC2
 5100    CONTINUE
         WRITE (20,5333) NREC2, (TOTACU(KGB),KGB=1,4),
     1                               (TOTAVE(KK),KK=1,4)
 5333         FORMAT(//,12X,I5,3X,4(F11.1,2X),/,
     1                  20X,4(F11.1,2X))
 6000    CLOSE (20)    
         CLOSE (25)   
	 STOP
         END
C ****************************************
             SUBROUTINE CLEAN(NN, CUMMAD)
C ****************************************          
	  
             DIMENSION NN(8), CUMMAD(8,4)
C             TYPE 11
C   11        FORMAT(/,5X,'CLEAN')   
             DO 99 IR=1,8
               NN(IR) = 0
   99        CONTINUE

             DO 88 M=1,8
                DO 77 N=1,4
                CUMMAD(M,N) = 0.0
   77           CONTINUE
   88        CONTINUE
             RETURN
             END
C **********************************************************
             SUBROUTINE MEANABSO(IN, J, K, L, M, CUMMAD, X,
     1                           ENX, ERX, ELX, EEX)
C **********************************************************

             DIMENSION CUMMAD(8,4), X(1000,30)
             DIMENSION ENX(1000,5), ERX(1000,5)
             DIMENSION ELX(1000,5), EEX(1000,5)

             CUMMAD(IN,1) = CUMMAD(IN,1) + ABS(X(M,J + K - 1 + L) -
     1                      ENX(M,1))
             CUMMAD(IN,2) = CUMMAD(IN,2) + ABS(X(M,J + K - 1 + L) -
     1                      ERX(M,1))
             CUMMAD(IN,3) = CUMMAD(IN,3) + ABS(X(M,J + K - 1 + L) -
     1                      ELX(M,1))
             CUMMAD(IN,4) = CUMMAD(IN,4) + ABS(X(M,J + K - 1 + L) -
     1                      EEX(M,1))
             RETURN
             END
C ************************************************
        SUBROUTINE START (ALPHA, BETHA, J, K, L)
C ************************************************
C        TYPE 11
C   11   FORMAT(/,5X,'START')  
          
        WRITE (20,55) ALPHA, BETHA, J, K, L
   55   FORMAT(//,5X,'ALPHA   : ',F10.2/,
     1            5X,'BETA    : ',F10.2/,
     2            5X,'START   : ',I2/,
     3            5X,'END     : ',I2/,
     4            5X,'FORCAST : ',I2/)   
        RETURN
        END
C *************************************
        SUBROUTINE MADSUB (NN, CUMMAD)
C *************************************

        DIMENSION NN(8), CUMMAD(8,4), AVEMAD(8,4)
C        TYPE 11
C   11   FORMAT(/,5X,'MADSUB')
        WRITE (20,33)
   33   FORMAT(//,3X,'TYPE',3X,'RECORD NO.',15X,
     1         'TOTAL NUMBER OF RECORDS',//,35X,
     2         'MINIMUM ABSOLUTE DEVIATION'/)
        DO 66 LL = 1,8
           DO 77 JJ = 1,4
              AVEMAD(LL,JJ) = 0.0
              IF (NN(LL).LE.0) GO TO 77
              AVEMAD(LL,JJ) = CUMMAD(LL,JJ) / NN(LL)
   77      CONTINUE
        WRITE (20,88) LL, NN(LL), (CUMMAD(LL,KX),KX=1,4),
     1               (AVEMAD(LL,NY),NY=1,4)
   88   FORMAT(4X,I2,6X,I5,3X,4(F11.1,2X),/,
     1         20X,4(F11.1,2X)) 
   66   CONTINUE      

        RETURN
        END
C ********************************************************
        SUBROUTINE SUMAD(NN, CUMMAD, NREC1, NREC2, TOTACU)
C ********************************************************
 
        DIMENSION NN(8), CUMMAD(8,4), ACUMM(4)
        DIMENSION AVERA(4), TOTACU(4)
C        TYPE 11
C  11    FORMAT(/,5X,'SUMAD')

	NREC1 = 0
        DO 50 KK = 1,4              
            ACUMM(KK) = 0.0
            AVERA(KK) = 0.0
  50    CONTINUE

        DO 60 KAKA = 1,8
            NREC1 = NREC1 + NN(KAKA)
            NREC2 = NREC2 + NN(KAKA)
  60    CONTINUE

           DO 112 JJ = 1,4
           DO 111 LR = 1,8

              ACUMM(JJ) = ACUMM(JJ) + CUMMAD(LR,JJ)
              TOTACU(JJ) = TOTACU(JJ) + CUMMAD(LR,JJ)
  111         CONTINUE
              IF (NREC1.LE.0) GO TO 112
              AVERA(JJ) = ACUMM(JJ) / NREC1
  112         CONTINUE
              WRITE (20,115) NREC1, (ACUMM(MK),MK=1,4),
     1                                (AVERA(JK),JK=1,4)
  115         FORMAT(/,12X,I5,3X,4(F11.1,2X),
     1               /,20X,4(F11.1,2X)) 
              RETURN
              END

C *********************************************************
	SUBROUTINE FRCST (ALPHA, BETHA, N, JT, IT, G,
     1                    INFILE, OUTFIL, PILOT, NODE,
     2                    DENSI, MODEM, CITY, ENX, ERX,
     3                    ELX, EEX, MAXROT, X, GR,
     4                    MAXSIT, ISTR, IEND, FIRST, NMAX,
     5                    IST, IHIS)


C	PROGRAM:(ANALYSIS)FRCST2.FTF
C	AUTHOR:	EDSEL GARCIAMENDEZ BUDAR
C	DATE:	NOVEMBER 30, 1984.
C	UPDATED:SEPTEMBER 27, 1985.
C	PURPOSE:To produce a forecast for the connect-hours in each one of
C		our rotaries with 4 methods. It uses a flat growth rate  for
C		all the network, a flat growth rate for each rotary, a linear
C		regression model, and also an Exponential Smoothing with trend
C		algorithm. The program output (forecast) should be very useful
C		to engineer our rotaries properly, taking into account
C		future growth.

C		To run the program, you have to create first the
C		report (PGRADE:28)AVGCON.HRS out of the (PGRADE:28)
C		Magnum Rotary.Pgrade Avg.connect.hours procedure for
C		at least 5 months, but for not more than 30 months. Then
C		just type RUN (ANALYSIS)FRCST.FTF.



	DIMENSION X(1000,30), ELX(1000,5), EEX(1000,5), IT(5)
	DIMENSION ENX(1000,5), ERX(1000,5), GR(1000)
	DIMENSION BINTE(1000), SLOPE(1000), PILOT(1000,4)
	DIMENSION NODE(1000), DENSI(1000), MODEM(1000,3)
	DIMENSION CITY(1000,4), INFILE(4), OUTFIL(4)
	DIMENSION ISTR(1000), IEND(1000)
C        TYPE 11
C   11   FORMAT(/,5X,'FRCST')  

C		Main Program starts here

C		The first thing to do is to ask for the parameters,
C		or to notify of the default values.


	CALL BEGINNING (ALPHA, BETHA,N,IHIS,IST, IT, G, INFILE, 
     1			OUTFIL,FIRST)


C		Now the program reads the input file that contains
C		the average connect-hours for the last N months.

	IF (FIRST.EQ.'N') GO TO 5

	CALL READING (X, NMAX, PILOT, NODE, DENSI, MODEM, CITY,
     1			MAXROT, INFILE, MAXSIT)
	FIRST = 'N'

C		Before computing the forecast estimates, the program
C		checks the records to disregard months for which no
C		service was available.

5	CALL CORREC (X, N, IST, IT, MAXSIT, ISTR, IEND, CITY, FIRST)

C		The first forecast consists of applying a flat growth
C		rate per rotary and network-wise.

	CALL FLATGROW (X, N, MAXROT, G, ENX, ERX, IT, GR, MAXSIT,
     1		ISTR, IEND)

C		The next step is to compute the forecast EX(IT(t)) using linear
C		regresion for the iT period from now (N+IT month).

	CALL LINREGR (X, N, MAXROT, IT, BINTE, SLOPE, ELX, MAXSIT,
     1		ISTR, IEND)

C		Now we compute the forecast EX(IT(t)) using the method of
C		exponential smoothing with trend.

	CALL EXPSMO (X, N, MAXROT, IT, BINTE, SLOPE, EEX,
     1		ALPHA, BETHA, MAXSIT, ISTR, IEND)


C		Finally we print the results into a file.

C	CALL WRITING (PILOT, NODE, DENSI, MODEM, CITY,
C     1	ENX, ERX, ELX, EEX, MAXROT, OUTFIL, ALPHA, BETHA, G, IT,
C     2	X, BINTE, SLOPE, GR, N, MAXSIT, ISTR, IEND)

       	RETURN
	END

C		End of subroutine FRCST.


C	**********************************************************************
C	*	SUBROUTINE BEGINNING
C	**********************************************************************

	SUBROUTINE BEGINNING (ALPHA, BETHA, N, IHIS, IST,IT, G, INFILE, 
     1		OUTFIL,FIRST)

	DIMENSION IT(5), INFILE(4), OUTFIL(4)
C        TYPE 11
C   11   FORMAT(/,5X,'BEGINING')   
C		This subroutine accepts the input arameters to use in
C		the forecast. Otherwise, it displays the default values.

	G1 = (((G/100.0+1)**12)-1.0)*100.0

	INFILE(1) = '(PGRA'
	INFILE(2) = 'DE)HS'
	INFILE(3) = 'TRY1.'
	INFILE(4) = 'CNT  '
	OUTFIL(1) = '(MSAN'
	OUTFIL(2) = 'AL)VA'
	OUTFIL(3) = 'LID1. '
	OUTFIL(4) = 'EGB  '

C	TYPE 20, ALPHA,BETHA,IHIS,IST,N,IT(1),G,G1,(INFILE(K),K=1,4),
C     1		(OUTFIL(L),L=1,4), FIRST
C 20	FORMAT (/,3X,'THE DEFAULT PARAMETERS ARE AS ',
C     1		'FOLLOWS:',//,5X,'ALPHA = ',F3.2,/,5X,'BETA  = ',
C     2		F3.2,/,5X,'NUMBER OF HISTORICAL MONTHS=',
C     3		' ',I2,/,5X,'STARTING HISTORICAL MONTH =',
C     4		' ',I2,/,5X,'ENDING HISTORICAL MONTH =',
C     5		' ',I2,/,5X,'FUTURE MONTH TO FORECAST=IT(1)=',
C     6		' ',I2,/,5X,'AVERAGE MONTHLY GROWTH RATE=G=% ',
C     7		' ',F4.2,' (',F5.1,' % ANNUALLY)',/,5X,'INPUT FILE',
C     8		' NAME= ',4A5,/,5X,'OUTPUT FILE NAME = ',4A5,/,5X,'F',
C     9          'IRST = ',A1,/)

	IF (FISRST.EQ.'N') GO TO 300

C	G= G/100.0

300	RETURN
	END


C	********************************************************************
C	*		SUBROUTINE READING
C	********************************************************************

	SUBROUTINE READING (X, NMAX, PILOT, NODE, DENSI, MODEM, CITY,
     1			MAXROT, INFILE, MAXSIT)

	DIMENSION X(1000,30), PILOT(1000,4), NODE(1000),XX(1000,30)
	DIMENSION DENSI(1000), MODEM(1000), CITY(1000,4), INFILE(4)
C        TYPE 11
C  11    FORMAT(/,5X,'READING')
    

	OPEN (10, INFILE , INPUT)
	TYPE 1
1	FORMAT (/,5X,'HOLA. READING INPUT FILE...')
	MAXROT = 1000
	I = 1

	DO 60 M=1,MAXROT
10		READ (10,20,ERR=10,END=50)
     1			(PILOT(M,K),K=1,3), NODE(M), DENSI(M),
     2			MODEM(M),(CITY(M,L),L=1,4),
     3			 (XX(M,J),J=1,NMAX)
20		FORMAT (3A4,1X,I4,1X,A3,1X,A5,2X,4A4,30(F6.1,1X))
C		TYPE 23,
C     1			(PILOT(M,K),K=1,3), NODE(M), DENSI(M),
C     2			MODEM(M),(CITY(M,L),L=1,4),
C     3			 XX(M,1)
C23		FORMAT (1X,3A4,1X,I4,1X,A3,1X,A5,2X,4A4,1X,F6.1)
		IF (PILOT(M,2).EQ.'    '.AND.CITY(M,1).EQ.'    ')
     1			GO TO 10

		IF (M.EQ.1) GO TO 40

C				We need to compare originating city
C				to see if we can merge together traffic.
		IF ((CITY(M,1).EQ.CITY(M-1,1)).AND.(PILOT(M,1).EQ.
     1				PILOT(M-1,1))) GO TO 25
			GO TO 40

C			If the city name is the same one, we gather together
C			the traffic at the same city. But we make sure that
C			the pilot number assigned to that city is the current
C			one (since a site might change its pilot number several
C			times).
C                                                            Begin from here..
25		IF (XX(M-1,NMAX).LE.0.0) GO TO 27

		DO 26 KKK =1,4
			PILOT(M,KKK)=PILOT(M-1,KKK)
26		CONTINUE
		NODE(M) = NODE(M-1)
		DENSI(M) = DENSI(M-1)
		MODEM(M) = MODEM(M-1)

27		DO 30 J = 1,NMAX
			X(I-1,J) = X(I-1,J) + XX(M,J)
30		CONTINUE
		DO 35 LK=1,4
			PILOT(I-1,LK) = PILOT(M,LK)
			CITY(I-1,LK) = CITY(M,LK)
35		CONTINUE
		NODE (I-1) = NODE(M)
		DENSI(I-1) = DENSI(M)
		MODEM(I-1) = MODEM(M)
		GO TO 60
C                                                             ..end til here.
C				If the two last records do not have the city
C				name in common, we process them as independent
C				cities.
40		DO 45 J = 1,NMAX
			X(I,J) = XX(M,J)
45		CONTINUE
		DO 48 LK=1,4
			PILOT(I,LK) = PILOT(M,LK)
			CITY(I,LK) = CITY(M,LK)
48		CONTINUE
		NODE (I) = NODE(M)
		DENSI(I) = DENSI(M)
		MODEM(I) = MODEM(M)
			
		I = I + 1
C	TYPE 44,I,M
C44	FORMAT ('  I= ',I4, '   M= ',I4)

		GO TO 60

50		MAXROT = M-1
		MAXSIT = I-1
C	TYPE 55, MAXROT, MAXSIT
C55	FORMAT (//,5X,'MAXROT= ',I4,'   MAXSIT= ',I4)


60	CONTINUE

	CLOSE (10)


	RETURN
	END
C	**********************************************************************
C	*		SUBROUTINE CORREC
C	**********************************************************************

	SUBROUTINE CORREC (X, N, IST, IT, MAXSIT, ISTR, IEND, CITY,
   	FIRST)

C		The purpose of this subroutine is to correct the stating
C		and  ending months for which traffic information exists
C		in each rotary site. If the first "j" months have zero
C		traffic (new site up until j+1 month), we should not
C		consider these zeroes for traffic forecast. The
C		pointer ISTR(I) contains the value of the month for
C		which traffic in rotary I started the first time (usually 1).
C		The pointer IEND(I) contains the last month for which there
C		is traffic information on rotary I (usually N).

	DIMENSION X(1000,30), ISTR(1000), IEND(1000), IT(5)
	DIMENSION CITY (1000,4)
C       TYPE 11
C11       FORMAT(/,5X,'CORREC')   
	DO 50 I = 1, MAXSIT
		ISTR(I) = N
		IEND(I) = N
		NANA = N

		DO 20 JJ = IST,NANA
C					Find the first month with non-zero
C					traffic:
			IF (X(I,JJ).LE.0.0) GO TO 20
				ISTR(I)=JJ
				NANA = JJ
20		CONTINUE

		NANA = N
		DO 30 KK = ISTR(I),NANA
C					Lets check which month is the last
C					non-zero value month:
			IF (X(I,KK).GT.0.0) GO TO 30
C					There may be a city that has a zero
C					traffic value in between months:get it!
			IF (KK.LT.N.AND.X(I,KK+1).GT.0.0)GO TO 30
C					Otherwise, KK-1 is the last month with
C					non-zero values, and stop:
				IEND(I)=KK-1
				NANA = KK
30		CONTINUE

		IF (FIRST.EQ.'N') GO TO 50

		IF (ISTR(I).GE.IEND(I).AND.X(I,IEND(I)).EQ.0.0)
     1			TYPE 40, I, (CITY(I,L),L=1,2)
40			FORMAT(30X,'CITY "',I3,'" ',2A4,' SHOWS',
     1				' NO TRAFFIC.')
C		TYPE 66, I, ISTR(I), IEND(I)
C66		FORMAT (' I=',I4,2I4)

50	CONTINUE


	RETURN
	END


C	**********************************************************************
C	*		SUBROUTINE FLATGROW
C	**********************************************************************

	SUBROUTINE FLATGROW (X, N, MAXROT, G, ENX, ERX, IT, GR,
     1		MAXSIT, ISTR, IEND)

C		The purpose of this subroutine is to create the
C		forecast for the connect-hours based on two methods: a flat
C		growth rate for all the network, and a flat growth rate for
C		each rotary. Hence, we need to compute the average growth
C		rate for each rotary.

	DIMENSION X(1000,30), ENX(1000,5), ERX(1000,5), GROW(1000,30)
	DIMENSION GR(1000), IT(5), ISTR(1000), IEND(1000)
C        TYPE 11
C11      FORMAT(/,5X,'FORECAST')

C		ENX is the forecast using a flat network growth rate per
C		month of G. ERX is the forecast using a flat growth rate
C		for each rotary per month of GR(i).

C	TYPE 1
C1	FORMAT (/,5X,'..... COMPUTING FORECAST WITH FLAT GROWTH...')
C        TYPE  69, MAXSIT, MAXROT, G
C69      FORMAT(/,5X,'MAXSIT = ',I5/,5X,'MAXROT = ',I5/,
     1           5X,'G      = ',F11.1)
	DO 200 I = 1, MAXSIT

		GR(I) = 0.0
C				There might be sites for which the only traffic
C				has occured in one month (N or other?) Do not
C				perform any calculations, else an error occurs:
		IF (ISTR(I).EQ.N)GO TO 110
C				Compare the incremental traffic relative
C				to a month, for all months available:
		DO 100 J =ISTR(I),N-1
			GROW(I,J)=0.0

			IF (X(I,J).LT.0.1) GO TO 50
			GROW(I,J)=(X(I,J+1)-X(I,J))/X(I,J)
50			GR(I) = GR(I) + GROW(I,J)

100		CONTINUE

		GG=G/100.0

		GR(I) = GR(I)/FLOAT(N-ISTR(I))
110		ERX(I,1) = X(I,N)*((1.0+GR(I))**IT(1))
		ENX(I,1) = X(I,N)*((1.0+GG)**IT(1))
200	CONTINUE

	RETURN
	END



C	**********************************************************************
C	*		SUBROUTINE LINREGR
C	**********************************************************************
	SUBROUTINE LINREGRE (X, N, MAXROT, IT, BINTE, SLOPE, ELX, 
     1		MAXSIT, ISTR, IEND)

C		This subroutine uses the mean square mehod to fit a straight
C		line through the observed connect-hours values. This is what
C		is called linear regression.( Y = mX + b)

	DIMENSION X(1000,30), IT(5), SLOPE(1000), BINTE(1000)
	DIMENSION ELX(1000,5), ISTR(1000), IEND(1000)
C        TYPE 11
C11       FORMAT(/,5X,'LINREGR')

C	TYPE 1
C1	FORMAT (/,5X,'..... COMPUTING LINEAR REGRESSION...')

	DO 100 I = 1, MAXSIT
C			Compute the linear regresion coefficients:

		SUMPRO = 0.0
		SUMSQR = 0.0
		SUMX   = 0.0
		SUMY   = 0.0
		DO 50 J = ISTR(I),N
			SUMPRO = SUMPRO + X(I,J)*FLOAT(J-ISTR(I)+1)
			SUMSQR = SUMSQR + FLOAT(J-ISTR(I)+1)**2
			SUMY   = SUMY   + X(I,J)
			SUMX   = SUMX   + FLOAT(J-ISTR(I)+1)
50		CONTINUE

C			If we only have one month of traffic (Nth month),
C			assume that the slope is the X(I,N) value:
		SLOPE(I) = X(I,N)
		IF (ISTR(I).EQ.N) GO TO 60

		SLOPE(I) = (SUMPRO-(SUMX*SUMY/FLOAT(N-ISTR(I)+1)))/
     1			    (SUMSQR - (SUMX**2/FLOAT(N-ISTR(I)+1)))
60		BINTE(I) = (SUMY-SLOPE(I)*SUMX)/FLOAT(N-ISTR(I)+1)

		ELX(I,1) = SLOPE(I)*(FLOAT(N-ISTR(I)+1+IT(1)))
     1			   + BINTE(I)

100	CONTINUE

	RETURN
	END

C	*********************************************************************
C	*		SUBROUTINE EXPSMO
C	*********************************************************************

	SUBROUTINE EXPSMO (X, N, MAXROT, IT, BINTE, SLOPE, EEX,
     1			ALPHA, BETHA, MAXSIT, ISTR, IEND)

C		This subroutine computes the forecast of connect-hours
C		per rotary using the method of Exponential Smoothing with
C		trend.

	DIMENSION X(1000,30), BINTE(1000), SLOPE(1000)
	DIMENSION EEX(1000,5), IT(5), EXPCX(30), EXPCS(30)
	DIMENSION ISTR(1000), IEND(1000)
C        TYPE 11
C11        FORMAT(/,5X,'EXPONENCIA')

C	TYPE 1
C1	FORMAT (/,5X,'..... COMPUTING EXPONENTIAL SMOOTHING VALUES.')

	DO 100 I = 1, MAXSIT
		EXPCS(ISTR(I)-1)=SLOPE(I)
C		EXPCX(ISTR(I)-1)=BINTE(I)
		DO 50 J=ISTR(I),N
			IF ((J-ISTR(I)+1).GT.1) GO TO 10
				CEXPCX=BINTE(I)
				GO TO 15
10			CEXPCX = EXPCX(J-1)
15			EXPCX(J) = ALPHA*X(I,J) + (1.0-ALPHA)*
     1				    (CEXPCX + EXPCS(J-1))
			EXPCS(J) = BETHA*(EXPCX(J)-CEXPCX) +
     1				    (1.0-BETHA)*EXPCS(J-1)

50		CONTINUE

		EEX(I,1)=EXPCX(N)+FLOAT(IT(1))*EXPCS(N)

100	CONTINUE

	RETURN
	END

C	**********************************************************************
C	*		SUBROUTINE WRITING
C	**********************************************************************

	SUBROUTINE WRITING (PILOT, NODE, DENSI, MODEM, CITY, 
     1	ENX, ERX, ELX, EEX, MAXROT, OUTFIL, ALPHA, BETHA, G, IT,
     2	X, BINTE, SLOPE, GR, N, MAXSIT, ISTR, IEND)

	DIMENSION PILOT(1000,4), NODE(1000), DENSI(1000)
	DIMENSION CITY(1000,4), ENX(1000,5), ERX(1000,5), IT(5)
	DIMENSION ELX(1000,5), EEX(1000,5), MODEM(1000), OUTFIL(4)
	DIMENSION X(1000,30), GR(1000), BINTE(1000), SLOPE(1000)
	DIMENSION ISTR(1000), IEND(1000), DIA(2)
        TYPE 11
11      FORMAT(/,5X,'WRITING')
C	TYPE 1,OUTFIL
C1	FORMAT(/,11X,'THE OUTPUT FILE IS ',4A5,/,11X,'THE ',
C     1		'FILE WITH PARAMETERS IS (MSANAL)',
C     2		'VALID2.EGB ! GRACIAS!',/)

C	OPEN (20, OUTFIL, OUTPUT)
C	OPEN (25, '(MSANAL)VALID2.EGB', OUTPUT)

	WRITE (20,10)IT(1)
10	FORMAT (/,5X,'TRAFFIC FORECAST FOR EACH LOCAL ACCESS ',
     1		'ROTARY IN CONNECT-HOURS PER BUSINESS DAY ',
     2		'FOR ',I2,' MONTHS AHEAD',/,5X,100('='),///,5X,'PILOT',
     3		' NUMBER',2X,'NODE',2X,'DENSI',2X,'MODEM',6X,'CITY',
     4		' ',12X,'CNSNT GROW',2X,'ROTOR GROW',2X,'LIN ',
     5		'RGRSN',3X,'EXP SMOTH',/,5X,'*****',
     6		'*******',2X,'****',2X,'*****',2X,'*****',6X,'****',
     7		'*',12X,'**********',2X,'**********',2X,'****',
     8		'*****',3X,'*********',//)
	WRITE (25,20)IT(1)
20	FORMAT (/,5X,'TRAFFIC FORECAST FOR EACH LOCAL ACCESS ',
     1		'ROTARY IN CONNECT-HOURS PER BUSINESS DAY ',
     2		'FOR ',I2,' MONTHS AHEAD',/,5X,100('='),///,5X,'PILOT',
     3		' NUMBER',2X,'NODE',2X,'DENSI',2X,'MODEM',6X,'CITY',
     4		' ',12X,'LAST OBSER',2X,'B=INTERCEP',2X,'M = ',
     5		'SLOPE',3X,'AVG GROW %',/,5X,'*****',
     6		'*******',2X,'****',2X,'*****',2X,'*****',6X,'****',
     7		'*',12X,'**********',2X,'**********',2X,'****',
     8		'*****',3X,'**********',//)

	DO 100 I = 1,MAXSIT
		FLAG = ' '
		IF (ISTR(I).GE.IEND(I))FLAG = '*'
		WRITE (20,50)I,(PILOT(I,J),J=1,3),NODE(I),DENSI(I),
     1			MODEM(I),(CITY(I,J),J=1,4),ENX(I,1),
     2			ERX(I,1),ELX(I,1),EEX(I,1),FLAG
50		FORMAT(I3,') ',3A4,2X,I4,3X,A3,3X,A5,3X,4A4,2X,
     1			4(3X,F9.2),2X,A1)
		GR(I) = GR(I)*100.0
		WRITE (25,60)I,(PILOT(I,J),J=1,3),NODE(I),DENSI(I),
     1			MODEM(I),(CITY(I,J),J=1,4),X(I,N),
     2			BINTE(I),SLOPE(I),GR(I),FLAG
60		FORMAT(I3,') ',3A4,2X,I4,3X,A3,3X,A5,3X,4A4,3X,
     1			4(2X,F10.4),2X,A1)
100	CONTINUE
C	G = G*100.0
	CALL DATE(DIA)

	WRITE (20,150)G, ALPHA, BETHA, DIA(1), DIA(2)
150	FORMAT (///,10X,'CONSTANT GROWTH CONSIDERED AT ',F7.3,' ',
     1		'% PER MONTH',/,10X,'ALPHA = ',F3.2,/,10X,'BETA  ',
     2		'= ',F3.2,/,7X,'*  UNRELIABLE FORECAST',///,40X,'P',
     3		'REPARED BY EDSEL GARCIAMENDEZ BUDAR.',/,50X,2A5)
	WRITE (25,150)G, ALPHA, BETHA, DIA(1), DIA(2)

C	CLOSE (20)
C	CLOSE (25)

	RETURN
	END
   @@2U