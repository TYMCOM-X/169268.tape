      SUBROUTINE INITL (ITML,ITITLE)

      DIMENSION IDATE(2),ITITLE(6)



      IF (ITML.EQ.'1') GO TO 16
      CALL HP7220(6)
      GO TO 18

 16   CALL TEK(120,1)

C  SET THE PAGE SIZE

 18   CALL PAGE (16.0,12.5)
      CALL NOBRDR




C  SET THE PHYSICAL ORIGIN AT A POSITION .5 INCHES UP AND
C  TO THE RIGHT OF THE LOWER LEFT HAND CORNER OF THE PAGE

      CALL PHYSOR(0.5,0.5)


      CALL SETCLR ('BLACK')
      CALL TITLE (ITITLE,30,1H ,-1,1H ,-1,15.0,11.0)

      CALL DATE (IDATE)

      CALL HEIGHT(0.16)
      CALL MESSAG(IDATE(1),5,13.0,11.7)
      CALL MESSAG(IDATE(2),4,'ABUT','ABUT')
      CALL RESET('HEIGHT')



        RETURN
        END



        SUBROUTINE PLOT (ITML,LINPLT,BWFLG)

        IMPLICIT INTEGER (A-Z)

        COMMON /NODES/ NODE(400,2),NODV(400),NODH(400),
     -                 NODLNG(400),NODLAT(400),NUMNOD

        REAL NODLNG,NODLAT


        COMMON /LINES/ LINN1(2500,2),LN1LNG(2500),LN1LAT(2500),
     -                 LINN2(2500,2),LN2LNG(2500),LN2LAT(2500),NUMLIN,
     -                 LINBW(2500)
     
        COMMON /OPTION/ USMAP

        REAL LN1LNG,LN1LAT,LN2LNG,LN2LAT


        REAL XMIN,XMAX,YMIN,YMAX,XSTP,YSTP,CST1,CST2,XL,YL,XL1,XL2,
     -       YL1,YL2,OLDLNG(400),OLDLAT(400)

        INTEGER PLTFLG




        OPEN (UNIT=22,DEVICE='DSK',FILE='DSPLAY.OUT',ACCESS='SEQOUT')









C  DETERMINE XMIN, XMAX, YMIN AND YMAX
C
      XMIN=9999.
      XMAX=-9999.
      YMIN=9999.
      YMAX=-9999.
C
      DO 20 I=1,NUMNOD
      IF (NODLNG(I).LT.XMIN) XMIN=NODLNG(I)
      IF (NODLNG(I).GT.XMAX) XMAX=NODLNG(I)
      IF (NODLAT(I).LT.YMIN) YMIN=NODLAT(I)
      IF (NODLAT(I).GT.YMAX) YMAX=NODLAT(I)
 20   CONTINUE
C
C  ADJUST A LITTLE BIT THESE LIMITS
C
      CST1=0.015*(XMAX-XMIN)
      CST2=0.015*(YMAX-YMIN)
      ITEMP=IFIX(XMIN-CST1)
      XMIN=FLOAT(ITEMP-1)
      ITEMP=IFIX(XMAX+CST1)
      XMAX=FLOAT(ITEMP+1)
      ITEMP=IFIX(YMIN-CST2)
      YMIN=FLOAT(ITEMP-1)
      ITEMP=IFIX(YMAX+CST2)
      YMAX=FLOAT(ITEMP+1)
C
C  COMPUTE X AND Y STEP SIZES
C
      XSTP=(XMAX-XMIN)/10.
      IF (XSTP.LT.1.) XSTP=1.
      ITEMP=IFIX(XSTP)
      XSTP=FLOAT(ITEMP)
      YSTP=(YMAX-YMIN)/10.
      IF (YSTP.LT.1.) YSTP=1.
      ITEMP=IFIX(YSTP)
      YSTP=FLOAT(ITEMP)
C
C
C
      CALL XTICKS(0)
      CALL YTICKS(0)

      CALL XNONUM
      CALL YNONUM


C       CALL XAXEND('NOFIRST')
C       CALL YAXEND('NOFIRST')


C       TYPE 29,XMIN,XSTP,XMAX,YMIN,YSTP,YMAX
C29     FORMAT(/,1X,'XMIN = ',F10.4,
C    -         /,1X,'XSTP = ',F10.4,
C    -        /,1X,'XMAX = ',F10.4,
C    -         /,1X,'YMIN = ',F10.4,
C    -         /,1X,'YSTP = ',F10.4,
C    -         /,1X,'YMAX = ',F10.4)


C        CALL GRAF(XMIN,XSTP,XMAX,YMIN,YSTP,YMAX)
        CALL MAPGR(XMIN,XSTP,XMAX,YMIN,YSTP,YMAX)

C       CALL SETCLR('BLUE')
C        IF (USMAP.EQ.'Y'.AND.ITML.EQ.'1') CALL MAPFIL('USAM')
        IF (USMAP.EQ.'Y') CALL MAPFIL('USAM')

C
C
C
C  START NOW TO DRAW NODES
C
      CALL SETCLR('RED')

      L = 0

      DO 30 I=1,NUMNOD
      XL=NODLNG(I)
      YL=NODLAT(I)

C IF A NODE IS ALREADY PLOTTED AT THIS (LONGITUDE,LATITUDE), DO NOT
C PLOT THIS NODE

      DO 25 K=1,L
        IF (XL.NE.OLDLNG(K)) GO TO 25
        IF (YL.NE.OLDLAT(K)) GO TO 25
        GO TO 30
 25   CONTINUE


      CALL PLOTND(ITML,XL,YL,XMIN,XMAX,YMIN,YMAX)

      L = L + 1
      OLDLNG(L) = XL
      OLDLAT(L) = YL

 30   CONTINUE



      IF (LINPLT.EQ.'N') GO TO 38


C  DRAW LINES HERE
C
      CALL SETCLR('BLUE')



      DO 34 I=1,NUMLIN
      XL1 = LN1LNG(I)
      YL1 = LN1LAT(I)
      XL2 = LN2LNG(I)
      YL2 = LN2LAT(I)

      ILIN = I

      CALL PLOTLN(XL1,YL1,XL2,YL2,XMIN,XMAX,YMIN,YMAX,PLTFLG,ILIN,BWFLG)

      IF (PLTFLG.NE.1) GO TO 34

        WRITE (22,33) (LINN1(I,K),K=1,2),(LINN2(I,K),K=1,2),
     -                XL1,YL1,XL2,YL2
 33     FORMAT(2A5,1X,2A5,4(1X,F10.4))

 34   CONTINUE


 38   CALL SETCLR('BLACK')

      CALL FRAME
      CALL ENDPL(0)
      IF (ITML.EQ.'2') CALL DONEPL
C
 40   CLOSE (UNIT=22)
      RETURN
      END



        SUBROUTINE PLOTND (ITML,XL,YL,XMIN,XMAX,YMIN,YMAX)

        DIMENSION XARAY(20),YARAY(20)







C
C
C     CST1=0.015*(XMAX-XMIN)
C     CST2=0.015*(YMAX-YMIN)




        CST1=0.0015*(XMAX-XMIN)
        CST2=0.0015*(YMAX-YMIN)



C
C  EXIT IF NODE IS OUTSIDE OF PAGE BORDER
C
      IF (XL.GE.(XMAX-CST1)) GO TO 50
      IF (XL.LE.(XMIN+CST1)) GO TO 50
      IF (YL.GE.(YMAX-CST2)) GO TO 50
      IF (YL.LE.(YMIN+CST2)) GO TO 50
C
C  BUILD THE X AND Y ARRAYS FOR ELLIPSE
C
      DO 25 I=1,20
      XARAY(I)=XL+CST1*COS(I*0.0628)
      YARAY(I)=YL+CST2*SIN(I*0.0628)
 25   CONTINUE
C
C  DRAW THE ELLIPSE
C

      IF (ITML.EQ.'1') CALL CURVE(XARAY,YARAY,20,0)
      IF (ITML.EQ.'2') CALL CURVE(XARAY,YARAY,10,0)
C
 50   RETURN
      END





        SUBROUTINE PLOTLN (XL1,YL1,XL2,YL2,XMIN,XMAX,YMIN,YMAX,PLTFLG,
     -                     ILIN,BWFLG)

        INTEGER PLTFLG







 
      CST1=0.0015*(XMAX-XMIN)
      CST2=0.0015*(YMAX-YMIN)



      PLTFLG=0
      IFLAG=0

C CHECK IF NOD1 IS OUTSIDE OF PAGE BORDER

      IF (XL1.GE.(XMAX-CST1)) GO TO 10
      IF (XL1.LE.(XMIN+CST1)) GO TO 10
      IF (YL1.GE.(YMAX-CST2)) GO TO 10
      IF (YL1.LE.(YMIN+CST2)) GO TO 10
      GO TO 15
 10   IFLAG=IFLAG+1
 
 
C CHECK IF NOD2 IS OUTSIDE OF PAGE BORDER
 
 15   IF (XL2.GE.(XMAX-CST1)) GO TO 20
      IF (XL2.LE.(XMIN+CST1)) GO TO 20
      IF (YL2.GE.(YMAX-CST2)) GO TO 20
      IF (YL2.LE.(YMIN+CST2)) GO TO 20
      GO TO 25
 20   IFLAG=IFLAG+1
 
C  SEE IF LINE NEEDED TO BE DRAWN
 
 25   IF (IFLAG.GT.1) GO TO 90
      IF (IFLAG.EQ.0) GO TO 26
        PLTFLG = 1
        GO TO 90



 26   IF (XL1.EQ.XL2) GO TO 30
 
C
C
C
      XLONG1=15.*((XL1-XMIN)/(XMAX-XMIN))
      XLONG2=15.*((XL2-XMIN)/(XMAX-XMIN))
      YLAT1=11.*((YL1-YMIN)/(YMAX-YMIN))
      YLAT2=11.*((YL2-YMIN)/(YMAX-YMIN))
      SLOPE=(YLAT2-YLAT1)/(XLONG2-XLONG1)
      ANGLE=ATAN(SLOPE)
      IF (XL1.LE.XL2) GO TO 35
      ANGLE=ANGLE+3.14
      GO TO 35
 30   IF (YL1.LE.YL2) GO TO 32
      ANGLE=1.57+3.14
      GO TO 35
 32   ANGLE=1.57
 35   X1=XL1+CST1*COS(ANGLE)
      Y1=YL1+CST2*SIN(ANGLE)
      X2=XL2+CST1*COS(ANGLE+3.14)
      Y2=YL2+CST2*SIN(ANGLE+3.14)
C
C  COMPUTE EXACT POSITIONS OF BOTH END POINTS ON THE SCREEN
C
      XI1=15.*((X1-XMIN)/(XMAX-XMIN))
      XI2=15.*((X2-XMIN)/(XMAX-XMIN))
      YI1=11.*((Y1-YMIN)/(YMAX-YMIN))
      YI2=11.*((Y2-YMIN)/(YMAX-YMIN))
C
C  NOW  DRAW THE LINE
C
      CALL STRTPT(XI1,YI1)
      CALL CONNPT(XI2,YI2)




C  CHECK IF LINE SPEED IS TO BE PLOTTED

      IF (BWFLG.EQ.'N') GO TO 90

C  CALL 'LININF' SUBROUTINE TO PLOT LINE SPEED

        CALL HEIGHT (0.0975)

        CALL LININF (ILIN,XI1,YI1,XI2,YI2,IFLAG)

        CALL RESET ('HEIGHT')


C
 90   RETURN
      END




CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C                                                                        C
C  SUBROUTINE LININF PLOTS THE LINE INFORMATION FOR THE LINE CONNECTING  C
C  THE NODES LINN1(ILIN) AND LINN2(ILIN).  ARGUMENTS X AND Y SENT FROM   C
C  ROUTINE PLOTLN ARE THE ARRAYS CONTAINING ADJUSTED X,Y CO-ORDINATES    C
C  FOR THESE TWO NODES.                                                  C
C                                                                        C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC



        SUBROUTINE LININF(ILIN,X1,Y1,X2,Y2,IFLAG)

        IMPLICIT INTEGER (A-Z)
        COMMON /NODES/ NODE(400,2),NODV(400),NODH(400),
     -                 NODLNG(400),NODLAT(400),NUMNOD

        REAL NODLNG,NODLAT


        COMMON /LINES/ LINN1(2500,2),LN1LNG(2500),LN1LAT(2500),
     -                 LINN2(2500,2),LN2LNG(2500),LN2LAT(2500),NUMLIN,
     -                 LINBW(2500)

        REAL LN1LNG,LN1LAT,LN2LNG,LN2LAT


        REAL XMIN,XMAX,YMIN,YMAX,XSTP,YSTP,CST1,CST2,XL,YL,XL1,XL2,
     -       YL1,YL2,OLDLNG(400),OLDLAT(400)

        INTEGER PLTFLG





        REAL DIST,X1,Y1,X2,Y2,ANG,XX,YY











        LENGTH = 5
        INC = 0






C                                                               PAGE 9

C  FIND THE LENGTH OF THE LINE CONNECTING NODES N1 AND N2

 25     DIST = SQRT((X2-X1)**2 + (Y2-Y1)**2)



C  CHECK IF THE LINE INFO. CAN BE WRITTEN ALONG THIS LINE

        IF (DIST.LT.(LENGTH+INC)*0.105) GO TO 90



C  FIND X,Y CO-ORDINATES TO BEGIN WRITING LINE INFORMATION; SINCE THE
C  INFO. IS WRITTEN ALONG A LINE, THE SLOPE OF THE LINE IS 
C  FIRST FOUND.

        IF (X1.EQ.X2) GO TO 30
        ANG=ATAN((Y2-Y1)/(X2-X1))
        IF (X1.LT.X2) GO TO 40
        GO TO 50

 30     ANG=1.57
        IF (Y1.GT.Y2) GO TO 50
 40     XX= X1+((DIST-((LENGTH+INC)*0.105))/2.)*COS(ANG)-0.04*SIN(ANG)
        YY= Y1+((DIST-((LENGTH+INC)*0.105))/2.)*SIN(ANG)+0.04*COS(ANG)
        GO TO 60

 50     XX= X1-((DIST+((LENGTH+INC)*0.105))/2.)*COS(ANG)-0.04*SIN(ANG)
        YY= Y1-((DIST+((LENGTH+INC)*0.105))/2.)*SIN(ANG)+0.04*COS(ANG)

 60     ANG=ANG*(180./3.14)
        CALL ANGLE(ANG)



C  WRITE THE LINE INFO. ALONG THE LINE


        CALL MESSAG (LINBW(ILIN),LENGTH,XX,YY)





 90     RETURN
        END

  