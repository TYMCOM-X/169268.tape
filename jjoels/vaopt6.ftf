CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C PROGRAM: VAOPT
C
C AUTHOR: JO ANN JOELS, AUGUST 31, 1988
C
C THIS PROGRAM DETERMINES THE OPTIMAL CONFIURATION OF VERY VA USP.
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

        INTEGER ADDRESS(4),CONUSP,DMSNAM(4),VANAM(2)

        CALL DBSTRT(1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,
     +          1,0,1,0,1,0,1,0,1,0,1,0,1,0)


CCCCC
C GET THE YEAR TO BE PROCESSED
CCCCC
90      TYPE 92
92      FORMAT (1X,'ENTER YEAR NUMBER TO BE PROCESSED: ',$)
        ACCEPT 94,INUM
94      FORMAT (I)

CCCCC
C BUILD THE FILE NAMES
CCCCC

        ENCODE(10,96,DMSNAM)INUM
96      FORMAT ('TURBO',I1,'.DMS')
        ENCODE(10,98,VANAM)INUM
98      FORMAT ('VAOPT',I1,'.OUT')

CCCCC
C OPEN THE 1022 DATA BASES AND THE OUTPUT FILE
CCCCC
100     CALL DBOPEN(DMSNAM,DMSNAM)
C100     CALL DBOPEN('TURBOT','TURBOT')
        OPEN(21,VANAM,OUTPUT)
        OPEN(22,'VAOPT.ERR',OUTPUT)

CCCCC
C SET THE DATA BASE TO THE FIRST COPY OF THE  DATA BASE.
C FIND ALL RECORDS AND SORT BY ADDRESS
CCCCC
120     CALL DBSET(1)
        CALL DBFIND('SPACE','NE',0)
        CALL DBNREC(IREC)
122     CALL DBEXEC('SORT KEY ADDRESS')

CCCCC
C GET A RECORD FROM THE 1ST COPY OF THE  DATA BASE
CCCCC
150     CALL DBGREC($800)
        CALL DBVAL('ADDRESS',ADDRESS)

CCCCC
C FROM THE 2ND COPY OF THE  DATA BASE GET THE NUMBER OF 
C USPS WITH THIS ADDRESS.
CCCCC
155     CALL DBSET(2)
        CALL DBFIND('ADDRESS','EQ',ADDRESS,'AND','SPACE','NE',0)
        CALL DBNREC(NREC)

CCCCC
C GET THE NEXT CONSOLIDATED SITE NUMBER
CCCCC
160     CONUSP = CONUSP+1

CCCCC
C IF THERE IS ONLY ONE USP AT THE ADDRESS
C USE THE SINGLE ALGORITHM FOR FINDING THE OPTIMAL CONFIGURATION
C THEN GO GET THE NEXT ADDRESS RECORD FROM THE 1ST COPY OF THE "REQURIED"
C DATA BASE.
CCCCC
170     IF (NREC.NE.1) GOTO 180
        CALL SINGLE(CONUSP)
        CALL DBSET(1)
        GOTO 150

CCCCC
C IF THERE IS MORE THAN ONE USP AT THE ADDRESS
C USE THE MULTIPLE ALGORITM FOR FINDING THE OPTIMAL CONFIGURATION
C FOR THE ADDRESS .
CCCCC
180     CALL DBEXEC('SORT BTU DESC POWER DESC SPACE DESC')
        CALL MULTIPLE(CONUSP,NREC)

C       CCCCC
C       C GET PAST THE OTHER RECORDS FOR THIS SAME ADDRESS IN THE
C       C FIRST COPY OF THE DATA BASE.
C       CCCCC
        CALL DBSET(1)
        DO 185 I = 1,NREC-1
        CALL DBGREC($800)
185     CONTINUE

        GOTO 150

CCCCC
C FINISHED WITH ALL ADDRESSES.  CLOSE ALL INPUT AND OUTPUT FILES.
CCCCC
800     CLOSE(21)
        CLOSE(22)
        CALL DBEND

        END



CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C       SUBROUTINE: SINGLE(CONUSP)
C
C       THIS SUBROUTINE FINDS THE OPTIMAL CONFIGURATION FOR
C       VA ADDRESSES WITH ONLY ONE USP AT THE ADDRESS.
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

        SUBROUTINE SINGLE(CONUSP)

        INTEGER CONUSP,ADDRESS(4),CON,STATE,CITY(3),TCOST,
     +          TGP,TIOC4,TIOC8,TFS,TMEM,TTPUT,TMOD,TFCC,ISPCE,
     +          IPOWR,IBTU,AFCC,MCOST,MMEM,MTPUT,MMOD,MFCC,
     +          PCOST,PMEM,PTPUT,PMOD,PFCC,GP,IOC4,IOC8,FS,FCC,
     +          CARDS,TPORTS,SPORTS,APORTS,PGT96,MOD96,MOD192,
     +          MOD56,TSY96,TSY192,TSY56,TAS96,TAS192

        REAL USP,BW,TUTIL,TSPCE,TPOWR,TBTU,
     +          MUTIL,MSPCE,MPOWR,MBTU,
     +          PUTIL,PSPCE,PPOWR,PBTU,ASPCE,APOWR,ABTU

        CON = 'N'
        NUMUSP = 1
        NUMLNK = 1
        GP = 0
        IOC4 = 0
        IOC8 = 0
        FS = 0
        FCC = 'Y'
        IFAIL = 0
        IPFAIL = 0
        IMFAIL = 0

CCCCC
C GET ALL OF THE INFORMATION FROM THE  RECORD.
CCCCC
100     CALL DBGREC($800)
        CALL DBVAL('TCOST',TCOST,'TGP',TGP,'TIOC4',TIOC4,'TIOC8',
     +       TIOC8,'TFS',TFS,'TMEM',TMEM,'TTPUT',TTPUT,'TUTIL',
     +       TUTIL,'TMOD',TMOD,'TSPCE',TSPCE,'TPOWR',TPOWR,'TBTU',
     +       TBTU,'TFCC',TFCC,'MCOST',MCOST,'MMEM',MMEM,'MTPUT',
     +       MTPUT,'MUTIL',MUTIL,
     +       'MMOD',MMOD,'MSPCE',MSPCE,'MPOWR',MPOWR,'MBTU',
     +       MBTU,'MFCC',MFCC,'PCOST',PCOST,'PMEM',PMEM,'PTPUT',
     +       PTPUT,'PUTIL',PUTIL,
     +       'PMOD',PMOD,'PSPCE',PSPCE,'PPOWR',PPOWR,'PBTU',
     +       PBTU,'PFCC',PFCC,'USP',USP,'ADDRESS',ADDRESS)

        CALL DBVAL('MOD96',MOD96,'SPACE',ISPCE,'POWER',IPOWR,'BTU',IBTU,
     +             'FCC',AFCC,'CITY',CITY,'STATE',STATE,'MOD192',MOD192,
     +             'MOD56',MOD56,'TSY96',TSY96,'TSY192',THS192,'TSY56',
     +             TSY56,'TAS96',TAS96,'TAS192',TAS192)

105     IF (TFS.EQ.0) TBTU = TBTU-70.
        ASPCE = ISPCE*1.
        APOWR = IPOWR*1.
        ABTU = IBTU*1.
110     BW = MOD96*9.6 + MOD192*19.2 + MOD56*56.
        TPORTS = MOD96+MOD192+MOD56+TSY96+TSY192+TSY56+TAS96+TAS192


CCCCC
C IF THERE ARE ANY FCC B REQUIREMENTS, ONLY A TURBO SOLUTION
C WILL MEET THE REQUIREMENT
CCCCC
200     IF (AFCC.NE.'B') GOTO 210
        IFAIL = 1
        GOTO 350

CCCCC
C IF HAVE MORE THAN 2 56KB PORTS THEN HW WILL BE TURBO
CCCCC
210     IF (MOD56+TSY56.LE.2) GOTO 215
        IFAIL = 2
        GOTO 350

CCCCC
C IF HAVE ANY ASYNC PORTS GT 9.6 THEN HW WILL BE TURBO
CCCCC
215     IF (TAS192.EQ.0) GOTO 220
        IFAIL = 3
        GOTO 350


CCCCC
C IF HAVE MORE THAN 14 TOTAL PORTS THEN HW WILL BE TURBO
CCCCC
220     IF (TPORTS.LE.14) GOTO 300
        IFAIL = 4
        GOTO 350

CCCCC
C ASSUME PICO IS THE CHEAPEST CONFIGURATION. CHECK IF PICO
C PASSES ALL OF THE REQUIREMENT TESTS.
CCCCC
300     IF (PCOST.NE.0) GOTO 302
        IPFAIL = 1
        GOTO 325

302     IF (PTPUT.LE.4000) GOTO 304
        IPFAIL = 2
        GOTO 350
304     IF (TPORTS.LE.8) GOTO 306
        IPFAIL = 3
        GOTO 325
        
306     PGT96 = MOD192+MOD56+TSY192+TSY56+TAS192
        IF (PGT96.LE.2) GOTO 308
        IPFAIL = 4
        GOTO 325

308     HWTYPE = 'PICO '
        CARDS = 0
        CALL TEST(HWTYPE,CARDS,PMOD,ASPCE,PSPCE,APOWR,PPOWR,ABTU,
     +    PBTU,AFCC,PFCC,PASS,SFLAG,PFLAG,BFLAG,CFLAG,MFLAG,FFLAG)
        IF (PASS.EQ.'Y') GOTO 310
        IPFAIL = 5
        GOTO 325

310     WRITE (21,315)PASS,CON,CONUSP,USP,NUMUSP,ADDRESS,CITY,STATE,
     +        BW,NUMLNK,HWTYPE,PCOST,CARDS,GP,IOC4,IOC8,FS,
     +        PMEM,PTPUT,PUTIL,PMOD,PSPCE,PPOWR,
     +        PBTU,TFCC,SFLAG,PFLAG,FFLAG,BFLAG,CFLAG,MFLAG,MOD96,
     +        MOD192,MOD56,IFAIL,IPFAIL,IMFAIL,TPORTS,ASPCE,APOWR,ABTU

315     FORMAT (A1,1X,A1,1X,I3,1X,F10.3,1X,I3,1X,4A5,1X,3A5,1X,
     +          A2,1X,F6.1,1X,I2,1X,A5,1X,I8,1X,I3,4(1X,I3),1X,I8,
     +          1X,I8,1X,F5.1,1X,I3,3(1X,F8.2),1X,A1,6(1X,I1),
     +          3(1X,I3),3(1X,I1),1X,I5,3(1X,F8.2))
        GOTO 900

CCCCC
C PICO FAILS, TRY MICRO
CCCCC
325     IF (MCOST.NE.0) GOTO 327
        IMFAIL = 1
        GOTO 350

327     IF (MTPUT.LE.2400) GOTO 329
        IMFAIL = 2
        GOTO 350

329     APORTS = TAS96+TAS192
        SPORTS = MOD96+MOD192+MOD56+TSY96+TSY192+TSY56
        IF (APORTS+SPORTS.LE.14) GOTO 330
        IMFAIL = 3
        GOTO 350

330     IF (SPORTS.LE.10) GOTO 332
        IMFAIL = 4
        GOTO 350

332     HWTYPE = 'MICRO'
        CARDS = 0
        CALL TEST(HWTYPE,CARDS,MMOD,ASPCE,MSPCE,APOWR,MPOWR,ABTU,
     +    MBTU,AFCC,MFCC,PASS,SFLAG,PFLAG,BFLAG,CFLAG,MFLAG,FFLAG)
        IF (PASS.EQ.'Y') GOTO 334
        IMFAIL = 5
        GOTO 350

334     WRITE (21,315)PASS,CON,CONUSP,USP,NUMUSP,ADDRESS,CITY,STATE,
     +        BW,NUMLNK,HWTYPE,MCOST,CARDS,GP,IOC4,IOC8,FS,
     +        MMEM,MTPUT,MUTIL,MMOD,MSPCE,MPOWR,
     +        MBTU,TFCC,SFLAG,PFLAG,FFLAG,BFLAG,CFLAG,MFLAG,MOD96,
     +        MOD192,MOD56,IFAIL,IPFAIL,IMFAIL,TPORTS,ASPCE,APOWR,ABTU
        GOTO 900

CCCCC
C MICRO FAILS, TRY TURBO
CCCCC
350     HWTYPE = 'TURBO'
        CARDS = TGP+TIOC4+TIOC8+TFS
        CALL TEST(HWTYPE,CARDS,TMOD,ASPCE,TSPCE,APOWR,TPOWR,ABTU,
     +    TBTU,AFCC,TFCC,PASS,SFLAG,PFLAG,BFLAG,CFLAG,MFLAG,FFLAG)
360     WRITE (21,315)PASS,CON,CONUSP,USP,NUMUSP,ADDRESS,CITY,STATE,
     +        BW,NUMLNK,HWTYPE,TCOST,CARDS,TGP,TIOC4,TIOC8,TFS,
     +        TMEM,TTPUT,TUTIL,TMOD,TSPCE,TPOWR,
     +        TBTU,TFCC,SFLAG,PFLAG,FFLAG,BFLAG,CFLAG,MFLAG,MOD96,
     +        MOD192,MOD56,IFAIL,IPFAIL,IMFAIL,TPORTS,ASPCE,APOWR,ABTU
        GOTO 900


CCCCC
C ERROR. UNABLE TO GET RECORD FROM DATA BASE
CCCCC
800     TYPE 805
805     FORMAT (1X,'UNABLE TO GET RECORD FROM DATA BASE.')



900     RETURN
        END

CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C       SUBROUTINE: TEST
C
C       THIS SUBROUTINE TESTS TO SEE IF A GIVEN CONFIGUREATION MEETS
C       ALL OF THE REQUIREMENTS.
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

        SUBROUTINE TEST(HWTYPE,CARDS,MODEM,ASPCE,RSPCE,APOWR,RPOWR,
     +                  ABTU,RBTU,AFCC,RFCC,PASS,SFLAG,PFLAG,BFLAG,
     +                  CFLAG,MFLAG,FFLAG)

        INTEGER HWTYPE,CARDS,MODEM,
     +          AFCC,RFCC,PASS,SFLAG,PFLAG,BFLAG,CFLAG,MFLAG,
     +          FFLAG

        REAL ASPCE,RSPCE,APOWR,RPOWR,ABTU,RBTU

        PASS = 'Y'
        SFLAG = 0
        PFLAG = 0
        BFLAG = 0
        CFLAG = 0
        MFLAG = 0
        FFLAG = 0


CCCCC
C CHECK IF NUMBER OF MODEMS IS LESS THAN OR EQAL TO 14
CCCCC
100     GOTO 125
        IF (MODEM.LE.14) GOTO 125
        PASS = 'N'
        MFLAG = 1

CCCCC
C CHECK IF SPACE IS SUFFICIENT
CCCCC
125     IF (RSPCE.LE.ASPCE) GOTO 130
        PASS = 'N'
        SFLAG = 1

CCCCC
C CHECK IF POWER IS SUFFICIENT
CCCCC
130     IF (RPOWR.LE.APOWR) GOTO 135
        PASS = 'N'
        PFLAG = 1

CCCCC
C CHECK IF BTU IS SUFFICIENT
CCCCC
135     IF (RBTU.LE.ABTU) GOTO 140
        PASS = 'N'
        BFLAG = 1

CCCCC
C CHECK IF MEET FCC REQURIEMENTS
CCCCC
140     GOTO 150
        PASS = 'N'
        FFLAG = 1

CCCCC
C IF TESTING FOR TURBO REQUIREMENTS MAKE SURE NUMBER OF CARDS IS
C LESS THAN 120.
CCCCC
150     IF (HWTYPE.NE.'TURBO') RETURN
        IF (CARDS.LE.120) RETURN
        PASS = 'N'
        CFLAG = 1

200     RETURN
        END



CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C       SUBROUTINE: MULTIPLE(CONUSP)
C
C       THIS SUBOUTINE FINDS THE OPTIMAL CONFIGURATION FOR
C       A VA ADDRESS WITH MULTIPLE USPS.
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

        SUBROUTINE MULTIPLE(CONUSP,NREC)

        INTEGER CONUSP,ADDRESS(4),CON,STATE,CITY(3),TCOST,
     +          TGP,TIOC4,TIOC8,TFS,TMEM,TTPUT,TMOD,TFCC,
     +          AFCC,MCOST,MMEM,MTPUT,MMOD,MFCC,
     +          PCOST,PMEM,PTPUT,PMOD,PFCC,CCOST,CGP,CIOC4,CIOC8,
     +          CFS,CMEM,CTPUT,CMOD,CFCC,SGP,SIOC4,SIOC8,SFS,SMEM,
     +          STPUT,SMOD,PASS,NUMLNK,FCC,HWTYPE,CCARDS,SCARDS,
     +          NREC,CLEAR,ISPCE,IPOWR,IBTU,CPASS,CSF,CPF,CFF,CBF,
     +          CCF,CMF,MOD96,MOD192,MOD56,TSY96,TSY192,TSY56,TAS96,
     +          TAS192,APORTS,IPORTS,TCARDS,CM96,CM192,CM56,CPORTS,
     +          TPORTS,CFCC,SPORTS

        REAL USP,BW,TUTIL,TSPCE,TPOWR,TBTU,SUTIL,SPOWR,SBTU,
     +          MUTIL,MSPCE,MPOWR,MBTU,CUTIL,CSPCE,CPOWR,
     +          PUTIL,PSPCE,PPOWR,PBTU,CBTU,ASPCE,APOWR,ABTU,
     +          TESTS,TESTP,TESTB,TSTUSP,SSPCE

        NUMLNK = 1
        FCC = 'Y'
        HWTYPE = 'TURBO'
        CLEAR= 'Y'
        CON = 'N'
        NUMUSP = 1


CCCCC
C FOR EACH USP WITH THE SAME ADDRESS
CCCCC
100     DO 600 I = 1,NREC

C       CCCCC
C       C GET A RECORD
C       CCCCC
125     CALL DBGREC($800)
        CALL DBVAL('USP',USP,'ADDRESS',ADDRESS,'CITY',CITY,
     +          'STATE',STATE,'TCOST',TCOST,'TGP',TGP,'TIOC4',TIOC4,
     +          'TIOC8',TIOC8,'TFS',TFS,'TMEM',TMEM,'TTPUT',TTPUT,
     +          'TUTIL',TUTIL,'TMOD',TMOD,'TSPCE',TSPCE,'TPOWR',
     +          TPOWR,'TBTU',TBTU,'TFCC',TFCC,'ACCESS',BW,'SPACE',
     +          ISPCE,'POWER',IPOWR,'BTU',IBTU,'FCC',AFCC,'MOD96',
     +          MOD96,'MOD192',MOD192,'MOD56',MOD56,'TSY96',
     +          TSY96,'TSY192',TSY192,'TSY56',TSY56,'TAS96',TAS96,
     +          'TAS192',TAS192)

126     IF (TFS.EQ.0) TBTU = TBTU - 70.
        ASPCE = ISPCE*1.
        APOWR = IPOWR*1.
        ABTU = IBTU*1.
        APORTS = MOD96+MOD192+MOD56
        IPORTS = TSY96+TSY192+TSY56+TAS96+TAS192
        TCARDS = TGP+TIOC4+TIOC8+TFS
        TPORTS = MOD96+MOD192+MOD56+TSY96+TSY192+TSY56+TAS96+TAS192

CCCCC
C CALCULATE THE AMOUNT OF SPACE NEEDED AS A FUNCTION OF THE
C SIZE OF TURBO ENGINE NEEDED.  THE SIZE OF THE TURBO ENGINE
C IS DETERMINED BY THE NUMBER OF ACCESS MODEMS AND THE NUMBER
C OF CARDS.
CCCCC
127     CALL GSPACE(APORTS,TCARDS,TSPCE)


C       CCCCC
C       C IF THIS IS THE FIRST USP FOR THIS ADDRESS OR IF
C       C THIS IS THE FIRST USP IN A NEW ADDRESS
C       CCCCC
130     IF (I.NE.1 .AND. NEW.NE.'Y') GOTO 250

C       CCCCC
C       C SET UP THE CURRENT SOLUTION VARIABLES TO BE THE LAST
C       C SET OF VARIABLES JUST READ
C       CCCC
150     CUSP = USP
        CCOST = TCOST
        CGP = TGP
        CIOC4 = TIOC4
        CIOC8 = TIOC8
        CFS = TFS
        CCARDS = TGP+TIOC4+TIOC8+TFS
        CMEM = TMEM
        CTPUT = TTPUT
        CUTIL = TUTIL
        CMOD = TMOD
        CSPCE = TSPCE
        CPOWR = TPOWR
        CBTU = TBTU
        CBW = MOD96*9.6+MOD192*19.2+MOD56*56.
        CM96 = MOD96
        CM192= MOD192
        CM56 = MOD56
        CFCC = TFCC
        CPORTS = TPORTS
        TESTS = ASPCE
        TESTP = APOWR
        TESTB = ABTU
        TSTUSP = USP
        CON = 'N'

C       CCCCC
C       C SEE IF THE CURRENT SOLUTION MEETS THE
C       C REQUIREMENTS
C       CCCCC
175     CALL TEST('TURBO',CCARDS,CMOD,TESTS,TSPCE,TESTP,CPOWR,TESTB,
     +    CBTU,AFCC,CFCC,PASS,SFLAG,PFLAG,BFLAG,CFLAG,MFLAG,FFLAG)

        IF (PASS.EQ.'Y') GOTO 200
        CPASS = 'N'
        CON = 'N'
        NUMLNK = 1
180     WRITE (21,185)CPASS,CON,CONUSP,TSTUSP,NUMUSP,ADDRESS,CITY,STATE,
     +        CBW,NUMLNK,HWTYPE,TCOST,CCARDS,CGP,CIOC4,CIOC8,CFS,
     +        CMEM,CTPUT,CUTIL,CMOD,CSPCE,CPOWR,
     +        CBTU,CFCC,SFLAG,PFLAG,FFLAG,BFLAG,CFLAG,MFLAG,CM96,CM192,
     +        CM56,IFAIL,IPFAIL,ITFAIL,CPORTS,TESTS,TESTP,TESTB

185     FORMAT (A1,1X,A1,1X,I3,1X,F10.3,1X,I3,1X,4A5,1X,3A5,1X,
     +          A2,1X,F6.1,1X,I2,1X,A5,1X,I8,1X,I3,4(1X,I3),1X,I8,
     +          1X,I8,1X,F5.1,1X,I3,3(1X,F8.2),1X,A1,6(1X,I1),
     +          3(1X,I3),3(1X,I1),1X,I5,3(1X,F8.2))

        CLEAR = 'Y'
        NEW = 'Y'
        CONUSP = CONUSP + 1
        GOTO 600

CCCCC
C PASSED ALL TESTS. SEE IF ANOTHER USP WILL FIT ON THIS 
C CONFIGURATION
CCCCC
200     NEW = 'N'
        CLEAR = 'N'
        CPASS = 'Y'
        CSF = SFLAG
        CPF = PFLAG
        CFF = FFLAG
        CBF = BFLAG
        CCF = CFLAG
        CMF = MFLAG
        NUMUSP = 1
        SCARDS = CCARDS
        SGP = CGP
        SIOC4 = CIOC4
        SIOC8 = CIOC8
        SFS = CFS
        SMOD = CMOD 

        SPOWR = CPOWR
        SBTU = CBTU
        SUTIL = CUTIL
        STPUT = CTPUT
        SMEM = CMEM
        SBW = CBW
        SSPCE = CSPCE
        SPORTS = TPORTS
        GOTO 600

CCCCC
C THIS IS NOT THE FIRST USP FOR THE ADDRESS.  ADD THE 
C INFO JUST READ TO THE TOTALS FOR THE ADDRESS.
CCCCC
250     SCARDS = SCARDS + TGP + TIOC4 + TIOC8 + TFS
        SGP = SGP + TGP
        SIOC4 = SIOC4 + TIOC4
        SIOC8 = SIOC8 + TIOC8
        SFS = SFS + TFS
        SPORTS = SPORTS + TPORTS
        SMOD = SMOD + TMOD
        SPOWR = SPOWR + TPOWR
        SBTU = SBTU + TBTU
        SUTIL = (SUTIL+TUTIL)/2.
        STPUT = STPUT + TTPUT
        SMEM = SMEM + TMEM
        SBW = SBW + MOD96*9.6 + MOD192*19.2 + MOD56*56.

CCCCC
C AS ABOVE, WE ARE ASSUMING THAT WE WILL NEED TO ADD ONE MODEM FOR
C EACH INTERFACE PORT, AND THE POWER AND HEAT DISSIPATION WILL NEED
C TO BE INCREASED ACCORDINGLY.
C
C AS ANOTHER FIX, WE ARE GOING TO SUBTRACT 1 GP CARD AND 70 BTUS EACH
C TIME WE TRY TO CONSOLIDATE.
CCCCC
252     SMOD = SMOD + IPORTS
        SPOWR = SPOWR + (IPORTS*.166)
        SBTU = SBTU + (IPORTS*70) - 70
        SCARDS = SCARDS -1
        SGP = SGP - 1

CCCCC
C NOW CALCULATE THE NEW AMOUT OF SPACE NEEDED
C FOR THE NEW AMOUNT OF MODEMS.
CCCCC
254     CALL GSPACE(SMOD,TCARDS,SSPCE)
255     CALL TEST('TURBO',SCARDS,SMOD,TESTS,TSPCE,TESTP,SPOWR,TESTB,
     +    SBTU,AFCC,TFCC,PASS,SFLAG,PFLAG,BFLAG,CFLAG,MFLAG,FFLAG)
        IF (PASS.EQ.'N') GOTO 300


CCCCC
C PASSED ALL TESTS.INCREMENT THE NUMBER OF USPS AT THIS ADDRESS.
CCCCC
        NUMUSP = NUMUSP + 1
        NUMLNK = NUMLNK + 1
        CPASS = 'Y'
        CON = 'Y'

CCCCC
C WRITE A PARTIAL RECORD FOR THE USP WHCIH WAS CONSOLIDATED WITH
C THIS NEW ONE.  WE NEED A RECORD FOR EACH USP.
CCCCC
        WRITE (21,275)CPASS,CON,CONUSP,USP,TFCC
275     FORMAT (A1,1X,A1,1X,I3,1X,F10.3,145X,A1)

        CLEAR = 'N'
CCCCC
C NOW MAKE THE CURRENT SOLUTION VARIABLES CONTAIN THE TOTALS
C FOR THIS ADDRESS SO FAR.
CCCCC
        CPORTS = SPORTS
        CUSP = USP
        CCOST = TCOST
        CGP = SGP
        CIOC4 = SIOC4
        CIOC8 = SIOC8
        CFS = SFS
        CCARDS = SCARDS
        CMEM = SMEM
        CTPUT = STPUT
        CUTIL = SUTIL
        CMOD = SMOD
        CPOWR = SPOWR
        CBTU = SBTU
        CBW = SBW
        CSPCE = SSPCE
        GOTO 600

CCCCC
C DID NOT PASS THE TEST.  CANNOT CONSOLIDATE THESE
C USPS.  WRITE OUT THE SOLUTION BEFORE THIS LAST USP WAS ADDED.
300     WRITE (22,301)CUSP,SCARDS,SMOD,TESTS,TSPCE,TESTP,SPOWR,TESTB,
     +         SBTU,PASS,SFLAG,PFALG,BFLAG,CFLAG,MFLAG,FFLAG
301     FORMAT (F7.3,1X,I3,1X,I3,1X,F8.2,1X,F8.2,1X,F8.2,1X,F8.2,1X,
     +          F8.2,1X,F8.2,1X,A1,1X,6(1X,I1))
        IF (NUMUSP.EQ.1) GOTO 310

C       CCCCC
C       C THIS IS A CONSOLIDATED ADDRESS, CONSOLIDATE THE BANDWIDTH
C       C AND DETERMINE THE NEW NUMBER OF 9.6,19.2 AND 56KB ACCESS LINES
CC      CCCCC
305     CALL BWIDTH(CBW,CM96,CM192,CM56)
        CMOD = CM96 + C+ CM56

        IF (CFS.EQ.0) GOTO 310
        IF (CCARDS.GT.0.AND.CCARDS.LE.19) CFS = 1
        IF (CCARDS.GT.19.AND.CCARDS.LE.38) CFS = 2
        IF (CCARDS.GT.38) CFS = 4
310     WRITE (21,185)CPASS,CON,CONUSP,TSTUSP,NUMUSP,ADDRESS,CITY,STATE,
     +        CBW,NUMLNK,HWTYPE,CCOST,CCARDS,CGP,CIOC4,CIOC8,CFS,
     +        CMEM,CTPUT,CUTIL,CMOD,CSPCE,CPOWR,
     +        CBTU,CFCC,CSF,CPF,CFF,CBF,CCF,CMF,CM96,CM192,CM56,IFAIL,
     +        IPFAIL,IMFAIL,CPORTS,TESTS,TESTP,TESTB

        CLEAR = 'N'
CCCCC
C GET NEW ADDRESS NUMBER
CCCCC
        CONUSP = CONUSP + 1

CCCCC
C GO TEST THE NEW RECORD TO SEE IF IT WILL FIT ON A TURBO
CCCCC
        GOTO 150

CCCCC
C END OF LOOP
CCCCC
600     CONTINUE


CCCCC
C FINSIHED LOOP. WRITE OUT THE CURRENT SOLUTION.
CCCCC
400     IF (NUMUSP.EQ.1) GOTO 410

C       CCCCC
C       C THIS IS A CONSOLIDATED ADDRESS, CONSOLIDATE THE BANDWIDTH
C       C AND DETERMINE THE NEW NUMBER OF 9.6,19.2 AND 56KB ACCESS LINES
CC      CCCCC
405     CALL BWIDTH(CBW,CM96,CM192,CM56)
        CMOD = CM96+CM192+CM56

        IF (CFS.EQ.0) GOTO 410
        IF (CCARDS.GT.0.AND.CCARDS.LE.19) CFS = 1
        IF (CCARDS.GT.19.AND.CCARDS.LE.38) CFS = 2
        IF (CCARDS.GT.38) CFS = 4

410     IF (CLEAR.EQ.'N') WRITE (21,185)CPASS,CON,CONUSP,TSTUSP,NUMUSP,
     +          ADDRESS,CITY,STATE,
     +        CBW,NUMLNK,HWTYPE,CCOST,CCARDS,CGP,CIOC4,CIOC8,CFS,
     +        CMEM,CTPUT,CUTIL,CMOD,CSPCE,CPOWR,
     +        CBTU,CFCC,SFLAG,PFLAG,FFLAG,BFLAG,CFLAG,MFLAG,CM96,
     +        CM192,CM56,IFAIL,IPFAIL,IMFAIL,CPORTS,TESTS,TESTP,TESTB
        GOTO 900

CCCCC
C ERROR. UNABLE TO GET A RECORD FROM DATA BASE.
CCCCC
800     TYPE 805
805     FORMAT (1X,'UNABLE TO GET A RECORD FROM DATA BASE.')
        RETURN


CCCCC
C RETURN
CCCCC
900     RETURN
        END

CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C SUBROUTINE: GSPACE
C
C THIS SUBOURTINE CALCULATES THE SPACE NEEDED BY A TURBO ENGINE
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

        SUBROUTINE GSPACE(MODEMS,CARDS,SPACE)

        INTEGER MODEMS,CARDS

        REAL SPACE

CCCCC
C IF THE NUMBER OF MODEMS IS LESS THAN OR EQUAL TO 8 AND THE NUMBER
C OF CARDS IS LESS THAN OR EQUAL TO 20, THEN THIS IS A TRUBO-20
C AND WE NEED ONLY 1 FOOTPRINT
CCCCC
100     IF (MODEMS.GT.8. OR. CARDS.GT.20) GOTO 200
                SPACE = 6.4
                RETURN


CCCCC
C IF THE NUMBER OF MODEMS IS LESS THAN 16 THEN THIS IS A TURBO-40
C AND WE NEED 2 FOOTPRINTS
CCCCC
200     IF (MODEMS.GT.16) GOTO 300
                SPACE = 2*6.4
                RETURN

CCCCC
C THIS IS A TURBO 80.  WE NEED TWO FOOTPRINTS PLUS ONE FOOTPRINT FOR
C EVERY 16 MODEMS OVER A BASE OF 16 MODEMS.
CCCCC
300     IMOD = MODEMS-16
        INUM = IMOD/16
        XREM = AMOD(IMOD*1.0,16.0)
        SPACE = 2*6.4 + INUM*6.4
        IF (XREM.GT.0) SPACE = SPACE + 6.4
        RETURN

        END



CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C SUBROUTINE: BWIDTH
C
C THIS SUBROUTINE DETERMINES THE NUMBER OF MODEMS OF EACH TYPE
C NEEDED TO SUPPORT THE COMBINED BANDWIDTH OF A CONSOLIDATED 
C ADDRESS
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

        SUBROUTINE BWIDTH(CBW,MOD96,MOD192,MOD56)

        INTEGER MOD96,MOD192,MOD56

        REAL BW,CBW,F96,F192,F56

100     BW = CBW
        MOD96 = 0
        MOD192 = 0
        MOD56 = 0

        F96 = 9.600
        F192 = 19.2
        F56 = 56.

CCCCC
C IF THERE IS ANY BANDWIDTH LEFT TO CHECK.....
CCCCC
150     IF (BW.LE.0) GOTO 800

C       CCCCC
C       C IF THE REMAINING BANDWIDTH IS LESS THAN OR EQUAL TO 9.6
C       C THEN INCREMENT THE 9.6 MODEM COUNTER AND TAKE THAT MUCH
C       C BANDWIDTH FROM THE TOTAL BANDWIDTH AND CONTINUE TO CHECK.
C       CCCCC
        IF (BW.GT.F96) GOTO 200
                MOD96=MOD96+1
                BW = BW -9.6
                GOTO 150
C       CCCCC
C       C IF THE REMAINING BANDWIDTH IS LESS THAN OR EQUAL TO 19.2
C       C THEN INCREMENT THE 19.2 MODEM COUNTER AND TAKE THAT MUCH
C       C BANDWIDTH FROM THE TOTAL BANDWIDTH AND CONTINUE TO CHECK.
C       CCCCC
200     IF (BW.GT.F192) GOTO 300
                MOD192=MOD192+1
                BW = BW -19.2
                GOTO 150
C       CCCCC
C       C THERE IS ENOUGH BANDWIDTH FOR A 56KB LINE SO...
C       C INCREMENT THE 56KB MODEM COUNTER AND TAKE THAT MUCH
C       C BANDWIDTH FROM THE TOTAL BANDWIDTH AND CONTINUE TO CHECK.
C       CCCCC
300     MOD56=MOD56+1
        BW = BW - 56.
        GOTO 150

800     RETURN
        END
 oH