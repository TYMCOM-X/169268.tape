        INTEGER AUXCNT,AUXMIN,AUXCHR,REMCNT,REMMIN,REMCHR,LONG(5)
     X  ,LNGTH(17),MIN(10080),MIN1(1440),FLEDMS(4),FLETMP(3),TOTMIN
     X  ,OUTPUT,EMIN,SMIN,SDAY,STIME,EDAY,ETIME,DC(100),DISC
     X  ,TI1,TI2,TI3,TI4,TI5,GATCNT,GATMIN,GATCHR,TID(4,100)
     X  ,ILONG(5),ILNGTH(17),IDC(100),ITID(4,100),FLESAM(3)
     X  ,MIN2(1440),HOUR(168),ABDIS(7,100),SPT(4,100,3),
     X  S(3,3),H(3,3),IO(3,3),ITYMFL(4),IOTOT(17),IOAVG(17)

        DIMENSION IDISC(100,8),IDASC(100,4),ILGDIS(241)
     X,ILGDAS(241),ITYMHT(350)
        REAL ICPS,LNGTH1(17),DC1(100),PS(2,3),PH(2,3),PIO(2,3)
        DOUBLE PRECISION FILNAM,STARES

        DATA IDISC(1,1)/':?   '/
        DATA (IDISC(2,J),J=1,7)/':HOST HAS GONE DOWN-ISIS SLOT CRASH'/
        DATA (IDISC(3,J),J=1,5)/':DROPPED BY HOST (NORMAL)'/
        DATA (IDISC(4,J),J=1,4)/':DROPPED BY USER    '/
        DATA (IDISC(5,J),J=1,4)/':HOST NOT AVAILABLE '/
        DATA (IDISC(6,J),J=1,5)/':SUB-HOST DOWN AT LOG ON '/
        DATA (IDISC(7,J),J=1,5)/':SUB-HOST SHUT AT LOG ON '/
        DATA (IDISC(8,J),J=1,3)/':OUT OF PORTS  '/
        DATA (IDISC(9,J),J=1,4)/':OUT OF CHANNELS    '/
        DATA (IDISC(10,J),J=1,8)/':TERMINAL DOES NOT 
     XMATCH AVAILABLE PORTS'/
        DATA (IDISC(11,J),J=1,6)/':CIRCUIT ORIGINATION REJECTED '/
        DATA (IDISC(12,J),J=1,4)/':USER NAME REJECTED '/
        DATA (IDISC(13,J),J=1,7)/':ILLEGAL USAGE 
     XOF FOREIGN ORIGIN   '/
        DATA (IDISC(14,J),J=1,6)/':SPECIAL CAMP-ON DISCONNECT   '/
        DATA (IDISC(15,J),J=1,4)/':NETWORK DISCONNECT '/
        DATA (IDISC(16,J),J=1,7)/':NODE CODE OUT OF DISPATCHER PORTS '/
        DATA (IDISC(17,J),J=1,7)/':ISIS SLOT OUT OF DISPATCHER PORTS '/
        DATA (IDISC(18,J),J=1,7)/':ISIS SLOT ZAPPED,HOST OUT OF PORTS'/
        DATA (IDISC(19,J),J=1,4)/':HOST NOT ANSWERING '/
        DATA (IDISC(20,J),J=1,5)/':HOST REJECTED CALLER    '/
        DATA (IDISC(21,J),J=1,4)/':PROTOCOL VIOLATION '/
        DATA (IDISC(22,J),J=1,5)/':RESOURCE-LIMIT EXCEEDED '/
        DATA (IDISC(23,J),J=1,5)/':LOSS OF SYNCHRONIZATION '/
        DATA (IDISC(85,J),J=1,8)/':FORCED TERMINATION 
     X(NO UPDATE IN 6 HRS)'/
        DATA (IDISC(86,J),J=1,8)/':FORCED TERMINATION
     X(NO I/O IN 24 HRS)  '/
        DATA (IDISC(87,J),J=1,8)/':FORCED TERMINATION
     X(OVER 1 MTH SESSION)'/
        DATA (IDASC(1,J),J=1,4)/':AUXILIARY CIRCUIT  '/
        DATA (IDASC(2,J),J=1,4)/':300BDS,ASCII A,Y   '/
        DATA (IDASC(3,J),J=1,4)/':300BDS,ASCII C     '/
        DATA (IDASC(4,J),J=1,4)/':300BDS,ASCII E,I   '/
        DATA (IDASC(5,J),J=1,4)/':300BDS,ASCII G     '/
        DATA (IDASC(6,J),J=1,4)/':150BDS,ASCII B     '/
        DATA (IDASC(7,J),J=1,4)/':150BDS,ASCII F     '/
        DATA (IDASC(8,J),J=1,4)/':150BDS,ASCII J     '/
        DATA (IDASC(9,J),J=1,4)/':300BDS,2741 <CR>   '/
        DATA (IDASC(10,J),J=1,4)/':134BDS,2741 <CR>   '/
        DATA (IDASC(11,J),J=1,4)/':110BDS,ASCII D     '/
        DATA (IDASC(12,J),J=1,4)/':2780               '/
        DATA (IDASC(13,J),J=1,4)/':1200,2400,4800ASCII'/
        DATA (IDASC(14,J),J=1,4)/':BORROUGHS POLLED   '/
        DATA (IDASC(15,J),J=1,4)/':AUX THROUGH GATEWAY'/
        DATA (IDASC(16,J),J=1,4)/':VARIABLE: BAUDOT   '/
        DATA (IDASC(17,J),J=1,4)/':2400BDS,ASCII A,G,I'/
        DATA (IDASC(18,J),J=1,4)/':3270               '/
        DATA (IDASC(19,J),J=1,4)/':3270 PRINTER       '/
        DATA (IDASC(20,J),J=1,4)/':4800BDS,ASCII A,G,I'/
        DATA (IDASC(21,J),J=1,4)/':9600BDS,ASCII A,G,I'/
        DATA (IDASC(22,J),J=1,4)/':MULTIPLEXED PVC    '/
        DATA (IDASC(23,J),J=1,4)/':AUDIO RESPONSE     '/
        DATA (IDASC(24,J),J=1,4)/':75/1200            '/


        CALL DBSTRT(5,-1,-1,1,-4,0,21,-1,22,-1)

*       ** INPUT: DATE TO PROCESS

        TYPE 80
80      FORMAT (1X,'HOW MANY DAYS ( <7 ) DO YOU WANT TO PROCESS: ',$)
        ACCEPT 90,ILENGTH
90      FORMAT (I1)
        TYPE 100
100     FORMAT (1X,'INPUT DATE TO PROCESS (1ST DAY OF THE PERIOD): ',$)
        ACCEPT 101,IDATE
101     FORMAT (I6)
        TYPE 102
102     FORMAT (1X,'INPUT THE NAME OF A FILE WHERE YOU 
     -WANT TO STORE DATA AVAILABLE FOR THE PLOTS : ',$)
        ACCEPT 103,FILNAM
103     FORMAT (A10)

        OPEN (22,FILNAM,OUTPUT)
        WRITE (22,110) ILENGTH,IDATE
110     FORMAT (1X,I1,1X,I6)

        TYPE 113
113     FORMAT (1X,'INPUT THE NAME OF A FILE WHERE YOU 
     -WANT TO STORE THE REPORT CONCERNING THIS PERIOD : ',$)
        ACCEPT 114,STARES
114     FORMAT (A10)

115     TYPE 116
116     FORMAT(1X,'DO YOU WANT TO PROCESS :',/,
     -4X,'(1) ALL SESSIONS',/,
     -4X,'(2) SESSIONS OF TYMSHARE CUSTOMERS ONLY',/,
     -1X,'OR (3) SESSIONS OF NON-TYMSHARE CUSTOMERS ONLY ?',//,
     -1X,'ENTER ''1'' OR ''2'' OR ''3'' : ',$)

        ACCEPT 117,ISELCT
117     FORMAT(I1)
        IF (ISELCT.NE.1 .AND. ISELCT.NE.2 .AND. ISELCT.NE.3)
     - GOTO 115


        TYPE 118
118     FORMAT(/,1X,'ENTER FILE NAME FOR LIST OF TYMSHARE HOSTS: ',$)
        ACCEPT 119,ITYMFL
119     FORMAT(4A5)

C OPEN THE TYMSHARE HOSTS' FILE

        OPEN(21,ITYMFL,INPUT,SYMBOLIC)
131     READ(21,132,END=135) KHOST
132     FORMAT(I6)
        NUMHST=NUMHST+1
        IF(NUMHST.LE.350) GO TO 134
        TYPE 133
133     FORMAT(/,1X,'INCREASE THE SIZE OF TYMSHARE HOST ARRAY,ITYMHT',
     -  ' TO GREATER THAN 350',$)
        STOP
134     ITYMHT(NUMHST)=KHOST
        GOTO 131
135     CLOSE(21)




        DO 509 IXD=1,ILENGTH
*       ** BUILD DAILY STATISTICS FILE NAME INTO ARRAY: FLEDMS
*          AND OUTPUT FILE INTO FLETMP

120     FORMAT (9H(NETSTAT),I6,4H.DMS)
121     FORMAT (I6,4H.TMP)
        ENCODE (19,120,FLEDMS)IDATE
        ENCODE (10,121,FLETMP)IDATE

*       ** OPEN DAILY STATISTICS FILE AND OUTPUT TO THE TERMINAL THE
*          NUMBER OF RECORDS TO BE PROCESSED

        CALL DBOPEN(FLEDMS)
        CALL DBFIND('ERRTYP','NE',1)
        CALL DBNREC(IREC)

        TYPE 150,IDATE,IREC
150     FORMAT (1X,'#### TOTAL NUMBER OF RECORDS TO PROCESS FOR  ',I6
     X,' = ',I6,' ####')

*       ***** PROCESS EACH RECORD *****


155     CALL DBGREC($280)
        CALL DBVAL('ORIGNODE',INODE,'TERMID',ID,'TERMHOST',IHOST
     X,'STARTDATE',SDAY,'STARTTIME',STIME,'INPUTCHAR',INPUT,'OUTPUTCHAR'
     X,OUTPUT,'ENDDATE',EDAY,'ENDTIME',ETIME,'TOTMIN',TOTMIN
     X,'DISCTYPE',DISC,'ORIGHOST',JHOST)

        DO 156 I=1,NUMHST
        IF (IHOST.NE.ITYMHT(I)) GOTO 156
        IFLTYM=1
        GOTO 157
156     CONTINUE

        IFLTYM=0

157     IF (ISELCT.EQ.2 .AND. IFLTYM.EQ.0) GOTO 155
        IF (ISELCT.EQ.3 .AND. IFLTYM.EQ.1) GOTO 155

*       ** CHECK IF SESSION IS A GATEWAY CIRCUIT
C  THE FOLLOWING CHECK FOR GATEWAY CIRCUITS IS NOT CORRECT, 
C  AND NEEDS TO BE FIXED.


        GATTMIN=0
        GATCHR=0
        GATCNT=0

C       IF (JHOST.GE.16384) GO TO 158
C       GATMIN=GATMIN+TOTMIN
C       GATCHR=GATCHR+INPUT+OUTPUT
C       GATCNT=GATCNT+1
C       GO TO 180




*       ** CHECK IF SESSION IS AN AUXILIARY CIRCUIT

 158    IF (ID.NE.0) GO TO 159
        AUXMIN=AUXMIN+TOTMIN
        AUXCHR=AUXCHR+INPUT+OUTPUT
        AUXCNT=AUXCNT+1
        GO TO 180

*       ** CHECK IF SESSION IS ORIGINATING FROM A TYMSAT

159     IF (INODE.LT.1000.OR.INODE.GT.1777) GO TO 170
        REMMIN=REMMIN+TOTMIN
        REMCHR=REMCHR+INPUT+OUTPUT
        REMCNT=REMCNT+1
        GO TO 180



*       ** HERE SESSION IS ORIGINATING FROM A TYMSAT SLOT OF ISIS NODE

170     ISIMIN=ISIMIN+TOTMIN
        ISICHR=ISICHR+INPUT+OUTPUT
        ISICNT=ISICNT+1





*       ** CHECK IF THIS SESSION IS THE LONGEST SESSION SO FAR- IF SO,
*          REPLACE VALUES IN 'LONG' WITH THE VALUES FROM THIS RECORD


180     IF (TOTMIN.LE.LONG(1)) GO TO 190
        LONG(1)=TOTMIN
        LONG(2)=INODE
        LONG(3)=IHOST
        LONG(4)=INPUT+OUTPUT
        LONG(5)=DISC

*       ** DETERMINE LENGTH OF SESSION AND INCREMENT THE APPROPRIATE
*          COUNTER FOR THAT LENGTH IN ARRAY: LNGTH

190     ITOT=TOTMIN
        IF (TOTMIN.GT.1) GO TO 191
        LNGTH(1)=LNGTH(1)+1
        IOTOT(1)=IOTOT(1)+INPUT+OUTPUT
        GO TO 250
191     IF (TOTMIN.GT.5) GO TO 192
        LNGTH(2)=LNGTH(2)+1
        IOTOT(2)=IOTOT(2)+INPUT+OUTPUT
        GO TO 250
192     IF (TOTMIN.GT.10) GO TO 193
        LNGTH(3)=LNGTH(3)+1
        IOTOT(3)=IOTOT(3)+INPUT+OUTPUT
        GO TO 250
193     IF (TOTMIN.GT.15) GO TO 194
        LNGTH(4)=LNGTH(4)+1
        IOTOT(4)=IOTOT(4)+INPUT+OUTPUT
        GO TO 250
194     IF (TOTMIN.GT.20) GO TO 195
        LNGTH(5)=LNGTH(5)+1
        IOTOT(5)=IOTOT(5)+INPUT+OUTPUT
        GO TO 250
195     IF (TOTMIN.GT.25) GO TO 196
        LNGTH(6)=LNGTH(6)+1
        IOTOT(6)=IOTOT(6)+INPUT+OUTPUT
        GO TO 250
196     IF (TOTMIN.GT.30) GO TO 197
        LNGTH(7)=LNGTH(7)+1
        IOTOT(7)=IOTOT(7)+INPUT+OUTPUT
        GO TO 250
197     IF (TOTMIN.GT.35) GO TO 198
        LNGTH(8)=LNGTH(8)+1
        IOTOT(8)=IOTOT(8)+INPUT+OUTPUT
        GO TO 250
198     IF (TOTMIN.GT.40) GO TO 199
        LNGTH(9)=LNGTH(9)+1
        IOTOT(9)=IOTOT(9)+INPUT+OUTPUT
        GO TO 250
199     IF (TOTMIN.GT.45) GO TO 200
        LNGTH(10)=LNGTH(10)+1
        IOTOT(10)=IOTOT(10)+INPUT+OUTPUT
        GO TO 250
200     IF (TOTMIN.GT.50) GO TO 201
        LNGTH(11)=LNGTH(11)+1
        IOTOT(11)=IOTOT(11)+INPUT+OUTPUT
        GO TO 250
201     IF (TOTMIN.GT.55) GO TO 202
        LNGTH(12)=LNGTH(12)+1
        IOTOT(12)=IOTOT(12)+INPUT+OUTPUT
        GO TO 250
202     IF (TOTMIN.GT.60) GO TO 203
        LNGTH(13)=LNGTH(13)+1
        IOTOT(13)=IOTOT(13)+INPUT+OUTPUT
        GO TO 250
203     IF (TOTMIN.GT.120) GO TO 204
        LNGTH(14)=LNGTH(14)+1
        IOTOT(14)=IOTOT(14)+INPUT+OUTPUT
        GO TO 250
204     IF (TOTMIN.GT.180) GO TO 205
        LNGTH(15)=LNGTH(15)+1
        IOTOT(15)=IOTOT(15)+INPUT+OUTPUT
        GO TO 250
205     IF (TOTMIN.GT.240) GO TO 206
        LNGTH(16)=LNGTH(16)+1
        IOTOT(16)=IOTOT(16)+INPUT+OUTPUT
        GO TO 250
206     LNGTH(17)=LNGTH(17)+1
        IOTOT(17)=IOTOT(17)+INPUT+OUTPUT

*    **LENGTH DISTRIBUTION PER MINUTES
 
        ITOT=240
250      ILGDAS(ITOT+1)=ILGDAS(ITOT+1)+1
        ILGDIS(ITOT+1)=ILGDIS(ITOT+1)+1


*       ** DETERMINE THE NUMBER OF SIMULTANEOUS USERS
*          FOR EACH MINUTE OF THE DAY

*       ** CONVERT THE START TIME TO THE MINUTE OF THE WEEK

        SMIN=(60*(STIME/100))+MOD(STIME,100)+(IXD-1)*1440
        EMIN=TOTMIN
*       CHECK IF THIS SESSION STARTED ON A PREVIOUS DAY
        IF (SDAY.EQ.EDAY) GO TO 260
        SMIN=SMIN-1440*(EDAY-SDAY)
        IF (SMIN .LE. 0) EMIN=EMIN+SMIN
        IF (SMIN .LE. 0) SMIN=0

*       ** INCREMENT EACH MINUTE OF THE WEEK THROUGH WHICH THIS
*          SESSION LASTED (AND EACH HOUR)

260     IF (EMIN .EQ. 0) EMIN=1
        DO 265 I=SMIN,SMIN+EMIN-1
        MIN(I+1)=MIN(I+1)+1
265     CONTINUE
        JJ=SMIN/60
        HOUR(JJ)=HOUR(JJ)+1

*       *** ADD # OF MINUTES, # OF INPUT CHARS, # OF OUTPUT CHARS
*           TO THE APPROPRIATE ACCUMULATORS AND INCREMENT THE
*           COUNTER FOR THIS TYPE OF TERMINAL I.D.

        TID(1,ID+1)=TID(1,ID+1)+1
        TID(2,ID+1)=TID(2,ID+1)+TOTMIN
        TID(3,ID+1)=TID(3,ID+1)+INPUT
        TID(4,ID+1)=TID(4,ID+1)+OUTPUT
        SPT(1,ID+1,IFLTYM+1)=SPT(1,ID+1,IFLTYM+1)+1
        SPT(2,ID+1,IFLTYM+1)=SPT(2,ID+1,IFLTYM+1)+TOTMIN
        SPT(3,ID+1,IFLTYM+1)=SPT(3,ID+1,IFLTYM+1)+INPUT
        SPT(4,ID+1,IFLTYM+1)=SPT(4,ID+1,IFLTYM+1)+OUTPUT
        SPT(1,ID+1,3)=SPT(1,ID+1,3)+1
        SPT(2,ID+1,3)=SPT(2,ID+1,3)+TOTMIN
        SPT(3,ID+1,3)=SPT(3,ID+1,3)+INPUT
        SPT(4,ID+1,3)=SPT(4,ID+1,3)+OUTPUT

*       ** INCREMENT THE APPROPRIATE DISCONNECT TYPE COUNTER

  5     DC(DISC+1)=DC(DISC+1)+1

        IF (DISC.EQ.3) ABDIS(IXD,ID+1)=ABDIS(IXD,ID+1)+1

*       ** FINISHED PROCESSING THIS RECORD. GO AND PROCESS ANOTHER

        GO TO 155

*       ***** FINISHED PROCESSING ALL RECORDS *****

*       ** CLOSE THE DAILY STATISTICS FILE

280     CALL DBCLOS
        TYPE 281
281     FORMAT(1X,'ONE DAY PROCESSED')

*       ** STORE DATA FOR PLOTTING

        DO 350 I=1,241
        INUM=I-1
        WRITE (22,300) INUM,ILGDIS(I)
300     FORMAT (1X,I3,1X,I6)
        ILGDIS(I)=0
350     CONTINUE

        DO 450 I=1,100
        WRITE (22,400) TID(1,I),TID(2,I),TID(3,I),TID(4,I),DC(I)
400     FORMAT (1X,I6,1X,I8,1X,I11,1X,I11,1X,I6)
450     CONTINUE
*       ** STORE SOME DATA IN A TEMPORARLY OPEN FILE


        TYPE 451
451     FORMAT(1X,'PLOT DATA WRITTEN')
        OPEN (21,FLETMP,OUTPUT)
        WRITE (21,501) REMMIN,REMCHR,REMCNT,AUXMIN,AUXCHR
     X,AUXCNT,GATMIN,GATCHR,GATCNT,ISIMIN,ISICHR,ISICNT
     X,LONG(1),LONG(2),LONG(3),LONG(4),LONG(5)
501     FORMAT (1X,4(I8,I11,I8,/),I5,2I4,I11,I2)
        DO 503 I=1,17
        WRITE (21,502) LNGTH(I)
502     FORMAT (I6)
503     CONTINUE
        DO 505 I=1,100
        WRITE (21,504) TID(1,I),TID(2,I),TID(3,I),TID(4,I),DC(I)
504     FORMAT (I6,I8,2I11,I6)
505     CONTINUE
        CLOSE (21)
        REMMIN=0
        REMCHR=0
        REMCNT=0
        AUXMIN=0
        AUXCHR=0
        AUXCNT=0
        GATMIN=0
        GATCHR=0
        GATCNT=0
        ISIMIN=0
        ISICHR=0
        ISICNT=0
        DO 506 I=1,5
        LONG(I)=0
506     CONTINUE
        DO 507 I=1,17
        LNGTH(I)=0
507     CONTINUE
        DO 508 I=1,100
        TID (1,I)=0
        TID (2,I)=0
        TID(3,I)=0
        TID(4,I)=0
        DC(I)=0
508     CONTINUE
        IDATE=IDATE+1
        TYPE 1234
1234    FORMAT(1X,'READY FOR NEXT DAY')
509     CONTINUE

*       START OUTPUTTING THE RESULTS

*       ** PART 1 - NATURE OF CIRCUITS

        IDATE1=IDATE-ILENGTH
        OPEN (24,STARES,OUTPUT)
        IF (ILENGTH.EQ.1) GOTO 510
        IDATE=IDATE-1
        WRITE (24,510) ILENGTH,IDATE1,IDATE,FILNAM

510     FORMAT (/////,1X,'***** M E A N  R E S U L T S *****',///,1X,
     X'STATISTICS FOR ',1X,I1,1X,'DAYS : FROM ',1X,I6,' TO ',1X,I6,1X,
     X//,1X,'DATA AVAILABLE FOR PLOTTING ARE STORED IN : ',A10,/////)


        IDATE=IDATE1
        IDATE2=IDATE1+ILENGTH-1

*       ** START OF THE PRINTING LOOP **


511    FORMAT (I6,4H.TMP)
        ENCODE (10,511,FLETMP)IDATE
        OPEN (21,FLETMP,INPUT)
        WRITE (24,1010)
        WRITE (24,1000)
        WRITE (24,512) IDATE
512     FORMAT (/,1X,'***DAILY RESULTS  : FOR ',I6,'  ***')
        WRITE (24,1000)

        READ (21,513) REMMIN,REMCHR,REMCNT,AUXMIN,AUXCHR
     X,AUXCNT,GATMIN,GATCHR,GATCNT,ISIMIN,ISICHR,ISICNT
     X,LONG(1),LONG(2),LONG(3),LONG(4),LONG(5)
513     FORMAT (1X,4(I8,I11,I8,/),I5,2I4,I11,I2)
        DO 515 I=1,17
        READ (21,514) LNGTH(I)
514     FORMAT (I6)
515     CONTINUE
        DO 517 I=1,100
        READ (21,516) TID(1,I),TID(2,I),TID(3,I),TID(4,I),DC(I)
516     FORMAT (I6,I8,2I11,I6)
517     CONTINUE
        CLOSE (21)
518     WRITE (24,519)
519     FORMAT(1X,//,1X,
     X'PART 1 -- NATURE OF CIRCUITS -- ',/1X,'******',//20X,'SESSIONS',
     X2X,'MINUTES',4X,'TOTCHARS',2X,'AHT IN MINS',3X,'CPS')
*       ** COMPUTE AHT AND CPS FOR DIFFERENT CIRCUITS


        AHT=AUXMIN/FLOAT(AUXCNT)
        CPS=AUXCHR/(AUXMIN*60.)
        WRITE (24,521)AUXCNT,AUXMIN,AUXCHR,AHT,CPS
521     FORMAT(1X,'AUX CIRCUITS',8X,I8,1X,I8,1X,I11,6X,F5.2,3X,F6.2)


        AHT=REMMIN/FLOAT(REMCNT)
        CPS=REMCHR/(REMMIN*60.)
        WRITE (24,520)REMCNT,REMMIN,REMCHR,AHT,CPS
520     FORMAT(1X,'NORMAL CIRCUITS',5X,I8,1X,I8,1X,I11,6X,F5.2,3X,F6.2)


C  REMOVE THE 'C' IN COLUMN 1 OF THE NEXT 4 STATEMENTS AFTER FIXING THE
C  CHECK FOR GATEWAY CIRCUITS

C       AHT=GATMIN/FLOAT(GATCNT)
C       CPS=GATCHR/(GATMIN*60.)
C       WRITE (24,522)GATCNT,GATMIN,GATCHR,AHT,CPS
C22     FORMAT(1X,'GATEWAY CIRCUITS'4X,I8,1X,I8,1X,I11,6X,F5.2,3X,F6.2)

        AHT=ISIMIN/FLOAT(ISICNT)
        CPS=ISICHR/(ISIMIN*60.)
        WRITE (24,523)ISICNT,ISIMIN,ISICHR,AHT,CPS
523     FORMAT(1X,'CIR FROM ISIS SLOT',2X,I8,1X,I8,1X,I11,6X,
     XF5.2,3X,F6.2)

*       ** COMPUTE AHT AND CPS FOR TOTAL NUMBER OF SESSIONS

        ITOTM=REMMIN+AUXMIN+GATMIN+ISIMIN
        ITOTCH=REMCHR+AUXCHR+GATCHR+ISICHR
        ITOTCT=REMCNT+AUXCNT+GATCNT+ISICNT
        AHT=ITOTM/FLOAT(ITOTCT)
        CPS=ITOTCH/(ITOTM*60.)
        WRITE (24,524)ITOTCT,ITOTM,ITOTCH,AHT,CPS
524     FORMAT(/1X,'TOTAL',15X,I8,1X,I8,1X,I11,6X,F5.2,3X,F6.2)


*       ** PART 2 -- LONGEST SESSION --

        WRITE (24,550)
550     FORMAT (////1X,'PART 2 -- LONGEST SESSION --',/1X,'******')
        IHR=LONG(1)/60
        IMIN=MOD(LONG(1),60)

        J=LONG(5)

        WRITE (24,560)LONG(2),LONG(3),IHR,IMIN,LONG(4),(IDISC(J,K),
     XK=1,8)

560     FORMAT(/1X,'FROM NODE ',I4,' TO HOST ',I4,/,1X,'
     XHRS= ',I3,5X,'MIN= ',I2,5X,'TOTCHARS= ',I10,/,1X,'DISCTYPE= ',8A5)


*       ** PART 3 -- SESSION DURATION --

        WRITE (24,565)
565     FORMAT (////,1X,'PART 3 -- SESSION DURATION DISTRIBUTION --',/1X,
     X'******',//1X,'SESSION LENGTH',2X,' # OF SESSIONS',4X,'%',7X,
     X'AVG # CHARS/SESSION')

        DO 570 J=1,17
        LNGTH1(J)=(LNGTH(J)/FLOAT(ITOTCT))*100.
        IOAVG(J)=IOTOT(J)/LNGTH(J)
570     CONTINUE


*       ** OUTPUT ALL 17 LENGHTS AND # OF SESSIONS FOR EACH LENGTH;
*       ** ALSO OUTPUT THE PERCENTAGE OF NUMBER OF SESSIONS AND THE
*       ** AVERAGE NO. OF I/O CHARACTERS PER SESSION FOR EACH LENGTH.

        WRITE (24,571)LNGTH(1),LNGTH1(1),IOAVG(1)
571     FORMAT (3X,'0-1',14X,I6,8X,F5.2,10X,I7)
        WRITE (24,572)LNGTH(2),LNGTH1(2),IOAVG(2)
572     FORMAT (3X,'GT.1.LE.5',8X,I6,8X,F5.2,10X,I7)
        WRITE (24,573)LNGTH(3),LNGTH1(3),IOAVG(3)
573     FORMAT (3X,'GT.5.LE.10',7X,I6,8X,F5.2,10X,I7)
        WRITE (24,574)LNGTH(4),LNGTH1(4),IOAVG(4)
574     FORMAT (3X,'GT.10.LE.15',6X,I6,8X,F5.2,10X,I7)
        WRITE (24,575)LNGTH(5),LNGTH1(5),IOAVG(5)
575     FORMAT (3X,'GT.15.LE.20',6X,I6,8X,F5.2,10X,I7)
        WRITE (24,576)LNGTH(6),LNGTH1(6),IOAVG(6)
576     FORMAT (3X,'GT.20.LE.25',6X,I6,8X,F5.2,10X,I7)
        WRITE (24,577)LNGTH(7),LNGTH1(7),IOAVG(7)
577     FORMAT (3X,'GT.250',6X,I6,8X,F5.2,10X,I7)
        WRITE (24,578)LNGTH(8),LNGTH1(8),IOAVG(8)
578     FORMAT (3X,'GT.30.LE.35',6X,I6,8X,F5.2,10X,I7)
        WRITE (24,579)LNGTH(9),LNGTH1(9),IOAVG(9)
579     FORMAT (3X,'GT.35.LE.40',6X,I6,8X,F5.2,10X,I7)
        WRITE (24,580)LNGTH(10),LNGTH1(10),IOAVG(10)
580     FORMAT (3X,'GT.40.LE.45',6X,I6,8X,F5.2,10X,I7)
        WRITE (24,581)LNGTH(11),LNGTH1(11),IOAVG(11)
581     FORMAT (3X,'GT.45.LE.50',6X,I6,8X,F5.2,10X,I7)
        WRITE (24,582)LNGTH(12),LNGTH1(12),IOAVG(12)
582     FORMAT (3X,'GT.50.LE.55',6X,I6,8X,F5.2,10X,I7)
        WRITE (24,583)LNGTH(13),LNGTH1(13),IOAVG(13)
583     FORMAT (3X,'GT.55.LE.60',6X,I6,8X,F5.2,10X,I7)
        WRITE (24,584)LNGTH(14),LNGTH1(14),IOAVG(14)
584     FORMAT (3X,'GT.60.LE.120',5X,I6,8X,F5.2,10X,I7)
        WRITE (24,585)LNGTH(15),LNGTH1(15),IOAVG(15)
585     FORMAT (3X,'GT.120.LE.180',4X,I6,8X,F5.2,10X,I7)
        WRITE (24,586)LNGTH(16),LNGTH1(16),IOAVG(16)
586     FORMAT (3X,'GT.180.LE.240',4X,I6,8X,F5.2,10X,I7)
        WRITE (24,587)LNGTH(17),LNGTH1(17),IOAVG(17)
587     FORMAT (3X,'GT.240',11X,I6,8X,F5.2,10X,I7)





*       ** PART 4 -- TERMINAL TYPE DISTRIBUTION

        WRITE (24,1010)
        WRITE (24,650)
650     FORMAT (////,1X,'PART 4 -- TERMINAL TYPE DISTRIBUTION --',/1X,
     X'******',//1X,'NID',5X,'MEANING & TID',4X,'SESSIONS',1X,
     X'MINUTES',1X,'AHT IN MINS',2X,'TOT I/O',2X,'TOT-CPS')

*       ** OUTPUT INFO ON EACH TID

        DO 675 I=1,100

        IF (TID(1,I).LE.0) GO TO 675

        TI1=TID(1,I)
        TI2=TID(2,I)
        TI3=TID(3,I)
        TI4=TID(4,I)
        TI5=TI3+TI4
        IF (TI2.LE.0) GO TO 655
        AHT1=TI2/FLOAT(TI1)
        IINTOT=IINTOT+TI3
        IOUTOT=IOUTOT+TI4
        TCPS=TI5/(TI2*60.)
        GO TO 658

655     TCPS=0.
        ICPS=0.
        OCPS=0.


658     INUM=I-1
        WRITE (24,660) INUM,(IDASC(I,J),J=1,4),TI1,TI2,AHT1,TI5,TCPS
660     FORMAT (1X,I3,1X,4A5,3X,I6,1X,I7,3X,F7.2,2X,I11,2X,F6.2)

675     CONTINUE
        WRITE (24,676)
676     FORMAT (///,1X,'NID',5X,'MEANING & TID',9X,'INPUT',3X,'%',
     X2X,'IN-CPS',5X,'OUTPUT',3X,'%',2X,'OUT-CPS')

        DO 690 I=1,100

        IF (TID(1,I).LE.0) GOTO 690
 
        TI2=TID(2,I)
        TI3=TID(3,I)
        TI4=TID(4,I)
        IF (TI2.LE.0) GOTO 680
        ICPS=TI3/(TI2*60.)
        OCPS=TI4/(TI2*60.)
        PERC3=(TI3/FLOAT(IINTOT))*100.
        PERC4=(TI4/FLOAT(IOUTOT))*100.
        GOTO 681

680     ICPS=0.
        OCPS=0.

681       INUM=I-1
        WRITE (24,685) INUM,(IDASC(I,J),J=1,4),TI3,PERC3,ICPS,TI4,PERC4,
     XOCPS
685     FORMAT (1X,I3,1X,4A5,1X,I10,1X,F5.2
     X,F6.2,1X,I11,1X,F5.2,F6.2)

690     CONTINUE

        IINTOT=0
        IOUTOT=0



*       ** PART 5 -- DISCONNECT TYPE DISTRIBUTION

        WRITE (24,1010)
        WRITE (24,700)
700     FORMAT (//,1X,'PART 5 -- DISCONNECT TYPE DISTRIBUTION --',/1X,
     X'******',//1X,'DISCTYP',4X,'# OF SESS',6X,'%',20X,'MEANING')

        DO 720 I=1,100
        IF (DC(I).LE.0) GO TO 720
        DC1(I)=(DC(I)/FLOAT(ITOTCT))*100.
        INUM=I-1
        WRITE (24,710)INUM,DC(I),DC1(I),(IDISC(I,J),J=1,8)
710     FORMAT (4X,I2,5X,I7,6X,F5.2,3X,8A5)
720     CONTINUE

        IREMMIN=IREMMIN+REMMIN
        IREMCHR=IREMCHR+REMCHR
        IREMCNT=IREMCNT+REMCNT
        IAUXMIN=IAUXMIN+AUXMIN
        IAUXCHR=IAUXCHR+AUXCHR
        IAUXCNT=IAUXCNT+AUXCNT
        IGATMIN=IGATMIN+GATMIN
        IGATCHR=IGATCHR+GATCHR
        IGATCNT=IGATCNT+GATCNT
        IISIMIN=IISIMIN+ISIMIN
        IISICHR=IISICHR+ISICHR
        IISICNT=IISICNT+ISICNT
        IF (LONG(1).LE.ILONG(1)) GOTO 722
        DO 721 J=1,5
        ILONG(J)=LONG(J)
721     CONTINUE
722     DO 723 J=1,17
        ILNGTH(J)=ILNGTH(J)+LNGTH(J)
723     CONTINUE
        DO 724 J=1,100
        ITID(1,J)=ITID(1,J)+TID(1,J)
        ITID(2,J)=ITID(2,J)+TID(2,J)
        ITID(3,J)=ITID(3,J)+TID(3,J)
        ITID(4,J)=ITID(4,J)+TID(4,J)
        IDC(J)=IDC(J)+DC(J)
724     CONTINUE
        IDATE=IDATE+1
        IF (IDATE.GT.IDATE2) GOTO 725
        GOTO 511
725     REMMIN=IREMMIN/ILENGTH
        REMCHR=IREMCHR/ILENGTH
        REMCNT=IREMCNT/ILENGTH
        AUXMIN=IAUXMIN/ILENGTH
        AUXCHR=IAUXCHR/ILENGTH
        AUXCNT=IAUXCNT/ILENGTH
        GATMIN=IGATMIN/ILENGTH
        GATCHR=IGATCHR/ILENGTH
        GATCNT=IGATCNT/ILENGTH
        ISIMIN=IISIMIN/ILENGTH
        ISICHR=IISICHR/ILENGTH
        ISICNT=IISICNT/ILENGTH
        DO 726 J=1,5
        LONG(J)=ILONG(J)
726     CONTINUE
        DO 727 J=1,17
        LNGTH(J)=ILNGTH(J)/ILENGTH
727     CONTINUE
        DO 728 J=1,100
        TID(1,J)=ITID(1,J)/ILENGTH
        TID(2,J)=ITID(2,J)/ILENGTH
        TID(3,J)=ITID(3,J)/ILENGTH
        TID(4,J)=ITID(4,J)/ILENGTH
        DC(J)=IDC(J)/ILENGTH
728     CONTINUE
        IF (ILENGTH.EQ.1) GOTO 750
        IDATE3=IDATE2+1
        IF (IDATE.GT.IDATE3) GOTO 750
        WRITE (24,1000)
        WRITE (24,729)
729     FORMAT (///,1X,'***** MEAN STATISTICS FOR THE PERIOD *****',//)
        WRITE (24,1000)
        GOTO 518
*       ** PART 6 -- NUMBER OF SIMULTANEOUS USERS


750     WRITE (24,760)
760     FORMAT (////,1X,'PART 6 -- NUMBER OF SIMULTANEOUS USERS --',
     X/1X,'******')

*       ** OPEN THE OUTPUT FILE AND OUTPUT ONE RECORD FOR EVERY MINUTE
*          OF THE DAY, CONTAINING THE MINUTE NUMBER AND THE
*          # OF USERS FOR THAT MINUTE.

        DO 769 K=1,ILENGTH
        TI1=0
        TI2=0
        IDATE=IDATE1+K-1
        DO 764 J=1,1440
        I=J+(1440*(K-1))
        MIN2(J)=MIN(I)
        JNUM=J-1
        WRITE (22,761) JNUM,MIN2(J)
761     FORMAT (1X,I4,1X,I5)
        IF (MIN2(J).LE.TI2) GOTO 764
        TI1=JNUM
        TI2=MIN2(J)
764     CONTINUE
        WRITE (24,765)IDATE
765     FORMAT (/,1X,'DAY = ',I6)
        I1=TI1/60
        I2=MOD(TI1,60)
        WRITE (24,800)TI2,I1,I2
769     CONTINUE
        IF(ILENGTH.EQ.1) GOTO 1100
  
   


        TI1=0
        TI2=0
        IDATE=IDATE+1
        DO 770 J=1,10080
        INUM1=MOD(J,1440)
        MIN1(INUM1)=MIN1(INUM1)+MIN(J)
770     CONTINUE
        DO 790 I=1,1440
        INUM=I-1
        MIN1(I)=MIN1(I)/ILENGTH
        IF (MIN1(I).LE.TI2) GO TO 790
        TI1=INUM
        TI2=MIN1(I)
790     CONTINUE

*       ** CONVERT PEAK MIN TO HHMM FORMAT

        I1=TI1/60
        I2=MOD(TI1,60)
        WRITE (24,799)
799     FORMAT(//,1X,'PEAK FOR TOTAL STATISTICS')
        WRITE (24,800)TI2,I1,I2
800     FORMAT(/1X,'PEAK NO. OF SIMULTANEOUS USERS ',I5,' OCCURED AT ',
     XI2,':',I2)
1000    FORMAT (//1X,'******************************
     X*****************************************'//)

1010    FORMAT(1H1)

1100    DO 1501 I=1,168
        WRITE (22,1500) I,HOUR(I)
1500    FORMAT (1X,I3,1X,I6)
1501    CONTINUE

        DO 1510 I=1,ILENGTH
        DO 1510 J=1,100
        K=J-1
        WRITE (22,1505) K,ABDIS(I,J)
1505    FORMAT (1X,I3,1X,I6)
1510    CONTINUE
   
   
        IF (ISELCT.NE.1) GOTO 777
   
*
*
*       COMPARISON OF TYMSHARE & NON-TYMSHARE 
*                  HOSTS' TRAFFICS
*
*  
*       NON-TYMSHARE HOSTS
*   
*           300 BAUD  (NETWORK ID - 1,...,10,15,21)
*  
        DO 11 I=2,11
         S(1,1)=S(1,1)+SPT(1,I,1)
         H(1,1)=H(1,1)+SPT(2,I,1)
         IO(1,1)=IO(1,1)+SPT(3,I,1)+SPT(4,I,1)
  11    CONTINUE

        S(1,1)=S(1,1)+SPT(1,16,1)+SPT(1,22,1)
        H(1,1)=H(1,1)+SPT(2,16,1)+SPT(2,22,1)
        IO(1,1)=IO(1,1)+SPT(3,16,1)+SPT(3,22,1)+
     -                  SPT(4,16,1)+SPT(4,22,1)

*    
*             1200 BAUD-9600 BAUD  (NETWORK ID - 12,16,17,19,20)
*  
        S(1,2)=SPT(1,13,1)+SPT(1,17,1)+SPT(1,18,1)+SPT(1,20,1)+
     -         SPT(1,21,1)
        H(1,2)=SPT(2,13,1)+SPT(2,17,1)+SPT(2,18,1)+SPT(2,20,1)+
     -         SPT(2,21,1)
        IO(1,2)=SPT(3,13,1)+SPT(3,17,1)+SPT(3,18,1)+SPT(3,20,1)+
     -          SPT(3,21,1)+
     -          SPT(4,13,1)+SPT(4,17,1)+SPT(4,18,1)+SPT(4,20,1)+
     -          SPT(4,21,1)
*  
*            BATCH  (NETWORK ID - 0,11,13,14,18,22,23)
*
        S(1,3)=SPT(1,1,1)+SPT(1,12,1)+SPT(1,14,1)+SPT(1,15,1)+
     X         SPT(1,19,1)+SPT(1,23,1)+SPT(1,24,1)
        H(1,3)=SPT(2,1,1)+SPT(2,12,1)+SPT(2,14,1)+SPT(2,15,1)+
     X         SPT(2,19,1)+SPT(2,23,1)+SPT(2,24,1)
        IO(1,3)=SPT(3,1,1)+SPT(3,12,1)+SPT(3,14,1)+SPT(3,15,1)+
     X          SPT(3,19,1)+SPT(3,23,1)+SPT(3,24,1)
     X         +SPT(4,1,1)+SPT(4,12,1)+SPT(4,14,1)+SPT(4,15,1)+
     X          SPT(4,19,1)+SPT(4,23,1)+SPT(4,24,1)
*         
*         TYMSHARE HOSTS
*     
*              300 BAUD  (NETWORK ID - 1,...,10,15,21)
*  
        DO 12 I=2,11
         S(2,1)=S(2,1)+SPT(1,I,2)
         H(2,1)=H(2,1)+SPT(2,I,2)
         IO(2,1)=IO(2,1)+SPT(3,I,2)+SPT(4,I,2)
  12    CONTINUE

        S(2,1) = S(2,1)+SPT(1,16,2)+SPT(1,22,2)
        H(2,1) = H(2,1)+SPT(2,16,2)+SPT(2,22,2)
        IO(2,1)=IO(2,1)+SPT(3,16,2)+SPT(3,22,2)+
     -                  SPT(4,16,2)+SPT(4,22,2)

*  
*             1200 BAUD-9600 BAUD  (NETWORK ID -12,16,17,19,20)
*  
        S(2,2)=SPT(1,13,2)+SPT(1,17,2)+SPT(1,18,2)+SPT(1,20,2)+
     -         SPT(1,21,2)
        H(2,2)=SPT(2,13,2)+SPT(2,17,2)+SPT(2,18,2)+SPT(2,20,2)+
     -         SPT(2,21,2)
        IO(2,2)=SPT(3,13,2)+SPT(3,17,2)+SPT(3,18,2)+SPT(3,20,2)+
     -          SPT(3,21,2)
     -         +SPT(4,13,2)+SPT(4,17,2)+SPT(4,18,2)+SPT(4,20,2)+
     -          SPT(4,21,2)
*   
*              BATCH  (NETWORK ID - 0,11,13,14,18,22,23)
*   
        S(2,3)=SPT(1,1,2)+SPT(1,12,2)+SPT(1,14,2)+SPT(1,15,2)+
     X         SPT(1,19,2)+SPT(1,23,2)+SPT(1,24,2)
        H(2,3)=SPT(2,1,2)+SPT(2,12,2)+SPT(2,14,2)+SPT(2,15,2)+
     X         SPT(2,19,2)+SPT(2,23,2)+SPT(2,24,2)
        IO(2,3)=SPT(3,1,2)+SPT(3,12,2)+SPT(3,14,2)+SPT(3,15,2)+
     X          SPT(3,19,2)+SPT(3,23,2)+SPT(3,24,2)
     X         +SPT(4,1,2)+SPT(4,12,2)+SPT(4,14,2)+SPT(4,15,2)+
     X          SPT(4,19,2)+SPT(4,23,2)+SPT(4,24,2)
*   
*           TOTAL
*  
*             300 BAUD  (NETWORK ID - 1,...,10,15,21)
*  
        DO 13 I=2,11
         S(3,1)=S(3,1)+SPT(1,I,3)
         H(3,1)=H(3,1)+SPT(2,I,3)
         IO(3,1)=IO(3,1)+SPT(3,I,3)+SPT(4,I,3)
  13    CONTINUE

        S(3,1) = S(3,1)+SPT(1,16,3)+SPT(1,22,3)
        H(3,1) = H(3,1)+SPT(2,16,3)+SPT(2,22,3)
        IO(3,1)=IO(3,1)+SPT(3,16,3)+SPT(3,22,3)+
     -                  SPT(4,16,3)+SPT(4,22,3)

*  
*             1200 BAUD-9600 BAUD  (NETWORK ID -12,16,17,19,20)
*
        S(3,2)=SPT(1,13,3)+SPT(1,17,3)+SPT(1,18,3)+SPT(1,20,3)+
     -         SPT(1,21,3)
        H(3,2)=SPT(2,13,3)+SPT(2,17,3)+SPT(1,18,3)+SPT(1,20,3)+
     -         SPT(2,21,3)
        IO(3,2)=SPT(3,13,3)+SPT(3,17,3)+SPT(3,18,3)+SPT(3,20,3)+
     -          SPT(3,21,3)
     -         +SPT(4,13,3)+SPT(4,17,3)+SPT(4,18,3)+SPT(4,20,3)+
     -          SPT(4,21,3)
*  
*             BATCH  (NETWORK ID - 0,11,13,14,18,22,23)
*  
        S(3,3)=SPT(1,1,3)+SPT(1,12,3)+SPT(1,14,3)+SPT(1,15,3)+
     X         SPT(1,19,3)+SPT(1,23,3)+SPT(1,24,3)
        H(3,3)=SPT(2,1,3)+SPT(2,12,3)+SPT(2,14,3)+SPT(2,15,3)+
     X         SPT(2,19,3)+SPT(2,23,3)+SPT(2,24,3)
        IO(3,3)=SPT(3,1,3)+SPT(3,12,3)+SPT(3,14,3)+SPT(3,15,3)+
     X          SPT(3,19,3)+SPT(3,23,3)+SPT(3,24,3)
     X         +SPT(4,1,3)+SPT(4,12,3)+SPT(4,14,3)+SPT(4,15,3)+
     X          SPT(4,19,3)+SPT(4,23,3)+SPT(4,24,3)
*    
*   
        DO 21 I=1,3
         DO 21 J=1,3
          H(I,J)=H(I,J)/60
  21      IO(I,J)=IO(I,J)/1000
        DO 22 I=1,2
         DO 22 J=1,3
          PS(I,J)=100.0*S(I,J)/S(3,J)
          PH(I,J)=100.0*H(I,J)/H(3,J)
  22      PIO(I,J)=100.0*IO(I,J)/IO(3,J)
        WRITE (24,1010)
        WRITE(24,32)ILENGTH
  32    FORMAT(////,1X,'PART 7 -- TYMSHARE AND NON-TYMSHARE HOSTS --',
     X           /,1X,'******',10X,'(RESULTS FOR',I2,' DAY)')
        WRITE(24,15)
  15    FORMAT(/,3X,'SESSIONS',/,3X,'********')
        WRITE(24,16)S(1,1),PS(1,1),S(1,2),PS(1,2),S(1,3),PS(1,3),
     X       S(2,1),PS(2,1),S(2,2),PS(2,2),S(2,3),PS(2,3),
     X       S(3,1),S(3,2),S(3,3)
  16    FORMAT(//,7X,'HOSTS',10X,'110-300 BPS',6X,'1200-9600 BPS',
     -           11X,'BATCH',
     X         /,7X,'-----',12X,'-------',11X,'--------',13X,'-----',
     X      //,3X,'NON-TYMSHARE',2X,I10,'(',F4.1,'%)',2X,I10,'(',F4.1,
     X      '%)',
     X     2X,I10,'(',F4.1,'%)',/,3X,'TYMSHARE',6X,I10,'(',F4.1,'%)',
     X     2X,I10,'(',F4.1,'%)',2X,I10,'(',F4.1,'%)',
     X     /,3X,'TOTAL       ',2X,I10,9X,I10,9X,I10)
        WRITE(24,17)
  17    FORMAT(////,3X,'HOURS',/,3X,'*****')
        WRITE(24,16)H(1,1),PH(1,1),H(1,2),PH(1,2),H(1,3),PH(1,3),
     X     H(2,1),PH(2,1),H(2,2),PH(2,2),H(2,3),PH(2,3),
     X           H(3,1),H(3,2),H(3,3)
        WRITE(24,18)
  18    FORMAT(////,3X,'I/O  (KCHARS)',/,3X,'*************')
        WRITE(24,16)IO(1,1),PIO(1,1),IO(1,2),PIO(1,2),IO(1,3),
     X       PIO(1,3),IO(2,1),PIO(2,1),IO(2,2),PIO(2,2),IO(2,3),
     X       PIO(2,3),IO(3,1),IO(3,2),IO(3,3)
      
     

        WRITE(24,888)
 888    FORMAT(/////,3X,'NOTE : THE BREAKDOWN OF TRAFFIC INTO',
     -         ' TYMSHARE TRAFFIC AND NON-TYMSHARE ',
     -         /,10X,'TRAFFIC IS BASED SOLELY ON THE DESTINATION',
     -         ' HOSTS OF SESSIONS',/,10X,
     -         'AND NOT ON WHO THE USERS ARE')




 777    CLOSE(24)
        CLOSE (22)


        STOP
        END
 (6?