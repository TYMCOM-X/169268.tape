      INTEGER DG(10),TFILE(5),YFILE(5),AGED,
     1        ZWATE,ZOCUR(14),ZNPLI(14),ZDSEC(14),
     2        TDATA(19),TNODE,TOCUR,TNPLI,TDSEC,
     3        YDATA(49),YNODE,YWATE,YTOCUR,YTNPLI,YTDSEC,
     4                  YOCUR(14),YNPLI(14),YDSEC(14)

      EQUIVALENCE(TNODE,TDATA(1)),
     1           (TOCUR,TDATA(3)),   (TNPLI,TDATA(4)),
     2           (TDSEC,TDATA(5))

      EQUIVALENCE(YNODE,YDATA(1)),
     1           (YWATE,YDATA(4)),   (YTOCUR,YDATA(5)),
     2           (YTNPLI,YDATA(6)),  (YTDSEC,YDATA(7)),
     3           (YOCUR(1),YDATA(8)),(YNPLI(1),YDATA(22)),
     4           (YDSEC(1),YDATA(36))

      DATA DG/1H0,1H1,1H2,1H3,1H4,1H5,1H6,1H7,1H8,1H9/

      CALL DBSTRT(21,-1,22,-1,23,-1,24,-1,-4,0,-1,1)

C     GET DATE
      TYPE 410
410   FORMAT(' ENTER DATE (M D Y):',$)
      ACCEPT 420,JM,JD,JY
420   FORMAT(3I)

C     FIND YESTERDAY'S CHRONIC REPORT DATE
      CALL MDYHMS(JULIAN(JM,JD,JY,0,0,0)-24*3600,JMY,JDY,JYY,J,J,J)

C     OPEN TODAYS CRASH X22 DATA BASE: DCMMDD.DMS
C     OPEN YESTERDAYS CHRONIC CRASHES X22 DATA BASE: CCMMDD.DMS
C     OPEN OUTPUT DMI FILE: CHNDMI.TMP
      ENCODE(25,1010,TFILE)DG(JM/10+1),DG(MOD(JM,10)+1),
     1                     DG(JD/10+1),DG(MOD(JD,10)+1)
1010  FORMAT('DC',4A1,'.DMS',15X)
      ENCODE(25,1020,YFILE)DG(JMY/10+1),DG(MOD(JMY,10)+1),
     1                     DG(JDY/10+1),DG(MOD(JDY,10)+1)
1020  FORMAT('CC',4A1,'.DMS',15X)
      CALL DBOPEN(TFILE,'ACCESS','READONLY',
     1            YFILE,'ACCESS','READONLY')
      OPEN(21,'CHNDMI.TMP',OUTPUT,SYMBOLIC)

C     SORT TODAYS CRASHES AND YESTERDAYS CHRONIC REPORT
C     BY NODE PAIR SO TODAYS CHRONIC CAN BE PRODUCED BY COMPARISON.
      CALL DBSET(1)
      CALL DBFIND('ALL')
      CALL DBSORT('NODE')
      CALL DBSET(2)
      CALL DBFIND('ALL')
      CALL DBSORT('NODE')

C     CREATE TODAYS CHRONIC REPORT BY UPDATING YESTERDAYS
C       ALL ENTRIES ARE WEIGHTS AS TO THEIR CHRONICNESS AS
C       A 7 DIGIT NUMBER:
C
C       PDDDDWTTCC  P  -1 IF PLI'S TODAY, ELSE 0.
C                DDDD  -PLI CNT IF PLI'S IN EACH OF THE LAST 3 DAYS,
C                       ELSE 0.
C                   W  -NUMBER OF PLI DAYS IN LAST WEEK.
C                  TT  -NUMBER OF PLI DAYS IN LAST TWO WEEKS.
C                  CC  -NUMBER OF CRASH DAYS IN LAST TWO WEEKS.

      CALL GDATA(1,0,TDATA,$1900)
      CALL GDATA(2,TNODE,YDATA,$1900)
      GOTO 1100

C     WHEN TODAY OR YESTERDAY IS OUT OF RECORDS, PROCESS OPPOSITE FILE
1040  TNODE=77777777
      IF(YNODE.EQ.77777777)GOTO 1900
      GOTO 1100

1050  YNODE=77777777
      IF(TNODE.EQ.77777777)GOTO 1900

C     MATCH RECORDS BY NODE
1100  IF(YNODE-TNODE)1400,1300,1200

C     NEW OUTAGE, ADD TO TODAY'S CHRONIC REPORT
1200  NEW=NEW+1
      ZWATE=1
      IF(TNPLI.NE.0)ZWATE=ZWATE+1000010100
      ZOCUR(1)=TOCUR
      ZNPLI(1)=TNPLI
      ZDSEC(1)=TDSEC
      IF(ZDSEC(1).GT.24*3600)ZDSEC(1)=24*3600
      DO 1210 I=2,14
      ZOCUR(I)=0
      ZNPLI(I)=0
1210  ZDSEC(I)=0
      WRITE(21,1220)TDATA(1),TDATA(2),TDATA(6),
     1              ZWATE,TOCUR,TNPLI,TDSEC,
     2              ZOCUR,ZNPLI,ZDSEC
1220  FORMAT(I4,A1,I6,
     1       I10,I5,I5,I7,
     2       14I3,14I4,14I5)

      CALL GDATA(1,YNODE,TDATA,$1900)
      GOTO 1100

C     SAME OUTAGE, AGE YESTERDAY AND ADD TODAY
1300  YWATE=MOD(YWATE,100000)+1
      IF(YNPLI(7).NE.0)YWATE=YWATE-10000
      IF(YNPLI(14).NE.0)YWATE=YWATE-100
      IF(YOCUR(14).NE.0)YWATE=YWATE-1
      IF(TNPLI.NE.0)YWATE=YWATE+1000010100

      YTOCUR=YTOCUR-YOCUR(14)+TOCUR
      YTNPLI=YTNPLI-YNPLI(14)+TNPLI
      YTDSEC=YTDSEC-YDSEC(14)+TDSEC

      I=YTNPLI
      IF(I.GT.9999)I=9999
      IF(TNPLI.NE.0.AND.YNPLI(1).NE.0.AND.YNPLI(2).NE.0)
     1  YWATE=YWATE+I*100000

      DO 1310 I=14,2,-1
      YOCUR(I)=YOCUR(I-1)
      YNPLI(I)=YNPLI(I-1)
1310  YDSEC(I)=YDSEC(I-1)
      YOCUR(1)=TOCUR
      YNPLI(1)=TNPLI
      YDSEC(1)=TDSEC
      IF(YDSEC(1).GT.24*3600)YDSEC(1)=24*3600

1340  WRITE(21,1220)(YDATA(I),I=1,3),
     1              YWATE,YTOCUR,YTNPLI,YTDSEC,
     2              YOCUR,YNPLI,YDSEC

      CALL GDATA(1,YNODE,TDATA,$1900)
      CALL GDATA(2,TNODE,YDATA,$1900)
      GOTO 1100

C     OUTAGE DIDN'T OCCUR TODAY, AGE YESTERDAY.  IF WEIGHT GOES
C     TO ZERO, NO LONGER CHRONIC
1400  YWATE=MOD(YWATE,100000)
      IF(YNPLI(7).NE.0)YWATE=YWATE-10000
      IF(YNPLI(14).NE.0)YWATE=YWATE-100
      IF(YOCUR(14).NE.0)YWATE=YWATE-1
      IF(YWATE.EQ.0)GOTO 1420

      YTOCUR=YTOCUR-YOCUR(14)
      YTNPLI=YTNPLI-YNPLI(14)
      YTDSEC=YTDSEC-YDSEC(14)

      DO 1410 I=14,2,-1
      YOCUR(I)=YOCUR(I-1)
      YNPLI(I)=YNPLI(I-1)
1410  YDSEC(I)=YDSEC(I-1)
      YOCUR(1)=0
      YNPLI(1)=0
      YDSEC(1)=0

      WRITE(21,1220)(YDATA(I),I=1,3),
     1              YWATE,YTOCUR,YTNPLI,YTDSEC,
     2              YOCUR,YNPLI,YDSEC

      AGED=AGED-1
1420  AGED=AGED+1
      CALL GDATA(2,TNODE,YDATA,$1900)
      GOTO 1100

C     DONE CREATING TODAYS CHRONIC CRASHES, LOAD IT.
1900  TYPE 1905,NEW,AGED
1905  FORMAT(' NEW RECORDS:',I3,' AGED OUT:',I3)
      CLOSE(21)
      CALL DBSET(1)
      CALL DBCLOS
      CALL DBSET(2)
      CALL DBCLOS

C     CREATE 'CHNDMD.TMP' TO LOAD TODAY'S CHRONIC.DMS FILE FOR USER:
C        LOADING SECTION
C                INPUT CHNDMI.TMP
C                OUTPUT CCMMDD.DMS
C                ALLOCATE 1000 ATTEMPTS 10
C           
C        STRUCTURE SECTION
C                ATT NODE   LEN 4  INTEGER KEYED
C                ATT REG    LEN 1  TEXT KEYED
C                ATT VERS   LEN 6  INTEGER 
C                ATT WEIGHT LEN 10 INTEGER KEYED
C                ATT TOCUR  LEN 5  INTEGER
C                ATT TNPLI  LEN 5  INTEGER KEYED
C                ATT TDSEC  LEN 7  INTEGER
C                ATT OCUR1  LEN 3  INTEGER
C                     :
C                ATT OCUR14 LEN 3  INTEGER
C                ATT NPLI1  LEN 4  INTEGER
C                     :
C                ATT NPLI14 LEN 4  INTEGER
C                ATT DSEC1  LEN 5  INTEGER
C                     :
C                ATT DSEC14 LEN 5  INTEGER

      OPEN(21,'CHNDMD.TMP',OUTPUT,SYMBOLIC)
      WRITE(21,1910)DG(JM/10+1),DG(MOD(JM,10)+1),
     1              DG(JD/10+1),DG(MOD(JD,10)+1)
1910  FORMAT('LOADING SECTION',/,
     1       '   INPUT CHNDMI.TMP',/,
     2       '   OUTPUT CC',4A1,'.DMS',/,
     3       '   ALLOCATE 1000 ATTEMPTS 10')
      WRITE(21,1920)
1920  FORMAT('STRUCTURE SECTION',/,
     1       '   ATT NODE   LEN 4  INTEGER KEYED',/,
     2       '   ATT REG    LEN 1  TEXT KEYED',/,
     3       '   ATT VERS   LEN 6  INTEGER')
      WRITE(21,1930)
1930  FORMAT('   ATT WEIGHT LEN 10 INTEGER KEYED',/,
     1       '   ATT TOCUR  LEN 5  INTEGER',/,
     2       '   ATT TNPLI  LEN 5  INTEGER KEYED',/,
     3       '   ATT TDSEC  LEN 7  INTEGER')
      WRITE(21,1940)(I,I=1,9),(I,I=10,14)
1940  FORMAT(9('   ATT OCUR',I1,'  LEN 3  INTEGER',/),
     1       ('   ATT OCUR',I2,' LEN 3  INTEGER'))
      WRITE(21,1950)(I,I=1,9),(I,I=10,14)
1950  FORMAT(9('   ATT NPLI',I1,'  LEN 4  INTEGER',/),
     1       ('   ATT NPLI',I2,' LEN 4  INTEGER'))
      WRITE(21,1960)(I,I=1,9),(I,I=10,14)
1960  FORMAT(9('   ATT DSEC',I1,'  LEN 5  INTEGER',/),
     1       ('   ATT DSEC',I2,' LEN 5  INTEGER'))
      CLOSE(21)

      CALL DBEXEC('LOAD CHNDMD.TMP ')

      CALL DBEND
      CALL NEXIT
      END


      SUBROUTINE GDATA(IS,IT,IA,$)
C     ----------------------------
C     GET X22 RECORD VIA 'DBGET' AND CHECK FOR BOTH FILES EMPTY.
C
C     INPUT:    IS     -X22 SET NUMBER
C               IT     -OTHER FILE EOF FLAG.  IF THIS FILE
C                       DONE AND IT=77777777, THEN RETURN 4.
C
C     OUTPUT:   IA     -X22 RECORD ARRAY.
C               IA(1)  -SET TO 77777777 ON 'IS' EOF.

      INTEGER IA(1)
      CALL DBSET(IS)
      CALL DBGET(IA,$2010)
      RETURN

2010  IA(1)=77777777
      IF(IT.EQ.77777777)RETURN 4
      RETURN
      END
 