
************************************************************************
*                                                                      *
*                         SUBROUTINE:  NOUTPT                          *
*                                                                      *
*       THIS SUBROUTINE PRINTS OUT TOPOLOGY AND STATISTICS INFOR-      *
*       MATION ON ALL OR A SPECIFIC NODE. IT IS CALLED BY BOTH         *
*       THE 'DETAIL' AND 'SUMMARY' NODE COMMANDS.                      *
*                                                                      *
************************************************************************

        SUBROUTINE NOUTPT(NMAX,IBMAX,IHMAX,MHMAX,LMAX,NUMACT,ISIXTN,
     +  I,J,ID,IDET,IERR)

        DOUBLE PRECISION NNAME
        INTEGER BASENO,BPTR,HOSTNO,HPTR,HSTAT,HBASES

        COMMON/NODES/NODENO,NPTR,NNAME,NSTATE,NTYPE,NNEI,NONEI,
     +         NSTAT,NPEAK,NODEIO,LINKO,NTREE
        COMMON/NMISC/NEIGH,NACTV,NPASS,NTYPS,NTNAME,BASENO,BPTR,
     +         NTERM,LINKT,NHOSTS,IHOST,HOSTNO,HPTR,HSTATE,
     +         HSTAT,HBASES,MBASES
        COMMON/LINES/LINNAM,LNODE1,LNODE2,LSPEED,LGRPS,LSTATE,
     +         LSTAT,LINEIO,LTREE
        COMMON/LMISC/LFREQ,LCFREQ,NBPS,BPS,ICONST
        COMMON/NUM/NAMAX,IBAMAX,IHAMAX,LAMAX

        DIMENSION NODENO(1),NPTR(1),NNAME(1),NSTATE(1),NTYPE(1),NNEI(1),
     +       NONEI(1),NEIGH(1),NTYPS(1),BASENO(1),BPTR(1),NHOSTS(1),
     +       HOSTNO(1),HPTR(1),HSTATE(1),HBASES(1),LNODE1(1),LNODE2(1),
     +       LSPEED(1),LGRPS(1),LSTATE(1),LFREQ(1),LCFREQ(1),NBPS(1),
     +       BPS(1),ICONST(1),NTREE(1),LTREE(1)
        DIMENSION NSTAT(NMAX,2),NPEAK(NMAX,2),NODEIO(NMAX,3),LINKO(NMAX,
     +       2),NACTV(1),NPASS(NUMACT,2),NTNAME(NUMACT,3),
     +       NTERM(IBMAX,2),LINKT(IBMAX,2),IHOST(IBMAX,5),HSTAT(IHMAX,
     +       2),MBASES(MHMAX,5),LINNAM(LMAX,4),LSTAT(LMAX,2),
     +       LINEIO(LMAX,3)
C
C  HEADING FORMATS HERE
C
 800    FORMAT(///1X,'NODE NO.  &NAME',10X,'TYPE',6X,'STATE',1X,'#NEI',
     +  1X,'#ORI',1X,'#TER',1X,'#PASS',1X,'ALU1',1X,'ALU2',/1X,15('*'))
 801    FORMAT(1X,'NEIGHBOR DETAILS',/1X,16('-'))
 802    FORMAT(2X,'#',3X,'LINE NAME',11X,'STATE',1X,'NEIGHBOR',1X,
     +  'SPEED',1X,'#GRPS',1X,'#CIRC',1X,'#PCIRC')
 803    FORMAT(1X,'HOST DETAILS',/1X,12('-'))
 804    FORMAT(26X,'HOST NO',2X,'STATE',2X,'#TER',2X,'#PTER')
C
        IERR=0
C
C  OUTPUT NODE BY NODE
C
        DO 1000 II=I,J
        IND=NPTR(II)
        ITMP=NODENO(II)
C
C  IF PRINTING DETAILS, PRINT HEADING EVERY TIME
C
        IF (IDET.EQ.1) WRITE(ID,800)
C
C  GET NODE TYPE
C
        ITYP=NTYPE(IND)
        DO 820 LL=1,NUMACT
        IF (ITYP.EQ.NTYPS(LL)) GO TO 825
 820    CONTINUE
C
C  ERROR HERE, INVALID NODE TYPE
        IERR=1
        WRITE(ID,822) ITYP,ITMP
 822    FORMAT(/1X,'INVALID NODE TYPE ',I2,' ON NODE NO. ',I4)
        RETURN
C
C  GET STATE OF NODE
C
 825    IST='UP'
        IF (NSTATE(IND).EQ.1) IST='DOWN'
C
C  GET ORIGINATIONS AND PASSTHROUGHS
C
        L=NSTAT(IND,1)
        N=NSTAT(IND,2)
C
C  GET PEAK ORIGINATIONS AND PEAK PASSTHROUGHS
C
        L1=NPEAK(IND,1)
        N1=NPEAK(IND,2)
C
C  COMPUTE ORIGINATION ALU
C
        ALU1=0.
        ITMP1=LINKO(IND,1)
        ITMP2=LINKO(IND,2)
        IF (ITMP1.EQ.0.OR.ITMP2.EQ.0) GO TO 860
        ALU1=FLOAT(ITMP1)/ITMP2
C
C  GET CONNECT MINS AND I/O CHARS
C
 860    IMIN=NODEIO(IND,1)
        ICHARS=NODEIO(IND,2)
        JCHARS=NODEIO(IND,3)
C
C  COMPUTE INPUT AND OUTPUT RATES IN CPS
C
        RATE1=0.
        RATE2=0.
        IF (IMIN.LE.0) GO TO 870
        RATE1=FLOAT(ICHARS*1000)/(IMIN*60.)
        RATE2=FLOAT(JCHARS*1000)/(IMIN*60.)
C
C  STARTING FROM HERE GET TERMINATION STATISTICS
C
 870    M=0
        M1=0
        ALU2=0.
C
C  CHECK FIRST IF NODE IS A BASE
C
        IFLAG=0
        IF (ITMP.GE.1000.AND.ITMP.LE.1777) GO TO 880
        CALL SEARCH(BASENO,ITMP,IBAMAX,IND1)
        IF (IND1.LE.IBAMAX) GO TO 875
C
C  ERROR HERE, CAN'T FIND THIS BASE NO.
C
        IERR=1
        WRITE(ID,872) ITMP
 872    FORMAT(/1X,'CAN''T FIND TERMINATION STATISTICS FOR THIS BASE',
     +  ' NO. ',I4)
        RETURN
C
C  GET TERMINATIONS AND PEAK TERMINATIONS
C
 875    IFLAG=1
        IND1=BPTR(IND1)
        M=NTERM(IND1,1)
        M1=NTERM(IND1,2)
C
C  GET TERMINATION AND CUMULATIVE TERMINATION LINKS
C
        ITMP1=LINKT(IND1,1)
        ITMP2=LINKT(IND1,2)
        IF (ITMP1.EQ.0.OR.ITMP2.EQ.0) GO TO 880
        ALU2=FLOAT(ITMP1)/ITMP2
C
C  EVERYTHING IS OK HERE FOR OUTPUTTING SUMMARY INFORMATION
C
 880    WRITE(ID,882) ITMP,NNAME(IND),(NTNAME(LL,JJ),JJ=1,3),IST,K,
     +  L,M,N,ALU1,ALU2
 882    FORMAT(2X,I4,4X,A10,1X,3A5,1X,A4,1X,I3,2X,I3,3X,I3,2X,I3,1X,
     +  F4.1,1X,F4.1)
        WRITE(ID,883) L1,M1,N1
 883    FORMAT(48X,I3,3X,I3,2X,I3/)
        WRITE(ID,884) IMIN,ICHARS,JCHARS,RATE1,RATE2
 884    FORMAT(2X,'CONN MINS =',I6,' IKCHAR =',I5,' OKCHAR =',I5,
     +  ' ICPS =',F6.2,' OCPS =',F6.2,/)
C
C  DETAILS INFORMATION HERE
C
        IF (IDET.EQ.0) GO TO 1000
C
C  PRINT HEADING FOR NEIGHBOR DETAILS
C
        WRITE(ID,801)
        WRITE(ID,802)
C
C  GET NO. OF NEIGHBORS
C
        K=NNEI(IND)
        IF (K.LE.0) GO TO 905
        ILOC=(IND-1)*ISIXTN
        DO 900 JJ=1,K
C
C  GET LINE POSITION LEADING TO NEIGHBOR
C
        LPOS=NEIGH(ILOC+JJ)
C
C  FIND INDEX OF NEIGHBOR
C
        ITEMP=LNODE1(LPOS)
        CALL SEARCH(NODENO,ITEMP,NAMAX,L)
        IF (L.LE.NAMAX) GO TO 888
C
C  ERROR HERE
C
 885    WRITE(ID,886) ITEMP
 886    FORMAT(1X,'CAN''T FIND NODE NO. ',I4,' DURING NODE OUTPUT')
        IERR=1
        RETURN
C
C  IS IT REALLY THE INDEX OF NEIGHBOR
C
 888    IF (L.NE.II) GO TO 890
        ITEMP=LNODE2(LPOS)
        CALL SEARCH(NODENO,ITEMP,NAMAX,L)
        IF (L.GT.NAMAX) GO TO 885
C
C  L IS NOW THE INDEX OF NEIGHBOR, GET BAUD SPEED FOR LINE
C
 890    ITMP1=LSPEED(LPOS)
C
C  GET NO. OF GROUPS
C
        ITMP2=LGRPS(LPOS)
C
C  GET STATE OF LINE
C
        IST='UP'
        IF (LSTATE(LPOS).EQ.1) IST='DOWN'
C
C  GET NO. AND PEAK NO. OF CIRCUITS
C
        M=LSTAT(LPOS,1)
        M1=LSTAT(LPOS,2)
C
C  READY TO OUTPUT NEIGHBOR DETAILS HERE
C
        WRITE(ID,894) JJ,(LINNAM(LPOS,KK),KK=1,4),IST,NODENO(L),ITMP1,
     +  ITMP2,M,M1
 894    FORMAT(1X,I2,2X,4A5,2X,A4,2X,I4,5X,A5,2X,I3,2X,I4)
 900    CONTINUE
C
C  PRINT HOST DETAILS HERE IF A BASE
C
 905    IF (IFLAG.EQ.0) GO TO 1000
C
C  PRINT HEADING FOR HOST DETAILS
C
        WRITE(ID,803)
        WRITE(ID,804)
C
C  GET NO. OF HOSTS
C
        K=NHOSTS(IND1)
        IF (K.LE.0) GO TO 1000
C
C  PROCESS HOST BY HOST
C
        DO 990 JJ=1,K
        ITEMP=IHOST(IND1,JJ)
        CALL SEARCH(HOSTNO,ITEMP,IHAMAX,L)
        IF (L.GT.IHAMAX) GO TO 995
        L=HPTR(L)
C
C  GET STATE OF HOST
C
        IST='UP'
        IF (HSTATE(L).EQ.1) IST='DOWN'
C
C  GET TERMINATIONS AND PEAK TERMINATIONS FOR HOST
C
        M=HSTAT(L,1)
        M1=HSTAT(L,2)
C
C  READY HERE TO OUTPUT HOST DETAILS
C
        WRITE(ID,912) ITEMP,IST,M,M1
 912    FORMAT(27X,I4,5X,A4,2X,I4,2X,I4)
 990    CONTINUE
C
C  ERROR HERE, CAN'T FIND THIS HOST NO.
C
 995    IERR=1
        WRITE(ID,997) ITEMP
 997    FORMAT(/1X,'CAN''T FIND THIS HOST NO. ',I4,' DURING'
     +  ' NODE OUTPUT')
        RETURN
C
C  NEXT NODE HERE
C
 1000   CONTINUE
        RETURN
        END
