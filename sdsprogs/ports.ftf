***********************************************************************
*                                                                     *
*       PORTS.FTF    VER. 10.0    J.JOELS          MAY, 1983          *
*                                                                     *
*       THIS PROGRAM UPDATES THE PORT-PRICING DATA BASE: PORTS.DMS.   *
*       IT ALSO GENERATES THE DAILY CHANGE FILES SENT TO MIS.  FOR    *
*       COMPLETE DOCUMENTATION ON THE RUNNING OF THIS PROGRAM SEE     *
*       PORTS.TTY (OUTPUT TO TERMINAL) OR PORTS.PRT (OUTPUT TO        *
*       A PRINTER).                                                   *
*                                                                     *
*       THE LOADING SEQUENCE FOR THIS PROGRAM IS CONTAINED IN FILE:   *
*                PORTS.LOD                                            *
*                                                                     *
*               VERSION 4.1  ADDS TOP OF FORM BETWEEN EACH PORT       *
*               MAP                                                   *
*               VERSION 5.0 ALLOWS DUPLICATE HOST NUMBERS IN THE      *
*               DATA BASE AS LONG AS THE HOSTS ARE ON DIFFERENT       *
*               NODES.  IT ALSO FIXES A BUG IN WRITING THE EFFECTIVE  *
*               DATE FOR STOP PORT RECORDS TO THE CHANGE FILE.        *
*                                                                     *
*               VERSION 5.1  ALLOWS ORIGHOST LESS THAN 16384 TO HAVE  *
*               PORTS (I.E. DOES NOT FORCE HOST TO BE AN INTERFACE).     *
*               THIS TAKES CARE OF A PROBLEM WITH TYMNET-II TYMSATS.  *
*               VERSION 6.0 ADDS THE RESTRICTED RENUMBER COMMAND.     *
*               VERSION 6.1 ADDS SPECAIL CODE TO TAKE CARE OF NODES   *
*               OR HOSTS TO BE DECLARED AS SNI'S (PCODE=9). IT DOES   *
*               NOT ALLOW PORTS TO BE ADDED TO THE NODE OR HOST.      *
*               VERSION 7.0 ADDS THE PASSWORD CODE AND CODE TO INTER- *
*               FACE WITH THE NEW BILLING PROJECT (PHOENIX).          *
*               VERSION 8.0 ADDS THREE NEW ATTRIBUTES: HUNT,PILOT,    *
*               AND CUSTOMER, PLUS THE CODE TO MAINTAIN THESE ATTS    *
*               VERSION 8.1 REPLACES RPA WITH DATA BASE ADMINISTRATOR *
*               AND CHANGES ONE OR TWO OTHER ERROR MESSAGES.          *
*               VERSION 9.0 ADDS CODE FOR TWO PASSWORDS (READ AND     *
*               WRITE, ADD RENUMBER HOST COMMAND, AND REPLACES THE    *
*               COMMANDS: OLD AND NEW, WITH A NEW COMMAND: NUMBER     *
*                                                                     *
*               VERSION 10.0  CHANGES THE MIS CHANGE RECORDS FOR HOST *
*               INFORMATION (DH RH SH) TO INCLUDE THE NODE NUMBER IN  *
*               EACH RECORD.  ALSO, ALL REFERENCES TO GATEWAY WAS     *
*               CHANGED TO INTERFACE.  THUS LETTING ALL OF THE NEW    *
*               NODE/HOST CODES THAT DON'T HAVE PORTS BE HANDLED LIKE *
*               JUST GATEWAYS USED TO BE HANDLED.                     *
***********************************************************************


        INTEGER COMMND(71),INAM(2),TYPE(20,2),MACH(20),MODM(40)
     X,DOC(4),PORTS(256,11),SCR2(4),DAYS(12),IPHON(3),PCOD(20),BILL(10)
     X,NCOD(75),CITY(4),CTLFLE(4),JOBFLE(4),SCR(6),MONTBL(12)
     X,IDAY(2),JOB(3),COMENT(4),OUTFLE(4),IARR(7),INFLE(4),INFO(25)
     X,HELP(4),IVALUE(4),CHGFLG,DELHST(25),CURHST,OLDTYP,OLDMAC
     X,OLDMAX,SWAP(256),COM2(4),IPHON2(3),CURUSR(3),CTRY(40),STAT(60)
     X,ZONE(14),PCITY(2),ICTY(2),ICITY2(2),ITEMP(10),ICOM(42),ICITY(2)
     X,ICUST(2),ICUST2(2),PILOT(3),PILOT2(3),IMSG(12),CITIES(800,4),
     XJOBNAM

        CALL GETNAM(-1,JOBNAM)

        CALL DBSTRT(1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,
     X  1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,
     X  1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0)

        CALL SETN(JOBNAM)

        MAXTYP=20
        MAXMAC=20
        MAXMOD=40
        MAXPC=20
        MAXNC=75
        MAXCTR=40
        MAXSTA=60
        MAXZON=14
        MAXBIL=10
        MAXCIT=800
        DOC(1)='(ACCG'
        DOC(2)='1)POR'
        DOC(3)='TS.DO'
        DOC(4)='C    '
        HELP(1)='(ACCG'
        HELP(2)='1)POR'
        HELP(3)='TS.CM'
        HELP(4)='D    '
        IZERO=0

*       ** INIT THE LENGTH-OF-LINE AND TYPE OF LISTING. TYPE = BRIEF
        ILOL=71
        LSTTYP='B'


        DATA DAYS/31,28,31,30,31,30,31,31,30,31,30,31/
        DATA ICOM/'ADD','AD','A','DEC','RED','UPD','UP','U',
     X            'INC','IN','I','SWA','SW','S','HEL','HE',
     X            'QUI','QU','Q','?','DEL','DIS','DI','TYP','TY',
     X            'T','LIS','LI','REN','BIL','BI','B','PIL',
     X            'PI','P','HUN','HU','NUM','NU','N',
     X            'LOL','LO'/

        MONTBL(1)="453035600000
        MONTBL(2)="433134200000
        MONTBL(3)="467036200000
        MONTBL(4)="407416200000
        MONTBL(5)="467037100000
        MONTBL(6)="453535600000
        MONTBL(7)="453535400000
        MONTBL(8)="407534700000
        MONTBL(9)="517136000000
        MONTBL(10)="477076400000
        MONTBL(11)="473376600000
        MONTBL(12)="423134300000

        COMMON/A1/PORTS
        COMMON/A2/SCR2
        COMMON/A3/DOC
        COMMON/A4/DAYS
        COMMON/ADD1/INODE,INHDAT,NTYP,IMACH,ISTATE,NHCOD,IPDAT,IZONE,
     +  IBILL,ICUST
        COMMON/ADD2/INAM
        COMMON/ADD3/CITY
        COMMON/INC1/IPT1,ISTOP
        COMMON/PASS/IPASS,ITOC

*       ** TURN ON INTERRUPT HANDLING. IN CASE OF ALTMOD/ESCAPE
*          RETURN TO COMMAND LEVEL

        CALL ONINT($90)
        GO TO 95

90      TYPE 92
92      FORMAT (/,1X,'(ESC)',/)
        IERR=0
        GO TO 105

*       ** INPUT VALID NODE TYPES, MACHINE TYPES, MODEM TYPES
*          PORTCODES, NODE CODES, STATES, COUNTRIES, TIME ZONES AND
*          BILLING DESIGNATORS

95      CALL INDOC2('!TYPE',MAXTYP,TYPE,NUMTYP,IERR)
        IF (IERR.NE.0) GO TO 9999

        CALL INDOC('!MACH',MAXMAC,MACH,NUMMAC,IERR)
        IF (IERR.NE.0) GO TO 9999

        CALL INDOC('!MODM',MAXMOD,MODM,NUMMOD,IERR)
        IF (IERR.NE.0) GO TO 9999

        CALL INDOC3('!PCOD',MAXPC,PCOD,NUMPC,IERR)
        IF (IERR.NE.0) GO TO 9999

        CALL INDOC3('!NCOD',MAXNC,NCOD,NUMNC,IERR)
        IF (IERR.NE.0) GO TO 9999

        CALL INDOC('!STAT',MAXSTA,STAT,NUMSTA,IERR)
        IF (IERR.NE.0) GO TO 9999

        CALL INDOC('!CTRY',MAXCTR,CTRY,NUMCTR,IERR)
        IF (IERR.NE.0) GO TO 9999

        CALL INDOC('!ZONE',MAXZON,ZONE,NUMZON,IERR)
        IF (IERR.NE.0) GO TO 9999

        CALL INDOC('!BILL',MAXBIL,BILL,NUMBIL,IERR)
        IF (IERR.NE.0) GO TO 9999

        CALL INDOC4('!CITY',MAXCIT,CITIES,NUMCIT,IERR)
        IF (IERR.NE.0) GO TO 9999


*       ** OUTPUT PROGRAM NAME

        TYPE 100
100     FORMAT (///,1X,'PORTS PROGRAM  VER. 10.0',//,
     X         1X,10('*'),' WARNING!! PORTS ARE OCTAL!! ',10('*'),//)

*       ** OPEN THE MESSAGE FILE

102     OPEN (3,'(ACCG1)PORTS.MSG',INPUT)

*       ** READ THE FIRST RECORD
        READ (3,103)IHALT
103     FORMAT (I)

*       ** READ A LINE OF THE MESSAGE
104     READ(3,106,END=107)IMSG
106     FORMAT (12A5)

*       ** OUTPUT THE LINE TO THE TERMINAL
        TYPE 106,IMSG
        GO TO 104

*       ** FINISHED WITH MESSAGE FILE. CLOSE IT
107     CLOSE(3)

*       ** OUTPUT SOME CARRIAGE RETURNS
        TYPE 108
108     FORMAT (//)

*       ** CK IF THE PROGRAM SHOULD BE HALTED
        IF (IHALT.EQ.9999) GO TO 9999

*       ** NOW GET TODAYS DATE FROM THE SYSTEM 

        CALL DATE(IDAY)

*       ** CONVERT DAY AND YEAR TO INTEGER VARIABLES

        CALL RTC (ICHAR,IDAY,1)
        DECODE (1,117,ICHAR)ID1
117     FORMAT (I1)
        CALL RTC (ICHAR,IDAY,2)
        DECODE (1,117,ICHAR)ID2
        CALL RTC (ICHAR,IDAY,8)
        DECODE (1,117,ICHAR)ID3
        CALL RTC (ICHAR,IDAY,9)
        DECODE (1,117,ICHAR)ID4

*       ** CONVERT MONTH TO AN INTEGER VARIABLE
        K=1
        DO 120 I=4,6
        CALL RTC (ICHAR,IDAY,I)
        CALL STC (ICHAR,IMNTH,K)
        K=K+1
120     CONTINUE

        DO 125 I=1,12
        IF (IMNTH.EQ.MONTBL(I)) GO TO 130
125     CONTINUE

        TYPE 127,IMNTH
127     FORMAT (5X,'ERROR!! SYSTEM RETURNED UNRECOGNIZABLE MONTH NAME: '
     X,A5,/)
        GO TO 9999

*       ** FINALLY PUT SYSTEM DATE INTO YYMMDD FORMAT.

130     ITODAY=ID3*100000+ID4*10000+I*100+ID1*10+ID2

*       ** BUILD NAME OF TODAYS CONTROL FILE

        ENCODE (6,140,L)ITODAY
        DECODE (6,141,L)(SCR(I),I=1,6)
        ENCODE (17,142,CTLFLE)(SCR(I),I=1,6)
140     FORMAT (I6)
141     FORMAT (6I1)
142     FORMAT ('(ACCG1)',6I1,4H.CTL)

*       ** OPEN CONTROL FILE AND GET JOB NUMBER FOR THIS JOB

        OPEN (3,CTLFLE,RANDIO)
        ISIZE=SIZE(3)
        IF (ISIZE.EQ.0) GO TO 145
        READ (3#1,143)IJOB
143     FORMAT  (I3)

        INUM=IJOB+1
        WRITE (3#1,143)INUM
        CLOSE (3)
        GO TO 150

*       ** FILE IS EMPTY - JOB FOR THIS JOB = 1. SET JOB NUM. FOR
*          NEXT JOB.

145     INUM=2
        WRITE (3#1,143)INUM
        IJOB=1
        CLOSE(3)

*       ** BUILD JOB FILE NAME

150     ENCODE (3,151,L)IJOB
        DECODE (3,152,L)(JOB(I),I=1,3)
        ENCODE (17,153,JOBFLE)(SCR(I),I=1,6),(JOB(I),I=1,3)
151     FORMAT (I3)
152     FORMAT (3I1)
153     FORMAT ('(ACCG1)',6I1,1H.,3I1)

*       ** CREATE AN EMPTY JOB FILE

        OPEN (3,JOBFLE,OUTPUT)
        CLOSE(3)

*       ** GET USERNAME FROM WHICH THIS JOB WAS CALLED

        CALL GETUSN(CURUSR)

*       ** GET THE PASSWORDS FROM THE PASSWORD FILE

155     CALL USCRAM(IPASSR,IPASSW)

*       ** ASSUME USER HAS ONLY READ STATUS

        IPASS=IPASSR

*       ** NOW CK IF USER HAS WRITE ACCESS

        IF((CURUSR(1).EQ.'PAULA'.AND.CURUSR(2).EQ.' ').OR.
     +CURUSR(1).EQ.'ROY'.OR.(CURUSR(1).EQ.'DBPOR'.AND.CURUSR(2)
     +.EQ.'TSUPD'))IPASS=IPASSW

*       ** TURN ON 1022 ERROR TRAPPING

165     CALL DBERR ($170,IERT,IERC,0)

*       ** OPEN THE PORTS DATA BASE

        CALL DBOPEN ('(NEWPRT)PORTS','PASSWORD',IPASS)

*       **  SUCCESSFUL OPEN, CONTINUE

        GO TO 105

*       ** UNSUCCESSFUL OPEN. IF THE PROBLEM IS NOT WITH THE PASSWORD, QUIT

170     IF (IERT.EQ.4 .AND. (IERC.EQ.3.OR.IERC.EQ.5) ) GO TO 172
        TYPE 171,IERT,IERC
171     FORMAT (1X,'1022 ERROR. TYPE = ',I3,2X,'NUMBER = ',I3)
        GO TO 9999

*       ** PROBLEM IS WITH PASSWORD. QUIT.

172     IF (IERC.EQ.5)  TYPE 176
        IF (IERC.EQ.3) TYPE 174
174     FORMAT (/,1X,'WRONG PASSWORD. CONTACT PORTS D.B.A.')
176     FORMAT (/,1X,'YOU ARE NOT AUTHORIZED TO ACCESS THE PORTS ',
     +  'DATA BASE',/)
        GO TO 9999

*       ** OUTPUT COMMAND PROMPT AND INPUT COMMAND
*          ON 1022 ERROR EXIT PROGRAM

105     CALL DBERR($9999,IERT,IERC,-1)
        CALL ONINT($90)
        IERR=0
        TYPE 110
110     FORMAT (/,1X,': ',$)
        ACCEPT 115,(COMMND(I),I=1,71)
115     FORMAT (71A1)

*       ** CALL SUBROUTINE TO INTERPRET COMMAND

        CALL GETCOM (COMMND,IPART1,IPART2,IERR)
        IF (IERR.EQ.0) GO TO 200
        IERR=0
        GO TO 105

*       ** OPEN THE PORTSD DATA BASE WITH EACH NEW COMMAND TO
*          INITIALIZE THE WORKSPACE

200     CALL DBOPEN ('(NEWPRT)PORTS','PASSWORD',IPASS)

*       ** BRANCH ON COMMAND

        DO 210 I=1,42
        NUMCOM=I
        IF (IPART1.EQ.ICOM(I)) GO TO 275
210     CONTINUE

225     TYPE 250
250     FORMAT (/,1X,'INVALID COMMAND')
        GO TO 105

275     GO TO (9999,9999,9999,9999,9999,9999,9999,9999,
     X         9999,9999,9999,9999,9999,9999,4500,4500,9999,9999,
     X         9999,4500,9999,6000,6000,9999,9999,9999,7000,7000,
     X         9999,9999,9999,9999,9999,9999,9999,9999,9999,
     X         9999,9999,9999,8900,8900),NUMCOM


***********************************************************************
*                                                                     *
*                         COMMAND: ADD                                *
*                                                                     *
*       THIS COMMAND ADDS A NODE OR IN CASE OF AN ISIS MACHINE A      *
*       HOST TO THE PORTS-PRICING DATA BASE: (PORTS.DMI)              *
*                                                                     *
***********************************************************************

*       ** CHECK IF ADDING 'NODE' OR 'HOST'

1000    IF (IPART2.EQ.'HOST'.OR.IPART2.EQ.'HOS'.OR.IPART2.EQ.'HO'
     X.OR.IPART2.EQ.'H') GO TO 1200

        IF (IPART2.EQ.'NODE'.OR.IPART2.EQ.'NOD'.OR.IPART2.EQ.'NO'
     X.OR.IPART2.EQ.'N') GO TO 1010
        TYPE 1005
1005    FORMAT (/,1X,'* NODE OR HOST: ',$)
        ACCEPT 1006,IPART2
1006    FORMAT (A4)
        GO TO 1000


*       *************************************
*       *                                   *
*       *          ADD NODE                 *
*       *                                   *
*       *************************************

*       ** SET ORIGHOST TO ZERO

1010    IHOST=0
        IHFLAG=0
        NUMSNI=0
        ITOC='ADD-N'

*       ** INPUT NODE NUMBER

        CALL INNODE(INODE,NHCOD,IBILL,CITY,ISTATE,IZONE,IPORT,IPC,ITYP
     X  ,IREC,IERR)
        IF (IERR.EQ.0) GO TO 1025
        IF (IERR.EQ.1) GO TO 1015
        IERR=0
        GO TO 1010

*       ** NODE DOES NOT EXIST. (HAS NOT BEEN DECLARED)
*          RETURN TO COMMAND LEVEL

1015    TYPE 1020
1020    FORMAT (5X,'NODE HAS NOT BEEN DECLARED!! (CALL DATA BASE ',
     +  'ADMINISTRATOR)')
        IERR=0
        GO TO 105

*       ** IF NODE IS NON-ISIS WOULD HAVE ONLY 1 RECORD IN DATA BASE

1025    IF (ITYP.EQ.'ISI') GO TO 1040
        IF (IREC.EQ.1) GO TO 1030
        TYPE 1027
1027    FORMAT (5X,'ERROR!! NODE ALREADY EXISTS')
        GO TO 105

*       ** CHECK THAT THIS ONE RECORD IS A DECLARE RECORD.

1030    IF (IPORT.EQ.89) GO TO 1035
        IF (IPORT.NE.99.AND.IPORT.NE.88) GO TO 1031

*       ** THIS IS A NON-ISIS NODE WITH 1 VALID DECLARE RECORD.
*          GET THE NODE/HOST EFFECTIVE DATE FROM THIS RECORD.

        CALL DBVAL('NHDAT',INHDAT)

*       ** GET THE NODE TYPE

        CALL INTYP(NTYP,NUMTYP,TYPE,MAXTYP,INODE)
        GO TO 1060


1031    TYPE 1032,IPORT,IPC
1032    FORMAT (5X,'ERROR!! BAD DECLARATION!!',/,
     X          5X,'PORT = ',I3,5X,'PORT CODE = ',I2,/,
     X          5X,'CALL DATA BASE ADMINISTRATOR')
        GO TO 105

*       ** NODE IS A SNI. CAN'T ADD

1035    TYPE 1037
1037    FORMAT (5X,'THIS NODE IS A SNI.  NO FURTHER ACTION IS',
     +  ' ALLOWED.',/)
        GO TO 105


*       ** CHECK THAT ALL RECORDS FOR THIS ISIS NODE ARE DECLARE RECORDS

1040    NTYP='ISI'
        NUMDEC=0
        NUMSNI=0
        CALL DBEXEC ('STARTREC')
1042    CALL DBGREC($1060)
        CALL DBVAL('NHCODE',NHCOD,'PCODE',IPC,'PORT',IPORT,
     X'HOST',IHOST2)

*       ** BRANCH ON TYPE OF RECORD

        IF (IPORT.EQ.99.OR.IPORT.EQ.88.OR.IPORT.EQ.89) GO TO 1044

*       ** BAD DECLARE RECORD

        TYPE 1043,IHOST2,IPORT,IPC
1043    FORMAT (5X,'ERROR!!  BAD DECLARATION!! HOST = ',I5,
     X/,5X,'PORT = ',I3,5X,'PORT CODE =',I2
     X/,5X,'CALL DATA BASE ADMINISTRATOR')
        GO TO 105

*       ** VALID DECLARE OR REDECLARE RECORD

1044    NUMDEC=NUMDEC+1
        GO TO 1042


*       ** ERROR

1056    TYPE 1057
1057    FORMAT (5X,'ERROR ON GETREC AT 1055.',/
     +  5X,'PLEASE REPORT.',/)
        GO TO 9999

*       ** INPUT NODE NAME

1060    TYPE 1065
1065    FORMAT (/,1X,'* NODE NAME (MAX. 6 CHARS): ',$)
        ACCEPT 1070,INAM
1070    FORMAT (A5,A1)


*       ** INPUT MACHINE TYPE

1072    CALL INMACH(IMACH,NUMMAC,MACH,MAXMAC,INODE)


*       ** INPUT PORT EFFECTIVE DATE

1075    INDFLG=0
        CALL INDAT(INDFLG,IPORT,IPDAT)

*       ** IF NODE IS NOT 'ISIS' STAY HERE

1150    IF (NTYP.EQ.'ISI') GO TO 1205

*       ** FIND MAX. NUM. OF PORTS FOR THIS NODE TYPE

1154    DO 1155 I=1,NUMTYP
        IMAXPT=TYPE(I,2)
        IF (NTYP.EQ.TYPE(I,1)) GO TO 1160
1155    CONTINUE

*       ** ERROR
        TYPE 1157,NTYP
1157    FORMAT (5X,'UNRECOGNIZABLE NODE TYPE')
        GO TO 105

*       ** INIT ARRAY: PORTS AND SOME VARIABLES

1160    DO 1163 I=1,256
        DO 1162 J=1,11
        IF (J.NE.1) GO TO 1166
        PORTS(I,J)=-1
        GO TO 1162

1166    IF (J.GE.4) GO TO 1161
        PORTS(I,J)=0
        GO TO 1162
1161    PORTS(I,J)='     '
1162    CONTINUE
1163    CONTINUE

        IPT1=1
        ISTOP=0
        ITPCNT=0

*       ** INPUT 1ST SET OF PORTS

1165    IOPT=1155
        CALL INPRT(IPT1,IOPT,IMAXPT,IPT2,ITPCNT,IPCNT,INDFLG,
     X  ISTOP)

*       ** CHECK IF MAX NUM. OF PORTS HAS BEEN EXCEEDED

        IF (ITPCNT.LT.IMAXPT) GO TO 1175
        IF (ITPCNT.EQ.IMAXPT) GO TO 1180

*       ** MAX HAS BEEN EXCEEDED

        TYPE 1170,ITPCNT,IMAXPT
1170    FORMAT (5X,'ERROR!! ',I4,' PORTS HAVE BEEN ENTERED',/
     X          12X,'ONLY ',I4,' ARE REQUIRED.',/
     X          12X,'REENTER LAST SET OF PORTS')

*       ** ZERO OUT PORT NUMBER IN PORTS ARRAY FOR LAST SET.

        DO 1172 I=IPT1,IPT2
        PORTS(I,1)=-1
1172    CONTINUE

*       ** ADJUST TOTAL PORT COUNT

        ITPCNT=ITPCNT-IPCNT
        GO TO 1165

*       ** CHECK IF TIME TO STOP. IF NOT GO INPUT ANOTHER SET OF 
*          PORTS.

1175    IF (ISTOP.NE.0) GO TO 1177

        CALL SETPRT(IPT1,IPT2,MODM,MAXMOD,NUMMOD,PCOD,MAXPC,NUMPC,IHOST)
        GO TO 1165

*       ** CHECK IF HAVE ENOUGH PORTS

1177    IF (ITPCNT.NE.IMAXPT) GO TO 1182

*       ** GET INFO FOR LAST SET OF PORTS AND GO ADD ALL PORTS TO 
*          DATA BASE.

1180    CALL SETPRT(IPT1,IPT2,MODM,MAXMOD,NUMMOD,PCOD,MAXPC,NUMPC,IHOST)


        CALL INTDIS
        ISTART=1
        CALL ADDPRT(JOBFLE,ISTART,ITPCNT,IERR)
        IF (IERR.EQ.1.OR.IERR.EQ.-1) GO TO 9999
        IF (IERR.EQ.2) GO TO 105

*       ** GET DECLARE RECORDTHIS NODE AND DELETE IT

        CALL DBFIND('NODE','EQ',INODE,'AND','PORT','EQ',99)
        CALL DBERR($1181,IERT,IERC,0)
        ERRCNT=0
1178    CALL DBDEL
        GO TO 1179

1181    CALL ERRMSG(IERT,IERC,ERRCNT,ISTOP)
        IF (ISTOP.EQ.0) GO TO 1178
        GO TO 105

1179    CALL ONINT($90)
        GO TO 105

*       ** ERROR - NOT ENOUGH PORTS

1182    TYPE 1185,IMAXPT,ITPCNT
1185    FORMAT (5X,'ERROR!! NODE REQUIRES ',I4,' PORTS',
     X        /,5X,'ONLY ',I4,' HAVE BEEN ENTERED. IF YOU',
     X        /,5X,'STOP NOW YOU WILL LOSE ALL PORTS ENTERED.',/
     X        /,5X,'PORTS ENTERED SO FAR ARE:',/)
        TYPE 1186,(PORTS(I,1),I=1,ITPCNT)
1186    FORMAT (10(2X,I3))
        ISTOP=0
        GO TO 1165

*       ******************************************
*       *                                        *
*       *           ADD A HOST                   *
*       *                                        *
*       ******************************************

*       ** GOT TO HERE FROM ADD HOST COMMAND

1200    IOPT='H'
        ITOC='ADD-H'

*       ** INPUT EFFECTIVE DATE

1203    INDFLG=0
        CALL INDAT(INDFLG,IPORT,IPDAT)
        INODE=0

        GO TO 1210

*       ** GOT TO HERE FROM ADD NODE COMMAND (ADD ISIS NODE)
*          GET ALL DECLARE RECORDS AND UPDATE NODE INFO.

1205    IOPT='N'
        CALL DBFIND('NODE','EQ',INODE,'SAV.',1,'PORT','EQ',99,'OR',
     X  'PORT','EQ',98,'OR','PORT','EQ',88,'OR','PORT','EQ',89,
     X  'AND','REF.',1)
        CALL DBNREC(IRREC)
        IF (IRREC.EQ.0) GO TO 1210
        CALL DBCHNG('NTYPE',NTYP,'MACHTYP',IMACH,'NAME',INAM)

*       ** INPUT A HOST AND ITS ASSOCIATED PORTS

1210   IOPT2='A'
        CALL INHOST(IHOST,IHFLAG,MODM,MAXMOD,NUMMOD,PCOD,MAXPC,
     X  NUMPC,ITPCNT,IOPT,IOPT2,IMAXPT,IERR)
        IF (IERR.EQ.0) GO TO 1215
        IERR=0
        GO TO 105

*       ** HOST HAS BEEN SUCCESSFULLY ENTERED. SET HOST FLAG

1215    IHFLAG=1
        ISIS=1

*       ** ADD PORTS TO DATA BASE

        CALL INTDIS
        ISTART=1
        CALL ADDPRT(JOBFLE,ISTART,ITPCNT,IERR)
        IF (IERR.EQ.1.OR.IERR.EQ.-1) GO TO 9999
        IF (IERR.NE.2.AND.IERR.NE.3) GO TO 1212
        CALL ONINT($90)
        GO TO 105

*       ** GET DECLARE RECORD FOR THIS HOST AND DELETE IT

1212    IDREC=99
        CALL DBFIND('NODE','EQ',INODE,'AND','HOST','EQ',IHOST,'AND',
     X  'PORT','EQ',IDREC)
        CALL DBNREC(IREC)
        IF (IREC.NE.0) GO TO 1214
        TYPE 1213
1213    FORMAT (5X,'THIS SHOULD NEVER HAVE HAPPENED. CALL FOR HELP',/
     X  5X,'ERROR #1213')
        GO TO 9999

1214    CALL DBERR($1220,IERT,IERC,0)
        ERRCNT=0
1250    CALL DBDEL
        GO TO 1224

1220    CALL ERRMSG(IERT,IERC,ERRCNT,ISTOP)
        IF (ISTOP.EQ.0) GO TO 1250
        GO TO 105

1224    CALL ONINT($90)


1225    IF (IOPT.EQ.'H') GO TO 105
        GO TO 1210

*       ** UNABLE TO OPEN JOBFLE

1240    TYPE 1245,(JOBFLE(I),I=1,2)
1245    FORMAT (5X,'ERROR!! UNABLE TO OPEN: ',2A5)
        GO TO 9999







***********************************************************************
*                                                                     *
*                       COMMAND: DECLARE                              *
*                                                                     *
*       THIS COMMAND DECLARES A NODE OR HOST TO BE HIGH DENSITY,      *
*       LOW DENSITY, INTERNATIONAL, ETC.                              *
*                                                                     *
***********************************************************************

*       ** CK IF USER IS VALID TO ISSUE THIS COMMAND

2000    IF((CURUSR(1).EQ.'DBPOR'.AND.CURUSR(2).EQ.'TSUPD').OR.
     X(CURUSR(1).EQ.'PAULA'.AND.CURUSR(2).EQ.' ').OR.(CURUSR(1).EQ.
     X'ROY'))GO TO 2002
        TYPE 2001
2001    FORMAT (5X,'USER NOT AUTHORIZED TO ISSUE THIS COMMAND',/
     X,        5X,'CALL RPA')
        GO TO 105

*       ** CHECK IF DECLARING A NODE OR HOST

2002    IHFLAG=0
        INFLAG=0

        IF (IPART2.EQ.'HOST'.OR.IPART2.EQ.'HOS'.OR.IPART2.EQ.'HO'
     X.OR.IPART2.EQ.'H') GO TO 2005

        IF (IPART2.EQ.'NODE'.OR.IPART2.EQ.'NOD'.OR.IPART2.EQ.'NO'
     X.OR.IPART2.EQ.'N') GO TO 2006

        TYPE 2003
2003    FORMAT (/,1X,'* NODE OR HOST: ',$)
        ACCEPT 2004,IPART2
2004    FORMAT (A4)
        GO TO 2002

2005    IOPT='H'
        ITOC='DEC-H'
        GO TO 2010

2006    IOPT='N'
        IHOST=0
        ISNI=0
        NREC='DN'
        ITOC='DEC-N'

*       ** INPUT NODE NUMBER

2010    CALL INNODE(INODE,NHCOD,IBILL,CITY,ISTATE,IZONE,IPORT,IPC,ITYP
     X  ,IREC,IERR)

        IF (IERR.EQ.2) GO TO 2010
        IF (IOPT.EQ.'H') GO TO 2031
        IF (IERR.EQ.1) GO TO 2030
        IF (IERR.EQ.0) GO TO 2020
        IERR=0
        GO TO 2010

*       ** NODE EXISTS IN DATA BASE

2020    TYPE 2025,NHCOD
2025    FORMAT (5X,'ERROR!! NODE HAS ALREADY BEEN DECLARED AS ',I2)
        GO TO 105

*       ** O.K. TO DECLARE. IF ISIS NODE INPUT HOST NUMBER

2030    IF (ITYP.NE.'ISI') GO TO 2050

*       ** CHECK THAT NODE IS AN ISIS NODE

2031    IF (ITYP.EQ.'ISI') GO TO 2035
        TYPE 2032,INODE
2032    FORMAT (5X,'ERROR!! NODE ',I5,' IS NOT AN ISIS NODE!.')
        GO TO 105

*       ** IF 'DECLARE HOST' THEN INSURE THAT OTHER HOST HAVE BEEN DECLARED
*          ON THIS NODE

2035    IF (IOPT.EQ.'N') GO TO 2036
        IF (IREC.NE.0) GO TO 2070
        TYPE 2038,INODE
2038    FORMAT (5X,'ERROR!! NODE ',I5,' HAS NOT BEEN DECLARED.',/
     X,          5X,'USE DECLARE-NODE COMMAND. IT WILL PROMPT',/
     X,          5X,'FOR ORIGHOSTS.')
        GO TO 105

*       ** CHECK THAT NODE HAS BEEN ADDED

2070    CALL DBVAL('NTYPE',IN,'MACHTYP',IM)
        IF (IN.EQ.' '.AND.IM.EQ.' ') GO TO 2075
        GO TO 2036

2075    TYPE 2076,INODE
2076    FORMAT (5X,'ERROR!! NODE ', I5, ' MUST BE ADDED BEFORE A NEW',/
     X   ,5X,'HOST CAN BE DECLARED ON IT')
        GO TO 105

2036  NREC='DH'
        IGATE=0
        ISNI=0
        CALL INHNUM(INODE,IHOST,NHCOD,IBILL,CITY,ISTATE,IZONE,IPORT,
     X  IPC,IREC,IERR2)
        IF (IERR2.EQ.1) GO TO 2045
        IF (IERR2.EQ.2) GO TO 2040
        IF (IERR2.EQ.3) GO TO 2042

        TYPE 2037
2037    FORMAT (5X,'ERROR!! HOST HAS ALREADY BEEN DECLARED ON THIS ',
     X  'NODE')
        IF (IOPT.EQ.'H') GO TO 105
        GO TO 2036

*       ** STOP? ONLY IF AT LEAST ONE HOST HAS BEEN ENTERED IF DECLARING
*          ISIS NODE.

2040    IF (IOPT.EQ.'H') GO TO 105
        IF (IHFLAG.NE.0) GO TO 105
        TYPE 2041
2041    FORMAT (5X,'MUST DECLARE AT LEAST ONE HOST FOR THIS NODE')
        GO TO 2036

*       ** HOST IS ALREADY IN DATA BASE.  SEE IF USER WANTS TO ADD IT
*          ANYWAY.

2042    TYPE 2043
2043    FORMAT (5X,'THIS HOST ALREAY EXISTS ON ANOTHER NODE. CONTINUE',
     X  '? (Y OR N): ',$)
        ACCEPT 2048,IANS
        IF (IANS.EQ.'Y') GO TO 2045
        IF (IANS.EQ.'N') GO TO 2036
        GO TO 2042

*       ** CHECK IF HOST IS AN INTERFACE

2045    TYPE 2047
2047    FORMAT (5X,'IS THIS HOST AN INTERFACE WITHOUT PORTS? (Y OR N)'
     X  ': ',$)
        ACCEPT 2048,IANS
2048    FORMAT (A1)

        IF (IANS.EQ.'Y') GO TO 2049
        IF (IANS.EQ.'N') GO TO 2050
        GO TO 2045

*       ** SET PORT,PORT CODE, AND COMMENT

2049    IDPORT=88
        IDPC=88
        IGATE=1
        COMENT(1)='NO PO'
        COMENT(2)='RTS-I'
        COMENT(3)='NTERF'
        COMENT(4)='ACE  '

*       ** INPUT NODE-HOST CODE

2050    CALL INNCOD(NHCOD,NCOD,MAXNC,NUMNC)

*       ** CK IF NODE  IS A SNI, IF SO , NO PORTS MAY BE ADDED

        IF (NHCOD.NE.9) GO TO 2054

*       ** THIS IS AN SNI, SET PORT, PORTCODE AND COMMENT

        IDPORT=89
        IDPC=89
        COMENT(1)='NO-P0'
        COMENT(2)='RTS-S'
        COMENT(3)='NI   '
        COMENT(4)='     '
        ISNI=1

*       ** JUST FOR SNI NODES INPUT NODE NAME,TYPE, AND MACHINE TYPE
*          FIRST, INPUT NODE NAME

        IF (IOPT.EQ.'H'.OR.ITYP.EQ.'ISI') GO TO 2054
        TYPE 1065
        ACCEPT 1070,INAM

*       ** INPUT NODE TYPE

2051    CALL INTYP(NTYP,NUMTYP,TYPE,MAXTYP,INODE)

*       ** INPUT MACHINE TYPE

2052    CALL INMACH(IMACH,NUMMAX,MACH,MAXMAC,INODE)

*       ** INPUT CITY AND STATE

2054    CALL INCITY(CITY,NUMCIT,CITIES,MAXCIT)

        CALL INSTAT(ISTATE,NUMSTA,STAT,MAXSTA,NUMCTR,CTRY,MAXCTR,
     X  INTFLG)

*       ** INPUT TIME ZONE, UNLESS NODE/HOST IS INTERNATIONAL

        IZONE='NA'
        IF (INTFLG.EQ.1) GO TO 2058
        CALL INZONE(IZONE,NUMZON,ZONE,MAXZON)

*       ** INPUT BILLING DESIGNATOR
2058    CALL INBILL(IBILL,NUMBIL,BILL,MAXBIL)

*       ** INPUT EFFECTIVE DATE

        INDFLG=0
        CALL INDAT(INDFLG,IPORT,INHDAT)
        IPDAT=INHDAT

*       ** IF WE'RE NOT WORKING ON AN SNI OR INTERFACE, SET PORT 
*          AND PORT CODE TO INDICATE NEED TO ADD PORTS
        IF (ISNI.NE.0.OR.IGATE.NE.0) GO TO 2059
        IDPORT=99
        IDPC=99

*       ** SET COMMENT

        COMENT(1)='PORTS'
        COMENT(2)=' NOT '
        COMENT(3)='ADDED'
        COMENT(4)='     '


*       ** IF DECLARING A HOST GO GET SOME ADDITIONAL NODE INFO
2059    IF (IOPT.EQ.'H') GO TO 2100

*       **IF DECLARING AN SNI NODE, WE'VE ALREADY INPUT THE ADDITIONAL NODE INFO
*          SO GO ADD THE DECLARE RECORD WITH THIS INFO
        IF (ISNI.NE.0) GO TO 2130

*       ** ADD A DECLARE RECORD TO THE PORTS DATA BASE, WITHOUT THE
*          NODE NAME, NODE TYPE OR MACHINE TYPE - THESE ARE OBTAINED 
*          THROUGH THE ADD-NODE COMMAND

2060    CALL INTDIS
        CALL DBERR($2090,IERT,IERC,0)
        ERRCNT=0
2120    CALL DBADD('NODE',INODE,'HOST',IHOST,'NHCODE',NHCOD,'NCITY',
     XCITY,'NSTATE',ISTATE,'NHDAT',INHDAT,'PORT',IDPORT,'PCODE',IDPC,
     X'PDAT',IPDAT,'COMMENT',COMENT,'ZONE',IZONE,'BILL',IBILL)
        GO TO 2150

2090    CALL ERRMSG(IERT,IERC,ERRCNT,ISTOP)
        IF (ISTOP.EQ.0) GO TO 2120
        GO TO 105

*       ** GET NODE INFO FOR THIS HOST

2100    CALL DBFIND('NODE','EQ',INODE)
        CALL DBGREC($105)
        CALL DBVAL('NAME',INAM,'NTYPE',NTYP,'MACHTYP',IMACH)

*       ** ADD THE DECLARE RECORD

2130    CALL DBERR($2140,IERT,IERC,0)
        ERRCNT=0
        CALL INTDIS
2135    CALL DBADD('NODE',INODE,'HOST',IHOST,'NHCODE',NHCOD,'NCITY',
     XCITY,'NSTATE',ISTATE,'NHDAT',INHDAT,'PORT',IDPORT,'PCODE',IDPC,
     X'PDAT',IPDAT,'COMMENT',COMENT,'NAME',INAM,'NTYPE',NTYP,
     X'MACHTYP',IMACH,'ZONE',IZONE,'BILL',IBILL)
        INAM(1)='     '
        INAM(2)='     '
        IMACH='     '
        NTYP='     '
        GO TO 2150

2140    CALL ERRMSG(IERT,IERC,ERRCNT,ISTOP)
        IF (ISTOP.EQ.0) GO TO 2135
        GO TO 105



*       ** ADD A DECLARE CHANGE RECORD TO JOBFLE. IF DECLARING
*          A NODE, CHANGE RECORD REQUIRES NODE NUMBER INSTEAD OF HOST
*          NUMBER.  IF DECLARING AN ISIS NODE, SEND A DECLARE-NODE
*          CHANGE RECORD ALONG WITH THE APPROPRIATE DECLARE-HOST
*          CHANGE RECORDS.

2150    OPEN (3,JOBFLE,RANDIO,ERR=2080)
        IPOS=SIZE(3)+2
        IF (IOPT.EQ.'H') GO TO 2072
        IF (ITYP.EQ.'ISI') GO TO 2065
        WRITE (3#IPOS,2155)NREC,INODE,NHCOD,(CITY(I),I=1,4),ISTATE,IZONE
     X  ,INHDAT
2155    FORMAT (A2,',',I5,',',I2,',',4A5,',',A3,',',A2,',',I6)
        CLOSE(3)

*       ** IF PORT INDICATES THAT THIS NODE IS AN INTERFACE OR SNI,
*          OUTPUT A DECLARE-NODE RECORD TO HPORTS
        IF (IDPORT.NE.88.AND.IDPORT.NE.89) GO TO 105

2160    CALL DBOPEN ('NOCLOSE','(ACCG1)HPORTS','PASSWORD',IPASS)

*       ** TURN OFF INTERRUPTS AND TURN ON SPECIAL 1022 ERROR
*          HANDLING
        CALL INTDIS
        CALL DBERR($2170,IERT,IERC,0)
        ERRCNT=0

*       ** ADD THE RECORD
2165    CALL DBADD('BILL',IBILL,'NODE',INODE,'HOST',IHOST,'NHCODE',
     +  NHCOD,'CITY',CITY,'STATE',ISTATE,'ZONE',IZONE,'NHDATE',INHDAT,
     +  'PORT',IDPORT,'PCODE',IDPC,'PDATE',IPDAT,'TOC',ITOC)

*       ** ADD WAS SUCCESSFUL. CLOSE HPORTS AND RETURN TO COMMAND LEVEL
        CALL DBCLOS
        GO TO 105

*       ** ADD WAS NOT SUCCESSFUL. SEE IF USER WANTS TO TRY AGAIN.
2170    CALL ERRMS2(IERT,IERC,ERRCNT,ISTOP)
        IF (ISTOP.EQ.0) GO TO 2165

*       ** USER WANTS TO STOP.
        CALL DBCLOS
        GO TO 9999

*       ** THIS IS AN ISIS NODE. IF HAVEN'T ALREADY DONE SO, OUTPUT A 
*          DECLARE NODE RECORD TO JOB FILE
2065    IF (INFLAG.NE.0) GO TO 2072
        INFLAG=1
        WRITE (3#IPOS,2066)INODE,IZERO,INHDAT
2066    FORMAT ('DN,',I5,',',I2,',',20X,',',3X,',',2X,',',I6)
        IPOS=IPOS+48

*       ** OUTPUT A DECLARE HOST RECORD TO JOB FILE.
2072    WRITE(3#IPOS,2095)NREC,INODE,IHOST,NHCOD,(CITY(I),I=1,4),
     X  ISTATE,IZONE,INHDAT
2095    FORMAT (A2,',',I5,',',I5,',',I2,',',4A5,',',A3,',',A2,',',I6)
        CLOSE(3)

*       ** IF PORT INDICATES THAT THIS HOST IS AN INTERFACE OR SNI,
*          OUTPUT A DECLARE-HOST RECORD TO HPORTS
        IF (IDPORT.NE.88.AND.IDPORT.NE.89) GO TO 2099

        CALL DBOPEN ('NOCLOSE','(ACCG1)HPORTS','PASSWORD',IPASS)

*       ** TURN ON SPECIAL ERROR HANDLING
        CALL DBERR($2097,IERT,IERC,0)
        ERRCNT=0

*       ** ADD THE RECORD
2096    CALL DBADD('BILL',IBILL,'NODE',INODE,'HOST',IHOST,'NHCODE',
     +  NHCOD,'CITY',CITY,'STATE',ISTATE,'ZONE',IZONE,'NHDATE',INHDAT,
     +  'PORT',IDPORT,'PCODE',IDPC,'PDATE',IPDAT,'TOC',ITOC)

*       ** ADD WAS SUCCESSFUL. CLOSE HPORTS AND GO SET HOST FLAG
        CALL DBCLOS
        GO TO 2099

*       ** ADD WAS UNSUCCESSFUL. SEE IF USER WANTS TO TRY AGAIN.
2097    CALL ERRMS2(IERT,IERC,ERRCNT,ISTOP)
        IF (ISTOP.EQ.0) GO TO 2096

*       ** USER WANTS TO STOP.
        CALL DBCLOS
        GO TO 9999

*       ** HAVE SUCCESSFULLY DECLARED A HOST SET HOST FLAG

2099    IHFLAG=1

*       ** IF DECLARING ISIS NODE GO BACK AND DECLARE ANOTHER HOST

        IF (IOPT.EQ.'H') GO TO 105
        GO TO 2036

*       ** UNABLE TO OPEN JOBFLE

2080    TYPE 2085,(JOBFLE(I),I=1,2)
2085    FORMAT (5X,'UNABLE TO OPEN: ',2A5)
        GO TO 9999


***********************************************************************
*                                                                     *
*                         COMMAND: REDECLARE                          *
*                                                                     *
*       THIS COMMANDS ALLOWS THE CHANGING OF THE NODE-HOST CODE       *
*       AND OTHER PERTINENT INFORMATION REGARDING AN UPGRADE,         *
*       DOWNGRADE, OR SIMPLE STATUS CHANGE OF A NODE.                 *
*                                                                     *
***********************************************************************

*       ** CHECK IF USER IS VALID TO ISSUE THIS COMMAND

2500     IF(CURUSR(1).EQ.'ROY'.OR.(CURUSR(1).EQ.'PAULA'.AND.
     +CURUSR(2).EQ.' ').OR.(CURUSR(1).EQ.'DBPOR'.AND.CURUSR(2).
     +EQ.'TSUPD'))GO TO 2502

*       ** NOT AUTHORIZED USER

        TYPE 2001
        GO TO 105

*       ** CHECK IF REDECLARING A NODE OR HOST

2502    IF (IPART2.EQ.'NODE'.OR.IPART2.EQ.'NOD'.OR.IPART2.EQ.'NO'
     X  .OR.IPART2.EQ.'N') GO TO 2520
        IF (IPART2.EQ.'HOST'.OR.IPART2.EQ.'HOS'.OR.IPART2.EQ.'HO'
     X  .OR.IPART2.EQ.'H') GO TO 2650

        TYPE 2505
2505    FORMAT (1X,'* NODE OR HOST? ',$)
        ACCEPT 2506,IPART2
2506    FORMAT (A5)
        GO TO 2500


*       ******************************************
*       *                                        *
*       *        REDECLARE NODE                  *
*       *                                        *
*       ******************************************

*       ** INPUT NODE NUMBER

2520    CALL INNODE(INODE,NHCOD,IBILL,CITY,ISTATE,IZONE,IPORT,IPC,ITYP
     X  ,IREC,IERR)
        IF (IERR.EQ.0) GO TO 2530
        IF (IERR.EQ.1) GO TO 2525
        IERR=0
        GO TO 2520

*       ** NODE NOT IN DATA BASE

2525    TYPE 5517
        GO TO 105

*       ** IF NODE IS ISIS CAN'T REDECLARE

2530    IF (ITYP.NE.'ISI') GO TO 2540
        TYPE 2535
2535    FORMAT (5X,'CAN NOT REDECLARE AN ENTIRE ISIS NODE.',/
     X,         5X,'USE REDECLARE-HOST COMMAND FOR EACH',/
     X,         5X,'HOST ON THIS NODE.')

        GO TO 105

*       ** IF NODE IS A SNI, CAN'T REDECLARE

2540    IF (NHCOD.NE.9) GO TO 2542
        TYPE 2537
2537    FORMAT(5X,'UNABLE TO REDECLARE A SNI. DELETE THE NODE',/,
     +  5X,'AND THEN DECLARE IT.',/)
        GO TO 105

*       ** SET TYPE-OF-CHANGE FOR BILLING CHANGE RECORDS
2542    ITOC='RED-N'

*       ** GET OLD NAME,MACHINE TYPE AND NODE TYPE

        CALL DBVAL('NAME',INAM,'NTYPE',OLDTYP,'MACHTYP',OLDMAC)

*       ** PRINT OLD NAME 

2545    TYPE 2546,(INAM(I),I=1,2)
2546    FORMAT (1X,'* NAME = ',A5,A1,5X,'O.K.? (Y OR N): ',$)
        ACCEPT 2547,IANS
2547    FORMAT (A1)

        IF (IANS.EQ.'Y') GO TO 2555
        IF (IANS.EQ.'N') GO TO 2550
        GO TO 2545

*       ** INPUT NEW NAME

2550    TYPE 2552
2552    FORMAT (1X,'* NODE NAME (MAX 6 CHARS.): ',$)
        ACCEPT 2553,(INAM(I),I=1,2)
2553    FORMAT (A5,A1)

*       ** INPUT NEW NODE-HOST CODE

2555    CALL INNCOD(NHCOD,NCOD,MAXNC,NUMNC)

*       ** CK IF NODE OR HOST IS AN SNI

2560    IF (NHCOD.NE.9) GO TO 2561
        TYPE 2556
2556    FORMAT (5X,'UNABLE TO REDECLARE THIS NODE AS A SNI.',/,
     +          5X,'DO A DELETE AND THEN DECLARE IT AS A SNI.',/)
        GO TO 105

*       ** INPUT CITY

2561    CALL INCITY(CITY,NUMCIT,CITIES,MAXCIT)

*       ** INPUT STATE

        CALL INSTAT(ISTATE,NUMSTA,STAT,MAXSTA,NUMCTR,CTRY,MAXCTR,
     X  INTFLG)

*       ** INPUT TIME ZONE, UNLESS NODE IS INTERNATIONAL

        IZONE='NA'
        IF (INTFLG.EQ.1) GO TO 2562
        CALL INZONE(IZONE,NUMZON,ZONE,MAXZON)

*       ** INPUT EFFECTIVE DATE

2562    INDFLG=0
        CALL INDAT(INDFLG,IPORT,INHDAT)
        IPDAT=INHDAT

*       ** INPUT TYPE OF REDECLARATION

2565    TYPE 2570
2570    FORMAT (1X,'* UPGRADE,DOWNGRADE,STATUS CHANGE? (U,D, OR S): ',$)
        ACCEPT 2572,ICHA
2572    FORMAT (A1)

        IF (ICHA.NE.'U'.AND.ICHA.NE.'D'.AND.ICHA.NE.'S') GO TO 2565

*       ** INPUT NEW MACHINE TYPE AND NEW NODE TYPE.


        IF (ICHA.EQ.'S') GO TO 2588
2580    TYPE 2581,OLDTYP
2581    FORMAT (5X,'OLD NODE TYPE = ',A3)

        CALL INTYP(NTYP,NUMTYP,TYPE,MAXTYP,INODE)

*       ** DETERMINE MAX. NUM OF PORTS FOR OLD AND NEW NODE TYPES

2582    CALL PRTNUM(NTYP,NEWMAX,NUMTYP,TYPE,MAXTYP,IERR)
        IF (IERR.NE.0) GO TO 2582

2583    CALL PRTNUM(OLDTYP,OLDMAX,NUMTYP,TYPE,MAXTYP,IERR)
        IF (IERR.NE.0) GO TO 2583

*       ** CHECK TO MAKE SURE THAT THIS IS INDEED AN UPGRADE OR DOWN-
*          GRADE.

2584    IF (ICHA.EQ.'D') GO TO 2586
        IF (OLDMAX.LT.NEWMAX) GO TO 2588
        TYPE 2585,OLDTYP,NTYP
2585    FORMAT (5X,'CHANGING FROM A ',A3,' TO A ',A3,' IS NOT AN
     X UPGRADE.')
        GO TO 2580

2586    IF (OLDMAX.GT.NEWMAX) GO TO 2588
        TYPE 2587,OLDTYP,NTYP
2587    FORMAT (5X,'CHANGING FROM A ',A3,' TO A ',A3,' IS  NOT A
     X DOWNGRADE.')
        GO TO 2580

*       ** INPUT NEW MACHINE TYPE

2588    TYPE 2589,OLDMAC
2589    FORMAT (5X,'OLD MACHINE TYPE = ',A4)

        CALL INMACH(IMACH,NUMMAC,MACH,MAXMAC,INODE)

*       ** IF UPGRADE STAY HERE

        CALL INTDIS
        IF (ICHA.EQ.'D') GO TO 2590
        IF (ICHA.EQ.'S') GO TO 2600

*       ** OUTPUT A REDECLARE RECORD TO DATA BASE.
*          THIS RECORD ALLOWS THE ADDITION OF PORTS TO THIS NODE 
*          THROUGH THE USE OF THE INCREASE-NODE COMMAND.

        IDPORT=98
        IDPC=98
        COMENT(1)='NEED '
        COMENT(2)='TO IN'
        COMENT(3)='CREAS'
        COMENT(4)='E    '

        CALL DBERR($2597,IERT,IERC,0)
        ERRCNT=0
2598    CALL DBADD('NODE',INODE,'PORT',IDPORT,'PDAT',IPDAT,'PCODE'
     X, IDPC,'COMMENT',COMENT)
        GO TO 2600

2597    CALL ERRMSG(IERT,IERC,ERRCNT,ISTOP)
        IF (ISTOP.EQ.0) GO TO 2598
        GO TO 105


*       ** DOWNGRADE.  FIRST OPEN HISTORIC BILLING DATA BASE
*          AND SET IT UP FOR UPDATING.

2590    CALL DBOPEN('NOCLOSE','(ACCG1)HPORTS','PASSWORD',IPASS)
        CALL DBSET(1)

*       ** OPEN JOB FILE TO OUTPUT MIS CHANGE RECORDS

        OPEN (3,JOBFLE,RANDIO)

*       ** SET POSITION OF FILE TO APPEND

        IPOS=SIZE(3)+2

*       ** SET RECORD TYPE TO "STOP PORT"

        NREC='SP'

*       ** SET PORT CODE TO 99. THIS TELLS MIS PORT WAS DELETED.
        IPC=99

*       ** CONVERT THE NEW MAX. NUMBER OF PORTS ON THE NODE TO
*          TEXT

        NEWMAX=NEWMAX-1
        CALL CONVRT(NEWMAX,IMAXPT)

*       ** FIND ALL PORTS ON THE NODE OVER THE NEW MAX.

        CALL DBFIND('NODE','EQ',INODE,'AND','PORT','GT',IMAXPT)
        CALL DBSORT('PORT')
        CALL DBNREC(IREC)

*       ** GET A RECORD

2592    CALL DBGREC($2595)

*       ** GET THE PORT NUMBER

        CALL DBVAL('PORT',IPORT)

*       ** TURN ON SPECIAL 1022 ERROR HANDLING

        CALL DBERR($2601,IERT,IERC,0)
        ERRCNT=0

*       ** DELETE THE PORT

2603    CALL DBDEL

*       ** THE DELETE WAS SUCCESSFUL, GO OUTPUT CHANGE RECORDS

        GO TO 2602

*       ** DELETE WAS NOT SUCCESSFUL.  GO INTERPRET 1022 ERROR.

2601    CALL ERRMSG(IERT,IERC,ERRCNT,ISTOP)
*       ** CK IF OK TO TRY DELETE AGAIN
        IF (ISTOP.EQ.0) GO TO 2603

*       ** TIME TO STOP. CLOSE JOB FILE
        CLOSE(3)

*       ** ALSO CLOSE HPORTS
        CALL DBSET(2)
        CALL DBCLOS

*       ** RETURN TO COMMAND LEVEL
        GO TO 105

*       ** IF PORT IS PART OF A DECLARE OR REDECLARE
*          RECORD DON'T OUTPUT A STOP-RECORD TO MIS.

2602    IF (IPORT.EQ.99.OR.IPORT.EQ.98) GO TO 2592

*       ** IF PORT IS PART OF A RECORD FOR AN INTERFACE OR SNI DON'T
*          OUTPUT A STOP-RECORD TO MIS BUT DO OUTPUT ONE TO HPORTS.
        IF (IPORT.EQ.88.OR.IPORT.EQ.89) GO TO 2594

        WRITE(3#IPOS,2593)NREC,INODE,IPORT,IPDAT
2593    FORMAT (A2,',',I5,',',I3,',',I6)
        IPOS=IPOS+21

*       ** OUTPUT A CHANGE RECORD TO HPORTS
2594    CALL DBSET(2)

*       ** TURN ON SPECIAL 1022 ERROR HANDLING
        CALL DBERR($2637,IERT,IERC,0)
        ERRCNT=0

*       ** ADD THE RECORD
2636    CALL DBADD('BILL',IBILL,'NODE',INODE,'NHCODE',NHCOD,
     +  'NHDATE',INHDAT,'CITY',CITY,'STATE',ISTATE,'ZONE',IZONE,'PORT'
     +  ,IPORT,'PCODE',IPC,'PDATE',IPDAT,'TOC',ITOC)
        CALL DBSET(1)

*       ** GO PROCESS NEXT RECORD
        GO TO 2592

*       ** ADD WAS NOT SUCCESSFUL. CK IF USER WANTS TO TRY AGAIN
2637    CALL ERRMS2(IERT,IERC,ERRCNT,ISTOP)
        IF (ISTOP.EQ.0) GO TO 2636

*       ** USER WANTS TO STOP.
        CALL DBCLOS
        GO TO 9999

*       ** FINISHED DELETING PORTS. CLOSE JOB FILE

2595    CLOSE(3)
        TYPE 2596,IREC
2596    FORMAT (5X,I4,' PORTS DELETED')

*       ** OUTPUT REDECLARE-NODE CHANGE RECORD

2600    OPEN (3,JOBFLE,RANDIO)
        IPOS=SIZE(3)+2
        NREC='RN'
        WRITE(3#IPOS,2604)NREC,INODE,NHCOD,(CITY(I),I=1,4),ISTATE,IZONE
     X  ,INHDAT
2604    FORMAT (A2,',',I5,',',I2,',',4A5,',',A3,',',A2,',',I6)
        CLOSE(3)

*       ** IF THIS IS NOT A DOWNGRADE, NEED TO OPEN HPORTS
        IF (ICHA.EQ.'D') GO TO 2605

        CALL DBOPEN('NOCLOSE','(ACCG1)HPORTS','PASSWORD',IPASS)
        CALL DBSET(1)

*       ** CHANGE ALL EXISITING RECORDS FOR THIS NODE WITH NEW DATA

*       ** FIND ALL RECORDS FOR THIS NODE
2605    CALL DBFIND ('NODE','EQ',INODE)

*       ** GET A RECORD
2606    CALL DBGREC($2608)

*       ** GET THE PORT NUMBER FOR THE CHANGE RECORD FOR HPORTS
        CALL DBVAL('PORT',IPORT,'PCODE',IPC,'PDAT',IPDAT)

*       ** IF THIS RECORD IS A DECLARE OR REDECLARE RECORD
*          IGNORE IT.
        IF (IPORT.EQ.99.OR.IPORT.EQ.98) GO TO 2606

*       ** SET DATA BASE TO HPORTS AND ADD THE CHANGE RECORD
2607    CALL DBSET(2)

*       ** TURN ON SPECIAL ERROR HANDLING
        CALL DBERR($2639,IERT,IERC,0)
        ERRCNT=0

*       ** ADD THE RECORD
2638    CALL DBADD('BILL',IBILL,'NODE',INODE,'NHCODE',NHCOD,'NHDATE',
     +  INHDAT,'CITY',CITY,'STATE',ISTATE,'ZONE',IZONE,'PORT',IPORT,
     +  'PCODE',IPC,'PDATE',IPDAT,'TOC',ITOC)

*       ** SET DATA BASE BACK TO PORTS AND GO GET NEXT RECORD
        CALL DBSET(1)
        GO TO 2606

*       ** ADD WAS UNSUCCESSFUL. SEE IF USER WANTS TO TRY AGAIN.
2639    CALL ERRMS2(IERT,IERC,ERRCNT,ISTOP)
        IF (ISTOP.EQ.0) GO TO 2638

*       ** TIME TO STOP.
        CALL DBCLOS
        GO TO 9999

*       ** FINISHED WITH HPORTS CHANGE RECORDS. CLOSE HPORTS

2608    CALL DBSET(2)
        CALL DBCLOS

*       ** CHANGE ALL RECORDS ON THE NODE WITH THE NEW DATA
        CALL DBEXEC('STARTREC')

*       ** IF THIS IS NOT A STATUS CHANGE NEED TO ALSO CHANGE THE NODE
*          TYPE , STAY HERE
        IF (ICHA.EQ.'S') GO TO 2620

*       ** TURN ON SPECIAL 1022 ERROR HANDLING
        CALL DBERR($2615,IERT,IERC,0)
        ERRCNT=0

*       ** MAKE THE CHANGES
2610    CALL DBCHNG('NAME',INAM,'NHDAT',INHDAT,'NHCODE',NHCOD
     X  ,'NTYPE',NTYP,'MACHTYP',IMACH,'NCITY',CITY
     X  ,'NSTATE',ISTATE,'ZONE',IZONE)

*       ** CHANGE WAS SUCCESSFUL. GO OUTPUT MESSAGE
        GO TO 2625

*       ** CHANGE WAS NOT SUCCESSFUL. CK IF OK TO TRY AGIAN
2615    CALL ERRMSG(IERT,IERC,ERRCNT,ISTOP)
        IF (ISTOP.EQ.0) GO TO 2610

*       ** NO. NEED TO STOP. RETURN TO COMMAND LEVEL
        GO TO 105

*       ** THIS IS A STATUS CHANGE.  SET SPECIAL 1022 ERROR HANDLING
2620    CALL DBERR($2630,IERT,IERC,0)
        ERRCNT=0

*       ** MAKE CHANGES
2635    CALL DBCHNG('NAME',INAM,'NHDAT',INHDAT,'NHCODE',NHCOD,'NCITY'
     X  ,CITY,'MACHTYP',IMACH,'NSTATE',ISTATE,'ZONE',IZONE)

*       ** CHANGE WAS SUCCESSFUL. GO OUTPUT MESSAGE
        GO TO 2625

*       ** CHANGE WAS NOT SUCCESSFUL. CK IF OK TO TRY AGAIN.
2630    CALL ERRMSG(IERT,IERC,ERRCNT,ISTOP)
        IF (ISTOP.EQ.0) GO TO 2635

*       ** NO. NEED TO STOP. RETURN TO COMMAND LEVEL.
        GO TO 105

*       ** ALL FINISHED. TURN BACK ON INTERRUPTS. AND RETURN TO 
*          COMMAND LEVEL
2625    TYPE 2626
2626    FORMAT (5X,'REDECLARE COMPLETED')
        CALL ONINT($90)
        GO TO 105



*       ******************************************
*       *                                        *
*       *           REDECLARE HOST               *
*       *                                        *
*       ******************************************

*       ** INPUT HOST NUMBER

2650    INODE=0
        CALL INHNUM(INODE,IHOST,NHCOD,IBILL,CITY,ISTATE,IZONE,IPORT,
     X  IPC,IREC,IERR)
        IF (IERR.EQ.0) GO TO 2660
        IF (IERR.EQ.1.OR.IERR.EQ.3) GO TO 2655
        IF (IERR.EQ.2) GO TO 105
        IERR=0
        GO TO 2650

*       ** HOST DOESN'T EXIST

2655    TYPE 3225
        GO TO 105

*       ** IF HOST IS A SNI, CAN'T REDECLARE IT.

2660    IF (NHCOD.NE.9) GO TO 2670
        TYPE 2667
2667    FORMAT (5X,'UNABLE TO REDECLARE A SNI. DELETE THE HOST',/,
     +  5X,'AND THEN DECLARE IT.',/)
        GO TO 105

*       ** SET TYPE-OF-CHANGE FOR BILLING CHANGE RECORDS
2670    ITOC='RED-H'

*       ** INPUT NEW NODE-HOST CODE

        CALL INNCOD(NHCOD,NCOD,MAXNC,NUMNC)

*       ** IF HOST IS A SNI CAN'T REDECLARE

        IF (NHCOD.NE.9) GO TO 2674
        TYPE 2672
2672    FORMAT (/,5X,'UNABLE TO REDECLARE THIS HOST AS A SNI.',/,
     +          5X,'DELETE HOST AND THEN DECLARE IT AS A SNI.',/)
        GO TO 105

*       ** INPUT CITY

2674    CALL INCITY(CITY,NUMCIT,CITIES,MAXCIT)

*       ** INPUT STATE

        CALL INSTAT(ISTATE,NUMSTA,STAT,MAXSTA,NUMCTR,CTRY,MAXCTR,
     X  INTFLG)

*       ** INPUT TIME ZONE, UNLESS HOST IS INTERNATIONAL

        IZONE='NA'
        IF (INTFLG.EQ.1) GO TO 2675
        CALL INZONE(IZONE,NUMZON,ZONE,MAXZON)

*       ** INPUT EFFECTIVE DATE

2675    INDFLG=0
        CALL INDAT(INDFLG,IPORT,INHDAT)
        IPDAT=INHDAT

*       ** OUTPUT REDECLARE-HOST CHANGE RECORD

        OPEN (3,JOBFLE,RANDIO)
        IPOS=SIZE(3)+2
        NREC='RH'
        WRITE (3#IPOS,2676)NREC,INODE,IHOST,NHCOD,(CITY(I),I=1,4),
     X  ISTATE,IZONE,INHDAT
2676    FORMAT (A2,',',I5,',',I5,',',I2,',',4A5,',',A3,',',A2,',',I6)
        CLOSE(3)

*       ** OPEN HPORTS FOR BILLING CHANGE RECORDS

        CALL DBOPEN('NOCLOSE','(ACCG1)HPORTS','PASSWORD',IPASS)
        CALL DBSET(1)

*       ** MAKE CHANGE TO EXISTING RECORDS ON THIS HOST

        CALL INTDIS
        CALL DBFIND('HOST','EQ',IHOST)
        CALL DBNREC(IREC)

*       ** GET A RECORD. AND GET THE PORT,PORT CODE, AND PORT DATE

2678    CALL DBGREC($2683)
        CALL DBVAL('PORT',IPORT,'PCODE',IPC,'PDAT',IPDAT)

*       ** IF PORT IS PART OF A DECLARE OR REDECLARE RECORD
*          DON'T OUTPUT A CHANGE RECORD
        IF (IPORT.EQ.99.OR.IPORT.EQ.98) GO TO 2678

*       ** SET THE DATA BASE TO HPORTS AND ADD A CHANGE RECORD

        CALL DBSET(2)

*       ** TURN ON SPECIAL 1022 ERROR HANDLING
        CALL DBERR($2682,IERT,IERC,0)
        ERRCNT=0

*       ** ADD THE RECORD
2680    CALL DBADD('BILL',IBILL,'NODE',INODE,'HOST',IHOST,
     +  'NHCODE',NHCOD,'NHDATE',INHDAT,'CITY',CITY,'STATE',ISTATE,
     +  'ZONE',ZONE,'PORT',IPORT,'PCODE',IPC,'PDATE',IPDAT,
     +  'TOC',ITOC)

*       ** SET DATA BASE BACK TO PORTS AND GO GET NEXT RECORD
        CALL DBSET(1)
        GO TO 2678

*       ** ADD WAS UNSUCCESSFUL.  CK IF USERS WANTS TO TRY AGAIN
2682    CALL ERRMS2(IERT,IERC,ERRCNT,ISTOP)
        IF (ISTOP.EQ.0) GO TO 2680

*       ** TIME TO STOP.
        CALL DBCLOS
        GO TO 9999

*       ** FINISHED WITH CHANGE RECORDS. CLOSE HPORTS

2683    CALL DBSET(2)
        CALL DBCLOS

*       ** GET RECORD SELECTION BACK AND MAKE CHANGES
        CALL DBEXEC('STARTREC')

        CALL DBERR($2690,IERT,IERC,0)
        ERRCNT=0
2685    CALL DBCHNG('NHCODE',NHCOD,'NHDAT',INHDAT,'NCITY',CITY,
     X  'NSTATE',ISTATE,'ZONE',IZONE)
        GO TO 2695

2690    CALL ERRMSG(IERT,IERC,ERRCNT,ISTOP)
        IF (ISTOP.EQ.0) GO TO 2685
        GO TO 105

2695    TYPE 2700,IREC
2700    FORMAT (5X,I4,' PORTS PROCESSED',/
     X,         5X,'REDECLARE COMPLETED')
        CALL ONINT($90)
        GO TO 105

***********************************************************************
*                                                                     *
*                         COMMAND: UPDATE                             *
*                                                                     *
*       THIS COMMAND ALLOWS UPDATING OF INDIVIDUAL FIELDS OF          *
*       INFORMATION ON A SPECIFIED NODE, HOST , OR PORT               *
*                                                                     *
***********************************************************************

*       ** UPDATING NODE, HOST, OR PORT?

3000    IF (IPART2.EQ.'NODE'.OR.IPART2.EQ.'NOD'.OR.IPART2.EQ.'NO'
     X.OR.IPART2.EQ.'N') GO TO 3050

        IF (IPART2.EQ.'HOST'.OR.IPART2.EQ.'HOS'.OR.IPART2.EQ.'HO'
     X.OR.IPART2.EQ.'H') GO TO 3200

        IF (IPART2.EQ.'PORT'.OR.IPART2.EQ.'POR'.OR.IPART2.EQ.'PO'
     X.OR.IPART2.EQ.'P') GO TO 3300

        TYPE 3010
3010    FORMAT (/,1X,'* NODE, HOST, OR PORT: ',$)
        ACCEPT 3015,IPART2
3015    FORMAT (A4)
        GO TO 3000

*       *****************************************
*       *                                       *
*       *        UPDATE NODE                    *
*       *                                       *
*       *****************************************


*       ** INPUT NODE NUMBER

3050    CALL INNODE(INODE,NHCOD,IBILL,CITY,ISTATE,IZONE,IPORT,IPC,ITYP
     X  ,IREC,IERR)
        IF (IERR.EQ.0) GO TO 3060
        IF (IERR.EQ.1) GO TO 3055
        IERR=0
        GO TO 3050

*       ** NODE DOES NOT EXIST

3055    TYPE 5517
        GO TO 105

*       ** GET ALL RECORDS FOR THIS NODE

3060    CALL DBFIND('NODE','EQ',INODE)

*       ** INPUT FIELD TO UPDATE

3065    TYPE 3070
3070    FORMAT (1X,'* UPDATE FIELD? (NAME,MACHINE,CITY,STATE): ',$)
        ACCEPT 3071,IFIELD
3071    FORMAT (A1)

*       ** BRANCH TO APPROPRIATE CODE ON IFIELD

        IF (IFIELD.EQ.'N') GO TO 3100
        IF (IFIELD.EQ.'M') GO TO 3140
        IF (IFIELD.EQ.'C') GO TO 3160
        IF (IFIELD.EQ.'S') GO TO 3180

        GO TO 3065

*       ** UPDATE NAME FIELD

3100    TYPE 1065
        ACCEPT 1070,(INAM(I),I=1,2)
        CALL INTDIS
        CALL DBERR($3115,IERT,IERC,0)
        ERRCNT=0
3110    CALL DBCHNG('NAME',INAM)
        GO TO 3117

3115    CALL ERRMSG(IERT,IERC,ERRCNT,ISTOP)
        IF (ISTOP.EQ.0) GO TO 3110
        GO TO 105

3117    CALL ONINT($90)
        GO TO 105

*       ** UPDATE MACHINE-TYPE FIELD

3140    CALL INMACH(IMACH,NUMMAC,MACH,MAXMAC,INODE)
        CALL INTDIS
        CALL DBERR($3150,IERT,IERC,0)
        ERRCNT=0
3145    CALL DBCHNG('MACHTYP',IMACH)
        CALL ONINT($90)
        GO TO 105

3150    CALL ERRMSG(IERT,IERC,ERRCNT,ISTOP)
        IF (ISTOP.EQ.0) GO TO 3145
        CALL ONINT($90)
        GO TO 105

*       ** UPDATE NODE-CITY FIELD

3160    CALL INCITY(CITY,NUMCIT,CITIES,MAXCIT)
        CALL INTDIS
        CALL DBERR($3170,IERT,IERC,0)
        ERRCNT=0
3165    CALL DBCHNG('NCITY',CITY)
        CALL ONINT($90)
        GO TO 105

3170    CALL ERRMSG(IERT,IERC,ERRCNT,ISTOP)
        IF (ISTOP.EQ.0) GO TO 3165
        CALL ONINT($90)
        GO TO 105

*       ** UPDATE NODE-STATE FIELD

3180    CALL DBGREC($3196)
        CALL DBVAL('NSTATE',IS2)
        CALL DBFIND('NODE','EQ',INODE)
        CALL INSTAT(ISTATE,NUMSTA,STAT,MAXSTA,NUMCTR,CTRY,MAXCTR,
     X  INTFLG)

*       ** FIND OUT IF NODE IS CURRENTLY INTERNATIONAL

        DO 3181 I=1,NUMCTR
        IF (IS2.EQ.CTRY(I)) GO TO 3182
3181    CONTINUE

*       ** NODE IS NOT INTERNATIONAL

        IS2FLG=0
        GO TO 3183

*       ** NODE IS INTERNATIONAL

3182    IS2FLG=1

*       ** DO NOT ALLOW USER TO CHANGE STATUS OF NODE FROM INTERNATIONAL
*          TO NON-INTERNATIONAL OR VISA VERSA.

3183    IF (INTFLG.EQ.IS2FLG) GO TO 3185

*       ** CHANGE CAN'T TAKE PLACE

        TYPE 3184
3184    FORMAT (5X,'CHANGE NOT MADE. YOU ARE ATTEMPTING TO CHANGE',/
     X          5X,'NODE FROM INTERNATIONAL TO NON-INTERNATIONAL',/
     X          5X,'OR VISA VERSA. YOU MUST DO THIS THROUGH THE',/
     X          5X,'REDECLARE COMMAND AS THIS REQUIRES A TIME',/
     X          5X,'ZONE CHANGE.')
        GO TO 105

3185    CALL INTDIS
        CALL DBERR($3195,IERT,IERC,0)
        ERRCNT=0
3190    CALL DBCHNG('NSTATE',ISTATE)
        CALL ONINT($90)
        GO TO 105

3195    CALL ERRMSG(IERT,IERC,ERRCNT,ISTOP)
        IF (ISTOP.EQ.0) GO TO 3190
        CALL ONINT($90)
        GO TO 105

3196    TYPE 3197
3197    FORMAT (5X,'THIS SHOULD NEVER HAVE HAPPENED!! CALL FOR HELP!!',
     X  /,5X,'ERROR #3196.')
        GO TO 9999






*       ******************************************
*       *                                        *
*       *            UPDATE HOST                 *
*       *                                        *
*       ******************************************

*       ** INPUT HOST NUMBER

3200    INODE=0
        CALL INHNUM(INODE,IHOST,NHCOD,IBILL,CITY,ISTATE,IZONE,IPORT,
     X  IPC,IREC,IERR)
        IF (IERR.EQ.0) GO TO 3230
        IF (IERR.EQ.1.OR.IERR.EQ.3) GO TO 3220
        IF (IERR.EQ.2) GO TO 105
        IERR=0
        GO TO 3200

*       ** HOST DOES NOT EXIST

3220    TYPE 3225
3225    FORMAT (5X,'HOST DOES NOT EXIST ON THIS NODE')
        IERR=0
        GO TO 105

*       ** GET ALL RECORDS FOR THIS HOST

3230    CALL DBFIND('NODE','EQ',INODE,'AND','HOST','EQ',IHOST)

*       ** INPUT FIELD TO UPDATE

3235    TYPE 3237
3237    FORMAT (1X,'* UPDATE FIELD? (CITY,STATE): ',$)
        ACCEPT 3240,IFIELD
3240    FORMAT (A1)

*       ** BRANCH TO APPROPRIATE CODE ON IFIELD

        IF (IFIELD.EQ.'C') GO TO 3250
        IF (IFIELD.EQ.'S') GO TO 3260

        GO TO 3235

*       ** UPDATE HOST-CITY FIELD

3250    CALL INCITY(CITY,NUMCIT,CITIES,MAXCIT)
        CALL INTDIS
        CALL DBERR($3257,IERT,IERC,0)
        ERRCNT=0
3255    CALL DBCHNG('NCITY',CITY)
        CALL ONINT($90)
        GO TO 105

3257    CALL ERRMSG(IERT,IERC,ERRCNT,ISTOP)
        IF (ISTOP.EQ.0) GO TO 3255
        GO TO 105

*       ** UPDATE HOST-STATE FIELD

3260    CALL DBGREC($3275)
        CALL DBVAL('NSTATE',IS2)
        CALL DBFIND('HOST','EQ',IHOST)
        CALL INSTAT(ISTATE,NUMSTA,STAT,MAXSTA,NUMCTR,CTRY,MAXCTR,
     X  INTFLG)
*       ** FIND OUT IF HOST IS CURRENTLY INTERNATIONAL

        DO 3261 I=1,NUMCTR
        IF (IS2.EQ.CTRY(I)) GO TO 3262
3261    CONTINUE

*       ** HOST IS NOT INTERNATIONAL

        IS2FLG=0
        GO TO 3263

*       ** HOST IS INTERNATIONAL

3262    IS2FLG=1

*       ** DO NOT ALLOW USER TO CHANGE STATUS OF HOST FROM INTERNATIONAL
*          TO NON-INTERNATIONAL OR VISA VERSA.

3263    IF (INTFLG.EQ.IS2FLG) GO TO 3265

*       ** CHANGE CAN'T TAKE PLACE

        TYPE 3264
3264    FORMAT (5X,'CHANGE NOT MADE. YOU ARE ATTEMPTING TO CHANGE',/
     X          5X,'HOST FROM INTERNATIONAL TO NON-INTERNATIONAL',/
     X          5X,'OR VISA VERSA. YOU MUST DO THIS THROUGH THE',/
     X          5X,'REDECLARE COMMAND AS THIS REQUIRES A TIME',/
     X          5X,'ZONE CHANGE.')
        GO TO 105

*       ** MAKE CHANGE

3265    CALL INTDIS
        CALL DBERR($3270,IERT,IERC,0)
        ERRCNT=0
3267    CALL DBCHNG('NSTATE',ISTATE)
        CALL ONINT($90)
        GO TO 105

3270    CALL ERRMSG(IERT,IERC,ERRCNT,ISTOP)
        IF (ISTOP.EQ.0) GO TO 3267
        GO TO 105

3275    TYPE 3280
3280    FORMAT (5X,'THIS SHOULD NEVER HAVE HAPPENED!! CALL FOR HELP!!',
     X  /,5X,'ERROR #3280.')
        GO TO 9999




*       ******************************************
*       *                                        *
*       *             UPDATE PORT                *
*       *                                        *
*       ******************************************


*       ** INIT SOME VARIABLES

3300    CHGFLG=0
        DO 3302 I=1,4
        IVALUE(I)=0
3302    CONTINUE

*       ** SET TYPE-OF-CHANGE FOR BILLING CHANGE RECORDS
        ITOC='UPD-P'


*       ** INPUT NODE NUMBER

3305    CALL INNODE(INODE,NHCOD,IBILL,CITY,ISTATE,IZONE,IPORT,IPC,ITYP
     X  ,IREC,IERR)
        IF (IERR.EQ.0) GO TO 3320
        IF (IERR.EQ.1) GO TO 3315
        IERR=0
        GO TO 105

*       ** NODE DOES NOT EXIST

3315    TYPE 3317
3317    FORMAT (5X,'NODE DOES NOT EXIST')
        GO TO 105

*       ** INPUT PORTS

3320    IPT1=1
        INDFLG=0
        ITPCNT=0
        ISTOP=0
        IMAXPT=256
        IOPT=1155

        CALL INPRT(IPT1,IOPT,IMAXPT,IPT2,ITPCNT,IPCNT,INDFLG,
     X  ISTOP)
        IF (ISTOP.NE.0) GO TO 105

*       ** INPUT FIELD TO UPDATE

3322    TYPE 3323
3323    FORMAT (/,1X,'* UPDATE FIELD? ( ? FOR HELP): ',$)
        ACCEPT 3325,IFIELD
3325    FORMAT (A3)

*       ** BRANCH TO APPROPRIATE CODE ON IFIELD

        IF (IFIELD.EQ.'?') GO TO 3328
        IF (IFIELD.EQ.'MOD'.OR.IFIELD.EQ.'MO'.OR.IFIELD.EQ.'M')
     X GO TO 3330
        IF (IFIELD.EQ.'PHO'.OR.IFIELD.EQ.'PH') GO TO 3340
        IF (IFIELD.EQ.'COM'.OR.IFIELD.EQ.'CO') GO TO 3350
        IF (IFIELD.EQ.'PCI') GO TO 3360
        IF (IFIELD.EQ.'PCO') GO TO 3370
        IF (IFIELD.EQ.'CUS'.OR.IFIELD.EQ.'CU') GO TO 3430
        IF (IFIELD.EQ.'HUN'.OR.IFIELD.EQ.'HU'.OR.IFIELD.EQ.'H') 
     X  GO TO 3460

*       ** IF RESPONSE = C.R. RETURN TO PORT PROMPT

        IF (IFIELD.EQ.' ') GO TO 3320

*       ** UNRECOGNIZABLE FIELD

        TYPE 3327
3327    FORMAT (5X,'??')
        GO TO 3322

*       ** HELP
3328    TYPE 3329
3329    FORMAT  (/,5X,'VALID FIELDS ARE:',/
     X           /,5X,'MODEM',
     X           /,5X,'PHONE',
     X           /,5X,'COMMENT',
     X           /,5X,'PCITY',
     X           /,5X,'PCODE',
     X           /,5X,'CUSTOMER',
     X           /,5X,'HUNT',/)
        GO TO 3322

*           *********************
*       ***** INPUT MODEM FIELD *****
*           *********************

3330    CALL DBINFO('MODEM',INFO)
        IATT=INFO(7)
        IOPT='MOD'

*       ** IF NOT IN INDIVIDUAL RECORD MODE STAY HERE.

        IF (INDFLG.NE.0) GO TO 3335
        CALL INREST(INDFLG,IPORT,MODM,MAXMOD,NUMMOD,PCOD,MAXPC,
     X  NUMPC,IOPT,IMODM,IPCOD,ICTY,ICUST)

*       ** PLACE NEW VALUE INTO IVALUE ARRAY

        IVALUE(1)=IMODM

*       ** GO UPDATE RECORDS

        GO TO 3380


*       ** IN INDIVIDUAL RECORD MODE. INPUT A DIFFERENT VALUE FOR
*          EACH PORT.

3335    DO 3336 I=1,ITPCNT
        IPORT=PORTS(I,1)
        CALL INREST(INDFLG,IPORT,MODM,MAXMOD,NUMMOD,PCOD,MAXPC,
     X  NUMPC,IOPT,IMODM,IPCOD,ICTY,ICUST)
        PORTS(I,2)=IMODM
3336    CONTINUE

*       ** GO UPDATE RECORDS

        GO TO 3380



*           *********************
*       ***** INPUT PHONE FIELD *****
*           *********************

3340    CALL DBINFO('PHONE',INFO)
        IATT=INFO(7)
        IHWFLG=0

*       ** IF NOT IN INDIVIDUAL RECORD MODE STAY HERE

        IF (INDFLG.NE.0) GO TO 3346

3341    TYPE 3342
3342    FORMAT (1X,'* PHONE: ',$)
        ACCEPT 3343,(IVALUE(I),I=1,3)
3343    FORMAT (3A5)

*       ** CHECK IF PHONE = H/W IF SO SET H/W FLAG

        IF (IVALUE(1).NE.'H/W') GO TO 3344
        IHWFLG=1
        GO TO 3345

*       ** CHECK VALIDITY

3344    CALL CKFON(IVALUE,IERR)
        IF (IERR.NE.0) GO TO 3341

3345    IVALUE(4)='     '

*       ** GO UPDATE RECORDS

        GO TO 3380


*       ** IN INDIVIDUAL RECORD MODE. GET DIFFERENT VALUE FOR EACH
*          PHONE

3346    DO 5534 I=1,ITPCNT
3347    PORTS(I,9)=0
        TYPE 3348,PORTS(I,1)
3348    FORMAT (1X,'* PORT ',I3,'  PHONE: ',$)
        ACCEPT 3343,(IVALUE(J),J=1,3)

*       ** IF PHONE = H/W SET H/W FLAG

        IF (IVALUE(1).NE.'H/W') GO TO 3349
        PORTS(I,9)=1
        GO TO 5532

*       ** CHECK VALIDITY

3349    CALL CKFON(IVALUE,IERR)
        IF (IERR.NE.0) GO TO 3347

*       ** PUT PHONE NUMBER INTO ARRAY: PORTS

5532    PORTS(I,2)=IVALUE(1)
        PORTS(I,3)=IVALUE(2)
        PORTS(I,4)=IVALUE(3)
        PORTS(I,5)='     '

5534    CONTINUE

*       ** GO UPDATE RECORDS

        GO TO 3380


*           ***********************
*       ***** INPUT COMMENT FIELD *****
*           ***********************

3350    CALL DBINFO('COMMENT',INFO)
        IATT=INFO(7)

*       ** IF NOT IN INDIVIDUAL RECORD MODE STAY HERE

        IF (INDFLG.NE.0) GO TO 5540

        TYPE 5530
5530    FORMAT  (1X,'* COMMENT (MAX. 16 CHARS.): ',$)
        ACCEPT 5535,(IVALUE(I),I=1,4)
5535    FORMAT  (3A5,A1)

*       ** GO UPDATE RECORDS

        GO TO 3380

*       ** IN INDIVIDUAL RECORD MODE. INPUT A DIFFERENT VALUE FOR
*          EACH PORT.

5540    DO 5545 I=1,ITPCNT
        IPORT=PORTS(I,1)
        TYPE 5544,IPORT
5544    FORMAT (1X,'* PORT ',I3,' COMMENT (MAX 16 CHARS.): ',$)
        ACCEPT 5535,(PORTS(I,J),J=2,5)
5545    CONTINUE

*       ** GO UPDATE RECORDS

        GO TO 3380


*           *************************
*       ***** INPUT PORT-CITY FIELD *****
*           *************************

3360    CALL DBINFO('PCITY',INFO)
        IATT=INFO(7)
        IOPT='PCI'

*       ** IF NOT IN INDIVIDUAL RECORD MODE STAY HERE

        IF (INDFLG.NE.0) GO TO 3365

        CALL INREST(INDFLG,IPORT,MODM,MAXMOD,NUMMOD,PCOD,MAXPC,
     X  NUMPC,IOPT,IMODM,IPCOD,ICTY,ICUST)
        IVALUE(1)=ICTY(1)
        IVALUE(2)=ICTY(2)

*       ** GO UPDATE RECORDS

        GO TO 3380

*       ** IN INDIVIDUAL RECORD MODE. INPUT DIFFEREND VALUES FOR EACH
*          PORT.

3365    DO 3366 I=1,ITPCNT
        IPORT=PORTS(I,1)
        CALL INREST(INDFLG,IPORT,MODM,MAXMOD,NUMMOD,PCOD,MAXPC,
     X  NUMPC,IOPT,IMODM,IPCOD,ICTY,ICUST)
        PORTS(I,2)=ICTY(1)
        PORTS(I,3)=ICTY(2)
3366    CONTINUE

*       ** GO UPDATE RECORDS

        GO TO 3380


*            ***********************
*       ***** INPUT PORT-CODE FIELD *****
*           *************************

3370    CALL DBINFO('PCODE',INFO)
        IATT=INFO(7)
        CHGFLG=1
        IOPT='PCO'
        NREC='CP'

*       ** IF NOT IN INDIVIDUAL RECORD MODE STAY HERE

        IF (INDFLG.NE.0) GO TO 3375

        CALL INREST(INDFLG,IPORT,MODM,MAXMOD,NUMMOD,PCOD,MAXPC,
     X  NUMPC,IOPT,IMODM,IPCOD,ICTY,ICUST)
        IVALUE(1)=IPCOD

*       ** INPUT EFFECTIVE DATE

        CALL INDAT(INDFLG,IPORT,IPDAT)

*       ** GO UPDATE RECORDS

        GO TO 3380


*       ** IN INDIVIDUAL RECORD MODE. INPUT A DIFFERENT VALUE FOR
*          EACH PORT

3375    DO 3376 I=1,ITPCNT
        IPORT=PORTS(I,1)
        CALL INREST(INDFLG,IPORT,MODM,MAXMOD,NUMMOD,PCOD,MAXPC,
     X  NUMPC,IOPT,IMODM,IPCOD,ICTY,ICUST)
        PORTS(I,2)=IPCOD
        PORTS(I,6)=ICTY(1)
        PORTS(I,7)=ICTY(2)
        PORTS(I,10)=ICUST(1)
        PORTS(I,11)=ICUST(2)

*       ** INPUT EFFECTIVE DATE

        CALL INDAT(INDFLG,IPORT,PORTS(I,9))

3376    CONTINUE



*       ** GO UPDATE RECORDS

        GO TO 3380


*           ************************
*       ***** INPUT CUSTOMER FIELD *****
*           ************************

3430    CALL DBINFO('CUSTOMER',INFO)
        IATT=INFO(7)
        IOPT='CUS'

*       ** IF NOT IN INDIVIDUAL RECORD MODE STAY HERE.

3432    IF (INDFLG.NE.0) GO TO 3437

        TYPE 3434
3434    FORMAT (1X,'* CUSTOMER (MAX. 10 CHARS): ',$)
        ACCEPT 3435,(IVALUE(I),I=1,2)
3435    FORMAT(2A5)

*       ** GO UPDATE RECORDS
        GO TO 3380

*       ** IN INDIVIDUAL RECORD MODE. GET DIFFERENT
*          VALUE OF EACH PORT

3437    DO 3440 I=1,ITPCNT
        TYPE 3439,PORTS(I,1)
3439    FORMAT (1X,'* PORT ',I3,' CUSTOMER (MAX. 10): ',$)
        ACCEPT 3435,(PORTS(I,J),J=2,3)
3440    CONTINUE

*       ** GO UPDATE RECORDS
        GO TO 3380

*           ********************
*       ***** INPUT HUNT FIELD *****
*           ********************

3460    CALL DBINFO('HUNT',INFO)
        IATT=INFO(7)
        IOPT='HUN'

*       ** IF NOT IN INDIVIDUAL RECORD MODE STAY HERE.

3462    IF (INDFLG.NE.0) GO TO 3467

        TYPE 3464
3464    FORMAT (1X,'* HUNT SEQ. #? ',$)
        ACCEPT 3465,IVALUE(1)
3465    FORMAT(I)

*       ** GO UPDATE RECORDS
        GO TO 3380

*       ** IN INDIVIDUAL RECORD MODE. GET DIFFERENT
*          VALUE OF EACH PORT

3467    DO 3470 I=1,ITPCNT
        TYPE 3469,PORTS(I,1)
3469    FORMAT (1X,'* PORT ',I3,' HUNT SEQ. # ? ',$)
        ACCEPT 3465,PORTS(I,2)
3470    CONTINUE

*       ** GO UPDATE RECORDS
        GO TO 3380

*       ** UPDATE RECORDS

*       ** IF UPDATING PORT CODE FIELD MUST OUTPUT CHANGE RECORD.
*          OPEN JOBFLE.

3380    IF (CHGFLG.EQ.0) GO TO 3385
        OPEN (3,JOBFLE,RANDIO)
        IPOS=SIZE(3)+2

*       ** OPEN HPORTS FOR BILLING CHANGE RECORDS
        CALL DBOPEN('NOCLOSE','(ACCG1)HPORTS','PASSWORD',IPASS)
        CALL DBSET(1)

*       ** UPDATE FIELDS

3385    DO 3390 I=1,ITPCNT
        CALL DBFIND('NODE','EQ',INODE,'AND','PORT','EQ',PORTS(I,1))

*       ** IF INDFLG IS SET PLACE NEW VALUE OF ATTRIBUTE INTO
*          ARRAY: VALUE

        IF (INDFLG.EQ.0) GO TO 3382
        DO 3381 J=1,4
        IVALUE(J)=PORTS(I,J+1)
3381    CONTINUE

3382    CALL INTDIS
        CALL DBGREC($3388)

*       ** GET N/H EFFECTIVE DATE, PORT CODE, AND HOST FOR HPORTS
*          CHANGE RECORDS.  GET MODEM FOR A LATER CHECK
        CALL DBVAL('NHDAT',INHDAT,'PCODE',IPC,'HOST',IHOST,'MODEM',
     +  IMODM)

*       ** TURN ON SPECIAL 1022 ERROR HANDLING
        CALL DBERR($3395,IERT,IERC,0)
        ERRCNT=0

*       ** CK IF UPDATING PHONE FIELD AND IF SO THEN IF PHONE = H/W

        IF (IFIELD.NE.'PHO'.AND.IFIELD.NE.'PH') GO TO 3386
        IF (INDFLG.EQ.0.AND.IHWFLG.NE.0) GO TO 3383
        IF (INDFLG.NE.0.AND.PORTS(I,9).NE.0) GO TO 3383

*       ** EITHER NOT PHONE FIELD OR PHONE IS NOT H/W. GO MAKE CHANGE

        GO TO 3386

*       ** PHONE IS H/W. IF PORT CODE = 1 OR 6 AND MODEM = H/W,
*          GO AHEAD AND MAKE THE CHANGE

3383    IF ((IPC.EQ.1.OR.IPC.EQ.6).AND.(IMODM.EQ.'H/W')) GO TO 3386

*       ** TYPE ERROR MESSAGE

        TYPE 3384,PORTS(I,1),IPC,IMODM
3384    FORMAT (5X,'PORT ',I3,' DOES NOT MEET NECESSARY CONDITIONS',/
     X          5X,'TO ALLOW THIS CHANGE.',/
     X          5X,'PCODE = ',I2,5X,'MODEM = ',A5,/)

*       ** GO PROCESS NEXT PORT

        GO TO 3390

*       ** CHANGE FIELD IN PORTS DATA BASE

3386    CALL DBCHNG(IATT,IVALUE)

*       ** IF WEREN'T UPDATING PORT CODE FIELD WE'RE FINISHED WITH THIS
*          PORT

        IF (CHGFLG.EQ.0) GO TO 3390

*       ** NOW SET DATA BASE TO HPORTS AND OUTPUT CHANGE
*          RECORD.

        CALL DBSET(2)

*       ** IF PORT IS PART OF A DECLARE OR REDECLARE RECORD, DON'T
*          OUTPUT CHANGE RECORD
        IF (PORTS(I,1).EQ.99.OR.PORTS(I,1).EQ.98) GO TO 3390

*       ** IF IN INDIVIDUAL RECORD MODE NEED TO SET PORT EFFECTIVE  DATE
        IF (INDFLG.NE.0) IPDAT=PORTS(I,9)


*       ** TURN ON SPECIAL 1022 ERROR HANDLING
        CALL DBERR($3452,IERT,IERC,0)
        ERRCNT=0

*       ** ADD THE RECORD
3450    CALL DBADD('BILL',IBILL,'NODE',INODE,'HOST',IHOST,'NHCODE',
     +  NHCOD,'NHDATE',INHDAT,'CITY',CITY,'STATE',ISTATE,
     +  'ZONE',IZONE,'PORT',PORTS(I,1),'PCODE',IVALUE(1),
     +  'PDATE',IPDAT,'TOC',ITOC)

*       ** SET DATA BASE BACK TO 'PORTS' AND GO PROCESS NEXT RECORD
        CALL DBSET(1)
        GO TO 3396

*       ** HERE ON ERROR WHILE WRITTING TO HPORTS
3452    CALL ERRMS2(IERT,IERC,ERRCNT,ISTOP)
        IF (ISTOP.EQ.0) GO TO 3450

*       ** TIME TO STOP.
        CALL DBCLOS
        GO TO 9999

*       ** HERE ON ERROR WHILE WRITTING TO PORTS DATA BASE
3395    CALL ERRMSG(IERT,IERC,ERRCNT,ISTOP)
        IF (ISTOP.EQ.0) GO TO 3386
        CALL ONINT($90)
        IF (CHGFLG.NE.0) CLOSE(3)
        GO TO 105

*       ** IF IN INDIVIDUAL RECORD MODE PUT PORT CITY INTO ARRAY:
*          ICTY AND EFFECTIVE DATE INTO VARIABLE: IPDAT

3396    IF (INDFLG.EQ.0) GO TO 3397
        ICTY(1)=PORTS(I,6)
        ICTY(2)=PORTS(I,7)
        IPDAT=PORTS(I,9)
        ICUST(1)=PORTS(I,10)
        ICUST(2)=PORTS(I,11)


*       ** OUTPUT CHANGE RECORD

3397    WRITE (3#IPOS,3387)NREC,INODE,PORTS(I,1),IVALUE(1),IPDAT
3387    FORMAT (A2,',',I5,',',I3,',',I2,',',I6)
        IPOS=IPOS+24

*       ** CHANGE PORT EFFECTIVE DATE AND PORT CITY

        CALL DBERR($3405,IERT,IERC,0)
        ERRCNT=0
3400    CALL DBCHNG('PDAT',IPDAT,'PCITY',ICTY,'CUST',ICUST)
        GO TO 3410

3405    CALL ERRMSG(IERT,IERC,ERRCNT,ISTOP)
        IF (ISTOP.EQ.0) GO TO 3400
        CALL ONINT($90)
        GO TO 105

*       ** IF CHANGING PORT TO 'UNUSED', SET MODEM AND PHONE TO'--'

3410    IF (IVALUE(1).NE.8) GO TO 3390
        CALL DBERR($3420,IERT,IERC,0)
        ERRCNT=0
3415    CALL DBCHNG('MODEM','--','PHONE','--','HUNT',0,'PILOT',' ',
     +              'COMMENT',' ','PCITY',' ','CUSTOMER',' ')
        GO TO 3390

3420    CALL ERRMSG(IERT,IERC,ERRCNT,ISTOP)
        IF (ISTOP.EQ.0) GO TO 3415
        CALL ONINT($90)
        GO TO 105

*       ** NO PORT

3388    TYPE 3389,PORTS(I,1)
3389    FORMAT (5X,'NO PORT: ',I4)

3390    CONTINUE

*       ** FINISHED. IF UPDATED THE PORT CODE FIELD CLOSE THE CHANGE
*          RECORD FILE AND THE HPORTS DATA BASE.

        IF (CHGFLG.EQ.0) GO TO 3398
        CLOSE(3)
        CALL DBSET(2)
        CALL DBCLOS
        CHGFLG=0

*       ** TURN BACK ON INTERRUPTS AND GO BACK TO THE FIELD PROMPT.
3398    CALL ONINT($90)
        GO TO 3322


***********************************************************************
*                                                                     *
*                         COMMAND: INCREASE                           *
*                                                                     *
*       THIS COMMAND ADDS A PORT OR PORTS TO A NODE OR HOST. IF       *
*       ADDING PORTS TO A NODE THE NODE MUST HAVE ALREADY BEEN        *
*       REDECLARED AS AN UPGRADE BY DATA BASE ADMINISTRATOR.          *
*                                                                     *
***********************************************************************

3500    IF (IPART2.EQ.'NODE'.OR.IPART2.EQ.'NOD'.OR.IPART2.EQ.'NO'
     X  .OR.IPART2.EQ.'N') GO TO 3520
        IF (IPART2.EQ.'HOST'.OR.IPART2.EQ.'HOS'.OR.IPART2.EQ.'HO'
     X  .OR.IPART2.EQ.'H') GO TO 3700

        TYPE 3505
3505    FORMAT (1X,'* NODE OR HOST? ',$)
        ACCEPT 3506,IPART2
3506    FORMAT (A5)
        GO TO 3500


*       ******************************************
*       *                                        *
*       *           INCREASE NODE                *
*       *                                        *
*       ******************************************

*       ** INPUT NODE NUMBER

3520    CALL INNODE(INODE,NHCOD,IBILL,CITY,ISTATE,IZONE,IPORT,IPC,ITYP
     X  ,IREC,IERR)
        IF (IERR.EQ.0) GO TO 3530
        IF (IERR.EQ.1) GO TO 3525
        IERR=0
        GO TO 3520

*       ** NODE NOT IN DATA BASE

3525    TYPE 5517
5517    FORMAT (5X,'NODE DOES NOT EXIST')
        GO TO 105

*       ** IF NODE IS ISIS CAN'T INCREASE

3530    IF (ITYP.NE.'ISI') GO TO 3540
        TYPE 3535
3535    FORMAT (5X,'CAN NOT INCREASE AN ENTIRE ISIS NODE.',/
     X,         5X,'USE INCREASE-HOST COMMAND FOR EACH',/
     X,         5X,'HOST ON THIS NODE.')

        GO TO 105


*       ** CHECK FOR PORT = 98.  THIS INDICATES THAT THE NODE HAS BEEN
*          REDECLARED FOR UPGRADE

3540    IDPORT=98
        CALL DBFIND('NODE','EQ',INODE,'AND','PORT','EQ',IDPORT)
        CALL DBGREC($3550)
        CALL DBVAL('NAME',INAM,'NCITY',CITY,'NSTATE',ISTATE,'NHCODE'
     X  ,NHCOD,'NTYPE',NTYP,'MACHTYP',IMACH,'NHDAT',INHDAT)
        GO TO 3558

*       ** NODE HASN'T BEEN REDECLARED FOR UPGRADE

3550    TYPE 3555
3555    FORMAT (5X,'NODE HAS NOT BEEN REDECLARED FOR',/
     X          5X,'AN UPGRADE. CALL DATA BASE ADMINISTRATOR.')
        GO TO 105

*       ** SET TYPE-OF-CHANGE FOR BILLING CHANGES
3558    ITOC='INC-N'

*       ** SINCE THIS IS NOT AN ISIS NODE , THERE IS NO ORIGHOST.
*          ZERO OUT THE ORIGHOST VARIABLE.

        IHOST=0

*       ** FIND MAX NUMBER OF PORTS FOR THIS NODE TYPE

        CALL PRTNUM(NTYP,IMAXPT,NUMTYP,TYPE,MAXTYP,IERR)
        IF (IERR.NE.0) GO TO 105

*       ** INPUT EFFECTIVE DATE

        INDFLG=0
        CALL INDAT(INDFLG,IPORT,IPDAT)

*       ** INIT ARRAY: PORTS AND SOME VARIABLES

3560    DO 3563 I=1,256
        DO 3562 J=1,8
        IF (J.NE.1) GO TO 3566
        PORTS(I,J)=-1
        GO TO 3562

3566    IF (J.GE.4) GO TO 3561
        PORTS(I,J)=0
        GO TO 3562
3561    PORTS(I,J)='     '
3562    CONTINUE
3563    CONTINUE
*       ** GET PORTS ALREADY ON THIS NODE

        CALL DBFIND('NODE','EQ',INODE)
        CALL GETPRT(INCRSE)


        IPT1=INCRSE+1
        ISTOP=0
        ITPCNT=INCRSE

*       ** INPUT 1ST SET OF PORTS

3565    IOPT=1155
        CALL INPRT(IPT1,IOPT,IMAXPT,IPT2,ITPCNT,IPCNT,INDFLG,
     X  ISTOP)

*       ** CHECK IF MAX NUM. OF PORTS HAS BEEN EXCEEDED

        IF (ITPCNT.LT.IMAXPT) GO TO 3575
        IF (ITPCNT.EQ.IMAXPT) GO TO 3580

*       ** MAX HAS BEEN EXCEEDED

        TYPE 3570,ITPCNT,IMAXPT
3570    FORMAT (5X,'ERROR!! ',I4,' PORTS HAVE BEEN ENTERED',/
     X          12X,'ONLY ',I4,' ARE REQUIRED.',/
     X          12X,'REENTER LAST SET OF PORTS')

*       ** ZERO OUT PORT NUMBER IN PORTS ARRAY FOR LAST SET.

        DO 3572 I=IPT1,IPT2
        PORTS(I,1)=-1
3572    CONTINUE

*       ** ADJUST TOTAL PORT COUNT

        ITPCNT=ITPCNT-IPCNT
        GO TO 3565

*       ** CHECK IF TIME TO STOP. IF NOT GO INPUT ANOTHER SET OF 
*          PORTS.

3575    IF (ISTOP.NE.0) GO TO 3577

        CALL SETPRT(IPT1,IPT2,MODM,MAXMOD,NUMMOD,PCOD,MAXPC,NUMPC,IHOST)
        GO TO 3565

*       ** CHECK IF HAVE ENOUGH PORTS

3577    IF (ITPCNT.NE.IMAXPT) GO TO 3582

*       ** GET INFO FOR LAST SET OF PORTS AND GO ADD ALL PORTS TO 
*          DATA BASE.

3580    CALL SETPRT(IPT1,IPT2,MODM,MAXMOD,NUMMOD,PCOD,MAXPC,NUMPC,IHOST)

        CALL INTDIS
        ISTART=INCRSE+1
        CALL ADDPRT(JOBFLE,ISTART,ITPCNT,IERR)
        IF (IERR.EQ.1.OR.IERR.EQ.-1) GO TO 9999
        IF (IERR.EQ.2) GO TO 105

*       ** GET REDECLARE RECORD FOR THIS NODE AND DELETE IT

        CALL DBFIND('NODE','EQ',INODE,'AND','PORT','EQ',98)
        CALL DBERR($3595,IERT,IERC,0)
        ERRCNT=0
3590    CALL DBDEL
        CALL ONINT($90)
        GO TO 105

3595    CALL ERRMSG(IERT,IERC,ERRCNT,ISTOP)
        IF (ISTOP.EQ.0) GO TO 3590
        CALL ONINT($90)
        GO TO 105

*       ** ERROR - NOT ENOUGH PORTS

3582    TYPE 3585,IMAXPT,ITPCNT
3585    FORMAT (5X,'ERROR!! NODE REQUIRES ',I4,' PORTS',
     X        /,5X,'ONLY ',I4,' HAVE BEEN ENTERED. IF YOU',
     X        /,5X,'STOP NOW YOU WILL LOSE ALL PORTS ENTERED.',/
     X        /,5X,'PORTS ENTERED SO FAR ARE:',/)
        TYPE 3586,(PORTS(I,1),I=1,ITPCNT)
3586    FORMAT (10(2X,I3))
        ISTOP=0
        GO TO 3565



*       ******************************************
*       *                                        *
*       *             INCREASE HOST              *
*       *                                        *
*       ******************************************

*       ** INPUT EFFECTIVE DATE

3700    INDFLG=0
        CALL INDAT(INDFLG,IPORT,IPDAT)

*       ** INPUT HOST NUMBER

        INODE=0
        CALL INHNUM(INODE,IHOST,NHCOD,IBILL,CITY,ISTATE,IZONE,IPORT,
     X  IPC,IREC,IERR)
        IF (IERR.EQ.0) GO TO 3707
        IF (IERR.EQ.1.OR.IERR.EQ.3) GO TO 3705
        IF (IERR.EQ.2) GO TO 105
        IERR=0
        GO TO 3700

*       ** HOST DOESN'T EXIST

3705    TYPE 3225
        GO TO 105

*       ** IF HOST IS AN INTERFACE CAN'T ADD PORTS

3707    IF (IPORT.NE.88) GO TO 3710
        TYPE 3708
3708    FORMAT (5X,'HOST IS AN INTERFACE.  NO PORTS MAY BE ADDED.')
        GO TO 105

*       ** IF HOST IS A SNI, CAN'T ADD PORTS

3710    IF (IPORT.NE.89) GO TO 3714
        TYPE 3711
3711    FORMAT (5X,'HOST IS A SNI.  NO PORTS MAY BE ADDED.')
        GO TO 105

*       ** CK IF HOST HAS BEEN ADDED

3714    IF (IPORT.NE.99) GO TO 3720
        TYPE 3715
3715    FORMAT (5X,'HOST HAS NO PORTS. USE ADD HOST COMMAND',/)
        GO TO 105

*       ** SET TYPE-OF-CHANGE FOR BILLING CHANGE RECORDS
3720    ITOC='INC-H'

*       ** GET ADDITIONAL HOST INFORMATION

        CALL DBVAL('NHDAT',INHDAT,'NAME',INAM,'NTYPE',NTYP,'MACHTYP'
     X  ,IMACH)

*       ** INIT ARRAY: PORTS AND SOME VARIABLES

3760    DO 3763 I=1,256
        DO 3762 J=1,8
        IF (J.NE.1) GO TO 3766
        PORTS(I,J)=-1
        GO TO 3762

3766    IF (J.GE.4) GO TO 3761
        PORTS(I,J)=0
        GO TO 3762
3761    PORTS(I,J)='     '
3762    CONTINUE
3763    CONTINUE


        IPT1=1
        ISTOP=0
        ITPCNT=0
        IMAXPT=256

*       ** INPUT PORTS

        IOPT2='I'
        IOPT='H'

        CALL INHOST(IHOST,IHFLAG,MODM,MAXMOD,NUMMOD,PCOD,MAXPC,
     X  NUMPC,ITPCNT,IOPT,IOPT2,IMAXPT,IERR)
        IF (IERR.EQ.0) GO TO 3750
        GO TO 105

*       ** ADD PORTS TO DATA BASE

3750    CALL INTDIS
        ISTART=1
        CALL ADDPRT(JOBFLE,ISTART,ITPCNT,IERR)
        CALL ONINT($90)
        IF (IERR.EQ.1.OR.IERR.EQ.-1) GO TO 9999
        GO TO 105

***********************************************************************
*                                                                     *
*                         COMMAND: SWAP                               *
*                                                                     *
*       THIS COMMAND ALLOWS THE USER TO SWAP ALL PORT INFORMATION     *
*       ON ANY TWO PORTS OR GROUPS OF PORTS ON A SPECIFIED NODE.  ALL *
*       PORTS IN BOTH GROUPS MUST BE ASSOCIATED WITH THE SAME HOST.   *
*                                                                     *
***********************************************************************

*       ** INPUT NODE NUMBER

4000    CALL INNODE(INODE,NHCOD,IBILL,CITY,ISTATE,IZONE,IPORT,IPC,ITYP
     X  ,IREC,IERR)
        IF (IERR.EQ.0) GO TO 4025
        IF (IERR.EQ.1) GO TO 4015
        GO TO 4000

*       ** NODE DOES NOT EXIST

4015    TYPE 5517
        GO TO 105

*       ** SET TYPE-OF-CHANGE FOR BILLING CHANGES

4025    ITOC='SWAP '

*       ** INPUT EFFECTIVE DATE

        INDFLG=0
        CALL INDAT(INDFLG,IPORT,IPDAT)

*       ** INIT ARRAY: PORTS

4030    CALL INIT(IERR)

        IPT1=1
        ISTOP=0
        ITPCNT=0
        IMAXPT=256

*       ** INPUT 1ST SET OF PORTS

        IOPT=1157
        CALL INPRT(IPT1,IOPT,IMAXPT,IPT2,ITPCNT,IPCNT,INDFLG,
     X  ISTOP)

*       ** CHECK THAT ALL PORTS EXIST AND ARE ASSOCIATED WITH THE
*          SAME HOST.

        CALL CKHST(INODE,ITPCNT,CURHST,IERR)
        IF (IERR.NE.0) GO TO 4030

*       ** MOVE PORT NUMBERS TO ARRAY: SWAP

4100    IEND1=ITPCNT
        IH1=CURHST

        DO 4200 I=1,IEND1
        SWAP(I)=PORTS(I,1)
4200    CONTINUE

*       ** RE-INIT ARRAY: PORTS

4204    CALL INIT(IERR)

        IPT1=1
        ISTOP=0
        ITPCNT=0
        IMAXPT=256

*       ** INPUT 2ND SET OF PORTS

        IOPT=1158
        CALL INPRT(IPT1,IOPT,IMAXPT,IPT2,ITPCNT,IPCNT,INDFLG,
     X  ISTOP)

*       ** CHECK THAT ALL PORTS EXIST AND ARE ASSOCATED  WITH
*          SAME HOST.

        CALL CKHST(INODE,ITPCNT,CURHST,IERR)
        IF (IERR.NE.0) GO TO 4204

*       **NUMBER OF PORTS IN GROUP 1 AND GROUP 2 MUST BE EQUAL

        IEND2=ITPCNT
        IH2=CURHST
        IF (IEND1.EQ.IEND2) GO TO 4206
        TYPE 4205
4205    FORMAT (5X,'ERROR!! BOTH PORT GROUPS MUST CONTAIN THE',/
     X,         5X,'SAME NUMBER OF PORTS - REENTER.')
        GO TO 4030

*       ** HOST OF PORTS IN GROUPS 1 AND 2 MUST BE THE SAME

4206    IF (IH1.EQ.IH2) GO TO 4210
        TYPE 4208
4208    FORMAT (5X,'ERROR! ALL PORTS ENVOLVED IN THE SWAP',/,
     X          5X,'MUST BE ASSOCIATED WITH THE SAME HOST.')
        GO TO 4030

*       ** CHECK THAT NO PORT IS IN BOTHPORT GROUPS

4210    DO 4220 I=1,IEND1
        DO 4215 J=1,IEND2
        IF (SWAP(I).EQ.PORTS(J,1)) GO TO 4225
4215    CONTINUE
4220    CONTINUE

        GO TO 4230

*       ** DUPLICATE PORTS

4225    TYPE 4226,SWAP(I)
4226    FORMAT (5X,'PORT ',I3,' IS IN BOTH GROUPS.',/
     X          5X,'THAT IS A NO-NO. REENTER.')
        GO TO 4030

*       ** OPEN JOBFLE

4230    OPEN (3,JOBFLE,RANDIO)
        IPOS=SIZE(3)+2
        NREC='CP'

*       ** OPEN HPORTS DATA BASE

        CALL DBOPEN ('NOCLOSE','(ACCG1)HPORTS','PASSWORD',IPASS)
        CALL DBSET(1)

*       ** SWAP EACH PORT **

        CALL INTDIS
        DO 4300 I=1,IEND1

*       ** GET PORT INFORMATION ON PORT FROM GROUP 1

        CALL DBFIND('NODE','EQ',INODE,'AND','PORT','EQ',SWAP(I))
        CALL DBGREC($4235)
        CALL DBVAL('PCODE',IPC,'MODEM',IMODM,'PHONE',IPHON,'COMMENT'
     X  ,COMENT,'PCITY',ICITY,'HOST',IHOST,'NHDAT',INHDAT,'CUST'
     X  ,ICUST,'PILOT',PILOT,'HUNT',IHUNT)
        GO TO 4240

*       ** NO PORT FOUND

4235    TYPE 4237,SWAP(I)
4237    FORMAT (5X,'PORT ',I3,' NOT IN DATA BASE')

*       ** CLOSE JOB FILE AND HPORTS DATA BASE
        CLOSE(3)
        CALL DBSET(2)
        CALL DBCLOS
        GO TO 105

*       ** GET PORT INFO ON PORT FROM GROUP 2

4240    CALL DBFIND('NODE','EQ',INODE,'AND','PORT','EQ',PORTS(I,1))
        CALL DBGREC($4245)
        CALL DBVAL('PCODE',IPC2,'MODEM',IMODM2,'PHONE',IPHON2,'COMMENT'
     X  ,COM2,'PCITY',ICITY2,'CUST',ICUST2,'PILOT',PILOT2,'HUNT',
     X   IHUNT2)
        GO TO 4250

*       ** NO PORT FOUND

4245    TYPE 4237,PORTS(I,1)

*       ** CLOSE JOB FILE AND HPORTS DATA BASE
        CLOSE(3)
        CALL DBSET(2)
        CALL DBCLOS
        GO TO 105

*       ** GET PORT FROM GROUP 1 BACK AGAIN

4250    CALL DBFIND('NODE','EQ',INODE,'AND','PORT','EQ',SWAP(I))
        CALL DBGREC($4235)
        CALL DBERR($4275,IERT,IERC,0)
        ERRCNT=0
4251    CALL DBCHNG('MODEM',IMODM2,'PCODE',IPC2,
     X  'COMMENT',COM2,'PCITY',ICITY2,'PHONE',IPHON2,'PDAT',IPDAT,
     X  'CUST',ICUST2,'PILOT',PILOT2,'HUNT',IHUNT2)
        GO TO 4280

4275    CALL ERRMSG(IERT,IERC,ERRCNT,ISTOP)
        IF (ISTOP.EQ.0) GO TO 4251
        CLOSE(3)
        GO TO 105


*       ** CK IF NEED TO WRITE CHANGE-PORT RECORD TO JOBFLE

4280    IF (IPC1.EQ.IPC2) GO TO 4255
        WRITE(3#IPOS,4252)NREC,INODE,SWAP(I),IPC2,IPDAT
4252    FORMAT (A2,',',I5,',',I3,',',I2,',',I6)
        IPOS=IPOS+24

*       ** ADD CHANGE RECORD TO HPORTS
        CALL DBSET(2)

*       ** TURN ON SPECIAL  1022 ERROR HANDLING
        CALL DBERR($4254,IERT,IERC,0)
        ERRCNT=O

*       ** ADD THE RECORD
4253    CALL DBADD('BILL',IBILL,'NODE',INODE,'HOST',IHOST,'NHCODE',
     +  NHCOD,'NHDATE',INHDAT,'CITY',CITY,'STATE',ISTATE,'ZONE',IZONE,
     +  'PORT',SWAP(I),'PCODE',IPC2,'PDATE',IPDAT,'TOC',ITOC)

*       ** ADD WAS SUCCESSFUL. SET DATA BASE TO PORTS AND CONTINUE PROCESSING
        CALL DBSET(1)
        GO TO 4255

*       ** ADD WAS UNSUCCESSFUL. CK I USER WANTS TO STOP
4254    CALL ERRMS2(IERT,IERC,ERRCNT,ISTOP)
        IF (ISTOP.EQ.0) GO TO 4253

*       ** TIME TO STOP.
        CALL DBCLOS
        GO TO 9999


*       ** GET PORT FROM GROUP 2 BACK AGAIN
4255    CALL DBFIND('NODE','EQ',INODE,'AND','PORT','EQ',PORTS(I,1))
        CALL DBGREC($4245)
        CALL DBERR($4294,IERT,IERC,0)
        ERRCNT=0
4256    CALL DBCHNG('MODEM',IMODM,'PCODE',IPC,
     X  'COMMENT',COMENT,'PCITY',ICITY,'PHONE',IPHON,'PDAT',IPDAT,
     X  'CUST',ICUST,'PILOT',PILOT,'HUNT',IHUNT)
        GO TO 4295

4294    CALL ERRMSG(IERT,IERC,ERRCNT,ISTOP)
        IF (ISTOP.EQ.0) GO TO 4256
        CLOSE(3)
        GO TO 105

        
*       ** CK IF NEED TO WRITE CHANGE-PORT RECORD TO JOBFLE

4295    IF (IPC1.EQ.IPC2) GO TO 4260
        WRITE (3#IPOS,4252)NREC,INODE,PORTS(I,1),IPC,IPDAT
        IPOS=IPOS+24

*       ** ADD CHANGE RECORD TO HPORTS
        CALL DBSET(2)
*       ** TURN ON SPECIA;L 1022 ERROR HANDLING
        CALL DBERR($4297,IERT,IERC,0)
        ERRCNT=0

*       ** ADD THE RECORD
4296    CALL DBADD('BILL',IBILL,'NODE',INODE,'HOST',IHOST,'NHCODE',
     +  NHCOD,'NHDATE',INHDAT,'CITY',CITY,'STATE',ISTATE,'ZONE',IZONE,
     +  'PORT',PORTS(I,1),'PCODE',IPC,'PDATE',IPDAT,'TOC',ITOC)

*       ** ADD WAS SUCCESSFUL. SET DATA BASE TO "PORTS" AND CONTINUE
        CALL DBSET(1)
        GO TO 4260

*       ** ADD WAS UNSUCCESSFUL. CK IF USER WANTS TO TRY AGAIN
4297    CALL ERRMS2(IERT,IERC,ERRCNT,ISTOP)
        IF (ISTOP.EQ.0) GO TO 4296

*       ** TIME TO STOP.
        CALL DBCLOS
        GO TO 9999


*       ** OUTPUT SWAP MESSAGE

4260    TYPE 4265,SWAP(I),PORTS(I,1)
4265    FORMAT (5X,'PORT ',I3,' HAS BEEN SWAPPED WITH PORT ',I3)

4300    CONTINUE

*       ** FINISHED. CLOSE JOBFLE

        CLOSE(3)

*       ** CLOSE HPORTS
        CALL DBSET(2)
        CALL DBCLOS

        TYPE 4310
4310    FORMAT (/,5X,'SWAP COMPLETED')
        CALL ONINT($90)
        GO TO 105


**********************************************************************
*                                                                     *
*                         COMMAND: HELP                               *
*                                                                     *
*       THIS COMMAND PRINTS A LIST OF ALL VALID COMMANDS              *
*                                                                     *
***********************************************************************

*       ** OUTPUT LIST OF COMMANDS

4500    CALL MINFO('!COM',HELP)
        GO TO 105


***********************************************************************
*                                                                     *
*                         COMMAND: DELETE                             *
*                                                                     *
*       THIS COMMAND ALLOWS THE DELETION FROM THE PORT-PRICING        *
*       DATA BASE OF INDIVIDUAL PORTS ASSOCIATED WITH AN ISIS HOST,   *
*       ALL PORTS ASSOCIATED WITH AN ISIS HOST, OR ALL PORTS          *
*       ASSOCIATED WITH A NODE.                                       *
*                                                                     *
***********************************************************************

*       ** CK IF USER IS VALID TO ISSUE THIS COMMAND

5000    IF(CURUSR(1).EQ.'ROY'.OR.(CURUSR(1).EQ.'PAULA'.AND.
     +CURUSR(2).EQ.' ').OR.(CURUSR(1).EQ.'DBPOR'.AND.CURUSR(2)
     +.EQ.'TSUPD'))GO TO 5002

        TYPE 5001
5001    FORMAT (5X,'USER IS NOT AUTHORIZED TO ISSUE THIS COMMAND',/
     +          5X,'CALL DATA BASE ADMINISTRATOR')
        GO TO 105

*       ** DELETE NODE, HOST, OR PORT?

5002    IF (IPART2.EQ.'NODE'.OR.IPART2.EQ.'NOD'.OR.IPART2.EQ.'NO'
     X  .OR.IPART2.EQ.'N') GO TO 5020

        IF (IPART2.EQ.'HOST'.OR.IPART2.EQ.'HOS'.OR.IPART2.EQ.'HO'
     X  .OR.IPART2.EQ.'H') GO TO 5150

        IF (IPART2.EQ.'PORT'.OR.IPART2.EQ.'POR'.OR.IPART2.EQ.'PO'
     X  .OR.IPART2.EQ.'P') GO TO 5300

        TYPE 5005
5005    FORMAT (/,1X,'* NODE,HOST,OR PORT? (N,H, OR P): ',$)
        ACCEPT 5010,IPART2
5010    FORMAT (A4)
        GO TO 5000



*       ******************************************
*       *                                        *
*       *             DELETE NODE                *
*       *                                        *
*       ******************************************

*       ** INPUT NODE NUMBER

5020    CALL INNODE(INODE,NHCOD,IBILL,CITY,ISTATE,IZONE,IPORT,IPC,ITYP
     X  ,IREC,IERR)
        IF (IERR.EQ.0) GO TO 5030
        IF (IERR.EQ.1) GO TO 5025
        IERR=0
        GO TO 5020

*       ** NODE DOES NOT EXIST

5025    TYPE 3317
        GO TO 105

*       ** SET TYPE-OF-CHANGE FOR BILLING CHANGES
5030    ITOC='DEL-N'

*       ** SET UP A VARIABLE TO USE AS NODE AND PORT CODE FOR
*          DELETE CHANGE RECORDS FOR HPORTS.  A DELETE CHANGE RECORD
*          FOR A NODE OR HOST WILL HAVE BOTH NODE/HOST AND PORT CODES
*          OF 99.  A DELETE CHANGE RECORD FOR A SINGLE PORT WILL HAVE
*          ONLY THE PORT CODE SET TO 99.

        IDEL=99


*       ** INPUT EFFECTIVE DATE

        INDFLG=0
        CALL INDAT(INDFLG,IPORT,INHDAT)

*       ** FIND ALL PORTS FOR THIS NODE

        CALL DBFIND('NODE','EQ',INODE)
        CALL DBNREC(IREC)

*       ** OUTPUT A CHANGE RECORD TO HPORTS FOR EACH PORT ON NODE
        CALL DBOPEN('NOCLOSE','(ACCG1)HPORTS','PASSWORD',IPASS)
        CALL DBSET(1)

5031    CALL DBSET(1)
        CALL DBGREC($5034)
        CALL DBVAL('PORT',IPORT,'HOST',IHOST)
        CALL DBSET(2)

*       ** IF PORT IS PART OF A DECLARE OR REDECLARE RECORD DON'T
*          OUTPUT CHANGE RECORD
        IF (IPORT.EQ.99.OR.IPORT.EQ.98) GO TO 5031

*       ** TURN ON SPECIAL 1022 ERROR HANDLING
        CALL DBERR($5033,IERT,IERC,0)
        ERRCNT=0

*       ** ADD THE RECORD
5032    CALL DBADD('BILL',IBILL,'NODE',INODE,'HOST',IHOST,'NHCODE',
     +  IDEL,'NHDATE',INHDAT,'CITY',CITY,'STATE',ISTATE,'ZONE',IZONE,
     +  'PORT',IPORT,'PCODE',IDEL,'PDATE',INHDAT,'TOC',ITOC)

*       ** ADD WAS SUCCESSFUL. GO GET NEXT RECORD
        GO TO 5031

*       ** ADD WAS UNSUCCESSFUL. CK IF USER WANTS TO TRY AGAIN
5033    CALL ERRMS2(IERT,IERC,ERRCNT,ISTOP)
        IF (ISTOP.EQ.0) GO TO 5032

*       ** TIME TO STOP. CLOSE HPORTS.
        CALL DBCLOS
        GO TO 9999

*       ** FINISHED OUTPUTTING CHANGE RECORDS. CLOSE HPORTS

5034    CALL DBSET(2)
        CALL DBCLOS


*       ** IF NODE IS NON-ISIS STAY HERE

        IF (ITYP.EQ.'ISI') GO TO 5100

*       ** DELETE ALL PORTS

        CALL INTDIS
        CALL DBERR($5045,IERT,IERC,0)
        ERRCNT=0
5040    CALL DBDEL
        GO TO 5050

5045    CALL ERRMSG(IERT,IERC,ERRCNT,ISTOP)
        IF (ISTOP.EQ.0) GO TO 5040
        CALL ONINT($90)
        GO TO 105


*       ** OUTPUT STOP-NODE CHANGE RECORD

5050    NREC='SN'
        OPEN (3,JOBFLE,RANDIO)
        IPOS=SIZE(3)+2
        WRITE (3#IPOS,5035)NREC,INODE,INHDAT
5035    FORMAT (A2,',',I5,',',I6)
        CLOSE(3)

*       ** OUTPUT NUMBER OF PORTS DELETED

        TYPE 5060,IREC
5060    FORMAT (5X,'DELETION COMPLETED.',3X,I5,' PORTS DELETED')
        CALL ONINT($90)
        GO TO 105

*       ********************************
*       *     DELETE ISIS NODE         *
*       ********************************

*       ** SEARCH FOR ALL HOST ON THIS NODE

5100    CURHST=-1
        NUMHST=0
        CALL DBEXEC('SORT KEY HOST')

5105    CALL DBGREC($5115)
        CALL DBVAL('HOST',IHOST)

*       ** IF HOST CHANGES PUT HOST NUMBER INTO ARRAY: DELHST

        IF (CURHST.EQ.IHOST) GO TO 5105
        CURHST=IHOST
        NUMHST=NUMHST+1
        IF (NUMHST.GT.25) GO TO 5110
        DELHST(NUMHST)=IHOST
        GO TO 5105

*       ** MAX. SIZE OF ARRAY: DELHST HAS BEEN EXCEEDED

5110    TYPE 5111
5111    FORMAT (5X,'MAX. SIZE OF ARRAY: DELHST EXCEEDED!',/
     X,         5X,'(ERROR # 5111)')
        GO TO 9999

*       ** GET ALL RECORDS FOR THIS NODE BACK AGAIN AND DELETE THEM

5115    CALL DBFIND('NODE','EQ',INODE)
        CALL DBNREC(IREC)
        CALL INTDIS

*       ** TURN ON SPECIAL ERROR HANDLING
        CALL DBERR($5117,IERT,IERC,0)
        ERRCNT=0

*       ** DELETE THE PORTS
5116    CALL DBDEL
        GO TO 5119

5117    CALL ERRMSG(IERT,IERC,ERRCNT,ISTOP)
        IF (ISTOP.EQ.0) GO TO 5116
        CALL ONINT($90)
        GO TO 105

*       ** OUTPUT STOP-NODE CHANGE RECORD

5119    NREC='SN'
        OPEN (3,JOBFLE,RANDIO)
        IPOS=SIZE(3)+2
        WRITE (3#IPOS,5120)NREC,INODE,INHDAT
5120    FORMAT (A2,',',I5,',',I6)
        IPOS=IPOS+17

*       ** OUTPUT STOP-HOST CHANGE RECORDS

        NREC='SH'

        DO 5130 I=1,NUMHST
        IF (DELHST(I).EQ.0) GO TO 5130
        WRITE (3#IPOS,5125)NREC,INODE,DELHST(I),INHDAT
5125    FORMAT (A2,',',I5,',',I5,',',I6)
        IPOS=IPOS+23
5130    CONTINUE

*       ** FINISHED. CLOSE JOBFLE AND OUTPUT NUMBER OF PORTS DELETED.

        CLOSE(3)
        TYPE 5135,IREC,INODE,NUMHST
5135    FORMAT (5X,'DELETION COMPLETED.',I5,' PORT(S) DELETED ON NODE ',
     X  I5,/,5X,'THERE WERE ',I2,' HOST(S) ASSOCIATED WITH THIS NODE')
        CALL ONINT($90)
        GO TO 105



*       ******************************************
*       *                                        *
*       *             DELETE HOST                *
*       *                                        *
*       ******************************************

*       ** INPUT HOST NUMBER

5150    INODE=0
        CALL INHNUM(INODE,IHOST,NHCOD,IBILL,CITY,ISTATE,IZONE,IPORT,
     X  IPC,IREC,IERR)
        IF (IERR.EQ.0) GO TO 5165
        IF (IERR.EQ.1.OR.IERR.EQ.3) GO TO 5155
        IF (IERR.EQ.2) GO TO 105
        IERR=0
        GO TO 5150

*       ** HOST DOES NOT EXIST

5155    TYPE 3225
        IERR=0
        GO TO 105

*       ** SET TYPE-OF-CHANGE FOR BILLING CHANGE RECORDS
5165    ITOC='DEL-H'

*       ** SET A VARIABLE TO 99.  THIS VARIABLE WILL BE USED AS THE
*          NODE/HOST CODE AND PORT CODE FOR THE BILLING
*          CHANGE RECORD.  A CODE OF 99 INDICATES THE NODE/HOST OR
*          PORT HAS BEEN DELETED.
        IDEL=99

*       ** INPUT EFFECTIVE DATE

        INDFLG=0
        CALL INDAT(INDFLG,IPORT,INHDAT)
        IPDAT=INHDAT

*       ** FIND ALL PORTS ON THIS HOST. PUT PORT NUMBERS INTO ARRAY:
*          PORTS.

        NUMPRT=0
        CALL DBEXEC('STARTREC')
        CALL INTDIS

5170    CALL DBGREC($5180)
        CALL DBVAL('PORT',IPORT)
        NUMPRT=NUMPRT+1
        IF (NUMPRT.GT.256) GO TO 5175
        PORTS(NUMPRT,1)=IPORT
        GO TO 5170

*       ** MAX SIZE EXCEEDED. GO OUTPUT STOP-PORT RECORDS
*          FOR THIS GROUP OF PORTS

5175    IAGAIN=1

5180    OPEN (3,JOBFLE,RANDIO)
        IPOS=SIZE(3)+2

        NREC='SP'

*       ** OPEN HPORTS FOR BILLING CHANGE RECORDS
        CALL DBOPEN('NOCLOSE','(ACCG1)HPORTS','PASSWORD',IPASS)

*       ** OUTPUT STOP-PORT RECORDS FOR THIS GROUP OF PORTS
        DO 5185 I=1,NUMPRT

*       ** IF PORT IS PART OF A DECLARE OR REDECLARE
*          RECORD DON'T OUTPUT A STOP-PORT RECORD.

        IF (PORTS(I,1).EQ.99.OR.PORTS(I,1).EQ.98) GO TO 5185

*       ** IF PORT IS PART OF AN INTERFACE OR SNI RECORD OUTPUT A CHANGE
*          RECORD TO HPORTS , BUT NOT TO MIS JOB FILE.
        IF (PORTS(I,1).EQ.88.OR.PORTS(I,1).EQ.89) GO TO 5183


        WRITE (3#IPOS,5181)NREC,INODE,PORTS(I,1),IPDAT
5181    FORMAT (A2,',',I5,',',I3,',',I6)
        IPOS=IPOS+21

*       ** TURN ON SPECIAL 1022 ERROR HANDLING
        CALL DBERR($5184,IERT,IERC,0)
        ERRCNT=0

*       ** NOW OUTPUT A CHANGE RECORD TO HPORTS
5183    CALL DBADD('BILL',IBILL,'NODE',INODE,'HOST',IHOST,'NHCODE',
     +  IDEL,'NHDATE',INHDAT,'CITY',CITY,'STATE',ISTATE,'ZONE',IZONE,
     +  'PORT',PORTS(I,1),'PCODE',IDEL,'PDATE',INHDAT,'TOC',ITOC)

*       ** ADD WAS SUCCESSFUL. GO PROCESS NEXT PORT
        GO TO 5185

*       ** ADD WAS UNSUCCESSFUL. CK IF USER WANTS TO TRY AGAIN
5184    CALL ERRMS2(IERT,IERC,ERRCNT,ISTOP)
        IF (ISTOP.EQ.0) GO TO 5183

*       ** TIME TO STOP.
        CALL DBCLOS
        GO TO 9999

*       ** GO PROCESS NEXT PORT
5185    CONTINUE

*       ** FINISHED OUTPUTTING STOP-RECORDS. CLOSE JOB FILE
        CLOSE(3)

*       ** CLOSE HPORTS
        CALL DBSET(2)
        CALL DBCLOS

*       ** IF MAX OF ARRAY WAS EXCEEDED NEED TO GO BACK AND PROCESS
*          SOME MORE PORTS

        IF (IAGAIN.EQ.O) GO TO 5190
        IAGAIN=0
        GO TO 5170

*       ** OUTPUT STOP HOST RECORD

5190    NREC='SH'
        OPEN (3,JOBFLE,RANDIO)
        IPOS=SIZE(3)+2
        WRITE (3#IPOS,5195)NREC,INODE,IHOST,INHDAT
5195    FORMAT (A2,',',I5,',',I5,',',I6)
        CLOSE(3)

*       ** GET ALL RECORDS FOR THIS HOST AND DELETE

        CALL DBFIND('NODE','EQ',INODE,'AND','HOST','EQ',IHOST)
        CALL DBERR($5230,IERT,IERC,0)
        ERRCNT=0
5220    CALL DBDEL
        GO TO 5225

5230    CALL ERRMSG(IERT,IERC,ERRCNT,ISTOP)
        IF (ISTOP.EQ.0) GO TO 5220
        GO TO 105

*       ** TYPE END MESSAGE

5225    TYPE 5200,NUMPRT,IHOST
5200    FORMAT (5X,'DELETION COMPLETED.',I4,' PORTS DELETED ON HOST ',
     X  I5)

*       ** IF NO RECORDS REMAIN FOR THIS NODE OUTPUT STOP-NODE CHANGE
*          RECORD.

        CALL DBFIND('NODE','EQ',INODE)
        CALL DBNREC(IREC2)
        IF (IREC2.NE.0) GO TO 5215
        OPEN (3,JOBFLE,RANDIO)
        IPOS=SIZE(3)+2
        NREC='SN'
        WRITE (3#IPOS,5205)NREC,INODE,INHDAT
5205    FORMAT (A2,',',I5,',',I6)
        CLOSE(3)
        TYPE 5210,INODE
5210    FORMAT (/,5X,'NO PORTS REMAIN ON NODE ',I5,'.',/
     X,         5X,'IT HAS BEEN REMOVED FROM THE DATA BASE.',/)

5215    CALL ONINT($90)
        GO TO 105



*       ******************************************
*       *                                        *
*       *             DELETE PORTS               *
*       *                                        *
*       ******************************************

*       ** INPUT NODE NUMBER

5300    CALL INNODE(INODE,NHCOD,IBILL,CITY,ISTATE,IZONE,IPORT,IPC,ITYP
     X  ,IREC,IERR)
        IF (IERR.EQ.0) GO TO 5320
        IF (IERR.EQ.1) GO TO 5310
        IERR=0
        GO TO 5300

*       ** NODE DOESN'T EXIST

5310    TYPE 3317
        GO TO 105

*       ** NODE MUST BE ISIS

5320    IF (ITYP.EQ.'ISI') GO TO 5330
        TYPE 5325
5325    FORMAT (5X,'INDIVIDUAL PORTS MAY BE DELETED ONLY ON ISIS NODES',
     X  /,5X,'IF THIS NODE IS BEING DOWNGRADED, THE DATA BASE ADMIN-',
     X  /,5X,' ISTRATOR MUST USE THE DOWNGRADE OPTION OF THE',
     X  /,5X,' REDECLARE COMMAND')
        GO TO 105

*       ** INIT SOME VARIABLES

5330    IPT1=1
        ISTOP=0
        ITPCNT=0
        IMAXPT=256
        IOPT=1156

*       ** SET TYPE-OF-CHANGE FOR BILLING RECORDS
        ITOC='DEL-P'

*       ** SET A VARIABLE TO 99.  THIS VARIABLE WILL BE USED AS THE
*          PORT CODE FOR THE BILLING CHANGE RECORD.  A CODE OF 99
*          INDICATES THE PORT HAS BEEN DELETED.
        IDEL=99


        CALL INPRT(IPT1,IOPT,IMAXPT,IPT2,ITPCNT,IPCNT,INDFLG,
     X  ISTOP)
        IF (ISTOP.NE.0) GO TO 105

*       ** CHECK IF MAX HAS BEEN EXCEEDED


        IF (ITPCNT.LE.IMAXPT) GO TO 5340
        TYPE 5335
5335    FORMAT (5X,'MAX. OF 256 PORTS HAS BEEN EXCEEDED.',
     X/,5X,'REENTER LAST SET OF PORTS')

*       ** REINIT PORTS ARRAY

        DO 5336 I=1,256
        PORTS(I,1)=-1
5336    CONTINUE

        GO TO 5330

*       INPUT EFFECTIVE DATE

5340    INDFLG=0
        CALL INDAT(INDFLG,IPORT,INHDAT)
        IPDAT=INHDAT

*       ** OPEN JOBFLE

        OPEN (3,JOBFLE,RANDIO)
        IPOS=SIZE(3)+2

*       ** OPEN HPORTS FOR BILLING CHANGE RECORDS
        CALL DBOPEN('NOCLOSE','(ACCG1)HPORTS','PASSWORD',IPASS)
        CALL DBSET(1)

*       ** FIND ALL PORTS

        CALL DBFIND('NODE','EQ',INODE,'AND','PORT','EQ',PORTS(1,1))
        IF (ITPCNT.EQ.1) GO TO 5347
        DO 5345  I=2,ITPCNT
        CALL DBFIND('LAST','SAV.',1,'NODE','EQ',INODE,'AND','PORT','EQ'
     X,PORTS(I,1),'OR','REF.',1)
5345    CONTINUE

*       ** SORT PORTS BY HOST AND LOOK FOR ALL HOST NUMBERS. PLACE
*          HOST NUMBERS IN ARRAY: HSTDEL

5347    CALL DBNREC(IREC)
        CURHST=-1
        NUMHST=0
        NREC='SP'
        CALL INTDIS
        CALL DBSORT('HOST','PORT')

5350    CALL DBGREC($5360)
        CALL DBVAL('HOST',IHOST,'PORT',IPORT,'NHDAT',INHDAT,'NHCODE',
     +  NHCOD,'NCITY',CITY,'NSTATE',ISTATE,'ZONE',IZONE,'BILL',IBILL)
        CALL DBERR($5395,IERT,IERC,0)
        ERRCNT=0
5351    CALL DBDEL
        GO TO 5390

5395    CALL ERRMSG(IERT,IERC,ERRCNT,ISTOP)
        IF (ISTOP.EQ.0) GO TO 5351
        CLOSE(3)
        GO TO 105

5390    IF (CURHST.EQ.IHOST) GO TO 5355
        CURHST=IHOST
        NUMHST=NUMHST+1
        IF (NUMHST.GT.25) GO TO 5352
        DELHST(NUMHST)=IHOST
        GO TO 5355

*       ** MAX LIMIT OF ARRAY: DELHST EXCEEDED

5352    TYPE 5353
5353    FORMAT (5X,'MAX. SIZE OF ARRAY: DELHST EXCEEDED!',/
     X,        5X,'(ERROR # 5353)')
        GO TO 9999

*       ** OUTPUT STOP PORT CHANGE RECORD

*       ** IF PORT IS PART OF A DECLARE OR REDECLARE
*          RECORD DON'T OUTPUT A STOP-PORT RECORD.

5355    IF (IPORT.EQ.99.OR.IPORT.EQ.98) GO TO 5350

*       ** IF PORT IS PART OF AN INTERFACE OR SNI RECORD OUTPUT THE
*          CHANGE RECORD TO HPORTS , BUT NOT TO THE JOB FILE.
        IF (IPORT.EQ.88.OR.IPORT.EQ.89) GO TO 5357

        WRITE (3#IPOS,5356)NREC,INODE,IPORT,IPDAT
5356    FORMAT (A2,',',I5,',',I3,',',I6)
        IPOS=IPOS+21

*       ** SET DATA BASE TO HPORTS AND ADD CHANGE RECORD
5357    CALL DBSET(2)

*       ** TURN ON SPECIAL ERROR HANDLING
        CALL DBERR($5359,IERT,IERC,0)
        ERRCNT=0

*       ** ADD THE RECORD
5358    CALL DBADD('BILL',IBILL,'NODE',INODE,'HOST',IHOST,'NHCODE',
     +  NHCOD,'NHDATE',INHDAT,'CITY',CITY,'STATE',ISTATE,'ZONE',IZONE,
     +  'PORT',IPORT,'PCODE',IDEL,'PDATE',IPDAT,'TOC',ITOC)
        CALL DBSET(1)

*       ** GO GET NEXT PORT 
        GO TO 5350

*       ** ADD WAS UNSUCCESSFUL. CK IF USER WANTS TO CONTINUE
5359    CALL ERRMS2(IERT,IERC,ERRCNT,ISTOP)
        IF (ISTOP.EQ.0) GO TO 5358

*       ** TIME TO STOP.
        CALL DBCLOS
        GO TO 9999

*       ** CHECK THAT ALL HOSTS IN DELHST STILL HAVE SOME
*          PORTS ON THEM. IF NOT OUTPUT STOP-HOST RECORD

5360    NREC='SH'
        DO 5370  I=1,NUMHST
        CALL DBFIND('HOST','EQ',DELHST(I))
        CALL DBNREC(IREC2)
        IF (IREC2.NE.0) GO TO 5370

        WRITE (3#IPOS,5365)NREC,INODE,DELHST(I),INHDAT
5365    FORMAT (A2,',',I5,',',I5,',',I6)
        TYPE 5366,IHOST
5366    FORMAT (5X,'NO PORTS REMAIN ON HOST ',I5,'.',/
     X,         5X,'IT HAS BEEN REMOVED FROM THE DATA BASE',/)
        IPOS=IPOS+23

*       ** ADD A STOP-HOST RECORD TO HPORTS
        CALL DBSET(2)

*       ** TURN ON SPECIAL 1022 ERROR HANDLING
        CALL DBERR($5368,IERT,IERC,0)
        ERRCNT=0

*       ** ADD THE RECORD
5367    CALL DBADD('BILL',IBILL,'NODE',INODE,'HOST',IHOST,'NHCODE',
     +  IDEL,'NHDATE',INHDAT,'CITY',CITY,'STATE',ISTATE,'ZONE',
     +  IZONE,'PORT',IDEL,'PCODE',IDEL,'PDATE',IPDAT,'TOC',ITOC)

*       ** ADD WAS SUCCESSFUL. SET DATA BASE BACK TO "PORTS" AND
*           GO CK NEXT HOST.
        CALL DBSET(1)
        GO TO 5370

*       ** ADD WAS NOT SUCCESSFUL. CK IF USER WANTS TO STOP.
5368    CALL ERRMS2(IERT,IERC,ERRCNT,ISTOP)
        IF (ISTOP.EQ.0) GO TO 5367

*       ** TIME TO STOP.
        CALL DBCLOS
        GO TO 9999

*       ** GO CK NEXT HOST
5370    CONTINUE


*       ** FINISHED. CLOSE JOB FILE.
        CLOSE(3)

*       ** CLOSE HPORTS
        CALL DBSET(2)
        CALL DBCLOS

*       ** OUTPUT END MESSAGE
        TYPE 5375,IREC,INODE
5375    FORMAT (5X,'DELETION COMPLETED.',I5,' PORTS DELETED ON
     X NODE ',I5)

*       ** IF NO RECORDS REMAIN FOR THIS NODE OUTPUT STOP-NODE CHANGE
*          RECORD.

        CALL DBFIND('NODE','EQ',INODE)
        CALL DBNREC(IREC2)
        IF (IREC2.NE.0) GO TO 5380
        OPEN (3,JOBFLE,RANDIO)
        IPOS=SIZE(3)+2
        NREC='SN'
        WRITE (3#IPOS,5205)NREC,INODE,INHDAT
        CLOSE(3)
        TYPE 5210,INODE

5380    CALL ONINT($90)
        GO TO 105


***********************************************************************
*                                                                     *
*                         COMMAND: DISPLAY                            *
*                                                                     *
*       THIS COMMAND DISPLAYS ALL INFORMATION ABOUT A SPECIFIED       *
*       PORT OR PORT RANGE ON A GIVEN NODE.                           *
*                                                                     *
***********************************************************************

*       ** INPUT NODE NUMBER

6000    INFLAG=0
        CALL INNODE(INODE,NHCOD,IBILL,CITY,ISTATE,IZONE,IPORT,IPC,ITYP
     X  ,IREC,IERR)
        IF (IERR.EQ.0) GO TO 6025
        IF (IERR.EQ.1) GO TO 6015
        IERR=0
        GO TO 6000

*       ** NODE DOES NOT EXIST

6015    TYPE 6020
6020    FORMAT (5X,'NO SUCH NODE')
        GO TO 105

*       ** INPUT PORT OR PORT RANGE

6025    IMAXPT=256
        CURHST=-1
        IPT1=1
        ISTOP=0
        ITPCNT=0
        IOPT=1155
        CALL INPRT(IPT1,IOPT,IMAXPT,IPT2,ITPCNT,IPCNT,INDFLG,
     X  ISTOP)

        IF (ISTOP.NE.0) GO TO 105

*       ** PRINT NODE INFORMATION ON ON FIRST SET OF PORTS

        IF (INFLAG.NE.0) GO TO 6040
        INFLAG=1

*       ** GET NODE INFO

        CALL DBVAL('NODE',INODE,'NAME',INAM,'NHDAT',NDAT,'NTYPE',NTYP
     X,'MACHTYP',IMACH)

        TYPE 6030
6030    FORMAT (//,1X,'NODE',3X,'NAME',6X,'TYPE'
     X,5X,'MACHINE',/,1X,71('-'))
        TYPE 6032,INODE,(INAM(I),I=1,2),NTYP,IMACH
6032    FORMAT (1X,I5,3X,A5,A1,4X,A3,6X,A5)

*       ** PRINT PORT AND HOST INFO

6040    DO 6150 I=1,ITPCNT

        CALL DBFIND('NODE','EQ',INODE,'AND','PORT','EQ',PORTS(I,1))
        CALL DBGREC($6120)
        CALL DBVAL('HOST',IHOST,'NHCODE',NHCOD,'PCODE',IPC,'MODEM',
     XIMODM,'PHONE',IPHON,'COMMENT',COMENT,'PCITY',PCITY,'PDAT',PDAT,
     X'NCITY',CITY,'NSTATE',ISTATE,'ZONE',IZONE,'BILL',IBILL,'CUST',
     XICUST,'HUNT',IHUNT,'PILOT',PILOT,'DE',IDE,'DC',IDC)

*       ** CONVERT THE DATE-ENTERED AND DATE-CHANGED VALUES FROM
*          INTERNAL 1022 FORMAT

        IEMO=0
        IEDAY=0
        IEYR=0
        IF(IDE.EQ.0) GO TO 6045
        CALL DBNDAT(IDE,IEMO,IEDAY,IEYR)
        IEYR=IEYR-1900

6045    ICMO=0
        ICDAY=0
        ICYR=0
        IF (IDC.EQ.0) GO TO 6047
        CALL DBNDAT(IDC,ICMO,ICDAY,ICYR)
        ICYR=ICYR-1900

*       ** CHECK IF HOST HAS CHANGED. IF SO, OUTPUT HOST INFO AND
*          PORT HEADINGS

6047    IF (IHOST.EQ.CURHST) GO TO 6080
        CURHST=IHOST
        TYPE 6050,IHOST,NHCOD,IBILL,(CITY(J),J=1,4),ISTATE,IZONE,NDAT
6050    FORMAT (/////,7X,'HOST',2X,'NHCODE',2X,'BILL',3X,'CITY',18X,
     X'STATE',2X,'ZONE',2X,'EFF.DATE',/6X,66('-'),/,6X,I5,4X,I2,4X,
     XA5,2X,4A5,2X,A3,5X,A2,4X,I6)

*       ** OUTPUT PROPER PORT HEADER DEPENDING ON LENGTH-OF-LINE AND TYPE OF LISTING
        IF (ILOL.EQ.71.AND.LSTTYP.EQ.'B') TYPE 6054
        IF (ILOL.EQ.71.AND.LSTTYP.EQ.'V') TYPE 6055
        IF (ILOL.NE.71) TYPE 6057
6054    FORMAT  (//,7X,'PORT',1X,'PCODE',1X,'MODEM',1X,'PHONE',10X,
     X  'COMMENT',11X,'CITY',3X,'EFF.DATE',/)
6055    FORMAT (//,7X,'PORT',1X,'PCODE',1X,'MODEM',1X,'PHONE',10X,
     X'COMMENT',12X,'CITY',5X,'EFF.DATE',/,18X,'=====',1X,'=====',
     X10X,8('='),10X,7('='),3X,8('='),/,18X,'HUNT',2X,'PILOT',10X,
     X'CUSTOMER',12X,'MAP',7X,'MAP',/,57X,'ENTERED',3X,'CHANGED',/)
6057    FORMAT (//,7X,'PORT',1X,'PCODE',1X,'MODEM',1X,'HUNT',1X,
     X  'PILOT',11X,'PHONE',11X,'COMMENT',11X,'CUSTOMER',4X,'CITY',
     X  7X,'EFF.DATE',4X,'MAP',7X,'MAP',/,112X,'ENTERED',3X,
     X  'CHANGED',/,7X,122('-'),/)

*       ** OUTPUT PORT INFO


*       ** PORT IS OCTAL. GET THE EQUIVALENT DECIMAL PORT NUMBER
6080    CALL OCTDEC(PORTS(I,1),IDEC)

*       ** IF LENGTH OF LINE = 71, STAY HERE
6090    IF (ILOL.NE.71) GO TO 6095
        IF (LSTTYP.EQ.'V') TYPE 6092,IDEC,PORTS(I,1),IPC,IMODM,IPHON,
     X  (COMENT(J),J=1,4),(PCITY(J),J=1,2),PDAT,IHUNT,
     X  (PILOT(J),J=1,3),(ICUST(J),J=1,2),IEMO,IEDAY,IEYR,ICMO,ICDAY,
     X  ICYR
        IF (LSTTYP.EQ.'B') TYPE 6093,IDEC,PORTS(I,1),IPC,IMODM,IPHON,
     X  COMENT,PCITY,PDAT
6092    FORMAT  (1X,'(',I3,')',2X,I3,3X,I2,2X,A5,1X,2A5,A4,1X,3A5,A1,
     X2X,A5,A1,5X,I6,/,18X,57('='),/,18X,I3,3X,2A5,A4,1X,2A5,7X,I2,
     X'/',I2,'/',I2,3X,I2,'/',I2,'/',I2,/)
6093    FORMAT  (1X,'(',I3,')',2X,I3,3X,I2,2X,A5,1X,2A5,A4,1X,3A5,A1,
     X  2X,A5,A1,2X,I6)
        GO TO 6150

*       ** LENGTH-OF-LINE NE 71
6095    TYPE 6097,IDEC,PORTS(I,1),IPC,IMODM,IHUNT,PILOT,IPHON,
     X  COMENT,ICUST,PCITY,PDAT,IEMO,IEDAY,IEYR,ICMO,ICDAY,ICYR
6097    FORMAT (1X,'(',I3,')',2X,I3,3X,I2,2X,A5,1X,I3,2X,2A5,A4,2X,
     X  2A5,A4,2X,3A5,A1,2X,2A5,2X,A5,A1,6X,I6,2(2X,I2,'/',I2,'/',I2))
        GO TO 6150

*       ** NO INFORMATION EXISTS FOR THIS PORT
6120    IF (I.EQ.1) TYPE 6055
        CALL OCTDEC(PORTS(I,1),IDEC)
        
        TYPE 6125,IDEC,PORTS(I,1)
6125    FORMAT (1X,'(',I3,')',2X,I3,10X,10('-'),1X,'NO ENTRY',1X,
     X  10('-'))
        IF (ILOL.EQ.71.AND.LSTTYP.EQ.'V') TYPE 6126
6126    FORMAT (/)

6150    CONTINUE

        GO TO 6025



***********************************************************************
*                                                                     *
*                         SUBROUTINE: TYPES                           *
*                                                                     *
*       THIS COMMAND DISPLAYS TO THE TERMINAL A LIST OF ALL           *
*       VALID NODE-HOST CODES, PORT CODES, MACHINE TYPES, NODE-       *
*       HOST TYPES, AND MODEM TYPES.                                  *
*                                                                     *
***********************************************************************

6500    CALL MINFO('!NCOD',DOC)
        CALL MINFO('!PCOD',DOC)
        CALL MINFO('!MACH',DOC)
        CALL MINFO('!TYPE',DOC)
        CALL MINFO('!MODM',DOC)
        CALL MINFO('!BILL',DOC)
        GO TO 105


**********************************************************************
*                                                                     *
*                         COMMAND LIST                                *
*                                                                     *
*       THIS COMMAND CREATES LISTINGS EITHER TO THE TERMINAL OR TO    *
*       A FILE OF SPECIFIED SET OF NOES OR HOSTS                      *
*                                                                     *
***********************************************************************

7000    IF (IPART2.EQ.'ALL'.OR.IPART2.EQ.'AL'.OR.IPART2.EQ.'A')
     X GO TO 7100

        IF (IPART2.EQ.'NODE'.OR.IPART2.EQ.'NOD'.OR.IPART2.EQ.'NO'
     X.OR.IPART2.EQ.'N') GO TO 7200

        IF (IPART2.EQ.'HOST'.OR.IPART2.EQ.'HOS'.OR.IPART2.EQ.'HO'
     X.OR.IPART2.EQ.'H') GO TO 7210

        TYPE 7005
7005    FORMAT (/,1X,'* ALL, NODE, OR HOST: ',$)
        ACCEPT 7006,IPART2
7006    FORMAT (A4)
        GO TO 7000


*       *******************************
*       *                             *
*       *         LIST ALL            *
*       *                             *
*       *******************************

*       ** INPUT OUTPUT DEVICE

7100    CALL OUTPUT(OUTFLE,ITOUT)

*       ** SELECT AND SORT ALL RECORDS

7125    CALL DBFIND('ALL')
        CALL DBEXEC('SORT NODE HOST PORT')

*       ** OUTPUT INFO

        CALL OUTLST(OUTFLE,ITOUT,ILOL,LSTTYP,IERR)
        IF (IERR.EQ.0) GO TO 105
        IF (IERR.EQ.2) GO TO 90
        GO TO 9999





*       ********************************
*       *                              *
*       *        LIST NODE             *
*       *           OR                 *
*       *        LIST HOST             *
*       *                              *
*       ********************************

*       ** LIST NODE

7200    IOPT='N'
        CALL DBINFO('NODE',INFO)
        IATT=INFO(7)
        GO TO 7220

*       ** LIST HOST

7210    IOPT='H'
        CALL DBINFO('HOST',INFO)
        IATT=INFO(7)

*       ** OPEN PORTS.DMS A SECOND TIME TO ALLOW TWO DIFFERENT LEVELS OF
*          SELECTION TO OCCUR.

        CALL DBOPEN('NOCLOSE','(NEWPRT)PORTS.DMS','PASSWORD',IPASS)
        CALL DBCSET(ISDB)



*       ** INPUT OUTPUT FILE

7220    CALL OUTPUT(OUTFLE,ITOUT)

*       ** INPUT INPUT FILE

7235    TYPE 7240
7240    FORMAT (1X,'* INPUT FROM: ',$)
        ACCEPT 7245,(INFLE(I),I=1,4)
7245    FORMAT (4A5)

*       ** IF RESPONSE =T, THIS INDICATES INPUT IS FROM TERMINAL

        IF (INFLE(1).EQ.' ') GO TO 7235
        IF (INFLE(1).NE.'T') GO TO 7300

*       ** INPUT A NODE NUMBER

7250    IF (IOPT.EQ.'H') GO TO 7260
        TYPE 7252
7252    FORMAT (1X,'* NODE? (C.R. TO STOP): ',$)
        ACCEPT 7255,(ITEMP(I),I=1,10)
7255    FORMAT (10A1)

*       ** CONVERT ALPHA VALUE JUST INPUT INTO NUMERIC

        CALL INTCK(ITEMP,5,INUM,IERR)
        IF (IERR.NE.0) GO TO 7250

*       ** IF RESPONSE = C.R., STOP INPUTTING NUMBERS

        IF (INUM.EQ.0) GO TO 7350

*       ** GO SELECT RECORDS

        GO TO 7275

*       ** SET DATA BASE POINTER TO PRIMARY PORTS DATA BASE. INPUT
*          A HOST NUMBER

7260    TYPE 7262
7262    FORMAT (1X,'* ORIGHOST (C.R. TO STOP): ',$)
        ACCEPT 7255,(ITEMP(I),I=1,10)
*       ** CONVERT ALPHA VALUE JUST INPUT INTO NUMERIC

        CALL INTCK(ITEMP,5,INUM,IERR)
        IF (IERR.NE.0) GO TO 7260

*       ** IF RESPONSE = C.R. STOP INPUTTING NUMBERS

        IF (INUM.EQ.0) GO TO 7350

*       ** SET DATA BASE POINTER TO SECONDAY SELECTION DATA BASE

        CALL DBSET(ISDB)


*       ** SELECT RECORDS
7275    CALL DBFIND('LAST','OR',IATT,'EQ',INUM)
        CALL DBNREC(IRREC)
        GO TO 7250


*       ** INPUT FROM FILE

7300    OPEN (3,INFLE,INPUT,ERR=7325)
7310    READ (3,7315,END=7345)INUM
7315    FORMAT (I4)
        CALL DBFIND ('LAST','OR',IATT,'EQ',INUM)
        GO TO 7310

*       ** UNABLE TO OPEN INPUT FILE

7325    TYPE 7327,(INFLE(I),I=1,4)
7327    FORMAT (5X,'ERROR!! UNABLE TO OPEN: ',4A5)
        GO TO 105

*       ** END OF INPUT FILE. CLOSE FILE

7345    CLOSE(3)

*       ** IF LISTNG HOSTS SET FILE POINTER TO SECONDARY DATA BASE

7350    IF (IOPT.EQ.'H') CALL DBSET(ISDB)

*       ** CHECK IF ANY RECORDS TO PRINT

7355    CALL DBNREC(IREC)
        IF (IREC.NE.0) GO TO 7360
        TYPE 7356
7356    FORMAT (5X,'NO RECORDS AVAILABLE')
        IF (IOPT.EQ.'H') CALL DBCLOS
        GO TO 105

*       ** SORT RECORDS

7360    CALL DBEXEC ('SORT NODE HOST PORT')

*       ** OUTPUT LISTING

        CALL OUTLST(OUTFLE,ITOUT,ILOL,LSTTYP,IERR)
        IF (IOPT.EQ.'H') CALL DBCLOS
        IF (IERR.EQ.0) GO TO 105
        IF (IERR.EQ.2) GO TO 90
        GO TO 9999



**********************************************************************
*                                                                    *
*                       COMMAND: RENUMBER                            *
*                                                                    *
*       THIS COMMAND CHANGES THE NODE NUMBER ON A NODE OR ORIGHOST   *
*       AND SENDS ALL APPROPRIATE CHANGE RECORDS TO ACCOUNTING.      *
*                                                                    *
**********************************************************************


*       ** CK IF USER IS VALID TO ISSUE THIS COMMAND

7500    IF(CURUSR(1).EQ.'ROY'.OR.(CURUSR(1).EQ.'PAULA'.AND.
     +CURUSR(2).EQ.' ').OR.(CURUSR(1).EQ.'DBPOR'.AND.CURUSR(2)
     +.EQ.'TSUPD'))GO TO 7510
        TYPE 7505
7505    FORMAT (5X,'USER NOT AUTHORIZED TO ISSUE THIS COMMAND.',/)
        GO TO 105

*       ** CK IF RENUMBERING NODE OR HOST
7510    IF (IPART2.EQ.'NODE'.OR.IPART2.EQ.'NOD'.OR.IPART2.EQ.'NO'.OR.
     +  IPART2.EQ.'N') GO TO 7520

        IF (IPART2.EQ.'HOST'.OR.IPART2.EQ.'HOS'.OR.IPART2.EQ.'HO'.OR.
     +  IPART2.EQ.'H') GO TO 10000

        TYPE 7515
7515    FORMAT (/,1X,'* NODE OR HOST: ',$)
        ACCEPT 7516,IPART2
7516    FORMAT (A4)
        GO TO 7510

*       *******************************
*       *                             *
*       *       RENUMBER NODE         *
*       *                             *
*       *******************************

*       ** INPUT NODE NUMBER

7520    CALL INNODE(INODE,NHCOD,IBILL,CITY,ISTATE,IZONE,IPORT,IPC,ITYP
     +  ,IREC,IERR)

*       ** IF NODE IS IN DATA BASE, CONTINUE.

7525    IF (IERR.EQ.0) GO TO 7535

*       ** IF NODE NUMBER IS INVALID. REENTER

        IF (IERR.EQ.2) GO TO 7530

*       ** IF NODE IS NOT IN DATA BASE, OUTPUT ERROR MESSAGE.

        IF (IERR.NE.1) GO TO 7530
        TYPE 7527
7527    FORMAT (5X,'ERROR!! NODE IS NOT IN DATA BASE',/)
        GO TO 105

*       ** RESET ERROR FLAG AND REPROMPT FOR NODE NUMBER

7530    IERR=0
        GO TO 7520

*       ** MAKE SURE THAT NODE IS NOT ISIS

7535    IF (ITYP.NE.'ISI') GO TO 7545
        TYPE 7540
7540    FORMAT (5X,'THIS IS AN ISIS NODE. CURRENTLY THIS COMMAND ',
     +  'ONLY RENUMBERS',/,5X,'A NON-ISIS NODE TO A TYMNET-II TYMSAT',
     +  '.',/)
        GO TO 105

*       ** SET TYPE-OF-CHANGE FOR BILLING CHANGE RECORDS
7545    ITOC='REN N'

*       ** INPUT NEW NODE NUMBER

        TYPE 7550
7550    FORMAT (/,1X,'* NEW NODE NUMBER: ',$)
        ACCEPT 7555,(ITEMP(I),I=1,10)
7555    FORMAT (10A1)

*       ** CONVERT ALPHA VALUE JUST INPUT INTO NUMERIC

7560    CALL INTCK(ITEMP,5,NEWNOD,IERR2)
        IF (IERR2.NE.0) GO TO 7545

*       ** CK IF NODE IS IN LEGAL RANGE

7565    IF (NEWNOD.GT.0) GO TO 7575
        TYPE 7570
7570    FORMAT (5X,'ERROR!! INVALID NODE NUMBER')
        GO TO 7545

*       ** CK THAT NUMBER IS OCTAL

7575    CALL OCTCK(NEWNOD,IERR2)
        IF (IERR2.EQ.0) GO TO 7585
        TYPE 7580
7580    FORMAT (5X,'NUMBER MUST BE OCTAL')
        GO TO 7545

*       ** CK IF NODE ALREADY EXISTS IN DATA BASE.

7585    CALL DBFIND('NODE','EQ',NEWNOD)
        CALL DBNREC(IREC)
        IF (IREC.EQ.0) GO TO 7595
        TYPE 7590
7590    FORMAT (5X,'NEW NODE ALREADY IN DATA BASE.',/,
     +  5X,'CAN NOT CONTINE.',/)
        GO TO 105

*       ** NEW NODE IS NOT IN DATA BASE.  INPUT NODE NAME

7595    TYPE 7600
7600    FORMAT(/,1X,'* NEW NODE NAME (MAX 6 CHARS): ',$)
        ACCEPT 7605,INAM
7605    FORMAT (A5,A1)

*       ** INPUT EFFECTIVE DATE

7610    INDFLG=0
        CALL INDAT(INDFLG,IPORT,INHDAT)
        IPDAT=INHDAT

*       ** INPUT AN HOST

7620    TYPE 7625
7625    FORMAT (/,1X,'* ORIGHOST ON NEW NODE: ',$)
        ACCEPT 7555,(ITEMP(I),I=1,10)

*       ** CONVERT ALPHA VALUE JUST INPUT INTO NUMERIC

7630    CALL INTCK(ITEMP,5,IHOST,IERR2)
        IF (IERR2.NE.0) GO TO 7620

*       ** CK IF LEGAL HOST NUMBER

7635    IF (IHOST.GT.0) GO TO 7645
        TYPE 7640
7640    FORMAT (5X,'ERROR!! INVALID HOST NUMBER')
        GO TO 7620

*       ** CK IF HOST IS ALREADY IN DATA BASE

7645    CALL DBFIND ('HOST','EQ',IHOST)
        CALL DBNREC(IREC)
        IF (IREC.EQ.0) GO TO 7660
7647    TYPE 7650
7650    FORMAT (/,1X,'HOST ALREADY IN DATA BASE. ',
     +  'CONTINUE? (Y OR N): ',$)
        ACCEPT 7652,IANS
7652    FORMAT (A1)

        IF (IANS.EQ.'Y') GO TO 7660
        IF (IANS.EQ.'N') GO TO 105
        GO TO 7647

*       ** FIND ALL RECORDS IN DATA BASE FOR OLD NODE NUMBER

7660    CALL DBFIND('NODE','EQ',INODE)
        CALL DBNREC(IREC)

*       ** TURN OFF ESCAPES.

7665    CALL INTDIS

*       ** MAKE CHANGES IN DATA BASE

        CALL DBERR($7668,IERT,IERC,0)
        ERRCNT=0
7667    CALL DBCHNG('NODE',NEWNOD,'HOST',IHOST,'NAME',INAM,
     +  'NHDAT',INHDAT,'PDAT',IPDAT,'NTYPE','ISI','BILL','TYMII')
        CALL DBERR(0)
        GO TO 7670

*       ** 1022 ERROR ENCOUNTERED.  INTERPRET ERROR.
7668    CALL ERRMSG(IERT,IERC,ERRCNT,ISTOP)

*       ** CK IF OK TO TRY CHANGE AGAIN

        IF (ISTOP.EQ.0) GO TO 7667
*       ** HAVE TO STOP

        TYPE 7669
7669    FORMAT (5X,'WARNING! UNABLE TO COMPLETE CHANGE TO PORTS',
     +          5X,'DATA BASE.  CHECK PORT MAPS FOR OLD AND NEW',
     +          5X,'NODE NUMBERS.  ACCOUNTING CHANGES HAVE NOT',
     +          5X,'BEEN OUTPUT.',/)
        GO TO 9999

*       ** OPEN THE JOB FILE AND OUTPUT A STOP-NODE CHANGE
*          RECORD FOR OLD NODE NUMBER

7670    OPEN (3,JOBFLE,RANDIO,ERR=7790)
        IPOS=SIZE(3)+2
        WRITE(3#IPOS,7675)INODE,INHDAT
7675    FORMAT ('SN',',',I5,',',I6)
        IPOS=IPOS+17

*       ** OPEN HPORTS FOR BILLING CHANGE RECORDS
        CALL DBOPEN('NOCLOSE','(ACCG1)HPORTS','PASSWORD',IPASS)
        CALL DBSET(1)

*       ** OUTPUT A DECLARE-NODE CHANGE RECORD FOR NEW NODE 
*          NUMBER.

7680    WRITE(3#IPOS,7685)NEWNOD,IZERO,INHDAT
7685    FORMAT ('DN',',',I5,',',I2,',',20X,',',3X,',',2X,',',I6)
        IPOS=IPOS+48

*       ** OUTPUT A DECLARE HOST CHANGE RECORD FOR THE NEW
*          HOST NUMBER

7690    WRITE (3#IPOS,7695)NEWNOD,IHOST,NHCOD,(CITY(I),I=1,4),
     +  ISTATE,IZONE,INHDAT
7695    FORMAT('DH',',',I5,',',I5,',',I2,',',4A5,',',A3,',',A2,',',I6)
        IPOS=IPOS+54

*       ** OUTPUT A NEW-PORT CHANGE RECORD FOR EACH PORT

7700    CALL DBSORT('PORT')
7705    CALL DBGREC($7750)
        CALL DBVAL('PORT',IPORT,'PCODE',IPCODE)

*       ** DON'T SEND NEW-PORT CHANGE RECORDS FOR DECLARE, REDECLARE,
*          INTERFACE, OR SNI RECORDS TO MIS

7710    IF (IPORT.EQ.98.OR.IPORT.EQ.99) GO TO 7705
        IF (IPORT.EQ.88.OR.IPORT.EQ.89) GO TO  7726

*       ** OUTPUT THE CHANGE RECORD

7720    WRITE (3#IPOS,7725)NEWNOD,IPORT,IPCODE,IPDAT
7725    FORMAT ('NP',',',I5,',',I3,',',I2,',',I6)
        IPOS=IPOS+24

*       ** NOW OUTPUT CHANGE RECORD TO HPORTS FOR OLD NODE NUMBER.
*          SET NODE AND PORT CODES TO 99 TO INDICATE THE NODE AND
*          ALL ASSOCIATED PORTS HAVE BEEN DELETED.

7726    CALL DBSET(2)
        IDEL=99

*       ** TURN ON SPECIAL 1022 ERROR HANDLING
        CALL DBERR($7730,IERT,IERC,0)
        ERRCNT=0

*       ** ADD THE RECORD
7728    CALL DBADD('BILL',IBILL,'NODE',INODE,'NHCODE',IDEL,
     +  'NHDATE',INHDAT,'CITY',CITY,'STATE',ISTATE,'ZONE',IZONE,
     +  'PORT',IPORT,'PCODE',IDEL,'PDATE',IPDAT,'TOC',ITOC)

*       ** ADD WAS SUCCESSFUL. CONTINUE
        GO TO 7732

*       ** ADD WAS UNSUCCESSFUL. CK IF USER WANTS TO CONTINUE
7730    CALL ERRMS2(IERT,IERC,ERRCNT,ISTOP)
        IF (ISTOP.EQ.0) GO TO 7728

*       ** TIME TO STOP. CLOSE HPORTS.
        CALL DBCLOS
        GO TO 9999

*       ** TURN ON SPECIAL 1022 ERROR HANDLING
7732    CALL DBERR($7736,IERT,IERC,0)
        CALL ERRCNT=0

*       ** NOW ADD A CHANGE RECORD FOR NEW NODE NUMBER
7734    CALL DBADD('BILL',IBILL,'NODE',NEWNOD,'NHCODE',NHCOD,'HOST',
     +  IHOST,'NHDATE',INHDAT,'CITY',CITY,'STATE',ISTATE,'ZONE',IZONE,
     +  'PORT',IPORT,'PCODE',IPCODE,'PDATE',IPDAT,'TOC',ITOC)

*       ** CHANGE WAS SUCCESSFUL. SET DATA BASE TO "PORTS"
        CALL DBSET(1)

*       ** GO PROCESS NEXT PORT

        GO TO 7705

*       ** ADD WAS UNSUCCESSFUL. SEE IF USER WANTS TO TRY AGAIN
7736    CALL ERRMS2(IERT,IERC,ERRCNT,ISTOP)
        IF (ISTOP.EQ.0) GO TO 7734

*       ** TIME TO STOP.  CLOSE HPORTS.
        CALL DBCLOS
        GO TO 9999

*       ** FINISHED WITH ALL PORTS. CLOSE JOB FILE

7750    CLOSE(3)

*       ** CLOSE HPORTS
        CALL DBSET(2)
        CALL DBCLOS

*       ** OPEN RENUMBER DATA BASE
7755    CALL DBOPEN('NOCLOSE','(ACCG1)RENUMB')

*       ** TURN ON SPECIAL ERROR HANDLING
7757    CALL DBERR($7765,IERT,IERC,0)
        ERRCNT=0

*       ** ADD A RECORD
7760    CALL DBADD('ONOD',INODE,'NNOD',NEWNOD,'EDATE',INHDAT,'TOC',ITOC)

*       ** ADD WAS SUCCESSFUL
        CALL DBCLOS
        GO TO 7768

*       ** ADD WAS UNSUCCESSFUL
7765    CALL ERRMSG(IERT,IERC,ERRCNT,ISTOP)
        IF (ISTOP.EQ.0) GO TO 7760

*       ** TIME TO STOP
        CALL DBCLOS
        GO TO 9999

*       ** OUTPUT END MESSAGE

7768    TYPE 7770,INODE,NEWNOD,IREC
7770    FORMAT (//,1X,'NODE ',I5,' RENUMBERED TO ',I5,'.',3X,I3,
     +  ' PORTS ON NEW NODE.',/)

*       ** TURN ON INTERRUPTS AND GO TO COMMAND LEVEL

7775    CALL ONINT($90)
        GO TO 105

*       ** UNABLE TO OPEN JOB FILE

7790    TYPE 7795,(JOBFLE(I),I=1,2)
7795    FORMAT (5X,'UNABLE TO OPEN: ',2A5)
        GO TO 9999




*       *******************************
*       *                             *
*       *       RENUMBER HOST         *
*       *                             *
*       *******************************

*       ** INPUT HOST NUMBER

10000   INODE=0
        IHOST=0
        CALL INHNUM(INODE,IHOST,NHCOD,IBILL,CITY,ISTATE,IZONE,IPORT,
     +  IPC,IREC,IERR)

*       ** IF HOST IS IN DATA BASE, CONTINUE.

10005   IF (IERR.EQ.0) GO TO 10018

*       ** IF HOST NUMBER IS INVALID. REENTER

        IF (IERR.EQ.2) GO TO 10015

*       ** IF HOST IS NOT IN DATA BASE, OUTPUT ERROR MESSAGE.

        IF (IERR.NE.1) GO TO 10015
        TYPE 10010
10010   FORMAT (5X,'ERROR!! HOST IS NOT IN DATA BASE',/)
        GO TO 105

*       ** RESET ERROR FLAG AND REPROMPT FOR HOST NUMBER

10015   IERR=0
        GO TO 10000

*       ** SET TYPE-OF-CHANGE FOR BILLING CHANGE RECORDS
10018   ITOC='REN H'

*       ** INPUT NEW HOST INFORMATION. 1ST GET NODE NUMBER FOR NEW HOST

10020   TYPE 10021
10021   FORMAT (/,1X,'* NODE NUMBER FOR NEW ORIGHOST: ',$)
        ACCEPT 10022,(ITEMP(I),I=1,10)
10022   FORMAT (10A1)

*       ** CONVERT ALPHA VALUE JUST INPUT INTO NUMERIC

10024   CALL INTCK(ITEMP,5,NEWNOD,IERR2)
        IF (IERR2.NE.0) GO TO 10020

*       ** CK IF NODE IS IN LEGAL RANGE

10025   IF (NEWNOD.GT.0) GO TO 10028
        TYPE 10026
10026   FORMAT (5X,'ERROR!! INVALID NODE NUMBER')
        GO TO 10020

*       ** CK THAT NUMBER IS OCTAL

10028   CALL OCTCK(NEWNOD,IERR2)
        IF (IERR2.EQ.0) GO TO 10030
        TYPE 10029
10029   FORMAT (5X,'NUMBER MUST BE OCTAL')
        GO TO 10020

*       ** CK IF NODE IS IN DATA BASE.

10030   CALL DBFIND('NODE','EQ',NEWNOD)
        CALL DBNREC(IREC)
        IF (IREC.NE.0) GO TO 10033
        TYPE 10031
10031   FORMAT (5X,'NODE FOR NEW ORIGHOST NOT IN DATA BASE.',/,
     +  5X,'CAN NOT CONTINE.',/)
        GO TO 105

*       ** NODE IS IN DATA BASE.  CK IF NODE IS ISIS

10033   CALL DBGREC($9999)
        CALL DBVAL('NTYPE',NNTYP)
        IF (NNTYP.EQ.'ISI') GO TO 10035
        TYPE 10034
10034   FORMAT (5X,'NODE FOR NEW ORIGHOST IS NOT AN ISIS NODE',/,
     +  5X,'CAN NOT CONTINE.',/)
        GO TO 105

*       ** INPUT THE NEW ORIGHOST

10035   TYPE 10036
10036   FORMAT (/,1X,'* NEW ORIGHOST: ',$)
        ACCEPT 10022,(ITEMP(I),I=1,10)

*       ** CONVERT ALPHA VALUE JUST INPUT INTO NUMERIC

10037   CALL INTCK(ITEMP,5,NEWHST,IERR2)
        IF (IERR2.NE.0) GO TO 10035

*       ** CK IF LEGAL HOST NUMBER

10040   IF (NEWHST.GT.0) GO TO 10045
        TYPE 10041
10041   FORMAT (5X,'ERROR!! INVALID HOST NUMBER')
        GO TO 10035

*       ** CK IF HOST IS ALREADY IN DATA BASE

10045   CALL DBFIND ('NODE','EQ',NEWNOD,'AND','HOST','EQ',NEWHST)
        CALL DBNREC(IREC)
        IF (IREC.EQ.0) GO TO 10050
        TYPE 10046
10046   FORMAT (/,5X,'NEW ORIGHOST IS ALREADY IN DATA BASE ON ',
     +  'THIS NODE.',/,5X,'CAN NOT CONTINUE.',/)
        GO TO 105
*       ** INPUT EFFECTIVE DATE

10050   INDFLG=0
        CALL INDAT(INDFLG,IPORT,INHDAT)
        IPDAT=INHDAT

*       ** FIND ALL RECORDS IN DATA BASE FOR OLD HOST NUMBER

10060   CALL DBFIND('NODE','EQ',INODE,'AND','HOST','EQ',IHOST)
        CALL DBNREC(IREC)

*       ** TURN OFF ESCAPES.

10065   CALL INTDIS

*       ** MAKE CHANGES IN DATA BASE

        CALL DBERR($10068,IERT,IERC,0)
        ERRCNT=0
10067   CALL DBCHNG('NODE',NEWNOD,'HOST',NEWHST,'NHDAT',INHDAT,
     +  'PDAT',IPDAT)
        CALL DBERR(0)
        GO TO 10070

*       ** 1022 ERROR ENCOUNTERED.  INTERPRET ERROR.
10068   CALL ERRMSG(IERT,IERC,ERRCNT,ISTOP)

*       ** CK IF OK TO TRY CHANGE AGAIN

        IF (ISTOP.EQ.0) GO TO 10067
*       ** HAVE TO STOP

        TYPE 10069
10069   FORMAT (5X,'WARNING! UNABLE TO COMPLETE CHANGE TO PORTS',
     +          5X,'DATA BASE.  CHECK PORT MAPS FOR OLD AND NEW',
     +          5X,'HOST NUMBERS.  ACCOUNTING CHANGES HAVE NOT',
     +          5X,'BEEN OUTPUT.',/)
        GO TO 9999

*       ** OPEN THE JOB FILE AND OUTPUT A STOP-HOST CHANGE
*          RECORD FOR OLD HOST NUMBER

10070   OPEN (3,JOBFLE,RANDIO,ERR=10090)
        IPOS=SIZE(3)+2
        WRITE(3#IPOS,10075)INODE,IHOST,INHDAT
10075   FORMAT ('SH',',',I5,',',I5,',',I6)
        IPOS=IPOS+23

*       ** OPEN HPORTS FOR BILLING CHANGE RECORDS
        CALL DBOPEN('NOCLOSE','(ACCG1)HPORTS','PASSWORD',IPASS)
        CALL DBSET(1)

*       ** OUTPUT A DECLARE HOST CHANGE RECORD FOR THE NEW
*          HOST NUMBER

10090   WRITE (3#IPOS,10095)NEWNOD,NEWHST,NHCOD,(CITY(I),I=1,4),
     +  ISTATE,IZONE,INHDAT
10095   FORMAT('DH',',',I5,',',I5,',',I2,',',4A5,',',A3,',',A2,',',I6)
        IPOS=IPOS+54

*       ** OUTPUT A NEW-PORT CHANGE RECORD FOR EACH PORT

10100   CALL DBSORT('PORT')
10105   CALL DBGREC($10150)
        CALL DBVAL('PORT',IPORT,'PCODE',IPCODE)

*       ** DON'T SEND CHANGE RECORDS FOR DECLARE OR REDECLARE RECORDS
*          TO MIS

10110   IF (IPORT.EQ.98.OR.IPORT.EQ.99) GO TO 10105

*       ** NOW OUTPUT CHANGE RECORD TO HPORTS FOR OLD HOST NUMBER.
*          SET NODE/HOST AND PORT CODES TO 99 TO INDICATE THE HOST AND
*          ALL ASSOCIATED PORTS HAVE BEEN DELETED.

10126   CALL DBSET(2)
        IDEL=99

*       ** TURN ON SPECIAL 1022 ERROR HANDLING
        CALL DBERR($10130,IERT,IERC,0)
        ERRCNT=0

*       ** ADD THE RECORD
10128   CALL DBADD('BILL',IBILL,'NODE',INODE,'NHCODE',IDEL,'HOST',
     +  IHOST,'NHDATE',INHDAT,'CITY',CITY,'STATE',ISTATE,'ZONE',IZONE,
     +  'PORT',IPORT,'PCODE',IDEL,'PDATE',IPDAT,'TOC',ITOC)

*       ** ADD WAS SUCCESSFUL. CONTINUE
        GO TO 10132

*       ** ADD WAS UNSUCCESSFUL. CK IF USER WANTS TO CONTINUE
10130    CALL ERRMS2(IERT,IERC,ERRCNT,ISTOP)
        IF (ISTOP.EQ.0) GO TO 10128

*       ** TIME TO STOP. CLOSE HPORTS.
        CALL DBCLOS
        GO TO 9999

*       ** TURN ON SPECIAL 1022 ERROR HANDLING
10132   CALL DBERR($10136,IERT,IERC,0)
        CALL ERRCNT=0

*       ** NOW ADD A CHANGE RECORD FOR NEW HOST NUMBER
10134   CALL DBADD('BILL',IBILL,'NODE',NEWNOD,'NHCODE',NHCOD,'HOST',
     +  NEWHST,'NHDATE',INHDAT,'CITY',CITY,'STATE',ISTATE,'ZONE',
     +  IZONE,'PORT',IPORT,'PCODE',IPCODE,'PDATE',IPDAT,'TOC',ITOC)

*       ** CHANGE WAS SUCCESSFUL. SET DATA BASE TO "PORTS"
        CALL DBSET(1)

*       ** GO PROCESS NEXT PORT

        GO TO 10105

*       ** ADD WAS UNSUCCESSFUL. SEE IF USER WANTS TO TRY AGAIN
10136   CALL ERRMS2(IERT,IERC,ERRCNT,ISTOP)
        IF (ISTOP.EQ.0) GO TO 10134

*       ** TIME TO STOP.  CLOSE HPORTS.
        CALL DBCLOS
        GO TO 9999

*       ** FINISHED WITH ALL PORTS. CLOSE JOB FILE

10150   CLOSE(3)

*       ** CLOSE HPORTS
        CALL DBSET(2)
        CALL DBCLOS

*       ** OPEN RENUMBER DATA BASE
10155   CALL DBOPEN('NOCLOSE','(ACCG1)RENUMB')

*       ** TURN ON SPECIAL ERROR HANDLING
10157   CALL DBERR($10165,IERT,IERC,0)
        ERRCNT=0

*       ** ADD A RECORD
10160    CALL DBADD('ONOD',INODE,'OHST',IHOST,'NNOD',NEWNOD,'NHST',
     +  NEWHST,'EDATE',INHDAT,'TOC',ITOC)

*       ** ADD WAS SUCCESSFUL
        CALL DBCLOS
        GO TO 10168

*       ** ADD WAS UNSUCCESSFUL
10165    CALL ERRMSG(IERT,IERC,ERRCNT,ISTOP)
        IF (ISTOP.EQ.0) GO TO 10160

*       ** TIME TO STOP
        CALL DBCLOS
        GO TO 9999

*       ** OUTPUT END MESSAGE

10168    TYPE 10170,IHOST,INODE,NEWHST,NEWNOD,IREC
10170    FORMAT (//,1X,'HOST ',I5,' ON NODE ',I5,' RENUMBERED TO ',
     +  'HOST: ',I5,' ON NODE: ',I5,'.',/,3X,I3,' PORTS ON NEW HOST.'
     +  ,/)

*       ** TURN ON INTERRUPTS AND GO TO COMMAND LEVEL

10175   CALL ONINT($90)
        GO TO 105

*       ** UNABLE TO OPEN JOB FILE

10190   TYPE 10195,(JOBFLE(I),I=1,2)
10195   FORMAT (5X,'UNABLE TO OPEN: ',2A5)
        GO TO 9999


************************************************************************
*                                                                     *
*                       COMMAND: BILL                                 *
*                                                                     *
*       THIS COMMAND SETS THE BILLING DESIGNATOR ON A NODE OR HOST.   *
*                                                                     *
***********************************************************************

*       ** CK IF USER IS VALID TO ISSUE THIS COMMAND

8000    IF(CURUSR(1).EQ.'ROY'.OR.(CURUSR(1).EQ.'PAULA'.AND.
     +CURUSR(2).EQ.' ').OR.(CURUSR(1).EQ.'DBPOR'.AND.CURUSR(2)
     +.EQ.'TSUPD'))GO TO 8002
        TYPE 8001
8001    FORMAT (5X,'USER NOT AUTHORIZED TO ISSUE THIS COMMAND')
        GO TO 105

*       ** CHECK IF WORKING WITH A NODE OR HOST

8002    IF (IPART2.EQ.'HOST'.OR.IPART2.EQ.'HOS'.OR.IPART2.EQ.'HO'
     X.OR.IPART2.EQ.'H') GO TO 8005

        IF (IPART2.EQ.'NODE'.OR.IPART2.EQ.'NOD'.OR.IPART2.EQ.'NO'
     X.OR.IPART2.EQ.'N') GO TO 8006

        TYPE 8003
8003    FORMAT (/,1X,'* NODE OR HOST: ',$)
        ACCEPT 8004,IPART2
8004    FORMAT (A4)
        GO TO 8002

8005    IOPT='H'
        ITOC='BIL-H'
        GO TO 8010

8006    IOPT='N'
        IHOST=0
        ITOC='BIL-N'

*       ** INPUT NODE NUMBER

8010    CALL INNODE(INODE,NHCOD,IBILL,CITY,ISTATE,IZONE,IPORT,IPC,ITYP
     X  ,IREC,IERR)

*       ** CK IF NEED TO REPROMPT FOR NODE
        IF (IERR.EQ.2) GO TO 8010

*       ** CK IF NODE WAS IN DATA BASE
        IF (IERR.EQ.1) GO TO 8020

*       ** IF SETTING BILLING DESIGNATOR FOR A HOST GO AND MAKE SURE
*          THE NODE IS AN ISIS NODE
        IF (IOPT.EQ.'H') GO TO 8035

*       ** IF ERROR FLAG IS NOT SET THEN NODE IS IN DATA BASE.
*          IT IS OK TO SET BILLING DESIGNATOR.
        IF (IERR.EQ.0) GO TO 8030

*       ** SOME TYPE OF UNKNOWN ERROR HAS BEEN RETURNED. REPROMPT.
        IERR=0
        GO TO 8010

*       ** NODE IS NOT IN DATA BASE

8020    TYPE 8025
8025    FORMAT (5X,'NODE DOES NOT EXIST.')
        GO TO 105

*       ** NODE IS IN DATA BASE. BUT CAN'T SET BILL DESIGNATOR ON
*          AN ENTIRE ISIS NODE, JUST ON INDIVIDUAL HOSTS.

8030    IF (ITYP.NE.'ISI') GO TO 8050
        TYPE 8032
8032    FORMAT (5X,'CAN NOT SET BILLING DESIGNATOR ON AN ISIS NODE.',/
     +  ,5X,'USE BILL HOST COMMAND TO SET BILLING DESIGNATOR',/,
     +  5X,'ON EACH ORIGHOST ON THE NODE.',/)
        GO TO 105

*       ** COMMAD = BILL HOST. CHECK THAT NODE IS AN ISIS NODE

8035    IF (ITYP.EQ.'ISI') GO TO 8040
        TYPE 8037,INODE
8037    FORMAT (5X,'ERROR!! NODE ',I5,' IS NOT AN ISIS NODE!.')
        GO TO 105

*       ** INPUT HOST NUMBER
8040    CALL INHNUM(INODE,IHOST,NHCOD,IBILL,CITY,ISTATE,IZONE,IPORT,
     X  IPC,IREC,IERR2)

*       ** CK IF HOST IS IN DATA BASE
        IF (IERR2.EQ.1) GO TO 8042

*       ** CK IF USER WANTS TO STOP
        IF (IERR2.EQ.2) GO TO 105

*       ** CK IF HOST IS ON A DIFFERENT NODE FROM THE ONE
*          THE USER INPUT
        IF (IERR2.EQ.3) GO TO 8045

*       ** IF THE ERROR FLAG IS NOT SET, THEN THE HOST IS
*          IN THE DATA BASE AND ON THE PROPER NODE.
        IF (IERR2.EQ.0) GO TO 8050

8042    TYPE 8043
8043    FORMAT (5X,'HOST DOES NOT EXIST')
        GO TO 105

*       ** HOST IS IN DATA BASE, BUT ON A DIFFERENT NODE.

8045    TYPE 8046,INODE
8046    FORMAT (5X,'THIS HOST IS NOT ON NODE: ',I5)
        IERR2=0
        GO TO 105

*       ** INPUT BILLING DESIGNATOR
8050    CALL INBILL(IBILL,NUMBIL,BILL,MAXBIL)

*       ** INPUT EFFECTIVE DATE

        CALL INDAT(INDFLG,IPORT,INHDAT)

*       ** TURN ON SPECIAL 1022 ERROR HANDLING 
8060    CALL DBERR($8080,IERT,IERC,0)

        ERRCNT=0

*       ** CHANGE THE BILLING DESIGNATOR ON ALL RECORDS
8070    CALL DBEXEC('STARTREC')
        CALL DBCHNG('NHDAT',INHDAT,'BILL',IBILL)

*       ** CHANGE WAS SUCCESSFUL. GO OUTPUT BILLING CHANGE RECORDS
        GO TO 8100

*       ** CHANGE WAS NOT SUCCESSFUL. CK IF USER WANTS TO STOP
8080    CALL ERRMSG(IERT,IERC,ERRCNT,ISTOP)
        IF (ISTOP.EQ.0) GO TO 8070

*       ** USER WANTS TO STOP. RETURN TO COMMAND LEVEL.
        GO TO 105

*       ** OPEN THE HPORTS DATA BASE FOR BILLING CHANGE RECORDS
8100    CALL DBOPEN ('NOCLOSE','(ACCG1)HPORTS','PASSWORD',IPASS)
        CALL DBSET(1)
        CALL DBEXEC('STARTREC')

*       ** GET A RECORD FROM THE PORTS DATA BASE
8105    CALL DBGREC($8120)

*       ** GET PORT INFORMATION FROM THE RECORD
        CALL DBVAL('PORT',IPORT,'PCODE',IPC,'PDAT',IPDAT)

*       ** SET THE DATA BASE TO HPORTS AND ADD A CHANGE RECORD
        CALL DBSET(2)

*       ** TURN ON SPECIAL ERROR HANDLING
        CALL DBERR($8115,IERT,IERC,0)
        ERRCNT=0

8110    CALL DBADD('BILL',IBILL,'NODE',INODE,'HOST',IHOST,'NHCODE',
     +  NHCOD,'CITY',CITY,'STATE',ISTATE,'ZONE',IZONE,'NHDATE',INHDAT,
     +  'PORT',IPORT,'PCODE',IPC,'PDATE',IPDAT,'TOC',ITOC)

*       ** SET DATA BASE BACK TO PORTS DATA BASE AND GET NEXT RECORD
        CALL DBSET(1)
        GO TO 8105

*       ** ADD WAS UNSCCESSFUL. CK IF USER WANTS TO TRY AGAIN
8115    CALL ERRMS2(IERT,IERC,ERRCNT,ISTOP)
        IF (ISTOP.EQ.0) GO TO 8110

*       ** TIME TO STOP. CLOSE HPORTS.
        CALL DBCLOS
        GO TO 9999

*       ** FINISHED WITH ALL CHANGE RECORDS.  CLOSE HPORTS
8120    CALL DBSET(2)
        CALL DBCLOS

*       ** RETURN TO COMMAND LEVEL
        TYPE 8125
8125    FORMAT (5X,'BILLING DESIGNATOR CHANGE COMPLETED.',/)
        GO TO 105

***********************************************************************
*                                                                     *
*                         COMMAND: PILOT                              *
*                                                                     *
*       THIS COMMAND CHANGES THE PILOT PHONE NUMBER FOR A SPECIFIED   *
*       PORT OR PORT RANGE ON A GIVEN NODE.                           *
*                                                                     *
***********************************************************************

*       ** INPUT NODE NUMBER

8250    CALL INNODE(INODE,NHCOD,IBILL,CITY,ISTATE,IZONE,IPORT,IPC,ITYP
     X  ,IREC,IERR)
        IF (IERR.EQ.0) GO TO 8265
        IF (IERR.EQ.1) GO TO 8255
        IERR=0
        GO TO 8250

*       ** NODE DOES NOT EXIST

8255    TYPE 8260
8260    FORMAT (5X,'NO SUCH NODE')
        GO TO 105

*       ** INPUT PORT OR PORT RANGE

8265    IMAXPT=256
        CURHST=-1
        IPT1=1
        ISTOP=0
        ITPCNT=0
        IOPT=1155
        CALL INPRT(IPT1,IOPT,IMAXPT,IPT2,ITPCNT,IPCNT,INDFLG,
     X  ISTOP)

        IF (ISTOP.NE.0) GO TO 105

*       ** INPUT PILOT PHONE NUMBER
8280    TYPE 8285
8285    FORMAT (/,1X,'* PILOT NUMBER: ',$)
        ACCEPT 8290,(IPHON(I),I=1,3)
8290    FORMAT (3A5)

*       ** IF USER ENTER A C.R., BLANK OUT PILOT NUMBER
        IF (IPHON(1).EQ.' ') GO TO 8300

*       ** CK FORMAT OF PHONE NUMBER
8295    CALL CKFON(IPHON,IERR2)
        IF(IERR2.NE.0) GO TO 8280

*       ** GET RECORD FOR IST PORT IN RANGE
8300    CALL DBFIND('NODE','EQ',INODE,'AND','PORT','EQ',PORTS(1,1))
        IF (ITPCNT.EQ.1) GO TO 8308

*       ** GET RECORDS FOR ALL OTHER PORTS IN RANGE
        DO 8305 I=2,ITPCNT
        CALL DBFIND('LAST','SAV.',1,'NODE','EQ',INODE,'AND','PORT',
     +  'EQ',PORTS(I,1),'OR','REF.',1)
8305    CONTINUE

*       ** DETERMINE NUMBER OF RECORDS SELECTED
8308    CALL DBNREC(NUMREC)

*       ** IF NO RECORDS SELECTED, ERROR
        IF (NUMREC.GT.0) GO TO 8310
        TYPE 8309
8309    FORMAT (/,5X,'NO RECORDS IN DATA BASE FOR PORTS IN THIS PORT',
     +  ' RANGE.',/)
        GO TO 8265

*       ** TURN ON SPECIAL 1022 ERROR HANDLING
8310    CALL DBERR($8320,IERT,IERC,0)
        ERRCNT=0

*       ** CHANGE PILOT PHONE NUMBER IN THESE RECORDS
8315    CALL DBCHNG('PILOT',IPHON)

*       ** CHANGE WAS SUCCESSFUL
        GO TO 8330

*       ** CHANGE WAS UNSUCCESSFUL. CK IF USER WANTS TO TRY AGAIN.
8320    CALL ERRMSG(IERT,IERC,ERRCNT,ISTOP)
        IF(ISTOP.EQ.0) GO TO 8315
        GO TO 105

*       ** FINISHED
8330    TYPE 8335,NUMREC
8335    FORMAT (/,5X,'UPDATE COMPLETED.',2X,I4,1X,'RECORDS CHANGED.',
     +  /)
        GO TO 105

8500    CONTINUE

**********************************************************************
*                                                                     *
*                       COMMAND: NUMBER                               *
*                                                                     *
*       THIS COMMAND GIVES INFORMATION ON NUMBER CHANGES FOR NODES    *
*       AND ORIGHOSTS.                                                *
*                                                                     *
**********************************************************************

*       ** CK IF WANT NUMBER CHANGES ON A NODE OR HOST

8750    IF (IPART2.EQ.'NODE'.OR.IPART2.EQ.'NOD'.OR.IPART2.EQ.'NO'.OR.
     +      IPART2.EQ.'N') GO TO 8754

        IF (IPART2.EQ.'HOST'.OR.IPART2.EQ.'HOS'.OR.IPART2.EQ.'HO'.OR.
     +     IPART2.EQ.'H') GO TO 8800

        TYPE 8751
8751    FORMAT (/,1X,'* NODE OR HOST: ',$)
        ACCEPT 8752,IPART2
8752    FORMAT (A4)
        GO TO 8750

*       ** OPEN THE RENUMBER DATA BASE

8754    CALL DBOPEN('NOCLOSE','(ACCG1)RENUMB')
        CALL DBCSET(ICDB)

*       *******************************
*       *                             *
*       *   NUMBER CHANGE ON NODE     *
*       *                             *
*       *******************************

*       ** INPUT THE NODE NUMBER
8755    TYPE 8760
8760    FORMAT (1X,'* NODE: ',$)
        ACCEPT 8765,ITEMP
8765    FORMAT (10A1)

*       ** CONVERT THE ALPHA STRING JUST INPUT INTO A NUMBER
8770    CALL INTCK(ITEMP,5,INODE,IERR)
        IF (IERR.NE.0) GO TO 8755

*       ** FIND THIS NODE NUMBER IN RENUMBER DATA BASE
8775    CALL DBFIND('NNOD','EQ',INODE,'OR','ONOD','EQ',INODE)
        CALL DBNREC(IREC)
        IF (IREC.NE.0) GO TO 8790

*       ** NODE NOT IN DATA BASE
        TYPE 8780,INODE
8780    FORMAT (1X,'THERE HAS BEEN NO NODE NUMBER CHANGE INVOLVING:',
     +  1X,I4,/)
        GO TO 8795

*       ** OUTPUT THE INFORMATION

8790    CALL DBEXEC('USE (ACCG1)RENUMB.DMC')

*       ** CLOSE THE RENUMBER DATA BASE

8795    CALL DBSET(ICDB)
        CALL DBCLOS

*       ** RETURN TO COMMAND LEVEL
        GO TO 105



*       *********************************
*       *                               *
*       *     NUMBER CHANGE ON HOST     *
*       *                               *
*       *********************************

*       ** OPEN THE RENUMBER DATA BASE

8800    CALL DBOPEN('NOCLOSE','(ACCG1)RENUMB')
        CALL DBCSET(ICDB)

*       ** INPUT THE HOST NUMBER
8805    TYPE 8806
8806    FORMAT (1X,'* ORIGHOST: ',$)
        ACCEPT 8807,ITEMP
8807    FORMAT (10A1)

*       ** CONVERT THE ALPHA STRING JUST INPUT INTO A NUMBER
8810    CALL INTCK(ITEMP,5,IHOST,IERR)
        IF (IERR.NE.0) GO TO 8805

*       ** FIND THIS HOST NUMBER IN RENUMBER DATA BASE
8820    CALL DBFIND('NHST','EQ',IHOST,'OR','OHST','EQ',IHOST)
        CALL DBNREC(IREC)
        IF (IREC.NE.0) GO TO 8840

*       ** HOST NOT IN DATA BASE
        TYPE 8825,IHOST
8825    FORMAT (1X,'THERE HAS BEEN NO HOST NUMBER CHANGE INVOLVING:',
     +  1X,I5,/)
        GO TO 8845

*       ** OUTPUT THE INFORMATION

8840    CALL DBEXEC('USE (ACCG1)RENUMB.DMC')

*       ** CLOSE THE RENUMBER DATA BASE

8845    CALL DBSET(ICDB)
        CALL DBCLOS

*       ** RETURN TO COMMAND LEVEL
        GO TO 105





**********************************************************************
*                                                                     *
*                       COMMAND: LOL                                 *
*                                                                    *
*       THIS COMMAND SET LENGTH OF LINE FOR OUTPUT OF PORT INFO.     *
*                                                                    *
**********************************************************************

*       ** INPUT LENGTH-OF-LINE
8900    TYPE 8905
8905    FORMAT (1X,'* LENGTH-OF-LINE? (71 OR 132): ',$)
        ACCEPT 8910,ILOL
8910    FORMAT (I3)
        IF (ILOL.NE.71.AND.ILOL.NE.132) GO TO 8900

*       ** IF LOL=71 CK IF USER WANTS A BRIEF OR VERBOSE LISTING
8920    IF (ILOL.NE.71) GO TO 8950
8922    TYPE 8925
8925    FORMAT (1X,'* TYPE-OF-LISTING (BRIEF OR VERBOSE): ',$)
        ACCEPT 8930,LSTTYP
8930    FORMAT (A1)
        IF (LSTTYP.NE.'B'.AND.LSTTYP.NE.'V') GO TO 8922

*       ** FINISHED
8950    GO TO 105
	
9000    GO TO 9999
9999    CALL DBEND
9998    END
}@