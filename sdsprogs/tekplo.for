CCCCC
C                          *** PLONET ***
CCCCC

        SUBROUTINE PLONET

        DOUBLE PRECISION NONA,FILNAM
      COMMON /NODES/ NUMNOD, NODNUM(1000), NODNAM(1000), NODTYP(1000),
     -               NODLON(1000), NODLAT(1000), NODX(1000), NODY(1000)
        DOUBLE PRECISION NODNAM
      INTEGER NUMNOD, NODNUM, NODTYP
      REAL    NODLON, NODLAT, NODX, NODY
   
      COMMON /LINES/ NUMLIN, LINN1(2000), LINN2(2000), LINTYP(2000),
     -               LINBPS(2000), LINGRP(2000), LINNAM(4,2000)
      INTEGER NUMLIN, LINN1, LINN2, LINTYP, LINGRP, LINNAM
      REAL    LINBPS
        COMMON /AREA/ XMIN,XMAX,YMIN,YMAX
C
C       GET TNTHE DATA 
C
        IAX=1

C
C
C     INITIALIZE THE TEKTRONICS.
1       CALL TEK(120,1)
C
C     SET THE PAGE SIZE.
        CALL PAGE(16.0,12.0)
        CALL NOBRDR
C
C     SET THE PHYSICAL ORIGIN AT A POSITION .5 INCHES UP AND TO THE
C     RIGHT OF THE LOWER LEFT HAND CORNER OF THE PAGE.
        CALL PHYSOR(0.5,0.5)
C
C     DEFINE THE SUBPLOT AREA AS 15.5 X 11.5 INCHES.
        CALL TITLE(' $',100,' $',100,' $',100,15.,11.)
C     INITIALIZE 
        XMIN = 9999.
        XMAX = -9999.
        YMIN = 9999.
        YMAX = -9999.
C
        DO 20 I=1,NUMNOD
           IF (NODLON(I).LT.XMIN) XMIN = NODLON(I)
           IF (NODLON(I).GT.XMAX) XMAX = NODLON(I)
           IF (NODLAT(I).LT.YMIN) YMIN = NODLAT(I)
           IF (NODLAT(I).GT.YMAX) YMAX = NODLAT(I)
   20      CONTINUE
C
21      XJ=0.05*(XMAX-XMIN)
        XK=0.03*(YMAX-YMIN)
        I=IFIX(XMIN-XJ)
        XMIN=FLOAT(I-1)
        I=IFIX(XMAX+XJ)
        XMAX=FLOAT(I+1)
        I=IFIX(YMIN-XK)
        YMIN=FLOAT(I-1)
        I=IFIX(YMAX+XK)
        YMAX=FLOAT(I+1)
C     CALCULATE THR X AND Y STEP SIZES.
        XSTP = (XMAX-XMIN)/10.
        IF (XSTP.LT.1.) XSTP=1.
        I=IFIX(XSTP)
        XSTP=FLOAT(I)
        YSTP = (YMAX-YMIN)/10.
        IF (YSTP.LT.1.) YSTP=1.
        I=IFIX(YSTP)
        YSTP=FLOAT(I)
C
        CALL MAPGR(XMIN,XSTP,XMAX,YMIN,YSTP,YMAX)
        CALL XMPAXS(XMIN,XSTP,XMAX,' $',-100,YMAX)
        CALL YMPAXS(YMIN,YSTP,YMAX,' $',-100,XMAX)
        CALL FRAME

C
C     DRAW NODES.

        DO 25 I=1,NUMNOD
        IDX=I
        CALL DRAWND(IDX)
25      CONTINUE

C
C       DRAW LINES

        IF (NUMLIN.LE.0) GOTO 31
           DO 30  L=1,NUMLIN
        IDX=L
        CALL DRAWLN(IDX,IAX)
   30      CONTINUE
        DO 333 I=1,100000
        IDUM=I+3*I
333      CONTINUE
        CALL FRAME
        READ (5,66,ERR=31) IPAST
66      FORMAT(A1)
C
31      TYPE 32
32      FORMAT(1X,'DO YOU WANT TO MOVE A NODE ?')
        READ (5,33,ERR=31) IRESP
33      FORMAT(A1)
        IF (IRESP.EQ.'Y')GOTO 34
        IF (IRESP.EQ.'N') GOTO 49
        GOTO 31

34      TYPE 35
35      FORMAT(/,1X,'ENTER NAME OF THE NODE')
        READ (5,36,ERR=34) NONA
36      FORMAT(A10)
        DO 37 I=1,100
        IF (NONA.EQ.NODNUM(I)) GOTO 39
37      CONTINUE

        TYPE 38
38      FORMAT(/,1X,'ERROR CAN T FIND THIS NAME')
        GOTO 34

39      ITINO=I

        TYPE 40
40      FORMAT(/1X,'ENTER COORDINATES OF THE NEW CENTER:')
        READ (5,41,ERR=39) X,Y
41      FORMAT(2G)
        NODLON(ITINO)=X
        NODLAT(ITINO)=Y

        CALL DASH
        CALL DRAWND(ITINO)
        CALL RESET('DASH')

42      TYPE 43
43      FORMAT(/,1X,'DO YOU WANT TO SAVE THE NEW TOPOLOGY')
        READ(5,44,ERR=42) IRESP
44      FORMAT(A1)
        IF (IRESP.EQ.'Y') GOTO 45
        IF (IRESP.EQ.'N') GOTO 31
        GOTO42

45      TYPE 46
46      FORMAT (/,1X,'ENTER FILENAME')
        READ (5,47,ERR=45) FILNAM
47      FORMAT(A10)

        OPEN(UNIT=21,DEVICE='DSK',FILE=FILNAM,
     -ACCESS='SEQINOUT',MODE='ASCII',ERR=45)
        DO 48 I=1,NUMNOD
        TEMP=-NODLON(I)
        WRITE(21,55,ERR=48) NODNUM(I),NODNAM(I),NODLON(I),NODLAT(I)
     -,NODTYP(I)
55      FORMAT(1X,I4,1X,A10,3X,I1,2X,F10.5,1X,F10.5,1X,I2)
48      CONTINUE
        CLOSE (UNIT=21)
        GOTO 31
49      CALL ENDPL(0)
        TYPE 50
50      FORMAT(/,1X,'DO YOU WANT TO SCALE A SUBPLOT',/,1X,'?')
        READ (5,51,ERR=49) IRESP
51      FORMAT (A1)
        IF (IRESP.EQ.'Y') GOTO 100
        IF (IRESP.EQ.'N') GOTO 500
        GOTO 49

100     TYPE 101
101     FORMAT (1X,'ENTER COORDINATES OF THE CENTER OF ',
     -/,1X,'THE AREA YOU WANT TO SCALE :')
        READ (5,10001,ERR=49) XPOS,YPOS
10001   FORMAT(2G)

        TYPE 102
102     FORMAT(/,1X,'ENTER NUMBERS BY WHICH YOU WANT ',
     -/,1X,'TO DIVIDE EACH AXIS :')
        READ (5,103,ERR=49) SPAR1,SPAR2
103     FORMAT(2G)
104     TYPE 105
105     FORMAT(/,1X,'DO YOU WANT ONLY THE LINES OF THE 
     - SUBNETWORK ?')
        READ (5,106,ERR=104) IRESP
106     FORMAT(A1)
        IF (IRESP.EQ.'Y') IAX=0
        IF (IRESP.EQ.'N') IAX=1



        CALL DRAWSP(XPOS,YPOS,SPAR1,SPAR2,
     -XM1,XM2,YM1,YM2)

        XMIN=XM1
        XMAX=XM2
        YMIN=YM1
        YMAX=YM2

        GOTO 21

500     TYPE 501
501     FORMAT(/,1X,'DO YOU WANT THE ENTIRE NETWORK AGAIN?')
        READ (5,502,ERR=500) IRESP
502     FORMAT(A1)
        IF (IRESP.EQ.'Y') GOTO 1
        IF (IRESP.EQ.'N') GOTO 600
        GOTO 500

600     CALL DONEPL
C
        RETURN
        END

CCCCC
C                *** DRAWSP ***
C       DEFINE THE SUBPLOT AREA
CCCCC

        SUBROUTINE DRAWSP(X,Y,XPAR,YPAR,
     -XOUT1,XOUT2,YOUT1,YOUT2)

        COMMON /AREA/ XMIN,XMAX,YMIN,YMAX
        CALL TEK(120,1)
        CALL PAGE(16.,12.)
        CALL NOBRDR
        CALL PHYSOR(0.5,0.5)
        CALL TITLE(' $',100,' $',100,' $',100,15.,11.)
        CALL NOCHEK

        XOUT1=X-(XMAX-XMIN)/(2.*XPAR)
        IF ((XOUT1.LT.XMIN).AND.(XPAR.GT.1.)) XOU1=XMIN
        XOUT2=X+((XMAX-XMIN)/(2.*XPAR))+1
        IF ((XOUT2.GT.XMAX).AND.(XPAR.GT.1.)) XOU2=XMAX
        YOUT1=Y-(YMAX-YMIN)/(2.*YPAR)
        IF ((YOUT1.LT.YMIN).AND.(YPAR.GT.1.)) YOUT1=YMIN
        YOUT2=Y+((YMAX-YMIN)/(2.*YPAR))+1
        IF ((YOUT2.GT.YMAX).AND.(YPAR.GT.1.)) YOUT2=YMAX

        RETURN
        END

CCCCCC
C
C               *** DRAWND  ***
C
CCCCCC

        SUBROUTINE DRAWND(IXD)

        REAL XARAY(100),YARAY(100)
      COMMON /NODES/ NUMNOD, NODNUM(1000), NODNAM(1000), NODTYP(1000),
     -               NODLON(1000), NODLAT(1000), NODX(1000), NODY(1000)
        DOUBLE PRECISION NODNAM
      INTEGER NUMNOD, NODNUM, NODTYP
      REAL    NODLON, NODLAT, NODX, NODY
   
        COMMON /AREA/ XMIN,XMAX,YMIN,YMAX

        CST1=0.030*(XMAX-XMIN)
        CST2=0.013*(YMAX-YMIN)

        IF (NODLON(IXD).GE.(XMAX-CST1)) GOTO 25
        IF (NODLON(IXD).LE.(XMIN+CST1)) GOTO 25
        IF (NODLAT(IXD).GE.(YMAX-CST2)) GOTO 25
        IF (NODLAT(IXD).LE.(YMIN+CST2)) GOTO 25
        DO 24 T=1,100
        XARAY(T)=NODLON(IXD)+CST1*COS(T*0.0628)
        YARAY(T)=NODLAT(IXD)+CST2*SIN(T*0.0628)
24      CONTINUE

        IF (NODTYP(IXD).GT.1) GOTO 29
        GOTO 100
29      IF (NODTYP(IXD).GT.2) GOTO 30
        CALL DASH
        GOTO 100
30      IF (NODTYP(IXD).GT.3) GOTO 100
        CALL MOVCRV(0.05)
        CALL CURVE(XARAY,YARAY,100,0)

100     CALL RESET('MOVCRV')
        CALL CURVE(XARAY,YARAY,100,0)
        CALL HEIGHT(0.1)
        XPOS=NODLON(IXD)-0.021*(XMAX-XMIN)
        YPOS=NODLAT(IXD)-0.0055*(YMAX-YMIN)
        CALL RLINT(NODNUM(IXD),XPOS,YPOS)
        CALL RESET('DOT')
        CALL RESET('DASH')
        CALL RESET('CHNDOT')
        CALL RESET('CHNDSH')

25      RETURN
        END


CCCCC
C
C               *** DRAWLN ***
C
CCCCC

        SUBROUTINE DRAWLN(IXD,IXA)

      COMMON /NODES/ NUMNOD, NODNUM(1000), NODNAM(1000), NODTYP(1000),
     -               NODLON(1000), NODLAT(1000), NODX(1000), NODY(1000)
        DOUBLE PRECISION NODNAM
      INTEGER NUMNOD, NODNUM, NODTYP
      REAL    NODLON, NODLAT, NODX, NODY
   
      COMMON /LINES/ NUMLIN, LINN1(2000), LINN2(2000), LINTYP(2000),
     -               LINBPS(2000), LINGRP(2000), LINNAM(4,2000)
      INTEGER NUMLIN, LINN1, LINN2, LINTYP, LINGRP, LINNAM
      REAL    LINBPS
        COMMON /AREA/ XMIN,XMAX,YMIN,YMAX
        DIMENSION XCUR(2),YCUR(2)


                CST1=0.03*(XMAX-XMIN)
        CST2=0.013*(YMAX-YMIN)

        ICOM=0
              N1 = LINN1(IXD)
              N2 = LINN2(IXD)
        IF (NODLON(N1).GE.XMAX-CST1) GOTO 10     
        IF (NODLAT(N1).GE.YMAX-CST2) GOTO 10     
        IF (NODLON(N1).LE.XMIN+CST1) GOTO 10     
        IF (NODLAT(N1).LE.YMIN+CST2) GOTO 10     
        GOTO 15
10      ICOM=1
15      IF (NODLON(N2).GE.XMAX-CST1) GOTO 20
        IF (NODLAT(N2).GE.YMAX-CST2) GOTO 20
        IF (NODLON(N2).LE.XMIN+CST1) GOTO 20
        IF (NODLAT(N2).LE.YMIN+CST2) GOTO 20
        GOTO 21
20      ICOM=ICOM+1
21      IF (ICOM.GT.IXA) GOTO 300
        IF (ICOM.EQ.0) GOTO 25
        CALL DOT
25      IF (NODLON(N1).EQ.NODLON(N2)) GOTO 26
        PENT=(NODLAT(N2)-NODLAT(N1))/(NODLON(N2)-NODLON(N1))
        ANG=ATAN(PENT)
        IF (NODLON(N1).LE.NODLON(N2)) GOTO 28
        ANG=ANG+3.14
        GOTO 28
26      IF (NODLAT(N1).LE.NODLAT(N2)) GOTO 27
        ANG=1.57+3.14
        GOTO 28
27      ANG=1.57
28      X1=NODLON(N1)+CST1*COS(ANG)
        Y1=NODLAT(N1)+CST2*SIN(ANG)
        X2=NODLON(N2)+CST1*COS(ANG+3.14)
        Y2=NODLAT(N2)+CST2*SIN(ANG+3.14)

        XI1=15.*((X1-XMIN)/(XMAX-XMIN))
        XI2=15.*((X2-XMIN)/(XMAX-XMIN))
        YI1=11.*((Y1-YMIN)/(YMAX-YMIN))
        YI2=11.*((Y2-YMIN)/(YMAX-YMIN))

        IF (ICOM.EQ.1) GOTO 100

        IF (LINTYP(IXD).GT.1) GOTO 29
        CALL DASH
        GOTO 100
29      IF (LINTYP(IXD).GT.2) GOTO 30
        CALL CHNDOT
        GOTO 100
30      IF (LINTYP(IXD).GT.3) GOTO 31
        CALL RESET('DOT')
        CALL RESET('DASH')
        CALL RESET('CHNDOT')
        CALL RESET('CHNDSH')
        GOTO 100
31      IF (LINTYP(IXD).GT.4) GOTO 32
        OFFSET=-0.01
        CALL CHNDSH
        DO 71 I=1,3
        IF (OFFSET.EQ.0.) GOTO 70
        CALL MOVCRV(OFFSET)
70      XCUR(1)=X1
        XCUR(2)=X2
        YCUR(1)=Y1
        YCUR(2)=Y2
        CALL CURVE(XCUR,YCUR,2,0)
        CALL RESET('MOVCRV')
        OFFSET=OFFSET+0.01
71      CONTINUE
        GOTO 100
32      OFFSET=-0.02
        DO 33 I=1,5
        IF (OFFSET.EQ.0.) GOTO 44
        CALL MOVCRV(OFFSET)
44      XCUR(1)=X1
        YCUR(1)=Y1
        XCUR(2)=X2
        YCUR(2)=Y2
        CALL CURVE(XCUR,YCUR,2,0)
        OFFSET=OFFSET+0.01
33      CONTINUE

100     CALL STRTPT(XI1,YI1)
        CALL CONNPT(XI2,YI2)
        CALL RESET('DOT')
        CALL RESET('DASH')
        CALL RESET('CHNDOT')
        CALL RESET('CHNDSH')

300      RETURN
        END

    