C
        INTEGER PORT,COLON,RESULT,CHAR,CR,PROBE(2),USERNA(6),AN(4),
     X  AD(4),PASSWD(9),HCOUNT(900),SCR(6),TABLE(1234),DNODE(200)
        DIMENSION KILL(5),IBLOCK(101),ILINE(72),IFILE1(2),IFILE2(2)
        DIMENSION IFILE3(2),IFILE4(2),IFILE5(2),NODNUM(4),N(8),
     X  LTEMP1(10),ITMP(20),NNODE(900),NODE(900),IPTR(900),NTYP(900),
     X  LCOUNT(900),IHOST(900,5),LNAM(4),NNAM(2),LFILE(2),NFILE(2),
     X  LINDMS(4),NODDMS(4),IDATE(2)
C
        COMMON /PRBE/PORT
        COMMON /COMPKG/TABLE
C
        DATA PROBE/'PROBE:*;  '/
        DATA COLON/58/,LF/10/,CR/13/
        DATA KILL/4,69,88,73,13/
        DATA USERNA/5,68,79,73,84,13/
        DATA PASSWD/8,84,82,79,85,66,76,69,13/
        DATA AN/3,65,78,13/
        DATA AD/3,65,68,13/
        DATA N(2)/78/,N(3)/32/
        DATA NTEMP/5/
        DATA (LTEMP1(I),I=1,5)/1077,1176,1177,1376,1377/
        DATA ICOLON/"351004020100/
        DATA ILF/"051004020100/
        DATA IBLANK/1H /
C
C  SET UP X22 BUFFER INTERFACE
C
        CALL DBSTRT(1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0)
C
C  HOW ABOUT A HEADING FOR FUN ?
C
        CALL DATE(IDATE)
        CALL TIME(ITIME)
        TYPE 50, IDATE,ITIME
 50     FORMAT(//10X,'PROGRAM TOPOLOGY PROBE',5X,'VERSION 1.0',
     X  /15X,2A5,15X,A5,//)
C
C  PROMPT FOR INPUT DATA BASE NAME
C
        TYPE 51
 51     FORMAT(1X,'TOPOLOGY DATA BASE NAME (NO EXT): ',$)
        ACCEPT 52,LINDMS
 52     FORMAT(4A5)
C
C  PUT EXTENSION .NOD AND .LIN TO DATA BASE NAMES
C
        DO 53 I=1,4
        NODDMS(I)=LINDMS(I)
 53     CONTINUE
C
        DO 54 I=1,17
        CALL RTC(ICHAR,LINDMS,I)
        IF (ICHAR.EQ.' ') GO TO 60
 54     CONTINUE
C
        TYPE 57,LINDMS
 57     FORMAT(1X,'DATA BASE NAME ',4A5,' EXCEEDS 17 CHARACTERS')
        STOP
C
 60     CALL STC('.',LINDMS,I)
        CALL STC('L',LINDMS,I+1)
        CALL STC('I',LINDMS,I+2)
        CALL STC('N',LINDMS,I+3)
        CALL STC('.',NODDMS,I)
        CALL STC('N',NODDMS,I+1)
        CALL STC('O',NODDMS,I+2)
        CALL STC('D',NODDMS,I+3)
C
C  BUILD OUTPUT FILE NAMES
C
        CALL DATCON(IDATE,NEWDAT,IER)
        ENCODE(6,62,ITEMP) NEWDAT
 62     FORMAT(I6)
        DECODE(6,63,ITEMP)(SCR(I),I=1,6)
 63     FORMAT(6I1)
        ENCODE(10,64,LFILE)(SCR(I),I=1,6)
 64     FORMAT(6I1,'.LIN')
        ENCODE(10,65,NFILE)(SCR(I),I=1,6)
 65     FORMAT(6I1,'.NOD')
C
C  BUILD TEMPORARY FILENAMES
C
        IFILE1(1)=MUSENO('A')
        IFILE1(2)='.TMP'
        IFILE2(1)=MUSENO('B')
        IFILE2(2)='.TMP'
        IFILE3(1)=MUSENO('C')
        IFILE3(2)='.TMP '
        IFILE5(1)=MUSENO('D')
        IFILE5(2)='.TMP'
        IFILE4(1)='OUTPR'
        IFILE4(2)='.DAT'
C
C  BUILD AUX CIRCUIT TO PROBE
C
        IER=0
        CALL BCIR(PROBE,PORT,IER)
        IF (IER.EQ.0) GO TO 110
        TYPE 100,IER
 100    FORMAT(' UNABLE TO BUILD CIRCUIT, RESPONSE: ',O12)
        GO TO 2001
C
C  SEND PROBE LOGIN AFTER EATING A COLON
C
 110    CALL SCAN(COLON,RESULT)
        IF (RESULT.EQ.1) GO TO 130
        TYPE 120
 120    FORMAT(' BAD PROBE RESPONSE')
        GO TO 2001
C
C  SEND USERNAME AND PASSWORD
C
 130    CALL SEND(USERNA)
        CALL SCAN(COLON,RESULT)
        IF (RESULT.NE.1) GO TO 110
        CALL SEND(PASSWD)
        CALL SCAN(COLON,RESULT)
        IF (RESULT.NE.1) GO TO 110
C
C  INTO PROBE, TELL USER
C
        TYPE 135
 135    FORMAT(' LOGGED INTO PROBE')
        CALL ONINT($2000)
C
C  SEND OUT THE 'AN' COMMAND
C
        CALL SEND(AN)
C
C  ENTER BLOCK I/O MODE
C
        CALL BIOSTR(PORT,IER)
        IF (IER.EQ.0) GO TO 165
        TYPE 157
 157    FORMAT(1X,'CAN''T ENTER BLOCK I/O MODE')
        GO TO 2000
C
C  OPEN TMP IFILE3 FOR 'AN' OUTPUT
C
 165    OPEN(21,IFILE3,RANDOUT(1),BINARY)
C
C  RETRIEVE PROBE OUTPUT ONE BLOCK AT A TIME
C
        IPORT=PORT
 166    DO 170 I=1,101
        IBLOCK(I)=0
 170    CONTINUE
        PORT=IPORT
        CALL GETRPY(PORT,IBLOCK,IFLAG)
        IF (IFLAG.EQ.2.OR.IFLAG.EQ.3) GO TO 185
        IPOS=POSITION(21)
        WRITE(21#IPOS) (IBLOCK(I),I=2,101)
        IF (IFLAG.EQ.0) GO TO 166
C
C  ALL DATA IN
C
        CLOSE(21)
        OPEN(21,IFILE3,RANDIN,BINARY)
        OPEN(22,IFILE1,OUTPUT,SYMBOLIC)
 175    IPOS=POSITION(21)
        READ(21#IPOS,END=180) IWORD
C
C  LEFT SHIFT ONE BIT AND RTC CHAR
C
        DO 178 I=1,4
        IWORD=LSH(IWORD,1)
        CALL RTC(ICHAR,IWORD,1)
        IF (ICHAR.EQ.ILF.OR.ICHAR.EQ.ICOLON) GO TO 177
        WRITE(22,176) ICHAR
 176    FORMAT(A1,$)
 177    IWORD=LSH(IWORD,7)
 178    CONTINUE
        GO TO 175
 180    CLOSE(21)
        CLOSE(22)
        GO TO 188
C
C  ERROR HERE DURING BLOCK I/O
C
 185    TYPE 186,IFLAG
 186    FORMAT(1X,'ERROR DURING BLOCK I/O, CODE =',I7)
        GO TO 2000
C
C  NOW GET THE LIST OF ALL DOWN NODES
C
 188    OPEN(21,IFILE2,OUTPUT,SYMBOLIC)
        IPOS=1
C
C  SEND OUT THE 'AD' COMMAND
C
        CALL SEND(AD)
C
C  NOW GET OUTPUT FROM PROBE CHAR BY CHAR
C
 190    CALL WAIT(1.0)
 195    CALL GETCHR(PORT,CHAR)
        IF (CHAR.LT.0) GO TO 190
        CHAR=IAND(CHAR,127)
C
C  CHECK IF END OF OUTPUT FROM 'AD' COMMAND
C
        IF (CHAR.EQ.COLON) GO TO 205
C
C  IF NOT, LEFT SHIFT ONE BIT AND STORE CHAR INTO A LINE
C
        IF (CHAR.EQ.CR) GO TO 200
        IF (CHAR.EQ.LF) GO TO 195
        CHAR=LSH(CHAR,1)
        ILINE(IPOS)=CHAR
        IPOS=IPOS+1
        GO TO 195
 200    IPOS=IPOS-1
        WRITE(21,181)(ILINE(I),I=1,IPOS)
 181    FORMAT(72A5)
        IPOS=1
        GO TO 195
C
C  DONE HERE WITH THE 'AD' COMMAND
C
 205    CLOSE(21)
C
C  READ THE LIST OF NODES FROM 'AN' COMMAND
C
        OPEN(21,IFILE1,INPUT,SYMBOLIC)
        ICTR=1
 210    READ(21,211,ERR=213,END=220) NNODE(ICTR),IVERS,ITYP
 211    FORMAT(3I)
C
C  CHECK FOR CORRECT NODE TYPE TO MAKE SURE
C
        IF (ITYP.LT.0.OR.ITYP.GT.9) GO TO 213
C
C  CHECK FOR CORRECT NODE NO. TO MAKE SURE
C
        IF (NNODE(ICTR).LE.0) GO TO 213
        ICTR=ICTR+1
        GO TO 210
C
C  INPUT LINE IS SUSPICIOUS, PRINT A MESSAGE
C
 213    TYPE 214,ICTR,IFILE1
 214    FORMAT(' FOLLOWING LINE AT POSITION ',I4,' IN FILE ',2A5,
     X  ' MAY NOT BE CORRECT :')
        REREAD 217,(ILINE(K),K=1,72)
 217    FORMAT(72A1)
        TYPE 218,(ILINE(K),K=1,72)
 218    FORMAT(1X,72A1)
C
C  ERROR, QUIT THE PROGRAM
C
        GO TO 1900
C
C  FINISHED READING, CLOSE THE FILE
C
 220    CLOSE(21)
        ICTR=ICTR-1
C
C  CHECK IF ARRAY: NNODE IS REALLY IN ASCENDING ORDER
C
        ITEMP=NNODE(1)
        IF (ITEMP.LE.0) GO TO 1900
        DO 225 I=2,ICTR
        IF (ITEMP.GE.NNODE(I)) GO TO 1900
        ITEMP=NNODE(I)
 225    CONTINUE
C
C  NOW READ THE LIST OF NODES FROM 'AD' COMMAND
C
        OPEN(21,IFILE2,INPUT,SYMBOLIC)
C
C  READ LINE BY LINE
C
        ICOUNT=1
 230    READ(21,231,ERR=237,END=239) (ITMP(I),I=1,20)
 231    FORMAT(1X,20I)
        J=1
 235    IF (ITMP(J).EQ.0) GO TO 230
        DNODE(ICOUNT)=ITMP(J)
        ICOUNT=ICOUNT+1
        J=J+1
        IF (J.LE.20) GO TO 235
 237    TYPE 214, ICOUNT,IFILE2
        REREAD 217,(ILINE(K),K=1,72)
        TYPE 218,(ILINE(K),K=1,72)
C
C  ERROR, QUIT THE PROGRAM
C
        GO TO 1910
C
C  FINISHED READING, CLOSE THE FILE
C
 239    CLOSE(21)
        ICOUNT=ICOUNT-1
C
C  CHECK IF ARRAY: DNODE IS REALLY IN ASCENDING ORDER
C
        ITEMP=DNODE(1)
        IF (ITEMP.LE.0) GO TO 1910
        DO 240 I=2,ICOUNT
        IF (ITEMP.GE.DNODE(I)) GO TO 1910
        ITEMP=DNODE(I)
 240    CONTINUE
C
C  MERGE AND SORT THE 2 ARRAYS NNODE AND DNODE
C
        I=0
 242    I=I+1
        ICTR=ICTR+1
        NNODE(ICTR)=DNODE(I)
        IF (I.LT.ICOUNT) GO TO 242
        CALL QSORT(NNODE,IPTR,ICTR)
C
C  MERGING IS DONE, CLEAR THE ARRAY: DNODE
C
        DO 243 I=1,ICOUNT
        DNODE(I)=0
 243    CONTINUE
C
C  PRINT THE TOTAL NUMBER OF NODES
C
        TYPE 244,ICTR
 244    FORMAT(' TOTAL NUMBER OF NODES UP AND DOWN = ',I4)
C
C  TYPE OUT LIST OF ALL NODES OTHER THAN TEMP NODES TO THE TMP IFILE3
C
        OPEN(21,IFILE5,OUTPUT,SYMBOLIC)
        ITMP1=ICTR
        K=0
 245    K=K+1
        IF (K.GT.ITMP1) GO TO 248
        ITEMP=NNODE(K)
        DO 246 I=1,NTEMP
        IF (ITEMP.EQ.LTEMP1(I)) GO TO 247
 246    CONTINUE
        WRITE(21,255) ITEMP
        GO TO 245
 247    ICTR=ICTR-1
        GO TO 245
 248    CLOSE(21)
C
C  CLEAR ARRAY: NNODE
C
        DO 249 I=1,ITMP1
        NNODE(I)=0
 249    CONTINUE
C
C  READ NODE NUMBER ONE BY ONE FROM TMP IFILE3
C
 250    OPEN(21,IFILE5,INPUT,SYMBOLIC)
        IPOS=1
        OPEN(22,IFILE4,OUTPUT,SYMBOLIC)
 253    READ(21,254,ERR=260,END=346) NODENO
 254    FORMAT(O4)
 255    FORMAT(I4)
        TYPE 9999,NODENO
9999    FORMAT(1X,'PROCESS NODE NO. ',O4)
        GO TO 270
C
C  ERROR, GARBAGE FOR NODENO
C
 260    REREAD 261, NODENO
 261    FORMAT(A4)
        TYPE 262, NODENO,IFILE5
 262    FORMAT(' GARBAGE ',A4,' IN FILE ',2A5)
        GO TO 1920
C
C  EVERYTHING IS OK HERE
C
 270    IF (NODENO.GE."10) GO TO 294
C
C  BUILD HERE THE 'N X' COMMAND
C
        REREAD 292,NODNUM(1)
 292    FORMAT(3X,A1)
        NODNUM(1)=LSH(NODNUM(1),-29)
        N(1)=4
        N(5)=13
        N(4)=NODNUM(1)
        WRITE(22,293) NODENO
 293    FORMAT('NODE ',O1)
        GO TO 320
 294    IF (NODENO.GE."100) GO TO 300
C
C  BUILD HERE THE 'N XX' COMMAND
C
        REREAD 295,(NODNUM(I),I=1,2)
 295    FORMAT(2X,2A1)
C
C  RIGHT SHIFT 29 BITS TO MAKE IT RIGHT JUSTIFIED
C
        NODNUM(1)=LSH(NODNUM(1),-29)
        NODNUM(2)=LSH(NODNUM(2),-29)
        N(1)=5
        N(6)=13
        N(4)=NODNUM(1)
        N(5)=NODNUM(2)
        WRITE(22,296) NODENO
 296    FORMAT('NODE ',O2)
        GO TO 320
 300    IF (NODENO.GE."1000) GO TO 310
C
C  BUILD HERE THE 'N XXX' COMMAND
C
        REREAD 305,(NODNUM(I),I=1,3)
 305    FORMAT(1X,3A1)
        NODNUM(1)=LSH(NODNUM(1),-29)
        NODNUM(2)=LSH(NODNUM(2),-29)
        NODNUM(3)=LSH(NODNUM(3),-29)
        N(1)=6
        N(7)=13
        N(4)=NODNUM(1)
        N(5)=NODNUM(2)
        N(6)=NODNUM(3)
        WRITE(22,306) NODENO
 306    FORMAT('NODE ',O3)
        GO TO 320
C
C  BUILD HERE THE 'N XXXX' COMMAND
C
 310    REREAD 315,(NODNUM(I),I=1,4)
 315    FORMAT(4A1)
        NODNUM(1)=LSH(NODNUM(1),-29)
        NODNUM(2)=LSH(NODNUM(2),-29)
        NODNUM(3)=LSH(NODNUM(3),-29)
        NODNUM(4)=LSH(NODNUM(4),-29)
        N(1)=7
        N(8)=13
        N(4)=NODNUM(1)
        N(5)=NODNUM(2)
        N(6)=NODNUM(3)
        N(7)=NODNUM(4)
        WRITE(22,316) NODENO
 316    FORMAT('NODE ',O4)
C
C  SEND OUT THE 'N' COMMAND
C
 320    CALL SEND(N)
C
C  NOW GET OUTPUT FROM PROBE CHAR BY CHAR
C
 330    CALL WAIT(1.0)
 335    CALL GETCHR(PORT,CHAR)
        IF (CHAR.LT.0) GO TO 330
        CHAR=IAND(CHAR,127)
C
C  CHECK IF END OF OUTPUT FROM PROBE
C
        IF (CHAR.EQ.COLON) GO TO 253
        IF (CHAR.EQ.CR) GO TO 340
        IF (CHAR.EQ.LF) GO TO 335
        CHAR=LSH(CHAR,1)
        ILINE(IPOS)=CHAR
        IPOS=IPOS+1
        GO TO 335
 340    IPOS=IPOS-1
        WRITE(22,181)(ILINE(I),I=1,IPOS)
        IPOS=1
        GO TO 335
C
C  FINISHED PROCESSING ALL NODES !!
C
 346    CLOSE(21)
        CLOSE(22)
        CALL SEND(KILL)
C
        CALL INTDIS
        TYPE 348
 348    FORMAT(' LOGOUT FROM PROBE')
        TYPE 349,LFILE
 349    FORMAT(//10X,'***** CREATING ',2A5,' *****')
C
        CALL DBOPEN(LINDMS)
        OPEN(24,LFILE,OUTPUT,SYMBOLIC)
        CALL ONINT($700)
C
C  FROM NOW ON, USE COMMAND-10 TO INTERPRET PROBE OUTPUT
C
        ICTR=0
        ICOUNT=0
        ASSIGN 650 TO TABLE(8)
        OPEN(22,IFILE4,INPUT,SYMBOLIC)
        TABLE(3)=22
        TABLE(22)=0
C
C  GET A LINE OF INPUT
C
 450    CALL NEWLINE
C
C  NOW SCAN FOR A PRIMARY COMMAND (LIST # 1)
C
 451    CALL COMMAND(-1,ICHAR,NUM)
        IF (NUM.LE.0) GO TO 600
        GO TO (500,505,510,520,525,530,535,540,545), NUM
C
C  LINE WITH 'NODE NUMBER'
C
 500    ISTEP=1
        IPOS=TABLE(1)
        CALL OCTAL(INT,ISTAT)
        IF (ISTAT.NE.1) GO TO 1800
        TABLE(1)=IPOS
        CALL INTEGER(INT,ISTAT)
        NODENO=INT
        GO TO 450
C
C  LINE WITH 'NO SUCH NODE'
C
 505    IF (ISTEP.NE.1) GO TO 1802
        CALL COMMAND(-7,ICHAR,NUM)
        IF (NUM.LE.0) GO TO 1802
        GO TO 450
C
C  LINE WITH 'VERSION ETC.'
C
 510    IF (ISTEP.NE.1) GO TO 1804
        ISTEP=2
        ICTR=ICTR+1
C
C  STORE THE NODE NO. INTO ARRAY NODE
C
        NODE(ICTR)=NODENO
C
C  ALSO STORE THE NODE NO. INTO ARRAY NNODE, IF NOT ALREADY THERE
C
        IF (ICOUNT.LE.0) GO TO 515
        CALL SEARCH(NNODE,NODENO,ICOUNT,IND)
        IF (IND.LE.ICOUNT) GO TO 516
 515    ICOUNT=ICOUNT+1
        NNODE(ICOUNT)=NODENO
C
        CALL QSORT(NNODE,IPTR,ICOUNT)
C
C  EAT UP INTEGER REPRESENTING THE VERSION OF NODE CODE
C
 516    CALL OCTAL(INT,ISTAT)
        IF (ISTAT.NE.1) GO TO 1804
        CALL COMMAND(-2,ICHAR,NUM)
        IF (NUM.LE.0) GO TO 1804
C
C  RETRIEVE NOW THE NODE TYPE
C
        CALL INTEGER(INT,ISTAT)
        IF (ISTAT.NE.1) GO TO 1804
        IF (INT.GT.9) GO TO 1804
        NTYP(ICTR)=INT
        GO TO 450
C
C  LINE WITH 'PORTS ETC.'
C
 520    IF (ISTEP.NE.2) GO TO 1806
C
C  EAT UP INTEGER REPRESENTING THE NO. OF TERMINATIONS
C
        CALL INTEGER(INT,ISTAT)
        IF (ISTAT.NE.1) GO TO 1806
        CALL COMMAND(-3,ICHAR,NUM)
        IF (NUM.LE.0) GO TO 1806
        IF (NODENO.LT.1000) ISTEP=3
        IF (NODENO.LT.2000.AND.NODENO.GE.1000) ISTEP=4
        IF (NODENO.GE.2000) GO TO 1806
        GO TO 450
C
C  LINE WITH 'AVAILABLE PASSTHROUGHS'
C
 525    IF (ISTEP.NE.2) GO TO 1808
        IF (NTYP(ICTR).NE.9.OR.NODENO.LT.2000) GO TO 1808
        ISTEP=3
        GO TO 450
C
C  LINE WITH 'HOST STATUS'
C
 530    IF (ISTEP.NE.3) GO TO 1810
        ISTEP=4
        HCOUNT(ICTR)=0
        GO TO 450
C
C  LINE WITH 'LINK STATUS'
C
 535    IF (ISTEP.NE.4) GO TO 1812
        ISTEP=5
        LCOUNT(ICTR)=0
        GO TO 450
C
C  IGNORE LINE WITH WORD 'SLEEPING'
C
 540    GO TO 450
C
C  IGNORE LINE WITH WORD 'NEIGHBOR 2XXX'
C
 545    GO TO 1818
C
C  NO MATCH WITH PRIMARY COMMANDS
C  RESCAN THE LINE FOR POSSIBLE STRING 'OUT OF PASSTHROUGHS'
C
 600    TABLE(1)=9
        CALL COMMAND(-3,ICHAR,NUM)
        IF (NUM.EQ.1) GO TO 450
C
        TABLE(1)=1
        IF (ISTEP.NE.4) GO TO 605
C
C  RETRIEVE HERE INFORMATION ABOUT HOSTS
C
        CALL INTEGER(INT,ISTAT)
C
C  DONT'T CARE IF THERE IS NO HOST NO.
C
        IF (ISTAT.EQ.1) GO TO 604
        TABLE(1)=1
        GO TO 451
C
 604    CALL COMMAND(-4,ICHAR,NUM)
        IF (NUM.LE.0) GO TO 1810
        HCOUNT(ICTR)=HCOUNT(ICTR)+1
        IHOST(ICTR,HCOUNT(ICTR))=INT
        GO TO 450
C
 605    IF (ISTEP.NE.5) GO TO 1816
C
C  RETRIEVE HERE INFORMATION ABOUT LINES
C
        CALL INTEGER(INT,ISTAT)
        IF (ISTAT.NE.1) GO TO 1812
        IF (INT.NE.LCOUNT(ICTR)) GO TO 1812
        IPOS=TABLE(1)
        CALL OCTAL(INT,ISTAT)
        IF (ISTAT.NE.1) GO TO 1812
        TABLE(1)=IPOS
        CALL INTEGER(INT,ISTAT)
        LCOUNT(ICTR)=LCOUNT(ICTR)+1
C
C  IGNORE LINE IF NODE 1 > NODE 2
C
        IF (NODENO.GT.INT) GO TO 450
C
C  IGNORE LINE IF NEIGHBOR IS A TEMP NODE
C
        DO 606 I=1,NTEMP
        IF (INT.EQ.LTEMP1(I)) GO TO 450
 606    CONTINUE
C
        IF (NODENO.GE.2000) GO TO 610
C
C  RETRIEVE THE NO. OF GROUPS
C
        CALL INTEGER(INT1,ISTAT)
        IF (ISTAT.NE.1) GO TO 1812
        GO TO 615
 610    INT1=512
C
C  RETRIEVE LINE BANDWIDTH
C
 615    CALL COMMAND(-6,ICHAR,NUM)
        IF (NUM.LE.0) GO TO 1812
        IF (NUM.EQ.7.OR.NUM.EQ.8) CALL STC(' ',ICHAR,3)
        IF (NUM.EQ.5.OR.NUM.EQ.6) GO TO 616
        CALL STC(' ',ICHAR,4)
C
C  GET CIRCUIT NAME FROM 'PLOT.LIN' DATA BASE
C
 616    CALL DBFIND('NOD1','EQ',NODENO,'AND','NOD2','EQ',INT,'SAV.',1,
     X  'NOD2','EQ',NODENO,'AND','NOD1','EQ',INT,'OR','REF.',1)
        CALL DBNREC(IREC)
        IF (IREC.NE.1) GO TO 618
        CALL DBGREC($618)
        CALL DBVAL('NAME',LNAM)
        GO TO 620
 618    LNAM(1)='?????'
        DO 619 K=2,4
        LNAM(K)=IBLANK
 619    CONTINUE
C
C  READY TO OUTPUT INFORMATION ON LINE
C
 620    WRITE(24,621) NODENO,INT,(LNAM(K),K=1,4),ICHAR,INT1
 621    FORMAT(2(I4,4X),4A5,1X,A4,1X,I3)
C
C  IF NEIGHBOR NO. IS NEW, STORE IT INTO ARRAY NNODE
C
        CALL SEARCH(NNODE,INT,ICOUNT,IND)
        IF (IND.LE.ICOUNT) GO TO 450
        ICOUNT=ICOUNT+1
        NNODE(ICOUNT)=INT
C
        CALL QSORT(NNODE,IPTR,ICOUNT)
        GO TO 450
C
C  START NOW TO CREATE THE LIST OF NODES
C
 650    CLOSE(24)
        CLOSE(22)
        CALL DBCLOS
        TYPE 652,NFILE
 652    FORMAT(//10X,'***** CREATING ',2A5,' *****',//)
C
        CALL DBOPEN(NODDMS)
        OPEN(24,NFILE,OUTPUT,SYMBOLIC)
C
C  PROCESS NODE BY NODE
C
        DO 680 I=1,ICOUNT
        ITEMP=NNODE(I)
C
C  GET NODE NAME FROM 'PLOT.NOD' DATA BASE
C
        CALL DBFIND('NODE','EQ',ITEMP)
        CALL DBNREC(IREC)
        IF (IREC.NE.1) GO TO 661
        CALL DBGREC($661)
        CALL DBVAL('NAME',NNAM)
        GO TO 662
 661    NNAM(1)='?????'
        NNAM(2)=IBLANK
C
C  CHECK IF NODE IS DOWN IN PROBE
C
 662    CALL SEARCH(NODE,ITEMP,ICTR,IND)
        IF (IND.LE.ICTR) GO TO 670
        ITYP=-1
        IF (ITEMP.LE.777.OR.ITEMP.GE.2000) GO TO 665
        WRITE(24,664) ITEMP,(NNAM(K),K=1,2),ITYP
 664    FORMAT(I4,1X,2A5,1X,I2)
        GO TO 680
 665    WRITE(24,666) ITEMP,(NNAM(K),K=1,2),ITYP
 666    FORMAT(I4,1X,2A5,1X,I2,/)
        GO TO 680
 670    WRITE(24,664) ITEMP,(NNAM(K),K=1,2),NTYP(IND)
        IF (ITEMP.GE.1000.AND.ITEMP.LE.1777) GO TO 680
        K=HCOUNT(IND)
        WRITE(24,671)(IHOST(IND,J),J=1,K)
 671    FORMAT(5X,4(I4,1X),I4)
C
 680    CONTINUE
C
C  FINISHED PROCESSING ALL NODES !!
C
 700    CLOSE(24)
        CALL DBCLOS
        CALL DBEND
        STOP
C
C  ERROR CONDITIONS WHILE USING COMMAND-10
C
 1800   TYPE 1801
 1801   FORMAT(1X,'ERROR IN INTERPRETING LINE ''NODE NUMBER''')
        GO TO 1830
 1802   TYPE 1803
 1803   FORMAT(1X,'ERROR IN INTERPRETING LINE ''NO SUCH''')
        GO TO 1830
 1804   TYPE 1805
 1805   FORMAT(1X,'ERROR IN INTERPRETING LINE ''VERSION ... TYPE ...''')
        GO TO 1830
 1806   TYPE 1807
 1807   FORMAT(1X,'ERROR IN INTERPRETING LINE ''PORTS ... PASSTHROUGHS',
     X  ' ...''')
        GO TO 1830
 1808   TYPE 1809
 1809   FORMAT(1X,'ERROR IN INTERPRETING LINE ''AVAILABLE PASSTHROUGHS''
     X  ')
        GO TO 1830
 1810   TYPE 1811
 1811   FORMAT(1X,'ERROR IN INTERPRETING LINES FOLLOWING ''HOST STATUS''
     X  ')
        GO TO 1830
 1812   TYPE 1813
 1813   FORMAT(1X,'ERROR IN INTERPRETING LINES FOLLOWING ''LINK STATUS''
     X  ')
        GO TO 1830
 1816   TYPE 1817
 1817   FORMAT(1X,'SOMETHING GOES WRONG WHILE USING COMMAND-10')
        GO TO 1830
 1818   TYPE 1819
 1819   FORMAT(1X,'KEYWORD ''NEIGHBOR'' FOUND')
C
 1830   REREAD 217,(ILINE(K),K=1,72)
        TYPE 218,(ILINE(K),K=1,72)
        CLOSE(22)
        GO TO 700
C
C  ERROR WHILE READING LIST OF NODES FROM 'AN' COMMAND
C
 1900   TYPE 1903
 1903   FORMAT(' ERROR IN LIST OF NODES FROM ''AN'' COMMAND, TRY ',
     X  'TO RERUN THE PROGRAM')
        GO TO 2000
C
C  ERROR WHILE READING LIST OF NODES FROM 'AD' COMMAND
C
 1910   TYPE 1913
 1913   FORMAT(' ERROR IN LIST OF NODES FROM ''AD'' COMMAND, TRY ',
     X  'TO RERUN THE PROGRAM')
        GO TO 2000
C
C  ERROR WHILE READING THE TMP IFILE3
C
 1920   TYPE 1923, IFILE3
 1923   FORMAT(' ERROR WHILE READING FILE ',2A5,'. TRY TO RERUN ',
     X  'THE PROGRAM')
C
C  SEND 'EXI' COMMAND TO GET OUT FROM PROBE
C
 2000   CALL SEND(KILL)
 2001   STOP
        END
   wR