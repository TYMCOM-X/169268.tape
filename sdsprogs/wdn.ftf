*       WDN.FTF

*       SUBROUTINE TO WRITE OUT DELETED NODES TO CHANGE FILE

*       R.ROSKILLY  OCT 83

*       SUBROUTINE ID

        SUBROUTINE WDN (IYEAR,IMONTH,IDAY)

*       LOCAL STORAGE DECLARATIONS

        INTEGER FILNAM (5)

*       TYPE BANNER MESSAGE

        TYPE 10
10      FORMAT (1X,'WRITING DELETED NODES TO CHANGE FILE')

*       TURN CONTROL FILE DATE INTO AN INTEGER

        INHDATE=IYEAR*10000+IMONTH*100+IDAY

*       GET NAME OF FILE CONTAINING DELETED NODE NUMBERS

        CALL MEMEXT ('DN',IYEAR,IMONTH,IDAY,IFN1,IFN2,IFN3,
     +                                      IFN4,IFN5)

*       TRANSFER FILE NAME FROM SUBROUTINE ARGUMENT VARIABLES TO LOCAL STORAGE

        FILNAM (1)=IFN1
        FILNAM (2)=IFN2
        FILNAM (3)=IFN3
        FILNAM (4)=IFN4
        FILNAM (5)=IFN5

*       OPEN DELETED NODE FILE FOR INPUT

        OPEN (4,FILNAM,INPUT,ERR=1700)

*       READ IN A DELETED NODE NUMBER

1000    READ (4,1100,END=1900),INODE
1100    FORMAT (I4)

*       WRITE RECORD FOR THIS DELETED NODE TO CHANGE OUTPUT FILE

        INN='SN'
        WRITE (3,1605) INN,
     +                 INODE,
     +                 INHDATE

1605    FORMAT (A2,',',I4,',',I6)

*       GO DO NEXT NODE NUMBER

        GO TO 1000

*       ERROR READING FILE OF DELETED NODES

1700    TYPE 1710,INODE
1710    FORMAT (1X,'ERROR READING NEW NODES FILE AT NODE: ',I4)
        CALL BYE

*       FIND ON THIS NODE FAILED, THAT SHOULD BE IMPOSSIBLE (CHANGED NODE)

1800    TYPE 1810,INODE
1810    FORMAT (1X,'FIND FAILED: ',I4)
        CALL BYE

*       END OF INPUT FILE, CLOSE IT

1900    CLOSE (4)

*       END OF SUBPROGRAM

        END
