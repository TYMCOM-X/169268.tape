*       (NTRACKPROGS:28)NSNTRK.FTF R.ROSKILLY AUG 84

*       APR 84 R.ROSKILLY
*       TEST VERSION TO FIND HANGUP

*       GETS NS & ND XRAY COMMANDS OUTPUT FROM AUX CIRCUIT AND APPENDS TO
*       NS.DAT FILE. THIS DATA IS LATER LOADED INTO X22 DATA BASE BY
*       ANOTHER PROGRAM.

*       CALLED FROM NTRBAK SEE (MSREPORT:28)NTRBAK.FTF

*       SUBROUTINE COMPILER ENTRY POINT

        SUBROUTINE NS (NODE,TDATE,TTIME)

*       AUX PORT NUMBER
        INTEGER PORT

*       OUTPUT FILE CURSOR POSITION
        INTEGER MTRPOS

*       COMMON STORAGE DECLARATIONS

        COMMON /AUX/ PORT
        COMMON /OUTPOS/ MTRPOS

*       SPECIAL ERROR ROUTINE STORAGE DECLARATION

        INTEGER ERRNUM

*       LOCAL STORAGE DECLARATIONS

*       DATE AND TIME (AS HHMM)
        INTEGER TDATE,TTIME

*       NODE NUMBER BEING PROCESSED
        INTEGER NODE

*       XRAY COMMAND STRING FOR 'NS' & 'ND' TO BE SENT ON AUX CIRCUIT
        INTEGER NSCMND (13)

*       CHARACTER WHICH SIGNALS END OF XRAY OUTPUT
        DATA PROMPT /62/

*       NS % ND DATA OUTPUT FILE FOR NEXT WRITE (APPEND)
        INTEGER NSPOS

*       SUBROUTINE EXECUTION ENTRY POINT

*       OPEN NS & ND XRAY DATA OUTPUT FILE

        OPEN (30,'NSND.DAT',RANDOUT(82))

*       SET UP 'NS' COMMAND IN NSCMND WORD
*       THE 0 MEANS NO NEIGH NUMBER IS SENT, JUST THE COMMAND ITSELF

        CALL ERRTRK (1)
        CALL AXBCOM ('NS   ',0,NSCMND)
        CALL ERRTRK (2)

*       SEND 'NS' COMMAND TO XRAY

        CALL ERRTRK (3)
        CALL SEND (NSCMND)
        CALL ERRTRK (4)

*       GET SIZE OF FILE AND ADD 1 FOR NEXT WRITE

        NSPOS=SIZE(30)+1

*       WRITE HEADER TO OUTPUT FILE FIRST TO IDENTIFY XRAY NS INFORMATION
*       INCLUDE NODE, DATE, AND TIME AS HHMM

        WRITE (30#NSPOS,100) NODE,TDATE,TTIME
100     FORMAT (/,1X,'XRAY ID: NS ',I5,1X,I6,1X,I4)

*       ADVANCE OUTPUT FILE CURSOR POSITION TO END OF FILE

        NSPOS=SIZE(30)+1

*       WRITE XRAY OUTPUT TO NS OUTPUT FILE

        CALL ERRTRK (5)
        CALL XRFOUT (PROMPT,30,NSPOS)
        CALL ERRTRK (6)

*       ADVANCE OUTPUT CURSOR POSITION TO END OF FILE

        NSPOS=SIZE(30)+1

*       WRITE OUT END OF XRAY NS SESSION FLAG

        WRITE (30#NSPOS,200)
200     FORMAT (/,1X,'XRAY NS END FLAG')

*       SET UP 'ND' COMMAND IN NSCMND WORD
*       THE 0 MEANS NO NEIGH NUMBER IS SENT, JUST THE COMMAND ITSELF

        CALL ERRTRK (7)
        CALL AXBCOM ('ND   ',0,NSCMND)
        CALL ERRTRK (8)

*       SEND 'ND' COMMAND TO XRAY

        CALL ERRTRK (9)
        CALL SEND (NSCMND)
        CALL ERRTRK (10)

*       GET SIZE OF FILE AND ADD 1 FOR NEXT WRITE

        NSPOS=SIZE(30)+1

*       WRITE HEADER TO OUTPUT FILE FIRST TO IDENTIFY XRAY ND INFORMATION
*       INCLUDE NODE, DATE, AND TIME AS HHMM

        WRITE (30#NSPOS,300) NODE,TDATE,TTIME
300     FORMAT (/,1X,'XRAY ID: ND ',I5,1X,I6,1X,I4)

*       ADVANCE OUTPUT FILE CURSOR POSITION TO END OF FILE

        NSPOS=SIZE(30)+1

*       WRITE XRAY OUTPUT TO ND OUTPUT FILE

        CALL ERRTRK (11)
        CALL XRFOUT (PROMPT,30,NSPOS)
        CALL ERRTRK (12)

*       ADVANCE OUTPUT CURSOR POSITION TO END OF FILE

        NSPOS=SIZE(30)+1

*       WRITE OUT END OF XRAY ND SESSION FLAG

        WRITE (30#NSPOS,400)
400     FORMAT (/,1X,'XRAY ND END FLAG')

*       CLOSE OUTPUT FILE

        CLOSE (30)

*       RETURN TO MAIN PROGRAM

        RETURN

*       END OF SUBROUTINE

        END
