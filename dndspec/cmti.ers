






                        CMTI.ERS












                               _b_y

                    BISYNC INTERFACE SECTION

                            BT TYMNET
                 Network Technology Development
                        February 27, 1990






















BT TYMNET's proprietary rights are included  in  the  information
disclosed  herein.   The  recipient,  by receiving this document,
agrees that neither this document nor the  information  disclosed
herein, nor any part thereof shall be used or disclosed to others
for manufacturing or for any other purpose except as specifically
authorized in writing by BT TYMNET.


















                      1.  INTRODUCTION

The CMT/3270 functions as a translator between selected kinds  of
terminals  and  a  computer  that  addresses 3270 terminals.  The
CMT/3270  converts  text  streams  from  the  computer  that  are
meaningful  to  a  3270  type  CRT  into  a  text  string that is
meaningful to the selected user terminal.  Translation capability
also  provides  for  routing  of  data  to  an  attached printer.
Functions that are local to a 3270 terminal are emulated  through
interaction between the CMT/3270 and the terminal.

In delivering a message  from  the  computer  the  CMT/3270  will
attempt  to  minimize  the  number  of  characters  that  must be
delivered to the terminal.  It does  this  through  knowledge  of
what  is  already  on  the  screen and what special functions are
available on the terminal.

In receiving data from the  terminal  the  CMT/3270  attempts  to
provide  the  same  functions as a 3270 terminal.  Since the user
terminal is not likely to have the same functions as a 3270, much
of  this  is  done  by  interaction  between the CMT/3270 and the
terminal.

The description of all the supported terminal  types  is  in  the
document CMTERM.LST in DNDSPEC:56 AND DNDSPEC(VARIOUS).

1.1  CONNECTIVITY

The tymnet host interfaces include the BSC, X.25, and SNA  hosts.
SNA  stands  for  Systems Network Architecture, which is a multi-
layer networking protocol designed by IBM.   Any  CMTI  slot  can
talk to multiple hosts, including a mixture of BSC, X.25, and SNA
host interfaces.  CMTI  achieves  this  level  of  generality  by
communicating  using  the  DSP  protocol.   Thus any asynchronous
terminal may work with any host type - part of  Tymnets  offering
of  Connectivity:  the ability to connect as many different kinds
of  equipment  as  is  reasonable  possible,  including  protocol
translations where needed.

1.2  ACCOUNTING

A B7 ISIS Message (addendum to accounting) is sent by CMTI  as  a
result  of  it receiving a B6 ISIS Message (successful logon from
this port(from slot 0)). The B7 ISIS Message  contains  the  same
invoice  number  as  the  circuit  from  the consat to cmti. This
allows the  RAM  to  correlate  the  three  circuits  (consat  to
cmti,cmti crt to hif,and cmti ptr to hif) together for accounting
informations. This feature is implemented in CMTI version 7.02.






Page 1                    CMTI.ERS







INTRODUCTION                               February 27, 1990



              2.  TERMINAL/USER INTERACTION

CMT/3270 interacts with the  user  and  the  user's  terminal  in
several  ways  in  order  to  provide  the  functions  of  a 3270
terminal.   Which  keys  on  the  terminal  perform  which   3270
functions  is  dependant  upon parameters that are unique to each
installation.  When a function key is  referred  to  it  will  be
given  a name.  Each installation may elect to assign a different
terminal key or series of keys to this function.  Refer  to  your
installation guide for the exact keystrokes used at your site.

2.1  ECHO CONTROL

Certain functions are performed remotely by the  CMT/3270.   This
may result in some delay before a character typed at the terminal
affects the screen.  Characters may  temporarily  appear  in  the
wrong place.  When this occurs a short pause by the operator will
result in the screen being restored and the misplaced  characters
being  moved to their correct positions.  This pause is necessary
only if the operator must visually verify  the  contents  of  the
screen.   Otherwise  the  operator can simply continue typing and
the CMT/3270 will catch-up very quickly.

The delay occurs because echoing is sometimes performed  remotely
by  the CMT/3270.  This results in a delay which is a function of
distance and traffic in the network.  The CMT/3270  allows  local
echoing  by  the  Tymsat when possible.  Because of network delay
there may be a short period before this  can  be  shut  off  when
tymsat  echoing is not appropriate.  This results in echoing into
the wrong place.  This is detected and the  damage  is  repaired.
Ordinarily  this  happens  very  quickly  and  can be comfortably
ignored once it becomes familiar.

2.2  LOCAL TERMINAL FUNCTIONS

The 3270 terminal has a number of  special  functions  that  have
immediate  effects  on  the  screen  or cause transmission to the
computer.  Each of these functions is listed below along with the
name  of  the  function  used.  The actual keys used to implement
these functions depend on  the  installation  but  are  described
below   in   terms   of   the  names  used  in  the  installation
documentation.












Page 2                    CMTI.ERS







TERMINAL/USER INTERACTION                  February 27, 1990



             3270 Key         Translator Function
       ===========================================
       BACK TAB                    BACKTAB
       BACKSPACE                   BACKTAB
       CLEAR                       FCNCLR
       CURSOR POSITIONING, DOWN    CURDOWN
       CURSOR POSITIONING, LEFT    CURLEFT
       CURSOR POSITIONING, RIGHT   CURRIGHT
       CURSOR POSITIONING, UP      CURUP
       CURSOR SEL (LIGHT-PEN)      CURSEL
       DEL                         DELCHAR
       ENTER                       FCNENT
       ERASE EOF                   EEOF
       ERASE INPUT                 (not implemented)
       HOME                        HOME
       INS MODE                    INSMODE
       NEW LINE                    NEWLIN
       PA1 - PA3                   FCNPA1 - FCNPA3
       PF1 - PF24                  FCNF1  - FCNF24
       SKIP                        FLDTAB
       TAB                         FLDTAB
       RESET                       RESET
       (no equivalent)             REDISPLAY
       (no equivalent)             KILL

2.2.1  WHY LINEFEED MAPS TO CLEAR ON SOME TERMINALS

The Linefeed code is generated by some terminals by a key on  the
keyboard.   The  VT1XX does this.  The problem is that the cursor
is moved on the screen, but not in CMTI's buffer.  Thus  1  of  2
changes would have to be made - either CMTI would need to "fixup"
the screen or map the Linefeed control code to the down arrow.

On some terminals the down-arrow is acceptable.  But only if  the
terminal  will  move the cursor to the top of the screen when the
Linefeed  moves  the  cursor  beyond  the  last  line.   On  many
terminals  the  screen  scrolls when you attempt to go beyond the
last line, and this is not acceptable.  The VT1XX cannot suppress
scroll.  therefore  the  only  alternative is to map the Linefeed
code to a clear, so there is no screen errors.

2.2.2  FLDTAB

FLDTAB    Tab to next unprotected field

The FLDTAB function moves the cursor to the beginning of the next
input  field.   At the end of the screen, the cursor wraps around
to the first unprotected field.






Page 3                    CMTI.ERS







TERMINAL/USER INTERACTION                  February 27, 1990



2.2.3  BACKTAB

BACKTAB    Tab back to start of unprotected field

The BACKTAB function moves the cursor backward to  the  beginning
of  an  unprotected  field.   If  the  cursor  is  already at the
beginning of an input field, or if it is in  a  protected  field,
the  cursor  moves  to the beginning of the preceding unprotected
field; at the beginning of the screen, it  wraps  around  to  the
last unprotected field.  If the cursor is past the first position
within an unprotected field, it moves to  the  beginning  of  the
current field.

2.2.4  HOME

HOME    Cursor moves to first unprotected field

The HOME function moves the cursor to the beginning of the  first
unprotected  field on the screen.  If the cursor is already there
nothing happens.  If there  are  no  unprotected  fields  on  the
screen,  the  CMT/3270  will sound the bell indicating an invalid
keystroke.

2.2.5  NEWLIN

NEWLIN    Move cursor to first unprotected position on next line

The NEWLIN function moves the cursor  to  the  first  unprotected
character  position  in the next line containing such a position.
Cursor may wrap the screen.  If there are no  unprotected  fields
on  the screen cursor will move to character position 0; if there
are no formatted fields cursor will be positioned  at  the  first
character on the next line.

2.2.6  CURLEFT

CURLEFT    Cursor left one position

The  CURLEFT  function  moves  the  cursor  left  one   character
position.  At the left edge of a line, the cursor wraps around to
the right edge of the previous line.

2.2.7  CURRIGHT

CURRIGHT    Cursor right one position

The CURRIGHT  function  moves  the  cursor  right  one  character
position.   At  the right edge of a line, the cursor wraps around
to the left edge of the next line.





Page 4                    CMTI.ERS







TERMINAL/USER INTERACTION                  February 27, 1990



2.2.8  CURUP

CURUP    Cursor up one line

The CURUP function moves the cursor  up  to  the  same  character
position  in  the line preceding the current line.  At the top of
the screen, the cursor wraps around to the bottom line.

2.2.9  CURDOWN

CURDOWN    Cursor down one line

The CURDOWN function moves the cursor down to the same  character
position  in  the  line following the current line.  At bottom of
the screen, the cursor wraps around to the top line.

2.2.10  DELCHAR

DELCHAR    Delete character and shift left

The character at the current cursor position is removed, and  all
characters in the field to the right of that position are shifted
left one position.  For example:

                       TEXT AND
       USER INPUT   CURSOR POSITION
                     extrba letter
                         ^
       DELCHAR       extra letter
                         ^


2.2.11  EEOF

EEOF    Erase to end of field

The EEOF function erases the rest of the current field by placing
null characters in all positions from the current cursor position
to the end of the field.  It does not move the cursor.

2.2.12  INSMODE

INSMODE    Enter insert mode

The INSMODE function  causes  the  translator  to  enter  "insert
mode".   Each  character  typed  in  this mode is inserted at the
current cursor position; data from that position to  the  end  of
the  field  is  shifted  right  one position, and the cursor also
moves  right  one  position  (leaving  it  after   the   inserted
character).  For example:




Page 5                    CMTI.ERS







TERMINAL/USER INTERACTION                  February 27, 1990



                       TEXT AND
       USER INPUT   CURSOR POSITION
                    it was active
                           ^
       INSMODE i    it was iactive
                            ^
       n            it was inactive
                             ^

The translator  leaves  insert  mode  when  reset  or  any  other
function  is invoked. Characters shifted out of the right edge of
a field are lost.  Users familiar with 3270 terminals should note
that  it  is  not  necessary to have trailing nulls in a field in
order to use insert  mode.   It  is  considered  a  user-friendly
feature  to  allow continued input in the insert mode, instead of
locking the keyboard.

An additional feature of the Insert mode is that  it  allows  the
operator  to  enter  alphabetic  characters into a numeric field.
This is a feature that in 3270 requires  the  use  of  a  special
shift  key.   Since  the  shift  keys  on  async terminals do not
transmit anything to CMTI, this method cannot be used.  Therefore
the Insert mode is used.  This function is used rarely.

2.2.13  FCNENT

FCNENT    ENTER key function

The application program is notified that an  ENTER  function  has
been  requested.   Areas of the screen that have been modified by
the user are reported back to the application, as is the  current
cursor position.

2.2.14  PF KEY DEFINITIONS

FCNF1 through FCNF24 : PF key functions

The application program is notified that the  function  has  been
requested.   Areas  of  the screen that have been modified by the
user are reported back to the  application,  as  is  the  current
cursor position.

2.2.15  PA KEY DEFINITIONS

FCNPA1, FCNPA2 AND FCNPA3 : PA key functions

The application program is notified that the  function  has  been
requested.






Page 6                    CMTI.ERS







TERMINAL/USER INTERACTION                  February 27, 1990



2.2.16  FCNCLR

FCNCLR   Clear screen

The screen is cleared and the host notified.

TTY CLEAR FUNCTION:

The keyboard does not have a clear key  designated.  A  control-C
typed  by  the user will be used to designate this function. CMT,
on receipt of this  function,  will  clear  the  buffer,  send  a
short-read  clear to the host and send a "screen cleared" message
and cr/lf to  the  terminal.   The  current  buffer  position  is
redefined  to  0  and  the  printhead  will  be  on column 1 of a
newline.

2.2.17  TTY BACKSPACE

BKSPA   Backspace for tty (destructive backspace)

The backspace is so  designated  on  the  keyboard  by  typing  a
control-H.  Upon  receipt  of  this  function, CMT will check the
current position in the buffer.  If it is in column 1  or  is  an
attribute  or is in a protected field, a bell will be sent to the
terminal.   Otherwise,  the  current  buffer  position  will   be
decremented  by  one,  and  a  ^  will be sent to the terminal to
give visual indication of the backspace.
example:

input:  abcx

backspace:  abcx^

resume input:  abcx^d



2.2.18  RESET

RESET    Reset function

The RESET function can do either one of the following :

1. Exit Insert mode.

2. Unlock the keyboard.  Normally the keyboard is locked when any
transmit  key is struck.  A subsequent message from the host will
unlock the keyboard.  In some cases this may  not  happen.   Then
the  operator may use the RESET key to unlock the keyboard.  When
the keyboard is considered locked by CMT, the only entry from the
terminal  user  that will be accepted is the RESET key. All other



Page 7                    CMTI.ERS







TERMINAL/USER INTERACTION                  February 27, 1990



entries will be ignored and result in a bell at the terminal.

2.2.19  REDISPLAY

REDISPLAY    Redisplay screen

The REDISPLAY function  clears  the  screen  and  redisplays  its
contents as seen by the translator.  This is useful, for example,
when a message sent from outside the application appears  on  the
screen  and  overwrites data.  REDISPLAY would show the screen as
it was before the message was sent.

TTY REDISPLAY FUNCTION:

The tty redisplay function is like the redisplay function for any
other  terminal.  However, instead of the screen being cleared, a
new  line  is  presented  and  the  buffer  contents   are   then
redisplayed.

2.2.20  CURSEL

CURSEL    Cursor select

The CURSEL function allows the selector-light-pen-detection to be
performed.

Note: the IBM 3274 and the IBM 3276 operate slightly  differently
with  the  CURSEL function.  Selection of a blank/null designator
will  include  the  addresses  of  all  modified  fields  in  the
datastream sent to the host, but not the data.  Using a 3276 will
cause the data to also be included.  CMTI operates like a 3274 in
this  way - the data is not included.  If the data is desired the
designator must be an &.

2.2.21  KILL

KILL    Zap the circuits

The circuits are zapped and the user is returned to: 'please  log
in:'.   It is recommended that host logoff be accomplished before
invoking this function.

2.3  LOGON TO CMT/3270











Page 8                    CMTI.ERS







TERMINAL/USER INTERACTION                  February 27, 1990



_________________________________________________________________________
|                                                                       |
|                                                                       |
| SELECT TERMINAL TYPE:                                                 |
|                                                                       |
| 0 ADDS VP-60/90       3 HP 2622-2628          6 DEC VT100             |
| 1 ADM 11              4 QUME QVT103                                   |
| 2 3101 - FTTERM       5 TELEVIDEO                                     |
|                                                                       |
|                                                                       |
|                                                                       |
|                                                                       |
|                                                                       |
|_______________________________________________________________________|


        Example of a Select Terminal Type Screen


_________________________________________________________________________
|                                                                       |
|                                                                       |
|  SELECT LOGON PROCEDURE                                               |
|                                                                       |
|    GHOST 300                                                     |
|    STOCK EXCHANGE                                                     |
|    BACKUP COMPUTER                                                    |
|                                                                       |
|                                                                       |
|                                                                       |
|                                                                       |
|                                                                       |
|                                                                       |
|                                                                       |
|                                                                       |
|                                                                       |
|                                                                       |
|                                                                       |
|                                                                       |
|                                                                       |
|                                                                       |
|_______________________________________________________________________|


        Example of a Menu Screen


A stored logon mechanism is provided in the CMT/3270.  Upon logon
to  the  CMT/3270,  the  user is presented with either the select
terminal type screen or a menu screen.  The select terminal  type
screen presents a list of terminal types that are supported.  The



Page 9                    CMTI.ERS







TERMINAL/USER INTERACTION                  February 27, 1990



user should type the number corresponding to the terminal  he  is
logging  in  with and hit the ENTER key.  If the ENTER key is hit
without first entering a number, the first terminal  type  listed
will  be assigned.  The menu screen displays a list of short (one
line) descriptions  of  possible  destinations.   The  user  then
positions  the  cursor  next  to the desired line and strikes the
ENTER  key.   All  necessary  logon  operations   are   performed
automatically.   In  the  event  of a failure, a brief error text
would be displayed and the user again presented with 'please  log
in:'.

2.4  AUTOMATED LOGON USING PC'S

The automated logon options in the Consat and CMTI  mean  that  a
user  can  turn  on  his  terminal and see the host banner appear
automatically.

2.4.1  CONSAT PVC

The Consat has an option for dial in users to automatically route
them to a specific host.  It also can choose an alternate host if
the first host  is  down.   The  Consat  can  also  set  the  TID
automatically.  Thus when the user turns on his terminal, he will
automatically get  the  CMTI  terminal  selection  screen.   This
feature  of the Consat is called PVC.  It applies to both dial-up
and  fixed  connections,  although  the  considerations  may   be
different for each.

Note that the use of PVC circuits means that  the  normal  Tymnet
security  checks during Tymnet logon are not done.  Thus if a PVC
were set up for dial-in then someone  could  randomly  dial  that
number and land up on the customers host.  Of course the customer
should have some security procedures also.

2.4.2  MENU BYPASS

The CMT/3270 streamlines the signon  process  by  minimizing  the
number  of screens the user must view.   The menu bypass function
does this in 2 ways.

If there is only  1  terminal  type  in  the  terminal  selection
screen,  then this screen is bypassed.  The user does not have to
make a selection when there is only 1 item in the list.

Similarly if there is only 1 host in  the  host  selection  menu,
then  this  screen  is also bypassed.  The host selection is done
automatically by the CMT/3270.







Page 10                   CMTI.ERS







TERMINAL/USER INTERACTION                  February 27, 1990



2.5  MULTI-TARGETTING AND HOST-COSTING

Multi-targetting is a logon feature in the network to goto to one
of  several  hosts.   This  can  be  done with CMTI but it is not
effective without host-cost factors.  Host-cost is a message that
is  reported  to the SUP after each logon to enable the SUP to do
proper load balancing.   CMTI  does  not  support  the  host-cost
message.   Without host-cost the balancing is done entirely based
on network paths.  Thus you can get into a  situation  where  all
logons  to  CMTI  will  go  to  the  same slot, leaving the other
slot(s) unused.

Even with host-cost there are problems since the  Host  interface
desired  may  not  be  available  and  the operator has no way to
automatically goto the other CMTI slot.  This may  be  solved  by
the  user  logging  into  the  other  interface by using both HIF
username and host number, but the user has  to  know  which  host
number to use.

One option is to use the menu  service  of  Tymnet.   This  user-
friendly  feature  runs  in a separate slot (so the customer must
pay for this new slot) but does allow load  balancing  among  any
number of other interfaces.

Another option is to use the PVC capability of  the  Consat,  for
dial-in users.  The PVC can be set up so that every other port on
the rotary goes to CMTI slot 1 and the rest  goto  CMTI  slot  2.
Thus the 2 CMTI slots will get 50/50 balancing.  The drawbacks to
this are that Tymnet security  is  not  performed,  so  only  the
customers  security measures block undesired logons.  This method
is extendable to any number of CMTI slots and rotaries.

2.6  PROCESSING ERRORS

There are  a  variety  of  error  conditions  possible  with  any
telecommunications  product.   For CMTI the most prevalent errors
are incorrect  Tymfile  configurations,  Host  errors,  and  line
errors.  Host errors include the front-end configurations and the
many possible 3270 protocol errors.

2.6.1  FORWARD ABORT

Line errors will usually result in  a  Forward  Abort.   This  is
indicated  by  an ENQ somewhere in the message.  The ENQ does not
have to be at the end of  the  message.   But  it  may  be  there
instead  of  the  ETX.  CMTI responds by ignoring the message and
not incrementing the DSP sequence number.  It is up to  the  host
to  resend  a  screen,  which does not have to be the same as the
screen just sent in error; it may be any screen the host wants to
send.




Page 11                   CMTI.ERS







TERMINAL/USER INTERACTION                  February 27, 1990



If CMTI receives a 3270 protocol error, such as an invalid buffer
address, the rest of the message is read before sending the error
response.  If the Forward Abort is found then no error message is
sent.   This  keeps the circuit up longer.  This feature is found
in versions 5.00 and above.

2.6.2  OUT OF STORAGE - SCREEN BUFFERS AND BUFFERLETS

CMTI has a formula based on  the  number  of  users  to  allocate
screen buffers and bufferlets.  Bufferlets are used to store data
for later processing, such as when a new screen arrives from  the
host while CMTI is still processing the old screen.

If a customer has a broadcast-type applications (where  the  host
repeatedly  sends  screens  without requiring the operator to ask
for them) then  CMTI  may  receive  an  above-average  number  of
messages.   CMTI  will  run  out  of  either  screen  buffers  or
bufferlets in some of these situations.  For such a customer  the
solution  is  to  increase  the  number  of screen buffers and/or
bufferlets allocated during assembly time.  To do  this,  contact
HQtech; it may depend on which version of code you are running.

Also, 2 IRINGS should be allocated, which acts like an additional
buffering space.  Contact HQtech.

2.7  INPUT INHIBITED

When the input-inhibited keyboard-locked condition is present, no
data  may  be  input.   The keyboard may or may not be physically
locked, depending on the terminal type; but CMTI will reject  all
characters received during the locked condition by sending a bell
to the terminal.

Typing may resume when the screen begins to be  created,  so  the
operator  does  not  have  to  wait  until  the  entire screen is
finished.  This is similar to IBM 3270 however IBM only allows  2
or  4  characters  at  this point, depending on the control unit.
CMTI does not have a set limit.

The only keys allowed during the locked condition are  the  Reset
key  and  the  SYS/REQ  key.  Consult the terminal guide document
(CMTERM.LST) for key definitions.

2.8  COM - CMTI OPERATIONS MONITOR

2.8.1  INTRODUCTION

The COM (CMTI OPERATIONS MONITOR) is a tool to aid in  monitoring
and  controlling  portions of the CMT interface.  Code generation
may be suppressed by setting DEFTRC(OFF) in the tymfile.   Access
to  COM is provided by logging into DDT in the kernel host of the



Page 12                   CMTI.ERS







TERMINAL/USER INTERACTION                  February 27, 1990



node CMT resides in.   When  logging  into  DDT,  at  the  prompt
"please log in" the user should enter:

USERNAME:KERNAL HOST NUMBER;PASSWORD

followed by a  carriage  return.   When  prompted  for  the  slot
number, enter the number of the slot in which CMT resides. At the
"*" prompt, the ?STAT command will put the user  into  COM.   The
prompt (:>) indicates that the COM is ready to accept commands.

Command lines  are  terminated  by  a  carriage  return  and  the
arguments are separated from the command and from each other by a
space.  A few editing control functions are available.

An ESCAPE aborts the current command line and returns to the prompt
(:>).
A control W (^W) discards the partial token already input.
A control A (^A) or control H (^H) discards the last character.
A control C (^C) terminates current processing in COM and returns the
user to DDT


The  date is displayed in the format  ddmmyy,  where  dd  is  the
day,mm is the month, and yy is the year.

The command argument NAME, refers to  the  8  characters  of  the
username  that was used to login to the CMT slot.  PORT refers to
the TERMINAL port number assigned to that user.  This  references
a unique user logged on to the CMT slot.

2.8.2  COMMANDS AND INFORMATION DISPLAYED

2.8.2.1  HELP

Syntax: HELP or ?

Prints a list of commands available for use in the CMT operations
monitor.

2.8.2.2  INSTRUCTION

Syntax:INST or INS

Displays  a  list  of  editing  characters  available  and  valid
delimiter characters.









Page 13                   CMTI.ERS







TERMINAL/USER INTERACTION                  February 27, 1990



2.8.2.3  QUIT

Syntax:QUIT or Q

Exits the CMT Operations Monitor to the slot DDT.

2.8.2.4  EXIT

Syntax:EXIT or EXI

Logs the user off  COM and DDT; zaps the circuit.

2.8.2.5  VERSION

Displays a description of the slot in the following format:

COM -- Cmt Operations Monitor   ddmmyy hh:mm:ss

NODE:nnnn   SLOTHOST:nnnn   SLOT:ss   VERSION:xx.xx

ASSM:ddmmmyy hh:mm:ss


   The display is interpreted as follows:

   NODE:  kernel node number
   SLOTHOST:  CMT slot host number
   VERSION:  version.revision code level
   ASSM: Date assembled in GMT daymonthyear hour:minute:second

2.8.2.6  STATE

Displays the status of the slot.


COM -- Cmt Operations Monitor   ddmmyy hh:mm:ss

NODE:nnnn   SLOTHOST:NNNN   SLOT:ss   VERSION:xx.xx

CMT SLOT STATUS

WEIGHT FACTOR:xxxx   MAXUSR:xxxx   MAXPRINT:xxxx

#TERM PORTS:xxxx  #CRT PORTS:xxxx   #PRINT PORTS:xxxx


The display is interpreted as follows:

WEIGHT FACTOR: Numeric value affecting clear screen.
MAXUSR: Maximum number of simultaneous users permitted
MAXPRINT: Maximum number of printers permitted



Page 14                   CMTI.ERS







TERMINAL/USER INTERACTION                  February 27, 1990



#TERM PORTS: Number of terminal ports(represents current users)
#CRT PORTS: Number of CRT ports
#PRINT PORTS: Number of printer ports

2.8.2.7  NAMES

Displays a table of usernames to the CMT slot exactly as  defined
in the tymfile, including wildcard characters which are displayed
as "#"s.

COM -- Cmt Operations Monitor   ddmmyy hh:mm:ss

NODE:nnnn   SLOTHOST:NNNN   SLOT:ss   VERSION:xx.xx

TYMFILE DEFINED USERNAMES

username

xxxxxxxx
xxxxxxxx
xxxxxxxx
xxxxxxxx
xxxxxxxx

2.8.2.8  MENU

SYNTAX:MENU USERNAME

Displays the screen menu and logon strings (as represented in the
tymfile  )  associated  with all cases of the specified username.
The  displayed   logon   strings   represent    the   destination
information  used  in stored logons.  The network logon string is
displayed first, followed by the corresponding  DSP  information.
A  '  -  '  in the DSP string denotes a corresponding <cr> in the
logon string.

COM -- Cmt Operations Monitor   ddmmyy hh:mm:ss

NODE:nnnn   SLOTHOST:NNNN   SLOT:ss   VERSION:xx.xx

SCREEN MENU

TO MVSHI

TO FREMONT MVS WITH PRINTER

XXXXXXXXXXXXXXXXXXXXXXXXXXXX
XXXXXXXXXXXXXXXXXXXXXXXXXXXX

LOGON STRINGS




Page 15                   CMTI.ERS







TERMINAL/USER INTERACTION                  February 27, 1990



MVSHI

33160009000 ---

XXXXXXXXXXXXXXXXXXXXXXXXXXXX
XXXXXXXXXXXXXXXXXXXXXXXXXXXX

2.8.2.9  USER

SYNTAX:USER (USERNAME OR PORT XX)

If an active username is provided, all circuits  associated  with
this  username  are  displayed.   If  a  TERMINAL  port number is
provided then only circuits associated with this unique user  are
provided.   The logon string on the terminal circuit displays the
tymfile logon string and the CRT and  printer   circuits  display
the  names  used to access the host. If the CRM is 1, the CUA and
DVA will not be displayed. The LU name  is displayed only  if  it
has been user defined.


COM -- Cmt Operations Monitor   ddmmyy hh:mm:ss

NODE:nnnn   SLOTHOST:NNNN   SLOT:ss   VERSION:xx.xx

NUMERIC LOCK: OFF,ON
   TPRT:xxxx  LSTR:xxxxxxxx:xxxx  TRMTYP:xxxxxx  ORIGNOD:xxxx
   TERM LANG:xx   HOST TYPE: xx
   HPRT:xxxx  LSTR:xxxxxxxx:xxxx  CRM:X  APPL:xx  CUA:xx  DVA:xx
   LU:xxxxxxxxxx
   PPRT:xxxx  LSTR:xxxxxxxx:xxxx  CRM:X  APPL:xx  CUA:xx  DVA:xx
   LU:xxxxxxxxxx


The display is interpreted as follows:

LSTR:   USERNAME AND HOST
CRM:  A CRM OF 1,2,3 OR 4
APP:  APPLICATION ID (8D IF NONE)(hex)
CUA:  CONTROL UNIT ADDRESS (8D IF NONE)(hex)
DVA:  DEVICE ADDRESS (8D IF NONE)(hex)
TRMPRT: TERMINAL PORT NUMBER
TRMTYP: TERMINAL TYPE
ORIGNOD: ORIGINATION NODE
TERM LANG: (0=ENG, 4=KATAKANA, 5=KANJI)
HOST TYPE: (57=IBM, 67=FUJITSU, 77=HITACHI)
HSTPRT:  HOST PORT
PRNTPRT:  PRINTER PORT
LU:  USER DEFINED LOGICAL UNIT NAME





Page 16                   CMTI.ERS







TERMINAL/USER INTERACTION                  February 27, 1990



2.8.2.10  PORTS

Displays information  about  the   ports  associated   with  each
username in the slot.


COM -- Cmt Operations Monitor   ddmmyy hh:mm:ss

NODE:nnnn   SLOTHOST:NNNN   SLOT:ss   VERSION:xx.xx

USRNAM:XXXXXXXX TPRT:XXXX HPRT:XXXX DEST:XXXXXXXXXXXXXX
   PPRT:XXXX DEST:XXXXXXXXXXXXXX


The display is interpreted as follows:

USRNAM: USERNAME FOR CMT LOGIN
TPRT: TERMINAL PORT
HPRT: CRT PORT
PPRT: PRINTER PORT
DES: DESTINATION INTERFACE ADDRESS

2.8.2.11  CRASH

If CRSTOP is equated to 0 and NCRSAV  is  equated  to  n  in  the
tymfile,  the CRASH command displays information about the last n
crashes.  Because the crash count is initialized to  1  when  the
slot  is  started,  no  information other than the crash count is
displayed for a slot with a crash count of 1.


COM -- Cmt Operations Monitor   ddmmyy hh:mm:ss

NODE:nnnn   SLOTHOST:NNNN   SLOT:ss   VERSION:xx.xx

CRASH COUNT:  XXXX
CRASH CODE:   XX
CRASH POINT:  XXXXXXXX
CRASH CALLED FROM:  XXXXXXXX
CRASH TIME:  ddmmyy  hh:mm:ss

REGISTERS

xxxxxxxx  xxxxxxxx  xxxxxxxx  xxxxxxxx
xxxxxxxx  xxxxxxxx  xxxxxxxx  xxxxxxxx
xxxxxxxx  xxxxxxxx  xxxxxxxx  xxxxxxxx
xxxxxxxx  xxxxxxxx  xxxxxxxx  xxxxxxxx







Page 17                   CMTI.ERS







TERMINAL/USER INTERACTION                  February 27, 1990



2.8.2.12  IRING

SYNTAX:IRING OR IR (PORT1 PORT2 PORT3 OR START ADDRESS)

Outputs at real time display of the iring with  instructions  for
terminating  the  display.   Optional  arguments are up to 3 port
numbers that the user may wish to limit the trace to, or a  start
address.   If the  start address is between messages, COM may, in
scanning for the next port number, locate a  byte  which  it  may
consider  a  valid  port  number.  This may lead to unpredictable
results.


COM -- Cmt Operations Monitor   ddmmyy hh:mm:ss

NODE:nnnn   SLOTHOST:NNNN   SLOT:ss   VERSION:xx.xx

A REAL TIME DISPLAY OF THE IRING FOLLOWS
PLEASE TYPE A "/" TO TERMINATE DISPLAY

2.8.2.13  ORING

SYNTAX:ORING or OR (PORT1 PORT2 PORT3 OR START ADDRESS)

Outputs a real time display of the oring  with  instructions  for
terminating  the  display.  Optional  arguments  are up to 3 port
numbers the user may wish to limit  the  trace  to,  or  a  start
address.   If  the  start address is between messages, COM may in
scanning for the next port number, locate a  byte  which  it  may
consider  a  valid  port  number.  This may lead to unpredictable
results.


COM -- Cmt Operations Monitor   ddmmyy hh:mm:ss

NODE:nnnn   SLOTHOST:NNNN   SLOT:ss   VERSION:xx.xx

A REAL TIME DISPLAY OF THE ORING FOLLOWS, PLEASE TYPE A  "/"
TO TERMINATE DISPLAY

2.8.2.14  RINGS

SYNTAX:RINGS PORT1 PORT2 PORT3

Outputs a real time display of both rings(alternating  iring  and
oring).   The  events  in  the  rings  will  not  necessarily  be
displayed  in  the  correct  sequential  order   of   occurrence.
Optional  arguments are up to 3 port numbers the user may wish to
limit the trace to.





Page 18                   CMTI.ERS







TERMINAL/USER INTERACTION                  February 27, 1990



COM -- Cmt Operations Monitor   ddmmyy hh:mm:ss

NODE:nnnn   SLOTHOST:NNNN   SLOT:ss   VERSION:xx.xx

A REAL TIME DISPLAY OF ALTERNATING IRING AND ORING  FOLLOWS,
PLEASE TYPE A "/" TO TERMINATE DISPLAY

2.8.2.15  WCNT

Syntax:  WCNT

Default:  None

Description:  The  WCNT  command  outputs  the  number  of  times
(decimal)  a  circuit has been cleared by CMTI due to the receipt
of a WSF command with a structured  field  type  other  than  SCS
data.   This  count  is  initialized  to  zero  whenever the CMTI
interface is started.

An example of the command output follows:


COM -- CMT Operations Monitor         17Feb87 18:39:14

NODE:2222    HOST: 1111    SLOT: 3     VERSION: 4.00

Circuit Zaps Due to Invalid WSF Type: 14

2.9  PERSONAL COMPUTERS AND CMT/3270

Personal computers may be  used  with  CMT/3270  like  any  other
terminal.   All  that  is  required  is  some  kind  of  terminal
emulator.   There  are  a  number  of  packages  that  have  been
certified by Q/A for the IBM PC.

There are also file transfers packages that may be used with  the
network  through  CMT/3270.  However there are limitations to the
speed that can be achieved,  especially  when  dialing  into  the
network  through a 1200-baud modem.  So this route should only be
used for small to medium size files.

2.9.1  CANNED LOGON

Automated (canned) logon may be accomplished  whereby  a  program
running on the PC sends in several messages to the customers host
computer.  However a restriction is imposed by the  structure  of
CMT/3270:  each transmission from the PC to the host must contain
only 1  discrete  message.   The  canned  logon  cannot  send  in
everything at once. If it does, CMT/3270 will flush every message
after the first one.  The accepted protocol is for the PC to wait
for  some  kind  of  response  from  the host for a given message



Page 19                   CMTI.ERS







TERMINAL/USER INTERACTION                  February 27, 1990



before transmitting the next message.  Thus a dialogue is formed.
Each  host  response  will unlock the keyboard, readying CMT/3270
for the next PC transmission.

Note that the restriction of only  1  message  allowed  from  the
terminal  does  not  apply  to the host application: the host may
always send multiple  messages to a terminal.

2.9.2  FILE TRANSFER

The CMT/3270 may be used as  part  of  a  file  transfer  process
between a personal computer and a host computer.

The network logon  process  is  the  same  as  usual.   The  file
transfer  function  will  then  be  controlled  by  the  personal
computer, or the host if a  host-initiated  transfer.   Thus  the
details of operation depend on the particular package being used.
In the Micro Tempus system the host computer appears  as  another
floppy  disk to the personal computer.  The file transfer rate on
a 1200 baud line is approximately 3K/minute.  On a 2400 baud line
the rate will be slightly less than twice as fast.

The way CMTI participates in the file transfer is to sequence the
transfer  by  using  the screen buffer as the block limit and the
keyboard lock/unlock to do flow control.  Thus the maximum  block
size  is  1920  data  bytes (in addition to any control sequences
sent such as moving the cursor to the  Home  position).   The  PC
must  send  a  carriage  return after each block to cause CMTI to
send it to the host.  Therefore, the host must  send  the  unlock
keyboard  indicator  (WCC  bit)  to enable the PC to send another
block.  If the keyboard remains  locked,  CMTI  will  reject  all
subsequent output from the PC.  The X.PC product may be used with
CMTI to  achieve  error-free  file  transfer  over  phone  lines;
contact the X.PC marketing group for information.

When a customer wants to write  their  own  package  to  do  file
transfer  using  PC's, they need to understand the 1920 character
block  size  limit,  the  keyboard   lock/unlock   flow   control
mechanism,  and  the  BOP/FOP  control sequences for blocking the
output.  BOP is a sequence that is sent at the beginning  of  the
block  of output to the CRT.  FOP is the sequence sent at the end
of the output.  Thus the PC can use the BOP and  FOP  to  trigger
off of.  BOP/FOP will be available in release 4.00 and above.

Since the  transfer  of  files  does  not  require  any  terminal
display,  there is no need for the CONSAT or CMT/3270 to echo any
characters.  There is a sequence  defined  for  certain  terminal
types  (like  VT100  and  3101-character  mode)  to  turn off all
network echo, which the  PC  should  emit  at  the  beginning  of
transmission.   There  is another sequence defined for turning on
echo again, which the PC should emit as soon as the file transfer



Page 20                   CMTI.ERS







TERMINAL/USER INTERACTION                  February 27, 1990



is  complete.   If  echo  is not turned on then CMT/3270 will not
operate correctly for normal user interaction.

The XON/XOFF flow control is normally handled by our CONSAT slot,
not the CMTI slot.

Currently on CMT version 2.06, there are only 2 terminal types to
developed  with  key  sequences  to stop/restart network echo for
file transfer purposes. They are the VT100 and IBM3101. The exact
key sequence is as follows:

   ESC-X-B for network echo off.
   ESC-X-E for network echo on.


File Transfer for Tempus Link requires a TYM file entry as follows:

CHRMAP  MACRO [
        REMAPC(APLEBC,79,79)
        REMAPC(APLEBC,0A1,0A1)
        REMAPC(ASCEBC,60,79)
]


For CMTI versions higher than 4.00, the  CHRMAP  change  for  the
ASCEBC  table  is  not needed, and the two changes for the APLEBC
table can also be avoided if the  APLEDT  macro  is  used.   This
macro  suppresses  the  use  of  the  APL edit, which removes APL
characters fro the datastream.  If the APL edit is desired,  then
the  first 2 REMAPC table changes in the CHRMAP example above are
required.

2.9.2.1  IBM FILE TRANSFER -- FTTERM

Users of the PC/HOST File Transfer and Terminal Emulator  Program
(FTTERM)  may  now use the CMT/3270 interface in place of the IBM
3708 Network Conversion Unit to access their  host  system.   The
IBM Personal Computer running the FTTERM package will communicate
with a host computer as an IBM 3101 Display Terminal.

Certification of the FTTERM  for  file  transfer  is  done  while
communicating  with  a  VM/CMS host.  Although the package allows
access to MVS/TSO, CICS/MVS, CICS/VSE and VSE/SP,  none  of  them
are  certified  with  the  CMT/3270.  Therefore, it should not be
used to access any of those host systems.  Also, FTTERM  has  two
methods of transferring files: the protocol conversion method and
the native emulation method.  CMTI  only  supports  the  protocol
conversion method to access a SNA host.

The way CMTI participate in a file transfer  using  the  software
package  FTTERM  is the same as any other software packages.  The



Page 21                   CMTI.ERS







TERMINAL/USER INTERACTION                  February 27, 1990



screen buffer is used as the block limit  (1920  bytes)  and  the
keyboard  lock/unlock  to do flow control.  The PC must terminate
with a carriage return at the end of a block which CMTI will send
to  the  host  and  lock the keyboard.  The host must send back a
message with the WCC byte indicating the keyboard unlock to allow
the next block of data input from the PC.

The starting point for all file transfers is  the  File  Transfer
Main  Menu.  Enter this menu by pressing the key sequence for the
File Transfer Main Menu (default is Alt-F8) when  the  CMS  ready
message appears on the screen.  This message appears as "RUNNING"
at the lower right corner of  the  screen.   Select  one  of  the
commands from the menu followed by an enter key.  Select the SEND
command  when  uploading  a  file,  the  RECEIVE   command   when
downloading  a file.  Once the enter key is pressed, another menu
which display the format  of  the  command  will  appear  on  the
screen.   Enter  the  format  you choose and pressed enter.  File
transfer is started once enter is pressed.  Please refer  to  the
PC/HOST  File Transfer and Terminal Emulator Program User's Guide
and Reference for references.

File transfer is started once the  format  is  entered  correctly
from  the  keyboard.   Header informations which include a set of
escape sequences to enable file transfer mode followed by a  name
of the host file transfer command and its options are provided by
the PC to activate the file transfer.   At  the  end  of  a  file
transfer,  another  header  information  which  include  a set of
escape sequences to disable the file transfer mode  is  generated
by  the  PC.   In  between the transferring of the blocks of data
between  the  PC  and  the  host  system,  CMTI  does  one  thing
different.   When  the  host  is  sending a screen back to the PC
either to acknowledge the block or to initiate the transfer  when
downloading   a   file,   the  screen  attribute  specifies  non-
displayable field.  CMTI will display the screen even if it is in
a  non-displayable field because the PC software package triggers
off the characters displayed on the screen.

When uploading a file, the FTTERM package requires the characters
transmitted  to  be echoed back to the PC.  Therefore, unlike the
other software packages, network echo are not turned  off  during
the  file  transfer.   FTTERM  has its own internal screen buffer
which it checks against the characters comming into the  PC.   It
also  requires  a  move cursor to the next line if it reaches the
end of a line.  CMTI must keep track of this when it receives the
characters from the PC, otherwise the FTTERM will be hung waiting
for the move cursor sequence at the end of a line.

There are no special macros needed in the tymfile to use with the
FTTERM software package other than defining the terminal macro in
the DEFTRM macro.   The  terminal  macro  should  be  defined  as
FT3101.



Page 22                   CMTI.ERS







TERMINAL/USER INTERACTION                  February 27, 1990



2.9.3  NEW ESCAPE SEQUENCES

CMTI can also be transparent to new Escape sequences sent by  the
Host  to  the terminal.  These new escape sequences can be passed
through  CMTI.   They  are  sent  by  the  host   using   certain
CHRMAP/REMAPC  macro  changes  in the Tymfile.  See discussion on
'SENDING ESCAPE SEQUENCES FROM HOST TO TERMINAL' in  the  Tymfile
section.

2.9.4  WRITING EMULATORS

Generally, the VT1XX or 3101 terminals  are  used  as  bases  for
writing  terminal  emulators, however this is not required.  If a
customer terminal emulator is written, it should support  all  of
the  basic  functions  that  a typical terminal has - move cursor
commands,  selective  erase  commands,  transparent  (aux   port)
commands  for  printing,  highlighting (non-embedded attributes),
etc.

In addition, the emulator should have a  25th  line  ability  for
using the CMTI Status Line.

The VT1XX does not have a proper keyboard lock/unlock  mechanism,
and   so   the  CMTI  terminal  definition  has  the  lock/unlock
indication be the lighting of the LED's  on  the  keyboard.   The
limitation  of  the  VT1XX, which several terminals have, is that
there is no local reset key.  The reset key would  have  to  both
locally  reset the keyboard, and to transmit a code to CMTI (such
as ^R) so that CMTI knows the keyboard has been unlocked.  Any PC
emulator  should  properly  implement  a reset key if they want a
good keyboard lock/unlock mechanism.

The efficiency of the control sequences can  be  improved  in  an
emulator  over the typical VT1XX definitions.  The best situation
is when the VT1XX commands are implemented,  and  then  alternate
forms  of the commands are included for more efficient operation.
For example, the most common sequence used in a typical emulation
session is the move-cursor command.  On a VT100 this takes 7 or 8
characters, depending on how far down the screen the position is.
An  alternate  form  might be ^P R C (3 bytes) where R is the row
number in hex and C is the column  in  hex.   This  is  over  50%
shorter for the move-cursor sequence.

2.9.4.1  SCREEN FLASHING - BOP and FOP SCREEN BLOCKING

The BOP/FOP mechanism is used to block the CMTI output to the CRT
(not  including  the  Status Line output).  These are 2 sequences
defined in the terminal definition.  The sequences are arbitrary,
as long as they are unique.

Besides file transfer applications, this could be used for a Fast



Page 23                   CMTI.ERS







TERMINAL/USER INTERACTION                  February 27, 1990



Screen  feature.  On some IBM terminals, the changed data on each
new screen appears all at  once,  which  the  3101  manual  calls
"blink".   On a PC emulation, the BOP/FOP sequences could be used
to do the same thing.  The PC would  store  the  changes  in  its
buffer  after  it  receives  the BOP.  As soon as it receives the
FOP, it then displays all of those changes instantaneously.  this
is  a  nice  feature  for the operator, especially at higher baud
rates (2400 and above).  It is called Screen  Flashing,  or  Fast
Screen.   At 1200 baud it is not clear whether it is an advantage
or not, since the operator has to wait longer before he  sees  an
indication  of  a response.  If the PC lit an indicator somewhere
so the operator knew that a response was being received this  may
alleviate that problem.

Note that the BOP/FOP mechanism was developed since the  keyboard
lock/unlock  cannot be used reliably for such blocking.The reason
for this is that it is up to the host whether or  not  to  unlock
the  keyboard for a given screen.  CMTI has no control over that.
One typical application is on password errors; a host  wants  the
operator  to  be  aware  that  an  error was made, so it prevents
immediate input by keeping the keyboard locked and  the  operator
then  has  to  locally reset.  The BOP/FOP mechanism blocks every
CMTI screen (but not the Status line).

2.9.5  TYMNET SUPPORT OF PC AUTHORS

For any questions on writing a PC emulator for  use  with  Tymnet
and   CMTI   3270   emulation,   contact   the   QA   department,
Certifications group.

2.10  PRINTER SUPPORT

If printer support is available, then the only criterion  on  the
type of printer is a serial printer that supports form feed, line
feed, carriage return, and sufficient columns  for  the  specific
application.   The printer should be connected directly (straight
cable) to the auxiliary port of the  terminal,  which  should  be
correctly set up as specified in the terminal manual.

While the printer datastream is being processed by CMTI,  no  CRT
input is allowed.  In between printer datastreams, for long print
jobs, it is possible that an input could be  made.   but  due  to
timing  it  is  impossible  to say whether it would be processed.
The operator could also unlock the  keyboard  manually  and  make
some  kind of input; again, this may reduce the time it takes for
CMTI to respond to the input but it is unpredictable.

Certain terminal types do not  support  a  printer.   Check  each
terminal description to see which ones do.

Note that even though CMTI supports only  80-column  screens,  it



Page 24                   CMTI.ERS







TERMINAL/USER INTERACTION                  February 27, 1990



can  support  132-column  print applications.  The requirement is
that the printer can support 132 columns  and  has  been  set  up
correctly.   There  need  be no changes to CMTI for 132 versus 80
column wide printing; this is controlled the the host  using  the
WCC  bits  to  set  the  length  indicator and the use of printer
control characters in the 3270 datastream.

No keyboard input is allowed during the print operation.  At  the
end  of  the  print  operation, the keyboard is unlocked.  If the
status line  option  is  being  used,  then  during  the  printer
operation there is an indication on the status line: "wait".

2.10.1  CONFIGURATIONS FOR ASYNC PRINTER SUPPORT

ASYNC TO 3270 PRINTER SUPPORT--

There are 4 ways to do 3287 printer emulation with Async to  3270
Service:


            Local Terminal       IBM Host         IBM Host
          Controls Printing  Controls Printing Controls Printing
          (aux pt. attached) (aux pt. attached)(separate circuit
                                                  attached)
           _____________________________________________________
           |                |                  |                |
OPTION 1   |     X          |                  |                |
           |________________|__________________|________________|
OPTION 2   |     X          |        X         |                |
           |________________|__________________|________________|
OPTION 3   |                |        X         |                |
           |________________|__________________|________________|
OPTION 4   |                |                  |           X    |
           |________________|__________________|________________|

****NOTE:


OPTIONS 2, AND 3 REQUIRE UNIQUE NETWORK USER NAMES FOR EACH  PAIR
OF  CRT  AND  PRINTER.   OPTION 4 REQUIRES  A UNIQUE NETWORK USER
NAME FOR EVERY PRINTER. IF YOU DO NOT DO THIS, THE IBM HOST  WILL
HAVE  NO  WAY  OF  KNOWING WHAT PRINTER BELONGS TO WHAT CRT USER.
THE END RESULT IS THAT END USERS GET MISDIRECTED PRINT JOBS.   TO
REDUCE THE NUMBER OF ADDRESSES REQUIRED, ANOTHER OPTION - CRM 4 -
IS POSSIBLE.  THIS MAKES A UNIQUE ASSOCIATION BETWEEN THE CRT AND
PRINTER  DURING  THE  LOGON PROCESS, ENSURING THAT OTHER USERS DO
NOT GET YOUR PRINT JOBS.  SEE CRM DISCUSSION IN THE DEFELE  MACRO
SECTION OF THIS MANUAL.


OPTION 1.  LOCAL SCREEN COPY VIA AUXILIARY  (AUX)  PORT  ATTACHED



Page 25                   CMTI.ERS







TERMINAL/USER INTERACTION                  February 27, 1990



PRINTER

The printer is attached to the aux port of the CRT or PC and only
screen  prints  are required.  Many IBM applications only require
this kind of printing.  This type of printing  does  NOT  INVOLVE
ANY  TYMNET  TECHNOLOGY  and your customer should be cautioned to
select terminal equipment that can do a print of  the  screen  if
this is what they want to use.

      Advantage:
        -reduces Kchar charges because no print data is sent
         across the network.

      Disadvantage:
        -no host initiated copy
        -not supported by all terminal types

OPTION 2.  LOCAL SCREEN COPY  AND  HOST  INITIATED  PRINTING  VIA
AUXILIARY  (AUX)  PORT  ATTACHED PRINTER ( 1Q86 available for BSC
HIF , SNA/SDLC HIF LU3 or 3270 datastream only,beta test)

Allows an async, ASCII printer to be attached  to  the  auxiliary
port of a terminal or PC that has a controllable aux port.  Print
jobs initiated by the host software can be sent  to  the  printer
which  will  appear to the host  as 3287 printer .  Async to 3270
Service will take care of routing the print job to the  aux  port
of  terminals  and  PC  packages  that  can support this feature.
Check the Ontyme  file  ***  list.asymcto3270  for  the  list  of
terminals  and PC software that supports host initiated print and
check the manufactures documentation to see if the terminal or PC
can do the local screen print.

      Advantages:
        -dial-up users can get a 3287 print job over a single
         connection
        -local copy is supported on terminals that have this
         feature
        -some PC's can gather the host print on the disk for
         printing off-line which improves operator efficiency

      Disadvantage:
        -CRT cannot be used while receiving a print because of
         the technical limitations of the terminal equipment
         available on the market today
        -CMT and HIF devices must be dedicated to each unique
         network user name that identifies a particular CRT and
         printer pair

OPTION 3.  HOST  INITIATED  PRINTING  VIA  AUXILIARY  (AUX)  PORT
ATTACHED PRINTER ( 1Q86 available for  BSC HIF , SNA/SDLC HIF LU3
or 3270 datastream only, beta test)



Page 26                   CMTI.ERS







TERMINAL/USER INTERACTION                  February 27, 1990



This is the same as Option 2 except it is for  terminals  without
local  screen copy capability.  It allows an async, ASCII printer
to be attached to the auxiliary port of a terminal or PC that has
a  controllable  aux  port.   Print  jobs  initiated  by the host
software can be sent to the printer which will appear to the host
as  a  3287  printer.   Async  to  3270 Service will take care of
routing the print job  to  the  aux  port  of  terminals  and  PC
packages that can support this feature. Check the Ontyme file ***
list.asyncto3270 for the list of terminals and PC  software  that
supports host initiated print.

      Advantages:
        -dial-up users can get a 3287 print job over a single
         connection
        -some PC's can gather the host print on the disk for
         printing off-line which improves operator efficiency

      Disadvantage:
        -CRT cannot be used while receiving a print because of
         the technical limitations of the terminal equipment
         available on the market today
        -no local screen print available

        -CMT and HIF devices must be dedicated to each unique
         network user name that identifies a particular CRT and
         printer pair

OPTION 4.  HOST INITIATED PRINTING ONLY VIA  A  SEPARATE  CIRCUIT
(BSC HIF only)

Allows an async, ASCII printer to be  shared  among  a  group  of
terminal users.  The printer is connected by:

          1.  connecting the printer to an async terminal
              concentrator that supports PVC's
                                   OR
          2. the printer has a keyboard that is used to do the
             network logon and establish the circuit OR
          3. you can use a PAP (dial-up or leased) with a PVC


      Advantage:
        -allows any verified terminal to have 3287 printer
         emulation
        -allows colocated CRT's and PC'c to share the same
         printer; thereby, reducing costs and improving efficiency

      Disadvantage:
        -no local copy function
        -you may pay for connect time for the printer
        -a device address must be dedicated to each printer on



Page 27                   CMTI.ERS







TERMINAL/USER INTERACTION                  February 27, 1990



         the BSC HIF


NOTE: There are  many  inexpensive  printers  available.   It  is
usually  desirable  to  chose  a  printer  that has XON/XOFF flow
control and a serial port. Check  the  hardware  manual  for  the
terminal  to  find  the  characteristics of its aux port and make
sure it is compatible with the printer--be  particularly  careful
about  flow  control,  e.g.,  XON/XOFF  (the  best)  or  hardware
handshaking CTS.  The IBM PC may be used with a parallel port and
printer.

ALL PRINTERS MUST SUPPORT Carriage Return,  Line  Feed  and  Form
Feed and have sufficient columns for the application

WCC bit setting supported
    Alarm generates a Ascii Bell
    80 character line
    132 character line
    non-display

3287 Printer Orders supported

New Line translates to Ascii Line Feed and Carriage Return `0A0D'

Form Feed translates to Ascii Form Feed `0C'

Carriage Return translates Ascii Line Feed and Carriage Return `0A0D'

End of Message will cause the CRT aux port to be  turned  off  if
the printer is attached to the CRT's aux port

2.11  MICRODATA CMT DEVELOPMENT

This project is to develop the use of the PRISM-7/8  Terminal  in
CMT.   This terminal supports attached printers, specifically the
model 8910.  This project includes  development  of  a  specified
format  for  the  CMT  status line, and support for the 3270 copy
command.

Because the status line  format  of  the  Microdata  terminal  is
different  from  the  other Tymnet terminals, inside the terminal
profile use macro DATDEF(MIC) to indicate the Microdata  terminal
type. The parameter values for macro DATDEF could be :

TILDE : Indicates that tilde is treated as a control character.
TTY   : Indicates that it is the TTY printer terminal type.
MIC   : Indicates that it is the Microdata terminal type.

Currently, most of the terminal types in CMT  treat  tilde  as  a
graphic  character,  therefore using the default value instead of



Page 28                   CMTI.ERS







TERMINAL/USER INTERACTION                  February 27, 1990



using  the  macro  DATDEF  in  their  terminal  definition.   The
Haseltine  1500  terminal  treats  tilde  as a control character,
therefore use macro DATDEF(TILDE) in its terminal definition.

The TTY printer  terminal  and  Microdata  terminal  are  special
terminal  types,  macro DATDEF is used to indicate these terminal
types.  The TTY  printer  terminal  treats  tilde  as  a  graphic
character  ,  therefore  use  macro  DATDEF(TTY)  in its terminal
definition.  The Microdata terminal treats  tilde  as  a  graphic
character,  therefore  use  macro  DATDEF(MIC)  in  its  terminal
definition. If the Microdata terminal treats tilde as  a  control
character, then macro DATDEF(TILDE, MIC) will be used.

2.11.1  MICRODATA TYMFILE CONFIGURATION

The copy command can be executed under the the same control  unit
only.   In  order to let the copy command be used among the users
in the same group, an internal grouping mechanism of the  control
unit  and  device addresses is necessary, that is consistent with
the copy command control unit restriction. The  configuration  of
the Tymfile both in CMT and in the HIF must be properly set up to
allow the users in the same group to  copy  to  specific  devices
(printer or crt).

2.11.1.1  CMT TYMFILE

The symbol MICM is  used  for  defining  the  Microdata  terminal
inside  the  macro  DEFTRM.  With  the stored logon, the username
defined by macro DEFELE should be used for all users in the  same
group.  Another group of users should create another macro DEFELE
with another username.

For example :


          DEFELE(label1,PJONES"BAhost #"BBpassword"8D)   :for network
          DEFELE(label2,ALEWIS"BAhost #"BBpassword"8D)   :logon
              .
              .
          DEFELE(label#,crm#destinationinterfaceadr"8dappcuadva)
                         ^                                   ^
                         |                                   |
                      2 or 3                                 8d


              ** app -- the application id. (should be defined)
                 cua -- the control unit address. (should be defined)
                 dva -- the device address.(put 8d)

          Besides crm and dva, other elements should be predefined.




Page 29                   CMTI.ERS







TERMINAL/USER INTERACTION                  February 27, 1990



Another macro DEFUSR should be modified if these users need to do
the  copy  from  one device to another device on the same control
unit.  The format of this macro should be modified as follows :

          DEFUSR(user, cu, #dv)

          where

          user : Username. A text string its length is not more
                 than 8 characters.
          cu   : Control unit address. This address can be any
                 valid cu address but do not use 5F.
                 The only valid control unit address can be used
                 here is 40,0C1,0C2,0C3,0C4,0C5,0C6,0C7,0C8,0C9,
                 4A,4B,4C,4D,4E,4F,50,0D1,0D2,0D3,0D4,0D5,0D6,0D7,
                 0D8,0D9,5A,5B,5C,5D, or 5E.
          #dv  : Number of devices on this control unit needing
                 to do copy. The number is a hex number, not bigger
                 than 20(hex).  If the numbers of user trying to log on
                 are more than the #dv, then that user will receive
                 an error message "too many devices logged on" and the
                 circuit zapped. If the number of user trying to
                 log on are not more than the #dv, but the number of
                 printers logged on are more than the number of printers
                 defined in the tymfile,  then that user will receive
                 an error message "too many printers logged on" and the
                 circuit is zapped.

For example, DEFUSR(username, 40,4)

2.11.1.2  HOST INTERFACE TYMFILE

In the HIF tymfile, two macros are used to force these  users  to
sign  on  the devices which are predefined as a group on the same
control unit.  These two macros are DEFLUD and DEFOK.  DEFLUD  is
restricted to the first two characters of the username.

For example :

      DEFCU(#)              :# is the control unit address.
                            :It should match the cu address defined
                            :in macro DEFELE.
      DEFDEV(...)
            .
            .
      DEFLUD(504A)          :LUD for username starting with PJ
      DEFOK(a1,a2,..an)     :(504A is the hex for the ASCII
                            :characters PJ) can access device
                            :a1, a2,..,an.
                            :a1,a2,..,an should be on the same
                            :control unit(i.e. a1, a2,..,an



Page 30                   CMTI.ERS







TERMINAL/USER INTERACTION                  February 27, 1990



                            :should be defined under the same
                            :DEFCU).
      DEFLUD(414C)          :LUD for username starting with AL
      DEFOK(b1,b2,...bn)    :(414C is the hex for the ASCII
                            :characters AL) can access device
                            :b1,b2,..,bn.
                            :b1,b2,..,bn should be on the same
                            :control unit(i.e. b1,b2,..,bn
                            :should be defined under the same
                            :DEFCU).

2.11.2  MICRODATA STATUS LINE FORMAT

Microdata terminal status line format is different from the other
Tymnet  terminals.   Microdata terminal status display has a line
format only; it does not have  the  right  upper-corner  display.
The items inside the Microdata terminal status line are "W", "K",
"I", or "3270" only.  Other status items in CMT do not  apply  to
this terminal type.

The format of the status line is as follows :


                SSCP
                 or
                space
                 or
    *W* *K*  I  PLU                      3270
    ^   ^    ^  ^                         ^
    |   |    |  |                         |
    |   |    |  column 17                 column 68
    |   |    column 13
    |   column 8
    column 4


       W - Hitting any AID key, which causes a message to be
           transmitted to the host.
           It will be reset to space when the restore bit being
           set in the WCC or the user hits the RESET key.

       K - While the cursor is on an attribute or protected field
           and the user enters a character or when alpha entry is
           attempted in a numeric field. The keyboard is locked.
           All of the illegal key is hit will sound the bell.
           It will be reset to space when the user hits the RESET
           key or the legal key is entered.  Note that alpha characters
           may be put into a numeric field if Insert mode is used.

       I - Enter insert mode. It will be reset to space when RESET
           key or function key is hit or the character entered



Page 31                   CMTI.ERS







TERMINAL/USER INTERACTION                  February 27, 1990



           by the user reaches the attribute.  Note that insert mode
           is also used to enter alpha characters into numeric fields.

   SSCP
    or
   PLU   - Currently, this item is default to PLU, other two values
    or     (i.e. SSCP or space) will be available when the SNA
   space   SYS/REQ key implementation has completed.

    3270 - This item is always displayed.

  ** All of the status items except "3270" and "PLU" will be displayed
     only when the status condition is active.

  ** "FORMAT ERROR" on the message area is not supported in CMT.
  ** "LP" for local print available is not support in CMT.
  ** "MP" for mainframe print available is not support in CMT.
  ** In CMT with other Tymnet terminal types, the regular status
     items are :

     BSC (SNA or X.25) - Indicate that CMT talks to the different
                         host interface.
     APPL (SYS or ?)   - Indicate that who owns the screen. (SNA
                         environment  only)
     CRT : lu name     - Lu name for the CRT.
     PRT : lu name     - Lu name for the PRT.
     WAIT              - Printer is printing now.
     ISRT              - In insert mode.
     PROT              - Cursor on the protected field or an attribute
                         or an illegal key is hit.
     NULK              - Cursor on a numeric field.
     LOCK              - Keyboard is locked by hitting any AID key.

The user can change the status line display from line 1  to  line
25  by  entering  a  key sequence. The key sequence starts with a
control character which is defined by the STATLN function in each
terminal  definition  and terminates with a CR (carriage return).
For example, ^A (CTRL A both  keys  hit  at  the  same  time)  is
defined   as   the  STATLN  function.  The  valid  key  sequences
requesting status line display or not to display are as follows :














Page 32                   CMTI.ERS







TERMINAL/USER INTERACTION                  February 27, 1990




   ^A  D/d  CR    :Default line is the status display line.
                  :It could be any line from line 1 to line 25.
                  :Macro STADEF in the terminal profile defines
                  :the default line #.
   ^A  E/e  CR    :Turn off the status line display.
   ^A  #    CR    :Status line on line 1,2,......,24 or 25.
       ^
       |
       ---  1, 2, ..., 24 or 25
   ^A  CR         :Default line is the status display line.
                  :This key sequence has the same result with
                  :^A CR.


Other keys  entered  right  after  ^A  will  sound  a  bell  when
terminated by CR.

2.11.3  COPY COMMAND

The copy command is used to transfer buffer data from one  device
to  another  device  attached to the same control unit.  The data
stream is as follows :


       ---------                                ---------
       |       |                                |       |
       |  CMT  |  <--- STX ESC __ __ __ ETX     |  HIF  |
       |       |                ^  ^  ^         |       |
       ---------                |  |  |         ---------
                                |  | from device address
                                |  ccc byte
                                copy command code (F7)


In native mode, when the copy command is  executed  it  transfers
buffer  data  from  one  device to another device attached to the
same control  unit.   CMT  is  in  a  virtual  mode.   It  allows
asynchronous  Ascii  terminals  attached  to a Consat to access a
3270 host through a 3270 host interface.

In order to implement the copy command in CMT, the following must
be done :

   a. The terminals signed on to the same CMT interface should  be
      under the same control unit if these CMT users want to use a
      printer which is on the same control unit.  The control unit
      and the device mapping can be done by setting up the proper
      configuration in the CMT Tymfile and the host interface Tymfile.

   b. While receiving the copy command on the crt/printer circuit, CMT



Page 33                   CMTI.ERS







TERMINAL/USER INTERACTION                  February 27, 1990



      needs to find out the from device address and copy the screen
      buffer from this device to the crt/printer.  Copy from crt to
      crt or from crt to prt exists in the BSC environment.  In SNA,
      the copy is allowed from crt to prt only

   c. If CMT receives the copy command and the from device has logged
      off (for example, from device is log off right away after
      it initiates a copy to the host), CMT sends sense/status
      message 40D1 by the "to device" circuit to the host.

   d. If CMT receives the copy command and can not find the from
      device, then the "to device" circuit get error  message
      "from device not matched in copy command" and zapped.

2.12  SYS/REQ KEY

The SYS/REQ key is a 3270 function key entered by the  user  from
the  keyboard. This key is used to request a session change among
an LU-LU session (application),  SSCP-LU  session  (system),  and
unowned in the SNA environment.

The SYS/REQ mechanism exists only for  the  SNA  product  version
greater  than  or  equal  to 1.05 and for the CMT product version
greater than or equal to 4.00.  With an invalid product  version,
CMT will sound the bell at the terminal when the user strikes the
SYS/REQ key.

When CMT is connected to an SNA host interface, the user can  hit
the SYS/REQ key to request that the host interface indicate which
session they are in. In an SSCP-LU session, CMT displays "SYS" on
the status line.  In an LU-LU session, CMT displays "APPL" on the
status line.  In unowned, CMT displays "?" on the status line.

With the Microdata terminal, the mnemonic displayed on the status
line for session type is different. It displays "SSCP" instead of
"SYS", "PLU" instead of "APPL", and a space instead of "?".

While the CRT is in a SYS/REQ cycle, any  data  received  on  the
printer  circuit  will  be  processed,  but  CRT messages will be
ignored.  If in a SYS/REQ cycle, RESET and SYS/REQ key may not be
used; only the KILL key.

The FUJITSU and HITACHI hosts operate the SYS/REQ  key  the  same
way  as  IBM,  so  no  changes  will be required there. (ref Pir#
1970/1971)









Page 34                   CMTI.ERS







TERMINAL/USER INTERACTION                  February 27, 1990



2.12.1  USER-INITIATED SESSION SWITCH

When the user initiates the session switch, the user  is  allowed
to  hit  the SYS/REQ key when the keyboard is locked or unlocked.
After this key is hit, CMT will :

 a. Lock the keyboard.
 b. Clear the screen.
 c. Send a read (F0) to the host interface.
 d. Enter into a SYS/REQ cycle and wait for the SYS/REQ
    response command (FF) from the host interface.

During the wait for this response,  CMT  throws  away  any  other
messages  coming  from  the host interface until receiving the FF
command(**). After the FF command is received, then CMT will :

 a. Unlock the keyboard.
 b. Update the status line.
 c. Terminate the SYS/REQ cycle. CMT goes back to normal processing.
 ** During the SYS/REQ cycle, the keyboard is locked, and no key is
    allowed except the KILL key ( zap the circuit ).  The KILL key
    is allowed in case the SNA host interface, for any reason,
    does not respond.  The RESET key is not allowed in a SYS/REQ
    cycle, nor are extra SYS/REQ keystrokes.


  Example :

                                                CMT displays on
                                                the status line :

 --------      <--- F0 seq# C1 ETX      --------         SYS
 |      |                               |      |
 |      |       FF seq# 40 ETX --->     |      |  --->    ?
 |  HI  |               or              | CMT  |          or
 |      |       FF seq# C1 ETX --->     |      |  --->   SYS
 |      |               or              |      |          or
 --------       FF seq# C2 ETX --->     --------  --->   APPL


   ** The FF command is not a valid IBM command.  It is defined
      only for the CMT and SNA SYS/REQ interaction.
   ** The seq# is 7E or 7F. Those two seq# are toggle when CMT
      receives FF 40 C3 ETX.  The initial seq# in CMT is 7E.
   ** If the CMT seq# is 7E/7F currently, but receives the seq#
      (the byte after the FF) 7F/7E, then CMT ignores this FF
      command.







Page 35                   CMTI.ERS







TERMINAL/USER INTERACTION                  February 27, 1990



2.12.2  HOST-INITIATED SESSION SWITCH

When CMT is not in a SYS/REQ cycle and receives  an  FF  command,
then   the   host   initiates  the  session  switch  without  CMT
solicitation.  The first byte after FF is 40. The second byte  is
the  status  value.   CMT  checks  the  second byte after the FF,
determines the session type, and displays the appropriate  status
item.


 Example :

                                                  CMT displays on
                                                  the status line :


 --------    FF 40 C1 ETX --->    --------    --->    SYS
 |      |          or             |      |            or
 |      |    FF 40 C2 ETX --->    |      |    --->    APPL
 |  HI  |          or             | CMT  |            or
 |      |    FF 40 C3 ETX --->    |      |    --->    ?
 |      |          or             |      |            or
 --------    FF 40 C4 ETX --->    --------    --->    -F


   ** The three bytes after FF will be validated.  If the message is
      invalid, then the error message "system request key protocol
      violation" is sent to the terminal and the circuit is zapped.
   ** FF 40 C3 ETX is a "forced unowned" command from the SNA host
      interface.  When CMT receives this command, CMT changes seq#
      to 7F if the seq# is 7E currently or changes seq# to 7E if
      the seq# is 7F currently.
   ** When CMT receives FF 40 C4 ETX and displays status item "-F"
      on the status line, the keyboard is locked. The RESET key can
      unlock the keyboard, but CMT does not notify the host interface.

2.12.3  MESSAGE FORMAT

2.12.3.1  MESSAGE FORMAT FROM SNA HOST INTERFACE TO CMT

During the SYS/REQ cycle, the format of the command from the host
interface could be one of the following formats :

   a) FF seq# 40 ETX    : CMT will display "?" on the status line
   b) FF seq# C1 ETX    : CMT will display "SYS" on the status line
   c) FF seq# C2 ETX    : CMT will display "APPL" on the status line
   d) FF 40 C3 ETX      : CMT will display "?" on the status line

 ** The seq# is the same as the seq# that sending from CMT.

When the SYS/REQ cycle has been terminated,  the  format  of  the



Page 36                   CMTI.ERS







TERMINAL/USER INTERACTION                  February 27, 1990



command  from  the  host  interface could be one of the following
formats :

     a) FF 40 C1 ETX    : CMT will display "SYS" on the status line
     b) FF 40 C2 ETX    : CMT will display "APPL" on the status line
     c) FF 40 C3 ETX    : CMT will display "?" on the status line
     d) FF 40 C4 ETX    : CMT will display "-F" on the status line

  ** Either in SYS/REQ cycle or not in cycle, CMT could receive
     FF 40 C3 ETX.  This FF command is a "forced unowned" command.
     CMT displays "?" on the status line and

     1) If not in SYS/REQ cycle
           then unlock keyboard, back to normal processing
     2) If in SYS/REQ cycle
           then terminate cycle
                change the seq# to 7E/7F if the seq# is 7F/7E currently
                unlock keyboard
                back to normal processing

2.12.3.2  MESSAGE FORMAT FROM CMT TO THE SNA HOST
          INTERFACE

The read message sent from CMT to the host interface has  one  of
the following formats :

       a) F0 seq# 40 ETX    : CMT displays "?" currently
       b) F0 seq# C1 ETX    : CMT displays "SYS" currently
       c) F0 seq# C2 ETX    : CMT displays "APPL" currently

    ** The seq# issued by CMT is 7E or 7F.

2.12.4  VERIFICATION OF VERSION NUMBER

The valid version numbers are greater than or equal to  4.00  for
CMT and greater than or equal to 1.05 for the SNA host interface.
All of these version numbers are verified by the CMT code.

When CMT sends the global IIX message(8087) to request  the  host
interface product id and the version number, CMT will receive the
global IIX message(8086) from the host interface with the product
id  and version number. This global IIX message (8086) contains a
4 byte information field. The first two bytes are the product  id
of the host interface. The next two bytes are the version number.
The version number should be greater than or equal  to  0105.  If
the  version  number  is not valid, CMT will set a flag. When the
user hits the SYS/REQ key from the keyboard and this flag is set,
CMT will sound the bell at the terminal.






Page 37                   CMTI.ERS







TERMINAL/USER INTERACTION                  February 27, 1990



2.13  CRM4

The Connection Request Mode 4 (CRM4) in the 3270  Display  System
Protocol  (DSP)  is  used  to  request a connection for a printer
which is associated with a CRT.

With CRM3, a datastream could be mis-routed on the  printer.   If
the  end  user  logs  off, the associated printer of this CRT may
become available before the disconnection process is completed on
this  CRT.  In this case, this printer may be assigned to another
end user logging on but it may still receive data from the  prior
end  user, since the host may have simply queued up the print job
for later execution.

CRM2 may be  used  to  solve  this  problem.  But  CRM2  requires
dedicated  mappings  for each username which causes the number of
control units to grow rapidly.   Thus  slot  size  grows  and  so
hardware  costs  rise.  CRM4  is a dynamic association of CRT and
printer, so no fixed mappings are required.  Thus the  number  of
control units in CRM2 is for the total number of usernames, while
the number of control unit in CRM4 is the  number  of  concurrent
users.

This work is coordinated with the 3270 BSC  host  interface  CRM4
project.   The SNA host interface CRM4 project will follow later.
The BSC host interface is sufficient for testing.

With CRM4 implementation, the CRT and its associated printer  can
be tied together so that data mix-up can be avoided.

2.13.1  LOGON PROCEDURE

During the CRT  with  printer  logon,  two  logon  sequences  are
required;  the first logon is for the CRT and the second logon is
for the associated printer.

2.13.1.1  CRT LOGON

During the CRT logon, inside the "CALL USER  DATA"  message,  the
attached  printer  bit  will be set to 1. Therefore, when the the
host interface receives the "CALL USER DATA"  message,  it  knows
that this CRT has an associated printer.

When the CRT is connected, the host interface  will  provide  the
Additional  Destination  Designator  Information  in the "CIRCUIT
ENABLE" message. When the  CMT  requests  a  connection  for  the
associated  printer,  it will include this Additional Destination
Designator Information data as  part  of  its  "CALL  USER  DATA"
message.   This  'echoed'  information makes this CRT and printer
tie together in the host interface.




Page 38                   CMTI.ERS







TERMINAL/USER INTERACTION                  February 27, 1990



2.13.1.2  PRINTER LOGON

During printer logon, inside the "CALL USER  DATA"  message,  the
Connection  Request Mode (CRM) should be 4, application id should
be 0, the destination cua should be 0, the destination dva should
be  0,  and  the Additional Destination Designator Information is
from the previous "CIRCUIT ENABLE" message of the CRT.

Before CMT sends  out  the  "CALL  USER  DATA"  message  for  the
associated  printer,  it  should  wait  for  the "CIRCUIT ENABLE"
message of the CRT to come from the host interface. In this case,
one of the following happens :

   a. "CIRCUIT ENABLE" message of the CRT comes from the host
      interface.  Therefore, CMT sends out "CALL USER DATA" message
      of the printer to the host interface.

   b. "INVITATION TO CLEAR" message comes from the host interface.
      Therefore, CMT sends "DESTINATION RESOURCE UNAVAILABLE" message
      to the terminal and zaps the printer, CRT, and terminal circuit.

After the CRT logs on successfully,  CMT  sends  the  "CALL  USER
DATA"  message  of  the associated printer to the host interface.
CMT waits for the "CIRCUIT  ENABLE"  message  of  the  associated
printer to come from the host interface. In this case, one of the
following happens :

   a. "CIRCUIT ENABLE" message of the associated printer comes
      from the host interface. The associated printer circuit
      is built.

   b. "INVITATION TO CLEAR" message comes from the host interface.
      Therefore, CMT sends "DESTINATION RESOURCE UNAVAILABLE" message
      to the terminal and zaps the printer, CRT, and terminal circuit.

2.13.2  CMT TYMFILE CONFIGURATION

Macros in the Tymfile should be properly set up in order  to  tie
the  CRT  with  the associated printer together during the stored
logon procedure.

For example,

DEFELE(label1,username"BAhost#"BBpassward"8D)
DEFELE(label2,crm#destinationinterfaceaddress"8Dappidcuadva)
DEFELE(label3,4destinationinterfaceaddr"8Dappidcuadva)

    ** label1 - Host interface network logon (CRT or printer).
    ** label2 - CRT DSP logon.
              - Crm# is 2 or 3.
                With 4, CMT zaps the CRT circuit.



Page 39                   CMTI.ERS







TERMINAL/USER INTERACTION                  February 27, 1990



    ** label3 - Printer DSP logon.
              - Crm# is 4.
              - Printer network logon refers to the label1.
              - The printer network logon does not have to refer to
                the label1, but may refer to another DEFELE macro. In
                this case, if the host# is different from the host# of
                the CRT, the host interface will zap the CRT circuit.
                Normally without CRM4 the printer may logon to any host
                in the network; CRM4 restricts this.
    ** With the CRM4 printer DSP logon, CMT puts 0 to appid, 0 to cua,
       and 0 to dva in the "CALL USER DATA" message. CMT ignores the
       value defined in the appidcuadva of the CRM4, and no message is
       given during assembly or run time.

2.13.3  RESTRICTIONS

The CRM4 is used to request a connection for  a  printer  in  the
stored  logon, but not used in the manual logon. This restriction
is due to the fact that the increased  development  time  is  not
felt to be justified by the minimal increase in functionality.


































Page 40                   CMTI.ERS







THE TYM FILE                               February 27, 1990



                      3.  THE TYM FILE

The TYM file is used as a configuration  file  for  the  CMT/3270
interface.

There is only one global level  macro  necessary  to  define  the
configuration,  the  DEFHST  macro.   There is an optional DEFHDR
macro, which defines a heading line for the menus.   In  addition
to  these  two  macros, there are several macros needed to define
the menus.

A few general comments:

   1. All alphanumeric and control characters  have  equates  for
   their   EBCDIC   and   their  ASCII  representation,  so  that
   hexadecimal values or the equated symbols for  the  characters
   can be used interchangeably throughout the TYM file.

   2.  All elements, logon strings, and menus are defined with  a
   label  as the first parameter.  This label is formed following
   standard assembler conventions.  The  label is  then  used  in
   all  references  to  the  element,  string, or menu in the TYM
   file.

   3.  If printer support is available, then the  only  criterion
   on  the type of printer is a serial printer that supports form
   fields, line feed, carriage return, and sufficient columns for
   the  specific  application.   The  printer should be connected
   directly  (straight  cable)  to  the  auxiliary  port  of  the
   terminal, which should be correctly set up as specified in the
   terminal manual.

   4.  The maximum number of simultaneous users for the  CMT/3270
   is  limited  by  memory  requirements  and  CPU  load.  Memory
   requirements are in one of the following  sections.   The  CPU
   load  estimate  is  1  transaction per second.  Because of the
   nature of the optimization process, the CPU load  will  become
   more  of  a  factor  than  the  memory size as a configuration
   grows.

   5.  The comma may be included in the text of strings like  the
   DEFHDR  macro  string  but it must be preceded by a BACKQUOTE.
   This is necessary to distinguish between the comma as text and
   the comma as separating 2 operands in a macro.










Page 41                   CMTI.ERS







THE TYM FILE                               February 27, 1990



3.1  GENERAL MACROS

These macros are called before the macros that define a menu.

3.1.1  DEFHST

The DEFHST macro defines  the  host  number  and  the  number  of
channels for an interface, and the number of attached printers to
be used.  The number of channels is the  number  of  simultaneous
users allowed on the interface.  The format of the macro is

DEFHST(host #,# channels,# printers)

3.1.2  DEFHDR

The DEFHDR macro defines a heading line to be printed at the  top
of  the CRT screen as a heading to the menu.  Up to 76 characters
of text are allowed.  Note that commas may  be  included  in  the
text  but  that  they  must be preceded by a BACKWARD quote.  The
format of the macro is:

DEFHDR(text)

3.2  STORED LOGON DEFINITIONS

3.2.1  DISCUSSION

Logging into a 3270 host via the CMT/3270 is accomplished with  a
stored  logon  definition.   The sequence of required information
for login is stored in memory and the login, once  initiated,  is
accomplished without user intervention.

In order to utilize the stored logon mode,  various  macros  have
been  defined  to create the stored logon strings during assembly
time.   Thus,  at  the  beginning  of  a  session,  the  user  is
confronted   with  a  menu  of  logon  strings  and  selects  the
particular one to reach the  desired  host.   This  selection  is
accomplished  by  positioning  the cursor to the left of the text
describing the desired logon string, and striking "ENTER".

ELEMENT - is the basic part of a logon string.   It  consists  of
all  the characters required for either a network logon to a 3270
host, or the DSP info for that logon, as follows:

        1. Network logon - composed of a label followed by the logon
           username, optional host number, and optional password.

        2. DSP info - composed of a label followed by CRM #,
           destination interface address, application id, cua, dva.

LOGON STRING - is one of the items in a menu for  selection.   It



Page 42                   CMTI.ERS







THE TYM FILE                               February 27, 1990



consists  of  two  elements (net logon and DSP info) that lead to
the desired  destination  host.   It  is  composed  of  a  label,
followed  by  text  describing  the destination host, followed by
references to the elements that make up this string.

MENU - is the screen of  choices  for  the  user  to  select.  It
consists  of  the  label  for  this  menu, followed by an ordered
sequence of logon strings, each referenced by their label.

3.2.2  PASSWORD CHARACTERS ALLOWED

Which characters are valid in a password depends on the Sup; CMTI
does no checking other than for a semicolon to send the string.

Values that are not allowed are X'03',  X'1b'-X'1f',  and  X'7b'-
X'7e.    Values   that  are  ignored  include  X'00'  and  X'7f'.
Characters to end the password string are carriage return (X'0d')
and  semicolon  (X'3b').   Values  that  are  translated  include
X'60'-X'7a', translated to X'40'-X'5a'.

3.2.3  PROMPT FOR PASSWORD

The stored logon processing does not require  that  the  password
for the network logon be stored also.  If this operand is missing
from the TYM file, then the CMT/3270 will prompt the user for the
password.   This  gives  additional  flexibility for the customer
desiring a greater degree of password  protection  -  I.E.  those
customers  who  desire  to change their passwords often can do so
without reloading their CMT/3270 slot.

3.3  DEFELE MACRO - INDICATE CHARACTER SET TYPE

The DEFELE(label,element,charset) macro  defines  an  element  in
some  logon  string,  a label to reference it by, and a character
set indicator.  This macro should precede all other  macro  calls
for  stored  logon.  The maximum number of elements is determined
by available space in practice, but is  2**16  in  theory.   Each
element may not exceed 255 characters.

The Katakana project adds a third operand to the DEFELE macro  to
indicate  character set type.  Its default is English.  The other
two values will be Katakana and Kanji.

An invalid entry into this third operand will result in an  error
message  and  a  zapped  circuit.   The  error  response  will be
"INVALID CHARACTER SET SELECTION IN STORED LOGON".

Note that the special characters like ";"  and  ":"  are  written
with the high-bit off; while the high-bit could be on, since CMTI
will process Ascii either way, it is better to keep it off in all
Tymfiles  as  the  eventual use of the C1 control characters will



Page 43                   CMTI.ERS







THE TYM FILE                               February 27, 1990



require it off.  If it was on it would have an entirely different
meaning.

The host screen format is free-form and is created in the Tymfile
by  the  CC.  Thus it is dependent on the CC to create meaningful
messages, otherwise the operator will not know  the character set
types  for each selection.  An example of what a host menu screen
might look like the following, where the  third  entry  does  not
indicate  whether  it is English or Katakana; this will depend on
the DEFELE definition in the Tymfile.  The  text  on  the  screen
depends on the DEFSTR macro free-form input.

        WELCOME TO NSC-NET


  NISSAN - NSC/ENGLISH
  MAZDA  - NSC/KATAKANA
  TOYATA CAR REPORTING SYSTEM

1. DEFELE(label,username"3Ahost#"3Bpassword"0D,charset)
     a. label - used to reference this element in DEFSTR
        macros, required
     b. username - a valid username, required
     c. "3A - inserted to indicate colon, optional
     d. host# - a valid host number, optional
     e. "3B - inserted to indicate a semicolon, ends username field,
        required if password follows
     f. password - a valid password for the username,
        required if password is needed,
        if password is not needed then parts e & f must be omitted
     g. "0D - used to indicate a carriage return, required
     h. character set - optional - default is English.

Other values are Katakana and Kanji.

2. DEFELE(label,crm#destinationinterfaceadr"0Dappcuadva,charset)
     a. label - used to reference this element in DEFSTR; req'd.
     b. crm# - a digit, 2 or 3, indicating the desired
        connection request mode, required
     c. destination interface adr - 1 to 14 digits indicating
        the called address, required
     d. "0D - required as a delimiter, ends the field for the
        destination interface address
     e. app - application id indicating desired line #, it is a
        graphic char, use "0D if none is to be specified, required
     f. cua - control unit address, it is a graphic char,
        use "0D if none is to be specified, required
     g. dva - device address , it is a graphic char,
        use "0D if none is to be specified, required
     h. character set - optional
                      - default is English.



Page 44                   CMTI.ERS







THE TYM FILE                               February 27, 1990



                      - other values are Katakana and Kanji.

Note:  Graphic characters are the standard 3270 polling characters.
       Hitachi has some differences in polling characters.

examples:

(English Circuits)

        DEFELE(EL0,JOHNDOE"3A700"3BTOPSECRET"0D)
        DEFELE(EL1,BUBB"0D)
        DEFELE(EL3,29076543210"0D  "42)
        DEFELE(EL4,331060900"0D"0D"0D"0D)
        DEFELE(EL5,231060700"0D AB)

(Same Hosts, for Non-English Circuits)

        DEFELE(EL6,TSUJI"3A5568"3BNSCUSA"0D,KATAKANA)
        DEFELE(EL7,NSC"0D,KATAKANA)
        DEFELE(EL8,29076543210"0D  "42,KATAKANA)
        DEFELE(EL9,331060900"0D"0D"0D"0D,KATAKANA)
        DEFELE(EL10,231060700"0D AB,KATAKANA)

3.3.1  DEFSTR

The DEFSTR(label,text,ele0,ele1,ele2,ele3,ele4) macro  defines  a
logon  string  and a label to reference it by.  These macros must
follow the DEFELE macros and  precede  other  macros  for  stored
logon.

1. DEFSTR(label,text,ele0,...,ele4)
     a. label - used to reference this string in DEFMEN macro,
        required
     a. text - desired text describing this logon string and/or
        destination host, up to 76 chars, required
     b. ele - element label as defined by the DEFELE, order of
        referencing elements is important, up to five elements, at
        least two are required (network logon and DSP info).

        Element labels are expected to be the following order:


                Position #      Element Type
                 First           CRT Network Logon
                 Second          CRT DSP Information
        (If printer support is required for this logon:)
                 Third           Printer Network Logon
                 Fourth          Printer DSP Information


example:



Page 45                   CMTI.ERS







THE TYM FILE                               February 27, 1990



        DEFSTR(STRNG0,DALLAS,EL2,EL0)
        DEFSTR(STRNG1,FOR INVENTORY,EL3,EL1)           {no printer}
        DEFSTR(STRNG2,FOR INVOICES,EL3,EL1,EL2,EL0)    {w/ printer}

3.3.2  DEFMEN

The DEFMEN(label,logon string labels) macro defines  the  set  of
logon  strings  for a particular menu and the label with which to
refer to this menu in MENUSR macros.  The order of  logon  string
references in this macro call defines the order in which the text
of the logon strings will appear on the menu screen.   There  can
be at most fifteen logon string references per menu.

1. DEFMEN(label,s0,s1,...,s14)

     a. label - used to reference this menu in MENUSR macro,
        required
     b. s - logon string label, order of s's defines appearance of
        logon strings in the menu screen, at least one is required

example:

DEFMEN(MENU1,STRNG1)

3.3.3  DEFUSR

DEFUSR(username) macro defines a username that is valid  on  this
interface.   This  macro  should  follow  the  definition  of all
referenced elements, strings, and menus; it  should  precede  the
definition  of  the  default  terminal type (DEFTTY) and the menu
(MENUSR) for this user.  The first 8 characters are  checked  and
must   match   exactly  unless  a  wildcard  character  ("00)  is
specified.  For example, if the username TEST is defined as:

DEFUSR(TEST)

only the 4 character username "TEST" will be valid.  However,  if
it is defined as:

DEFUSR(TEST"00"00"00"00)

any username beginning with  the  4  characters  "TEST"  will  be
accepted as valid.

Username matching is done from the bottom of the list to the  top
of  the  list.  Any username which is intended to be checked last
should be placed at the top of the list  when  using  the  DEFUSR
macro.






Page 46                   CMTI.ERS







THE TYM FILE                               February 27, 1990



3.3.4  DEFTTY

The DEFTTY(relative #) macro defines the  default  terminal  type
associated  with the preceding DEFUSR macro.  The number input is
in HEX.  The relative # of a terminal type is determined  by  the
order  that  the  terminal  types are defined in the DEFTRM macro
(see below).  A value of -1 in the DEFTTY macro  will  cause  the
select  terminal  type screen to be displayed.  The list of valid
terminal types for each version of code is listed in  a  separate
section of this document.

DEFTTY(0)               : First terminal type in DEFTRM
DEFTTY(0A)              : 10th  terminal type in DEFTRM
DEFTTY(-1)              : Allow selection at login

3.3.5  MENUSR

The MENUSR(menu label)  assigns  a  menu  to  the  username  just
defined.   The  3  macros,  DEFUSR, DEFTTY, and MENUSR, should be
specified for each username to be valid on  the  interface.   For
example:

DEFUSR(TEST)
DEFTTY(-1)
MENUSR(MENU1)

3.3.6  DEFTRM

The DEFTRM macro causes all information necessary  to  support  a
particular  terminal  type  to  be included.  Only terminal types
defined in the DEFTRM macro will function on the  CMT/3270;  only
those  terminal  types desired on the interface need be included.
An option exists to generate all terminal types automatically  if
the user desires.  See the ALLTRM macro description.

Currently available terminal types and their related macro  names
are listed in a separate section, for each version of code.  Code
the DEFTRM macro code as follows:


DEFTRM  MACRO   [
        ADD78M          : ADDS VIEWPOINT 78
        ADM11M          : ADM 11/1178
        CM3101          : 3101 - CHARACTER MODE
        HP26XX          : HP 26-SERIES
        QT103M          : QUME QVT103
        TELE92          : TELEVIDEO 920/925
        VT100M          : DEC VT100
]





Page 47                   CMTI.ERS







THE TYM FILE                               February 27, 1990



3.3.7  ALLTRM

The ALLTRM macro is used to generate all possible terminal  types
supported  by  CMT/3270.   It  is  used  in  place of the list of
terminal types in the DEFTRM macro.  Alltrm generates more  space
by generting all terminal types - allow at least 1K per termional
type.  The complete list of terminal types is in another  section
of this document, for each version of code.
example:

DEFTRM  MACRO [
        ALLTRM
]

3.4  STORED LOGON

Another operand must be added to the DEFELE macro in the tymfile.
This operand will specify the host type, whether IBM, HITACHI  or
FUJITSU. If no operand is specified, the default will be IBM.

The DEFELE(label,element,charset,host) macro defines  an  element
in some logon string, a label to reference it by, and a character
set indicator.  This macro should precede all other  macro  calls
for  stored  logon.  The maximum number of elements is determined
by available space in practice, but is  2**16  in  theory.   Each
element may not exceed 255 characters.

The HITACHI-FUJITSU project adds a fourth operand to  the  DEFELE
macro  to  indicate  host  type.  Valid values will be 0 (IBM), 1
(FUJITSU) and 2 (HITACHI). The default is IBM.

An invalid entry into this  fourth  operand  will  result  in  an
assembly-time error message.  The error response will be "INVALID
HOST TYPE x IN STORED LOGON", where the x represents the  operand
in error.

Note that the special characters like ";"  and  ":"  are  written
with the high-bit off; while the high-bit could be on, since CMTI
will process JISCII either way, it is better to keep  it  off  in
all  Tymfiles  as  the  eventual use of the C1 control characters
will require it off.  If it was on  it  would  have  an  entirely
different meaning when supporting C1 controls.

The host screen format is free-form and is created in the Tymfile
by  the  CC.  Thus it is dependent on the CC to create meaningful
messages, otherwise the operator will not know the character  set
and  host  types  for  each selection.  An example of a host menu
screen might look like the following,  where  the  host  selected
will depend on the DEFELE definition in the Tymfile.  The text on
the screen depends on the DEFSTR and the header  depends  on  the
DEFHDR macro in the Tymfile or the M file definition.



Page 48                   CMTI.ERS







THE TYM FILE                               February 27, 1990



        WELCOME TO KYODA-NET


  NISSAN - NSC/ENGLISH/IBM
  MAZDA  - NSC/KATAKANA/FUJITSU
  TOYOTA CAR REPORTING SYSTEM


The DEFELE macro comes in two flavors, one indicating the network
HIF  by host number and one indicating the DSP logon information.
The character set operand and the host type operand are both used
in  the  first  DEFELE  type,  the  network  host DEFELE.  Use of
operands 3 or 4 in the other DEFELE will be ignored (no  assembly
error).

NETWORK LOGON DEFINITION

DEFELE(label,username"3Ahost#"3Bpassword"0D,charset,hostype)
     a. label - used to reference this element in DEFSTR
        macros, required
     b. username - a valid username, required
     c. "3A - inserted to indicate colon, optional
     d. host# - a valid host number, optional
     e. "3B - inserted to indicate a semicolon, ends username field,
        required if password follows
     f. password - a valid password for the username,
        required if password is needed,
        if password is not needed then parts e & f must be omitted
     g. "0D - used to indicate a carriage return, required
     h. character set - optional
                      - default is English.
                      - other values are Katakana and Kanji.
     i. host type - optional
                  - default is IBM.
                  - other values are FUJITSU and HITACHI.


DSP ELEMENT DEFINITION

DEFELE(label,crm#destinationinterfaceadr"0Dappcuadva)
     a. label - used to reference this element in DEFSTR; req'd.
     b. crm# - a digit, 2 or 3, indicating the desired
        connection request mode, required
     c. destination interface adr - 1 to 14 digits indicating
        the called address, required
     d. "0D - required as a delimiter, ends the field for the
        destination interface address
     e. app - application id indicating desired line #, it is a
        graphic char, use "0D if none is to be specified, required
     f. cua - control unit address, it is a graphic char,
        use "0D if none is to be specified, required



Page 49                   CMTI.ERS







THE TYM FILE                               February 27, 1990



     g. dva - device address , it is a graphic char,
        use "0D if none is to be specified, required

Note:  Graphic  characters  are   the   standard   3270   polling
characters,  and  in  the case of HITACHI are the HITACHI polling
characters.  (HITACHI and IBM have the same line  addresses,  but
different control unit and device addresses).

examples:

(English Circuits)

        DEFELE(EL0,JOHNDOE"3A700"3BTOPSECRET"0D)                :HIF LOGON
        DEFELE(EL1,BUBB"0D)                                     :HIF LOGON

        DEFELE(EL3,29076543210"0D  "42)                         :DSP INFO
        DEFELE(EL4,331060900"0D"0D"0D"0D)                       :DSP INFO
        DEFELE(EL5,231060700"0D AB)                             :DSP INFO

(Non-English Circuits)

        DEFELE(EL6,TSUJI"3A5568"3BNSCUSA"0D,KATAKANA,FUJITSU)   :HIF LOGON
        DEFELE(EL7,NSC"0D,KATAKANA,IBM)                         :HIF LOGON

        DEFELE(EL8,29076543210"0D  "42)                         :DSP INFO
        DEFELE(EL9,331060900"0D"0D"0D"0D)                       :DSP INFO
        DEFELE(EL10,231060700"0D AB)                            :DSP INFO

3.5  MANUAL LOGON PROCEDURES - CRT AND PRINTER

3.5.1  MANUAL LOGON

The new manual logon screen looks like the  following,  including
the  new field "HOST: IBM" (i.e. default is IBM).  Note that this
screen includes the language type field  from  the  IBM  Katakana
project.

Note that the stored message format of this screen will remain in
the  IBM  format,  as  all messages are (see discussion on stored
messages).  The M file  redefinition  will  work  identically  as
before,  since  the M file design is such that only the text part
of each message is in the M file.  The rest is internal.

The new  field  takes  values  0  (=IBM),  1  (=HITACHI),  and  2
(=FUJITSU).









Page 50                   CMTI.ERS







THE TYM FILE                               February 27, 1990




        CONNECTION REQUEST MODE: 3
        DESTINATION INTERFACE ADDRESS:
        APPLICATION IDENTIFIER:
        DESTINATION CONTROL UNIT:
        DESTINATION DEVICE ADDRESS:


        HOST: 0                       HOST TYPES:     0 = IBM
                                                      1 = HITACHI
                                                      2 = FUJITSU

        LANGUAGE: 0                   LANGUAGE TYPES: 0 = ENGLISH
                                                      4 = KATAKANA
                                                      5 = KANJI

3.5.2  MANHST MACRO

The MANHST macro is used in the Tymfile  to  change  the  default
host type for the manual logon screen.  If this macro is omitted,
then the default host type is IBM  and  this  will  show  on  the
manual  logon screen as a "57" in the host entry field.   To make
the default for the slot be something other than IBM  the  MANHST
macro is used in the Tymfile.  For example,

MANHST(HITACHI)                 :HITACHI DEFAULT HOST, MAN. LOGON
MANHST(FUJITSU)                 :FUJITSU DEFAULT HOST, MAN. LOGON

Having HITACHI as the default will show as a  77  on  the  manual
logon screen; FUJITSU will show as a 67.

Logging  into  a  3270  host  via  the  CMT/3270  can   also   be
accomplished  with  manual  logon.   The  CMT/3270  provides  two
options for manual logon.  One is the manual logon for CRT  only;
the other one for the CRT and its associated printer.

In order to utilize the manual logon mode, two macros  have  been
defined  to create the manual logon strings during assembly time.
The manual logon strings can be applied  to  the  same  'menu  of
logon  strings'  with  stored  logon  strings.   The selection of
manual logon string is the same as that of stored logon string.

3.5.3  MANUAL: MANUAL LOGON FOR CRT

        Syntax

        MANUAL(label)

        where

        label: to reference the 'MANUAL LOGON' string in DEFMEN



Page 51                   CMTI.ERS







THE TYM FILE                               February 27, 1990



        Description

If the user wants to include the Manual Logon For CRT  option  in
the  menu  screen,  this  macro has to be invoked in the Tymfile.
Further more, this parameter 'label' has to be referenced in  the
DEFMEN  macro  of this user.  For example to create a menu with 1
manual logon and 1 to system 999, you would enter

DEFSTR(LABEL1,TO SYSTEM 999,NETSTR,DSPSTR)
MANUAL(LABEL2)
DEFMEN(MENU1,LABEL1,LABEL2)

Whenever the user selects 'MANUAL LOGON' from the menu, SCREEN  3
(refer  to  the  examples  in  this  section)  will be displayed,
prompting for user name and password.  The user should then enter

        <username><TAB key>          <username>:<sys#><TAB key>
        <password>                   <password>


        for the default system       for the specific system

If all data entered is correct, the user may  hit  ENTER.   After
receiving  the  ENTER  key, the CMT/3270 will send <username> and
<password> out.  Should the user find  anything  wrong  with  the
entered  data  before  the  ENTER key was hit, corrections may be
made by moving the cursor to the error  position  and  reentering
the  data.   Note that the <TAB key> would move the cursor to the
beginning of the next unprotected field.

SCREEN 4 (refer to the examples in  this  section)  is  displayed
after  SCREEN 3.    The way to enter data into this screen is the
same as that of SCREEN 3.

Example:

In the following, capital letters are system generated text,  and
small  letters  are  user entered data.  <tab> indicates TAB key.
<enter> indicates ENTER key.  <space> indicates a single space.















Page 52                   CMTI.ERS







THE TYM FILE                               February 27, 1990




     ----------------------------------------------------
     |   PLEASE LOGIN                                   |
     |   USERNAME: myname<tab>                          |
     |   PASSWORD: mypassword<enter>                    |
     |                                                  |
     |                                                  |
     |                                                  |
     ----------------------------------------------------

                  SCREEN 3


     ____________________________________________________
     |                                                  |
     |   CONNECTION REQUEST MODE: 3<tab>                |
     |                                                  |
     |   DESTINATION INTERFACE ADDRESS: <tab>           |
     |                                                  |
     |   APPLICATION IDENTIFIER: <tab> or ID/tab        |
     |                                                  |
     |   DESTINATION CONTROL UNIT: <tab> or CU addr/tab |
     |                                                  |
     |   DESTINATION DEVICE ADDRESS: <enter>            |
     |                                                  |
     |                                                  |
     |                                                  |
     |                                                  |
     |                                                  |
     |__________________________________________________|


                SCREEN 4

3.5.4  MANPTR: MANUAL LOGON FOR CRT AND PRINTER

        Syntax

        MANPTR(label)

        where

        label: to reference the 'MANUAL LOGON WITH PRINTER' string in DEFMEN

        Description

The relationship between MANPTR and DEFMEN is the  same  as  that
between  MANUAL  and  DEFMEN.   Therefore,  if  the user wants to
include Manual Logon For CRT and  its  Associated  Printer,  this
macro has to be invoked in the Tymfile.




Page 53                   CMTI.ERS







THE TYM FILE                               February 27, 1990



If 'MANUAL LOGON WITH PRINTER' is selected from the menu  screen,
the following screens will be displayed in order:

SCREEN 3, SCREEN 4, SCREEN 3, and SCREEN 4.

The display of each screen will be terminated if correct data  is
entered  and  an  ENTER  key  is entered.  The first SCREEN 3 and
SCREEN 4 are for CRT logon.  The second SCREEN 3 and SCREEN 4 are
for printer logon.

NOTES:

        1. Logon for the associated printer can only be  done  at
the beginning of a session.

        2. The CRT and associated printer do not need  to  be  on
the  same  control unit, or even on the same host interface.  The
generality of the manual logon process allows the full use  of  a
networking  environment.   Thus  for  example  a  user  could  be
processing  a  request  on  1  computer  and  receive  a  printer
datastream from another computer connected to a different part of
the network.

        3. Care must be taken that the  printer  datastream  from
the host is routed correctly.  This means that the mapping in the
host front end must match the host interface and that the circuit
built by the CMT/3270 for the printer is in fact the one that the
host is sending the printer datastream on.   The  host  interface
does not check the line used to be sure printer data is routed on
what  is  expected  to  be  printer  lines.   Thus  all  of   the
configurations must match.

Example

Refer the section on Manual logon for example screens.

3.6  MISCELLANEOUS MACROS AND PARAMETERS

3.6.1  APL EDIT MACRO

CMTI currently has an edit on all data from the host  to  convert
APL  characters  to  Ebcdic dashes.  This is not required for the
Japanese market and would  actually  affect  the  data  for  both
Katakana  and  Kanji.   Thus this edit must not be done.  We will
avoid this edit for all slots that have the APL edit turned  off.
The  default  for  this  macro  will be to do the edit.  Japanese
slots will use:

APLEDIT(OFF)                    :suppress APL Edit





Page 54                   CMTI.ERS







THE TYM FILE                               February 27, 1990



3.6.2  MANCHR MACRO

The default in the DEFELE macro for  character  set  is  English.
The  same default exists for the Manual Logon screen, where a new
field will be added to indicate the  character  set  type.   This
default  on  the  Manual  Logon  screen  can be changed using the
MANCHR macro.  It will not affect the DEFELE  macro,  which  must
have  the character set explicitly declared if it is not English.
For example to change the default on the Manual Logon screen from
English to Kanji, the Tymfile would contain:

MANCHR(KANJI)

3.6.3  JTERMS MACRO

CMTI currently has a macro called ALLTRM.  This  macro  generates
all existing terminal types for the given version, and is used in
the DEFTRM macro in the Tymfile.  It allows a  customer  to  have
all  existing  terminals  and  to  get  any  new  ones  by simply
reassembling the slot; no Tymfile additions are  necessary.   The
Tymfile  is  also  shorter.  A similar macro will generate all of
the Japanese terminals, and so the Japanese terminals will not be
a  part  of  the  ALLTRM  macro.   The JTERMS macro generates the
Japanese terminals.  For example,

DEFTRM  MACRO [
        JTERMS
]

To generate all of the Japanese terminals, followed by all of the
English terminals, the Tymfile would have:

DEFTRM  MACRO [
        JTERMS
        ALLTRM
]

3.6.4  DEFCAL

The DEFCAL(adr) macro is  a  method  of  pre-defining  a  calling
address  (X.25  terminology).   In the future, as calling address
are assigned  and  become  well-defined,  this  macro  should  be
modified  to  allow  different  addresses  to  be  specified  for
individual usernames.  At present, this macro must be called.

example:

DEFCAL("01"02"03"04"05"06"07"08)






Page 55                   CMTI.ERS







THE TYM FILE                               February 27, 1990



3.6.5  DEFLU1

The DEFLU1 macro must be included in the Tymfile to enable CMT to
examine  WSF  commands  for  SCS  data structured fields.  CMT is
defaulted not to examine WSF commands so that the  code  required
for  WSF  processing  is  not  included in the interface when not
needed.

The DEFLU1 macro may be placed anywhere in  the  Tymfile,  though
for  clarity  it  should  be  placed  in the first section of the
Tymfile with the other global definition macros.

The macro takes the following form:

DEFLU1(YES)             :examine WSF commands for SCS data

A YES parameter indicates that a WSF command along with  the  SCS
data  must  be  examined  and  processed by CMTI.  A NO parameter
indicates no checking of the WSF command.

3.6.6  DEFPRT

The DEFPRT(status) macro determines whether or  not  blank  lines
are  printed  on  a TTY printing terminal such as the TI 707.  To
suppress  blank  lines,  status=SKIP.   To  print  blank   lines,
status=NOSKIP.  The default is noskip.

example:

DEFPRT(SKIP)

3.6.7  DEFTRC

The DEFTRC(status) macro determines whether or not the COM  (CMTI
OPERATIONS  MONITOR) feature is included with CMT.  The code will
generate about 4K in length; the only  reason  to  suppress  this
feature  is  if  the  slot  does  not have sufficient memory.  To
suppress the code have status=OFF.  To include this feature  have
status=ON (the default).

The COM is entered while in  DDT  with  the  ?stat  command.    A
command summary may be found by entering HELP while in COM.  This
is of primary use for HQTECH  and  other  support  personnel  and
should be included whenever possible.

example:

DEFTRC(ON)






Page 56                   CMTI.ERS







THE TYM FILE                               February 27, 1990



3.6.8  DEFCUD

DEFCUD is a macro to cause the last n characters of the  username
to  be  stored  in the CUD (Call User Datafield) in the X.25 Call
Request Packet when signing on to the  network.   The  characters
are  taken  from  the  end  of  the username, with a maximum of 6
characters saved.  The macro has 2 operands.  The  first  operand
is  the  number of characters to save.  The 2nd operand indicates
left or right justification within  the  field.   The  macro  may
appear anywhere in the TYM file.

example:

DEFCUD(6,RIGHT)                 :SAVE USERNAME IN CUD

3.6.9  FROG

FROG is a parameter that disables the WATCHFROG (sic)  timer.   A
WATCHFROG timer is a part of ISIS that checks to see if a slot is
looping.  If there is a loop, the slot is crashed  with  a  crash
code  of  16.  This should be used in normal conditions, and is a
part of CMT/3270 - no action need be taken.

For testing however the timer may be disabled, for example  where
a  loop  is being used diagnostically.  The WATCHFROG is disabled
in CMT/3270 by:

FROG EQ 0

3.6.10  CRSTOP

CRSTOP determines whether the CMT/3270 slot continues  processing
or  not after a crash.  The default is to continue processing; to
cause the slot to stop, CRSTOP must be 1.  If more than one crash
table  is  to  be  displayed  with  the CRASH command of COM then
CRSTOP must be set to 0 and NCRSAV set to N (number of tables  to
be saved).

example:

CRSTOP EQ 1

3.6.11  MXCLMN

The MXCLMN parameter is an equate statement which enables CMTI to
determine  the size of the bit array for the horizontal tab stop.
This value must be equal or greater than the MPP field in the SHF
format  controls.   Please note, the equate statement is not used
for setting the default value  for  the  line  length  at  system
startup time.  The equate statement takes the following form:




Page 57                   CMTI.ERS







THE TYM FILE                               February 27, 1990



MXCLMN  EQ      $A 160  :The maximum line length is 160 (decimal)

The default value is 132 (decimal).  CMTI will allocate  9  half-
words  for  the  bit  array  to  store  each  horizontal tab stop
position.

3.6.12  MXPAGE

The MXPAGE parameter is an equate statement which enables CMTI to
determine  the  size  of the bit array for the vertical tab stop.
This value must be equal or greater than the MPL field in the SVF
format  controls.   Please note, the equate statement is not used
for setting the default value  for  the  page  length  at  system
startup time.

The equate statement takes the following form:

MXPAGE  EQ      $A 24   :The maximum page length is 24 (decimal)

The default value is 102 (decimal).  CMTI will allocate  7  half-
words for the bit array to store each vertical tab stop position.

3.6.13  NCRSAV

NCRSAV defines the number of crash tables  to  save.   The  CRASH
command of COM will display N  crash tables if CRSTOP is set to 0
and NCRSAV is set to N. The default is 1 table.

3.6.14  NBFLET

NBFLET will define the total number of bufferlets for  the  slot.
This bufferlet pool will be divided between the users and is used
for storing characters when CMT/3270 cannot process them for  any
reason.   For  example  if  CMT/3270 is processing a long message
from the host and a second message came in before  the  optimizer
finished with the first one, it is possible that some of the data
would be buffered.

Another likely situation for buffering is for  customers  with  a
broadcast-type  application.   This  is  where  the host computer
sends  messages  to  a  number   of   terminals   without   being
specifically requested to do so by each terminal.  One example of
this might be unsolicited messages being sent to all printers  in
a  system.   Another  example might be a stock quote application,
that would periodically update a  set  of  terminals.   Broadcast
applications  could  easily  overflow  the standard allocation of
bufferlets.  In this case a larger number of bufferlets would  be
required, contact HQtech. Also, 2 IRINGS should be allocated:

NBFLET EQ $A700




Page 58                   CMTI.ERS







THE TYM FILE                               February 27, 1990



3.6.15  NOSEQ

NOSEQ will cause the CMT/3270  to  not  check  the  DSP  sequence
numbers  in  the DSP header.  The sequence numbers will always be
zero.  The default is to check the sequence  numbers.   *WARNING*
Use this feature carefully; its use presumes that the host pad is
also ignoring sequence numbers which is usually not the case.

example:

NOSEQ EQ 1

3.6.16  NUMLCK

NUMLCK  enables  the  numeric  lock  feature  for  the   CMT/3270
interface.  This feature enables certain characters to be entered
in numeric, unprotected fields.  To enable numeric  lock,  insert
"NUMLCK  EQ  1" in the tymfile parameters, otherwise, the default
is zero and this feature is disabled.

To enter alpha characters into a numeric field, the  Insert  mode
key must be used.

3.6.17  PBUFSZ

The PBUFSZ parameter is an equate statement which  CMTI  uses  to
determine  the  size of the LU1 printer buffer.  The SCS data are
stored in the printer buffer and when it  reaches  the  value  in
PBUFSZ,  CMTI  will  begin  to print.  This method of printing is
different from the way CMTI prints the 3270 data in  the  printer
buffer which starts printing when it reaches the ETX character.

The equate statement takes the following form:

PBUFSZ  EQ      $A 512  :buffer size is 512 bytes

The default value for PBUFSZ is 256  (decimal)  bytes.   Although
the  size can be increased, it should not exceed the maximum size
of 1664 (decimal).

3.6.18  SCSNLN

The SCSNLN macro is used to configure  CMTI  to  perform  or  not
perform  a  new  line  function  at the end of each message block
transmitted to the printer.  This macro is only supported for LU1
printer.  The macro takes the following form:

SCSNLN(NO)              :NEW LINE NOT PERFORMED AT END OF
                        :MESSAGE BLOCK BY CMT

A NO  parameter  indicates  that  a  new  line  function  is  not



Page 59                   CMTI.ERS







THE TYM FILE                               February 27, 1990



performed  at  the  end  of  the  message block.  a YES parameter
indicates that a new line function is performed at the end of the
message block.  YES is the default parameter.

3.6.19  SCSTRN

The SCSTRN macro is used to configure CMTI to support the LU1 SCS
Transparent (TRN) control code.

The TRN control code takes the following format:

| TRN | CNT | TRANSPARENT DATA |

The fields are interpreted as follows:

TRN     TRN control code 35 (hex) (1 byte)
CNT     Length of transparent data field (1 byte)
DATA    CNT bytes of transparent data

The macro takes the following form:

SCSTRN(YES)             :Transparent data in SCS is valid

A YES indicates transparent data is to be output by CMTI  to  the
printer.   A  NO indicates transparent data is to be discarded by
CMTI.  A NO is the default parameter.  If it is  not  defined  in
the Tymfile, it is defaulted to a NO parameter.

3.6.20  WTFTR

The standard method of displaying a new screen  utilizes  a  cost
effective,  line  by line modification approach. The user now has
the option of simply clearing the entire  screen  and  outputting
the  new  screen. To enable WTFTR( weight factor ), insert "WTFTR
EQ 7FFF". Otherwise, the default value is $A60 and as  the  value
increases  to  a  maximum  of  7FFF,  the  occurrences of screens
cleared also increases.

WTFTR is also used in file  transfer  mode  to  ensure  that  the
entire screen is shipped through.

WTFTR affects the Optimizer output,  but  not  its  calculations.
Thus there is still some cost in processing time.

3.6.21  CHRMAP

CHRMAP -- character mapping macro.

        Syntax

        CHRMAP MACRO[



Page 60                   CMTI.ERS







THE TYM FILE                               February 27, 1990



               contents
        ]

        where

        contents can be one of the following options:

Option1. empty, if no special character mapping is required.
Option2. one or several calls to macro REMAPC, if special character
         mapping is required.
Option3. a call to macro UKSET, if UK character set is required
         instead of US character set.
Option4. any combination of Option2 and Option3.

For details, please refer to REMAPC and UKSET macro descriptions.

        Description

CMTI/3270 translates the EBCDIC characters received from the host
interface  to  ASCII  characters  for  ASCII  terminals, and also
translates in the reverse direction.  This translation is done by
mapping  characters  through  three  tables:  APLEBC, EBCASC, and
ASCEBC.  The CHRMAP macro provides slot users a method to  change
the  contents of these tables.  The CHRMAP macro is required, and
must be placed outside the DEFTRM macro in  the  Tymfile  of  the
CMT/3270  slot.   Failing to do so would cause the assembly error
-- "Undefined label CHRMAP".

        Example

CHRMAP MACRO[] :This macro  is  required  in  Tymfile.  Since  no
special   character   mapping   is  required,an  empty  macro  is
sufficient.

3.6.21.1  REMAPC

REMAPC -- remap character macro

        Syntax

        REMAPC(table, from, to)

        where

        table: can be either APLEBC, EBCASC, or ASCEBC.
        from: a hex value from 0 to 0FF
        to: a hex value from 0 to 0FF

        Invocation of the REMAPC macro

The REMAPC macro can be invoked only within the CHRMAP macro.



Page 61                   CMTI.ERS







THE TYM FILE                               February 27, 1990



        Description

The REMAPC macro is  a  macro  to  modify  the  contents  of  the
translation  tables: APLEBC, EBCASC, and ASCEBC. The APLEBC table
is used to translate  graphic  EBCDIC  characters  to  themselves
(i.e.,  un-translated),  special  APL  characters  to dashes, and
other non-graphic EBCDIC  characters  to  null  characters.   The
EBCASC  table  is  used  to  translate EBCDIC characters to ASCII
characters.   The  ASCEBC  table  is  used  to  translate   ASCII
characters to EBCDIC characters.

For example, when the CMT/3270 receives an EBCDIC  character  'S'
(hex 0E2) from the host interface, the 'S' remains as EBCDIC "E2"
through APLEBC table.  Afterwards,  the  "E2"  is  translated  to
ASCII 'S' (hex 53) through the EBCASC table.

The function of

          REMAPC(table,from,to)

is to change one byte content of 'table' at entry 'from'  to  the
new  value  'to'.   The following is an example to map the EBCDIC
cent sign to the ASCII dollar sign, and vice versa.


CHRMAP MACRO[
   REMAPC(EBCASC,E.CENT,A.DOL)    :map EBCDIC cent sign to ASCII dollar sign.
                                  :(host---> cmt ---> terminal)
   REMAPC(ASCEBC,A.DOL,E.CENT)    :map ASCII dollar sign to EBCDIC cent sign.
                                  :(host <--- cmt <---terminal)
]

        Note:

The APLEBC table is used to map the APL characters to dashes  and
nongraphic  EBCDIC  characters to null characters.  Therefore, if
any APL or nongraphic EBCDIC character  is  to  be  mapped  to  a
particular  ASCII  character,  the  APLEBC table contents must be
changed too.  For example, to map the nongraphic EBCDIC  hex  0FE
to  the ASCII character ESC (hex 1B), the following macros should
be placed inside CHRMAP in the Tymfile.


CHRMAP MACRO[
        REMAPC(APLEBC,0FE,0FE)
        REMAPC(EBCASC,0FE,A.ESC)
]







Page 62                   CMTI.ERS







THE TYM FILE                               February 27, 1990



3.6.21.2  UKSET

UKSET -- UK character set macro.

        Syntax

        UKSET

        Invocation of the UKSET macro

The UKSET macro can be invoked only within the CHRMAP macro (refer to 2.3.4.).

        Description

If the ENGLISH UK  character  set  is  required  instead  of  the
ENGLISH US character set, this macro should be put in the Tymfile
of the CMT/3270 slot.

        Example

CHRMAP MACRO[
       UKSET    :use English UK character set
]

3.6.22  PRLTEN

PRTLEN -- define printer line length for unformatted printout (LU
type 3 only).

        Syntax

        PRTLEN(length)

        where

        length: decimal value that ranges from 81 to 160

        Description

Defines printer line length for unformatted printout.  Applies to
LU  type  3  printer only.  If no argument is specified or if the
macro is not invoked, the default line-length of 132 is used  for
the  unformatted  printout.   The macro is invoked for the entire
interface.  All printers connected to a slot have the  same  line
length as specified in this macro if the printout is unformatted.









Page 63                   CMTI.ERS







THE TYM FILE                               February 27, 1990



3.6.23  OPTAZR

OPTAZR -- set switch to assemble-in optimizer analyzer            

        Syntax

        OPTAZR(switch)

        where

        switch is YES or NO--YES enables Optimizer Analyzer

        Description

Enables Opimizer  Analyzer.   Instructions  on  how  to  use  the
Opimizer      Analyzer     are     found     in     the     file:
/usr/bullwinkle3/bsc/cmt/qa/v11/neu/neu1401.case

3.6.24  NULS78

Specifies that NULLS are sent to PCs running Tymnet78 instead  of
substituting spaces for NULLS.

        Syntax

        NULS78 (switch)

        where

        switch is either YES or NO

        Description

If parameter is YES, NULLS are sent to Tymnet78.

3.6.25  TTYCRLF

TTYCRLF -- provides option of inhibiting the output of a carriage
return and line feed between screens for paper-TTY terminals.

        Syntax

        TTYCRLF(switch)

        where

        switch is either YES or NO

        Description





Page 64                   CMTI.ERS







THE TYM FILE                               February 27, 1990



If the switch argument is NO, a carriage return and line feed  is
NOT outputed between screens.  If YES, a carriage return and line
feed is outputed between screens.  The default is YES.

3.6.26  PRJCOD

PRJCOD  --  enable  accumulation  of  project  code  and   define
character that terminates project code string.

        Syntax

        PRJCOD(switch,character)

        where

        switch: either ON or OFF
        character: a hex value from 01 to 20 (terminating character)

        Description

If the switch argument is ON, the accumulate project code bit  is
set in the CNTRL field of the CTA, thus enabling the accumulation
by ISIS of the project code and the  forwarding  of  the  project
code by a Report Accounting message.  The second argument defines
the character that terminates the project code  string  (i.e.,  a
CR).

If the second argument is passed (and if it  is  range)  the  bit
corresponding  to  its  value in the PCTTBL bit array is set, and
the PCBPNT field in the CTA given the address of PCTTBL.

If the second argument is not passed, but the switch argument set
ON,  there  is  no  termination  character  and 27 characters are
accumulated for the project code.

If the switch argument is OFF, project code accumulation  is  NOT
enabled, and the second argument, if any, is ignored.

3.6.27  XPGFFH

XPGRFH --  defines  characters  in  the  host  data  stream  that
indicate  start  and  end  of graphics data that is to be passed-
through as transparent data.

        Syntax

        XPGFFH(char1,char2)

        where

        char: a hex value from 40 to 7F



Page 65                   CMTI.ERS







THE TYM FILE                               February 27, 1990



        Description

The transparency/graphic feature allows a host  to  send  graphic
data,  embedded  in  a 3270 data stream, across the network to an
Async graphics terminal without going  through  the  normal  code
conversion  process.  The graphic data is embedded in a 3270 data
stream write command with two special characters,  which  signify
the  start  and  the  end of the graphics data.  The host ensures
that there is  no  clash  between  two  special  graphics-control
characters and control codes from hex 00 to 3F such as hex 11 for
Set Buffer Address, hex 13 for Insert Cursor, etc.

Graphic data appears in one or more Write (not Erase/Write)  data
streams as follows:

|Write|WCC|start-graphics char|graphics data|stop-graphics char|ETX|

When encountering a start-graphics character, CMTI starts sending
graphics  data to Async terminal without going through conversion
until it detects a stop-graphics character.  CMTI also  uses  the
start-graphics character as the transparency-screen-buffer-filled
character, which fills up the screen buffer.  When  sending  data
to Host, CMTI treats the filled character as a null and sends AID
code, cursor address, field address, and no data with ETX.

If no arguments are specified, hex 70 and hex 71 are the  default
values for char1 and char2 respectively.

3.7  DEFINE COPY-COMMAND GROUP

The copy command can be executed under the the same control  unit
only.   In  order to let the copy command be used among the users
in the same group, an internal grouping mechanism of the  control
unit  and  device addresses is necessary, that is consistent with
the copy command control unit restriction. The  configuration  of
the Tymfile both in CMT and in the HIF must be properly set up to
allow the users in the same group to  copy  to  specific  devices
(printer or crt).

3.7.1  CMT TYMFILE

The symbol MICM is  used  for  defining  the  Microdata  terminal
inside  the  macro  DEFTRM.  With  the stored logon, the username
defined by macro DEFELE should be used for all users in the  same
group.  Another group of users should create another macro DEFELE
with another username.

For example :

          DEFELE(label1,PJONES"BAhost #"BBpassword"8D)   :for network
          DEFELE(label2,ALEWIS"BAhost #"BBpassword"8D)   :logon



Page 66                   CMTI.ERS







THE TYM FILE                               February 27, 1990



              .
              .
          DEFELE(label#,crm#destinationinterfaceadr"8dappcuadva)
                         ^                                   ^
                         |                                   |
                      2 or 3                                 8d

              ** app -- the application id. (should be defined)
                 cua -- the control unit address. (should be defined)
                 dva -- the device address.(put 8d)

Besides crm and dva, other elements should be predefined.

Another macro DEFUSR should be modified if these users need to do
the  copy  from  one device to another device on the same control
unit.  The format of this macro should be modified as follows :

          DEFUSR(user, cu, #dv)

          where

          user : Username. A text string its length is not more
                 than 8 characters.
          cu   : Control unit address. This address can be any
                 valid cu address but do not use 5F.
                 The only valid control unit address can be used
                 here is 40,0C1,0C2,0C3,0C4,0C5,0C6,0C7,0C8,0C9,
                 4A,4B,4C,4D,4E,4F,50,0D1,0D2,0D3,0D4,0D5,0D6,0D7,
                 0D8,0D9,5A,5B,5C,5D, or 5E.
          #dv  : Number of devices on this control unit needing
                 to do copy. The number is a hex number, not bigger
                 than 20(hex).  If the number of users trying to log on
                 are more than the #dv, then that user will receive
                 an error message "too many devices logged on" and the
                 circuit is zapped. If the numbers of users trying to
                 log on are not more than the #dv, but the number of
                 printers logged on are more than the number of printers
                 defined in the tymfile,  then that user will receive
                 an error message "too many printers logged on" and the
                 circuit is zapped.

For example, DEFUSR(USERNAME,40,4)

3.7.2  HOST INTERFACE TYMFILE


In the HIF tymfile, two macros are used to force these  users  to
sign  on  the devices which are predefined as a group on the same
control unit.  These two macros are DEFLUD and DEFOK.  DEFLUD  is
restricted to the first two characters of the username.




Page 67                   CMTI.ERS







THE TYM FILE                               February 27, 1990



For example :

      DEFCU(#)              :# is the control unit address.
                            :It should match the cu address defined
                            :in macro DEFELE.
      DEFDEV(...)
            .
            .
      DEFLUD(504A)          :LUD for username starting with PJ
      DEFOK(a1,a2,..an)     :(504A is the hex for the ASCII
                            :characters PJ) can access device
                            :a1, a2,..,an.
                            :a1,a2,..,an should be on the same
                            :control unit(i.e. a1, a2,..,an
                            :should be defined under the same
                            :DEFCU).
      DEFLUD(414C)          :LUD for username starting with AL
      DEFOK(b1,b2,...bn)    :(414C is the hex for the ASCII
                            :characters AL) can access device
                            :b1,b2,..,bn.
                            :b1,b2,..,bn should be on the same
                            :control unit(i.e. b1,b2,..,bn
                            :should be defined under the same
                            :DEFCU).

3.8  DEFINE CRM4 PRINTER

Macros in the Tymfile should be properly set up in CMT  in  order
to  tie  the  CRT with the associated printer together during the
stored logon procedure.

For example,

DEFELE(label1,username"BAhost#"BBpassward"8D)
DEFELE(label2,crm#destinationinterfaceaddress"8Dappidcuadva)
DEFELE(label3,4destinationinterfaceaddr"8Dappidcuadva)

    ** label1 - Host interface network logon (CRT or printer).
    ** label2 - CRT DSP logon.
              - Crm# is 2 or 3.  With 4, CMT zaps the CRT circuit.
    ** label3 - Printer DSP logon.
              - Crm# is 4.
              - Printer network logon refers to the label1.
              - The printer network logon does not have to refer to
                the label1, but may refer to another DEFELE macro. In
                this case, if the host# is different from the host# of
                the CRT, the host interface will zap the CRT circuit.
                Normally without CRM4 the printer may logon to any host
                in the network; CRM4 restricts this.
    ** With the CRM4 printer DSP logon, CMT puts 0 to appid, 0 to cua,
       and 0 to dva in the "CALL USER DATA" message. CMT ignores the



Page 68                   CMTI.ERS







THE TYM FILE                               February 27, 1990



       value defined in the appidcuadva of the CRM4, and no message is
       given during assembly or run time.

Since SNA version 1.03 the PU.LABEL and LU.LABEL macros have been
used to identify a pool of LUs.  This label was never meant to be
unique and this fact is documented in the SNA sysgen   and   ERS.
If labels are used in pools, and CMT uses the  new  LUNAME  macro
the  LUNAME  will  not  be displayed  properly   on   the  status
line   with SNA 1.04 which is in SOURCE. Version 3.02 of SNA will
allow a attached printer(CRM4) to be uniquely identified.

The   following  is    a   successfull    SNA/CMT    CRM4    call
establishment.   Abbreviations are explained at the conclusion of
this memo.


                     NEW IMPLEMENTATION

   SNA HIF                                             CMT
   =======                                             ===
Call
Request
(Terminal)
                                           - Dest. Designator -
                                          |                    |
 <---- SCUA / SDVA / SCTL / SINF / CRM # / APID / DCUA / DDVA /--
       (CRT)  (CRT)  (CRT)  (CRT)  (3)     (CRT)  (CRT)  (CRT)
Ckt.   |      |     |       |                              ---- ADDI ----
Enable V      V     V       V                             |              |
- SCUA / SDVA / SCTL / SINF /CRM # / APID / DCUA / DDVA / PU / LU / CB /->
  (CRT)  (CRT)  (CRT)  (CRT)   (3)  line#  PU.LAB LU.LAB addr addr Ptr
Call                                                             |
Request                                                          |
(Printer)                                  - Dest. Designator -  |
                                          |                    | V
 <---- SCUA / SDVA / SCTL / SINF / CRM # / APID / DCUA / DDVA / ADDI /--
       (PRT)  (PRT)  (PRT)  (PRT)  (4)     (00)   (00)   (00)   (PRT)
Ckt.   |      |     |       |                              ---- ADDI ----
Enable V      V     V       V                             |              |
- SCUA / SDVA / SCTL / SINF /CRM # / APID / DCUA / DDVA / PU / LU / CB /->
  (PRT)  (PRT)  (PRT)  (PRT)   (4)  line#  PU.LAB LU.LAB addr addr Ptr

Call Request (CRM 3) from CMT


If the Attached Printer bit in the SINF byte  is  set,  the   SNA
HIF  will  try   to   find  an  available  terminal (CRT) with an
associated printer (PRT) which  will  satisfy  the  call  request
(i.e.   match   up  device   types   and   destination designator
requirements).  The SNA HIF  associates  terminals  and  printers
into pools by assigning  the same PU.Label and LU.Label values.



Page 69                   CMTI.ERS







THE TYM FILE                               February 27, 1990



Circuit Enable from SNA HIF for Attached printer request

Once  the  SNA  HIF  finds  the  first  available  CRT  with   an
available  PRT,   a   circuit  enable message is returned to CMT.
This  message  contains   the   same   source   CUA,   DVA,   CTL
(control),   and  INF (information)  bytes  which  were  received
in  the original  call  request.    The   circuit   enable   also
contains   the   destination designator  for the destination CRT.
In this particular scenario, the PU and LU have  labels  defined.
The  PU  label  and LU label  are returned  in  this  field.   If
the label for the PU or LU had not been  defined  the  respective
addresses  would  have   been   sent.   An additional destination
designator field is included in the circuit  enable  to  identify
the attached printer.

Call Request (CRM4) from CMT

CMT tries to  make  a  connection  for  the  printer   (PRT)   by
sending  back  a  call  request for the PRT.  In this request CMT
sends the exact ADDI which was received in the  previous  circuit
enable.   CMT  doesn't  care what is in these 4 bytes.  For CRM4,
the  destination  designator  field  is  useless,   because   the
destination   printer   has already  been  decided.   This  field
is  always  zeroes.  In  the  request  CMT  provides  the  device
configuration  of  the PRT  so  that the SNA HIF can determine if
they are compatable.

Circuit Enable for CRM4 from SNA HIF

If the printer devices are compatable and the  printer  is  still
in  the  proper state, the SNA HIF returns a CRM4 circuit enable.
This message includes the destination PU  label  and   LU   label
for   the  attached PRT.  If labels are not defined the addresses
are used.

The ADDI field for  the   CRM   3   circuit   enable   has   been
modified  to contain the PU address (1 byte), LU address (1 byte)
and control block pointers (2 bytes).  The ADDI field  has   been
added  to  the  CRM  4 circuit  enable with the same format.  CMT
will use the first 2 bytes of the ADDI field to uniquely identify
the  destination  PU  and  LU.  PBT will not use this  field  for
anything.  CMT will echo back the 4 byte ADDI field in the CRM  4
message.   CMT  will  take  the  PU  address(40,C1,C2,ETC)and  LU
address(1,2,3, 4,ETC) in the ADDI field both SNA real address and
the  APID  (line address 40, c1,c2,to c6). These three bytes will
be used to index into the LUNAME table.

Example of CMT tymfile setup for crm4 attached printer.  The  crt
would use the APID,DCUA,DDVA addressing:

PRINTER



Page 70                   CMTI.ERS







THE TYM FILE                               February 27, 1990



LUNAME(40,0C1,2,SNA012)  LINE 0,PU(1),LU(2)

CRT

LUNAME(40,0C1,40,SNA010) LINE 0,PU(1),LU(0)

This change will be implemented in SNA 3.02.


   Abbreviations
   =============
   SCUA     source control unit address
   SDVA     source device address
   SCTL     source device control byte
   SINF     source device information byte
   CRM      connection request mode
   APID     application I.D.
   DCUA     destination control unit address
   DDVA     destination device address
   ADDI     additional destination designator
   CRT      terminal
   PRT      printer

3.9  CHANGING FUNCTION KEY ASSIGNMENTS

3.9.1  FUNCTION KEYS

The function  key  default  assignment  table  is  a  macro  that
consists  of  numerous  LEVELn statements.  Each LEVELn statement
defines a single key stroke  that  is  typed  to  invoke  a  3270
function.  LEVEL1  is  the  first  key  stroke  of  the sequence.
Likewise, LEVEL2, LEVEL3, LEVEL4 and LEVEL5  define  the  second,
the third, the fourth and the fifth key strokes if they exist.The
LEVELn statement  has  either  2  or  3  parameters.   The  first
parameter  is  a  mnemonic  for  the  character  to be typed. For
example, A.I is an ascii 'I'. The second parameter is either 0 or
1.   A  '0'  indicates  that an additional key stroke (LEVELn) is
needed for the function being defined.   No  third  parameter  is
present.  A '1' indicates this is the last key stroke (LEVELn) of
the  function.   A  third  parameter  must  follow.   The   third
parameter is the name of the function that is being defined.  For
example:

LEVEL1(A.ETX,1,FCNCLR)          :CONTROL C IS CLEAR

The above defines a single key stroke sequence used to invoke the
CLEAR function.

A copy of the function key default  assignment  table  should  be
included  at  the  end of the T0x file.  Edit the desired changes
into this copy.  NAD must be instructed to ignore the  copy  that



Page 71                   CMTI.ERS







THE TYM FILE                               February 27, 1990



is  in  the initialization file.  This is accomplished via a KILL
'macroname' assembler directive  that  must  precede  the  table.
When the interface is assembled, the changes you have made in the
table will take effect. See the section describing  each  version
for which terminal types are available.

For example:

KILL    CTRVT1
CTRVT1  MACRO   [
LEVEL1(A.SUB,1,KILL)            :CONTROL Z IS KILL
LEVEL1(A.CR,1,FCNENT)           :RETURN IS ENTER
        "
        "
        "
        "
LEVEL1(A.ACK,0)                 :CONTROL P IS FIRST KEYSTROKE
        LEVEL2(A.1,1,FCNPA1)    :CONTROL P, 1 IS PA1
        LEVEL2(A.2,1,FCNPA2)    :CONTROL P, 2 IS PA2
        LEVEL2(A.3,1,FCNPA3)    :CONTROL P, 3 IS PA3
]

The above set of macros included after the DEFTRM  macro  in  the
T0x file would change the default assignments for the VT100 after
re-assembling the interface.  It is advised that the headquarters
CMT/3270  support  person  be  consulted  before implementing the
changes.

3.10  SENDING ESCAPE SEQUENCES FROM HOST TO TERMINAL

There may be instances when it is desirable for the host to  send
escape  sequences  to the terminal via CMT.  One such instance is
to redefine  programmable  keys  at  the  terminal.   Caution  is
cessary  to avoid conflicts when redefining the "soft" keys which
may be used by CMT.  Furthermore,  if  an  unrecognizable  escape
sequence is sent from the host to the terminal, the result on the
screen may be unpredictable.

The following procedure should  be  followed  in  sending  escape
sequences to the terminal:

      1.  Select an unused EBCDIC character, say 0FE in hex,  and
map  this  EBCDIC  character  to  ASCII ESC.  In other words, the
following should be put in  the  Tymfile  of  the  CMT/3270  slot
(refer to 2.3.4.1.).

CHRMAP MACRO[
       REMAPC(APLEBC,0FE,0FE)
       REMAPC(EBCASC,0FE,A.ESC)
]




Page 72                   CMTI.ERS







THE TYM FILE                               February 27, 1990



      2.  The escape sequence should be sent with an  erase/write
command.   This  command  should  be  preceded  and  followed  by
separate erase/write commands which prevents the optimizer in the
CMT/3270 from modifying the desired escape sequences.

  The commands would be sent with the following order:

             STX E/W WCC ETX
             STX E/W WCC <escape sequences> ETX
             STX E/W WCC ETX
             STX E/W WCC <data for desired final screen> ETX

      3.  In preparation of a series of escape  sequence  to  the
terminal,  caution  must  be  taken to avoid a sequence at a line
boundary.  The CMT/3270 may insert a move  cursor  sequence  into
the  middle  of  a  desired  escape  sequence.   Therefore, it is
advisable not to exceed eighty characters in the entire series of
escape sequences.

For example:

      STX E/W WCC ETX
      STX E/W WCC <escape sequence 1> ETX
      STX E/W WCC ETX
      STX E/W WCC <escape sequence 2> ETX
      STX E/W WCC ETX
              . . . .

      STX E/W WCC ETX
      STX E/W WCC <escape sequences i> ETX
      STX E/W WCC ETX
      STX E/W WCC <data for the desired final screen> ETX

where the length of <escape sequences i> is less than eighty.




















Page 73                   CMTI.ERS







STATUS LINE                                February 27, 1990



                      4.  STATUS LINE

The status line displays CMT status information on  the  terminal
screen  automatically. An entry in the Tymfile is required to use
this feature.

_A_R_E_A _W_H_E_R_E _T_H_E _S_T_A_T_U_S _L_I_N_E _I_S _D_I_S_P_L_A_Y_E_D

The default status line is the 24th line, the 25th line  (if  the
terminal supports a 25-line screen and allows writing messages on
the 25th line) or the upper-right corner  of  the  display.   The
user  can  choose any line between the 1st line and the 24th/25th
line as the status line or upper-right corner display.

4.1  MACROS FOR STATUS LINE

There are five macros which affect the status line display.  They
are the following:

4.1.1  DEFSTA

DEFSTA -- enables the CMTI status line

     Syntax

     DEFSTA(switch)

     where

     switch is OFF or ON

     Description

If parameter is ON, the status  line  will  be  turned  on.   The
default  for  status  line  is  on 24th or 25th line depending on
terminal.  Default location and default  keywords  will  be  used
unless defined otherwise by additional macros.

4.1.2  LUNAME

LUNAME -- specifies the LU name of a CRT and/or  PRT.   You  must
define a separate macro for each LU.

        Syntax

        LUNAME(appl#,cua,dva,luname)

        where

        appl: the application ID.
        cua: the control unit address



Page 74                   CMTI.ERS







STATUS LINE                                February 27, 1990



        dva: the device address
        luname: the name displayed on status line if value matches

        Description

If the  macro  is  included  in  the  Tymfile,  CMTI  stores  the
parameter  values in the LUTAB table.  When CMTI receives the DSP
circuit enable message from the host interface, it  compares  the
application  number,  the  control  unit  address, and the device
address from the  host  port  with  the  corresponding  parameter
values  in  the table.  If the values match, CMTI displays the LU
name on the status line.

No LU name will be displayed if macro not defined.

4.1.3  HICHG

HICHG -- allows changes to the Host interface naming  convention.
Max of 4 characters allowed.

        Syntax

        HICHG(label,text)

        where valid label names and default text strings are the following:

                Label     Text
               -------   ------
                BSCMG     "BSC "
                SNAMG     "SNA "
                X.25MG    "X.25"
                CMTMG     "CMT "
                UNKMG     "UNK "

        eg. HICHG(BSCMG,3270)             :change "BSC " to "3270" in 1st field
                                          :of status line display.

4.1.4  SESCHG

SESCHG -- allows changes to 2nd field of status line which is the
session name.  Max of 4 characters allowed.

        Syntax

        SESCHG(label,text)

        where valid label names and default text strings are the following:







Page 75                   CMTI.ERS







STATUS LINE                                February 27, 1990



                Label      Text
               -------    ------
                APPLMG    "APPL"
                SYSMG     "SYS "
                QESMG     "?   "

        eg. SESCHG(QESMG,WHO?)            :will change 2nd field display from
                                          :"?   " to "WHO?".

4.1.5  STACHG

STACHG -- allows changes to other fields of status line. Max of 4
characters allowed.

        Syntax

        STACHG(label,text)

        where valid label names and default text strings are the following:

                Label      Text
               -------    ------
                WAITMG    "WAIT"
                NGFMG     "-F  "
                ISRTMG    "ISRT"
                PTCTMG    "PROT"
                NULKMG    "NULK"
                LOCKMG    "LOCK"

        eg. STACHG(WAITMG,BUSY)           :will change "WAIT" message to "BUSY".

4.2  STATUS LINE FIELD DEFINITIONS

The status is organized into ten fields which are BSC (or SNA  or
CMT  or  X.25), APPL (or SYS or ?), CRT:lu name, PRT:lu name, -F,
WAIT, ISRT, PROT, NULK, LOCK. The status display  capability  can
be enabled/disabled by setting switch in the Tymfile.  The status
keyword can be changed by defining macros in  the  Tymfile.   The
definition of each status item is as follows :

4.2.1  BSC/SNA/X.25/CMT/UNK

This status item indicates what kind of  host  interface  CMT  is
talking to.

BSC - indicates that CMT talks to the BSC host interface.
SNA - indicates that CMT talks to the SNA host interface.
X.25 - indicates that CMT talks to the X.25 host interface.
CMT - indicates that CMT has not built the circuit to
      the host interface yet.
UNK - indicates that CMT talks to an unknown host interface.



Page 76                   CMTI.ERS







STATUS LINE                                February 27, 1990



CMT requests a product id and version from  the  host  interface.
The  host  interface responds with a product id and version.  The
product id of BSC( 3270 Host Interface ) is 0034.  The product id
of SNA ( SNA Host Interface ) is 0063.  The product id of X.25 is
0033.

4.2.2  APPL/SYS/?

This status item indicates what session exists between  the  host
and   the  terminal.   Please  see  the  reference  documentation
(DNDSPEC:39) CMTSYS.GED.

APPL - Indicates that  operator's application program owns  the display
       screen.  (with BSC, SNA or X.25 protocol)
SYS - Indicates that system operator owns the display screen. (with SNA
      protocol only)
? - Indicates that screen is not owned. (with SNA protocol only)

Description :

a. SNA protocol has two ways to initiate the switch :
   a) Host initiates the switch and changes the status to APPL, SYS, or ?.
   b) User initiates the switch by entering the SYS/REQ(system request)
      key to ask the host to change the status.

b. With SNA protocol, CMT  is required to define a  SYS/REQ  key.
When  the  user  enters  the  SYS/REQ key from the  keyboard, CMT
sends this key to the SNA host interface by F0 read message.

c. With BSC/X.25 protocol, the bell  sounds  when   the   SYS/REQ
key is entered by the user from the keyboard.

4.2.3  CRT:lu name

The lu name is a character string with  at  most  10  characters.
The user should give the application identifier(i.e app), control
unit address(i.e. cua), device address(i.e. dva), and lu name  to
the  macro LUNAME in the Tymfile.  The format of this macro is as
follows :

LUNAME macro(arg-1, arg-2, arg-3, arg-4)
LUNAME(40,0C2,0C3,CMT023)       Line 0,Pu(2),Lu(3)

where the arg-1 is the application identifier, the arg-2  is  the
control  unit  address,  the arg-3 is the device address, and the
arg-4 is the lu name character string.

When the macro  LUNAME  is  called,  CMT  stores  the  values  of
argument  to the table LUTAB contiguously.  When CMT receives the
DSP circuit enable message from the host interface,  it  compares
the  app,  cua, and dva from the host port with the app, cua, and



Page 77                   CMTI.ERS







STATUS LINE                                February 27, 1990



dva in the table LUTAB.  If there is a match, the lu name  string
is  printed  out right after "CRT:" in the status line.  If there
is not a match with any app, cua, and dva  in  the  table  LUTAB,
nothing  will  be  printed  out and the status item "CRT:lu name"
will not be displayed on the status line.

4.2.4  PRT:lu name

The implementation of  this  status  item  is  the  same  as  the
implementation  of  the  status  item  "CRT:lu  name".   The only
difference is that CMT gets  the  app,  cua,  and  dva  from  the
printer  port  instead  of  from  the  host port. See Define CRM4
Printer Section for more information.

SNA(CRM3)       LUNAME(40,0C2,0C4,SNA023)       Line 0,Pu(2),Lu(4)
SNA(CRM4)       LUNAME(40,0C2,4,SNA024)         Line 0,Pu(2),Lu(4)

4.2.5  -F

-F  indicates  that  a  currently   unavailable    function   was
requested.  The keyboard is locked until the RESET key is entered
and sent to the  SNA host interface.  Please  see  the  reference
documentation (DNDSPEC:39) CMTSYS.GED.

4.2.6  WAIT

WAIT indicates that the printer assigned to the CRT is busy.  The
user should wait and not enter characters from the keyboard until
the printer becomes available.

4.2.7  ISRT - insert mode

ISRT indicates that the  terminal  is  in  the  insert  mode.   A
character may be inserted at the cursor position.  Insert mode is
also used to insert alpha characters into numeric fields.

4.2.8  PROT - protected field

PROT indicates that the cursor is in  a  protected  field  or  on
attribute.   No  characters may be entered. Currently, in the CMT
environment, the bell sounds when the user enters a character.

4.2.9  NULK - numeric lock

NULK indicates that the cursor is in a numeric unprotected  field
while  the terminal is in the numeric lock mode.  Only characters
0 to 9, decimal sign (.) or minus sign  (-)  are  allowed  to  be
entered.   The bell sounds when the user enters other characters.
To put non-alphabetic characters into a numeric  field,  use  the
Insert mode key.




Page 78                   CMTI.ERS







STATUS LINE                                February 27, 1990



4.2.10  LOCK - keyboard locked

LOCK indicates that the keyboard  was locked  when the  user  hit
the   AID  key.   Either  the host sends a  command with the  WCC
restore bit set or the user must hit the RESET key to unlock  the
keyboard.

4.3  FORMAT OF THE STATUS LINE

The status is displayed in the format of a  line  or  the  upper-
right  corner.  The format of a line or the upper-right corner is
as follows :

_F_O_R_M_A_T _O_F _T_H_E _L_I_N_E-_M_O_D_E _S_T_A_T_U_S _D_I_S_P_L_A_Y_S

The line status display  is  the   status  display  on  the  line
between  line  1 to  line  24 ( or line  25 ).  The whole line is
used as a status line.  The  format is as follows :


BSC  APPL CRT:lu name PRT:lu name WAIT -F ISRT PROT NULK LOCK
or   or   ^           ^
SNA  SYS  |           |
or   or   |           if PRT lu name exists
X.25 ?    column 11
or   ^    if CRT lu name exists
CMT  |
or   |
UNK  |
^    |
|    |
|    column 6
column 1


Description :

a. BSC, SNA, X.25 or CMT will always be displayed in the first field.

b. APPL, SYS or ? will always be displayed in the second field.

c. Status displays dynamically from the third field ; these status
   items from the third field in the status line do not have a fixed
   location.

The priority order for these status item is as follows :

CRT:lu name PRT:lu name WAIT -F ISRT PROT NULK LOCK

d. Some status items are exclusive; both items can not be displayed
   at the same time.  For example, NULK and PROT, ISRT and PROT, can



Page 79                   CMTI.ERS







STATUS LINE                                February 27, 1990



   not be displayed at the same time.

Some examples of the line status display are as follows :

_B_S_C _S_T_A_T_U_S _D_I_S_P_L_A_Y


BSC  APPL CRT:lu name PRT:lu name WAIT ISRT PROT NULK LOCK

^    ^
|    |
|    column 6
column 1


Description :

a. The first two status items are always displayed when CMT talks to
the BSC host interface.

b. Other status items are displayed when the status condition is active.

c. NULK and PROT, ISRT and PROT can not be displayed at the same time.

_F_O_R_M_A_T _O_F _T_H_E _M_I_C_R_O_D_A_T_A _S_T_A_T_U_S _D_I_S_P_L_A_Y

Microdata terminal status line format is different from the other
Tymnet terminals.  Microdata terminal status display has a line
format only; it does not have the right upper-corner display.  The
items inside the Microdata terminal status line are "W", "K", "I", or
"3270" only.  Other status items in CMT do not apply to this terminal
type.

The format of the status line is as follows :

                SSCP
                 or
                space
                 or
    *W* *K*  I  PLU                      3270
    ^   ^    ^  ^                         ^
    |   |    |  |                         |
    |   |    |  column 17                 column 68
    |   |    column 13
    |   column 8
    column 4

       W - Hitting any AID key, which causes a message to be
           transmitted to the host.
           It will be reset to space when the restore bit is
           set in the WCC or the user hits the RESET key.



Page 80                   CMTI.ERS







STATUS LINE                                February 27, 1990



       K - While the cursor is on an attribute or protected field
           and the user enters a character or when alpha entry is
           attempted in a numeric field. The keyboard is locked.
           All illegal key hit will sound the bell.
           It will be reset to space when the user hits the RESET
           key or a legal key is entered.

       I - Enter insert mode. It will be reset to space when RESET
           or a function key is hit or the character entered
           by the user reaches an attribute.

   SSCP
    or
   PLU   - Currently, this item is default to PLU, other two values
    or     (i.e. SSCP or space) will be available when the SNA
   space   sys/req key implementation is completed.

    3270 - This item is always displayed.

_S_N_A _S_T_A_T_U_S _D_I_S_P_L_A_Y


SNA  SYS CRT:lu name PRT:lu name WAIT ISRT PROT NULK LOCK
^    or
|    APPL
|    or
|    ?
|    ^
|    |
|    column 6
column 1


Description :

a. The first status items are always displayed when CMT talks  to
the SNA host interface.

b. The second status item is always displayed with APPL, SYS or ?
(depends  on  what  session  it  exists  between the host and the
terminal).

c. Other status items are displayed when the status condition  is
active.

d. NULK and PROT, ISRT and PROT can not be displayed at the  same
time.

_X._2_5 _S_T_A_T_U_S _D_I_S_P_L_A_Y





Page 81                   CMTI.ERS







STATUS LINE                                February 27, 1990




X.25 APPL CRT:lu name PRT:lu name WAIT ISRT PROT NULK LOCK
^    ^
|    |
|    column 6
|
column 1


Description :

a. The first two status items are always displayed when CMT talks
to the X.25 host interface.

b. Other status items are displayed when the status condition  is
active.

c. NULK and PROT, ISRT and PROT can not be displayed at the time.

_C_M_T _S_T_A_T_U_S _D_I_S_P_L_A_Y


CMT ISRT PROT NULK LOCK
^
|
|
column 1


Description :

a. The first status item is always displayed  when  CMT  has  not
built the circuit to the host interface yet.

b. Other status items are displayed when the status condition  is
active.

c. NULK and PROT, ISRT and PROT can not be displayed at the  same
time.

_U_N_K _S_T_A_T_U_S _D_I_S_P_L_A_Y


UNK APPL CRT:lu name PRT:lu name WAIT ISRT PROT NULK LOCK
^   ^
|   |
|   column 6
column 1


Description :



Page 82                   CMTI.ERS







STATUS LINE                                February 27, 1990



a. The first two status items are always displayed when CMT talks
to an unknown host interface.

b. Other status items are displayed when the status condition  is
active.

c. NULK and PROT, ISRT and PROT can not be displayed at the  same
time.

_F_O_R_M_A_T _O_F _T_H_E _U_P_P_E_R-_R_I_G_H_T _C_O_R_N_E_R _S_T_A_T_U_S _D_I_S_P_L_A_Y

The format of the upper-right corner display is as follows :


         row 1 ---->    |BSC    APPL
                         or     or
                         SNA    SYS
                         or     or
                         X.25   ?
                         or
                         CMT
                         or
                         UNK
         row 2 ---->    |CRT:lu name
         row 3 ---->    |PRT:lu name
         row 4 ---->    |WAIT   -F
         row 5 ---->    |ISRT   PROT
         row 6 ---->    |NULK   LOCK
         row 7 ---->    ---------------

                        ^             ^
                        |             |
                        column 66    column 80


Description :

a. Column 66 is the left boundary.

b. The first field of Row 1  is  always  displayed.   The  second
field  of the row 1 and the other status fields on row 2 row 3 or
row 4 are displayed when the status condition is active.

c. Column 66 to column 80 of row 7 is the lower boundary.

d. If some condition  is  active,  the  upper-right  corner  will
display  the  active  condition  status on the next field and the
lower boundary is shifted up.

e. If no condition is active, the upper-right corner will display
row  1  only,  the row 2 is the lower boundary.  The row 3, row 4



Page 83                   CMTI.ERS







STATUS LINE                                February 27, 1990



and row 5 is displayed the original screen data.

f. NULK and PROT, ISRT and PROT can not be displayed at the  same
time.

Some examples of the upper-right corner  status  display  are  as
follows :

4.3.1  BSC STATUS DISPLAY ON THE UPPER-RIGHT CORNER

         row 1 ---->   |BSC    APPL
         row 2 ---->   |CRT:lu name
         row 3 ---->   |PRT:lu name
         row 4 ---->   |WAIT   ISRT
         row 5 ---->   |PROT   NULK
         row 6 ---->   |LOCK
         row 7 ---->   ---------------

                       ^             ^
                       |             |
                       column 66     column 80


Description :

a. The first two status items on row 1 indicates that  CMT  talks
to the BSC host interface.

b. Other status items are displayed when the status condition  is
active.

c. NULK and PROT, ISRT and PROT can not be displayed at the  same
time.

4.3.2  SNA STATUS DISPLAY ON THE UPPER-RIGHT CORNER



















Page 84                   CMTI.ERS







STATUS LINE                                February 27, 1990



         row 1 ---->    |SNA    APPL
                                or
                                SYS
                                or
                                ?
         row 2 ---->    |CRT:lu name
         row 3 ---->    |PRT:lu name
         row 4 ---->    |WAIT   -F
         row 5 ---->    |ISRT   PROT
         row 6 ---->    |NULK   LOCK
         row 7 ---->    ---------------

                        ^             ^
                        |             |
                        column 66     column 80


Description :

a. The first two status items on row 1 indicates that  CMT  talks
to the SNA host interface.

b. Other status items are displayed when the status condition  is
active.

c. NULK and PROT, ISRT and PROT can not be displayed at the  same
time.

4.3.3  X.25 STATUS DISPLAY ON THE UPPER-RIGHT CORNER

         row 1 ---->    |X.25   APPL
         row 2 ---->    |CRT:lu name
         row 3 ---->    |PRT:lu name
         row 4 ---->    |WAIT   ISRT
         row 5 ---->    |PROT   NULK
         row 6 ---->    |LOCK
         row 7 ---->    ---------------

                        ^             ^
                        |             |
                        column 66     column 80


Description :

a. The first two status items on row 1 indicates that  CMT  talks
to the X.25 host interface.

b. Other status items are displayed when the status condition  is
active.




Page 85                   CMTI.ERS







STATUS LINE                                February 27, 1990



c. NULK and PROT, ISRT and PROT can not be displayed at the  same
time.

4.3.4  CMT STATUS DISPLAY ON THE UPPER-RIGHT CORNER

         row 1 ---->    |CMT    ISRT
         row 2 ---->    |PROT   NULK
         row 3 ---->    |LOCK
         row 4 ---->    ---------------

                        ^             ^
                        |             |
                        column 66     column 80


Description :

a. The first item on the row 1 is always displayed when  CMT  has
not built the circuit to the host interface yet.

b. From the second field of the row 1 down to the lower boundary,
the status item is displayed when the status condition is active.

c. NULK and PROT, ISRT and PROT can not be displayed at the  same
time.

4.3.5  UNK STATUS DISPLAY ON THE UPPER-RIGHT CORNER

         row 1 ---->    |UNK    APPL
         row 2 ---->    |CRT:lu name
         row 3 ---->    |PRT:lu name
         row 4 ---->    |WAIT   ISRT
         row 5 ---->    |PROT   NULK
         row 6 ---->    |LOCK
         row 7 ---->    ---------------
                        ^             ^
                        |             |
                        column 66     column 80


Description :

a. The first two status items on row 1 indicates that  CMT  talks
to an unknown host interface.

b. Other status items are displayed when the status condition  is
active.

c. NULK and PROT, ISRT and PROT can not be displayed at the  same
time.




Page 86                   CMTI.ERS







STATUS LINE                                February 27, 1990



4.4  KEY SEQUENCES FOR VARIOUS STATUS LINE DISPLAYS

The status is displayed automatically  after  logging  into  CMT.
The  user is allowed to turn off the status display by entering a
key sequence and to enter the automatic display again by entering
another  key  sequence.   The  key  sequence  entered by the user
should be terminated by a CR.

4.4.1  EXIT THE STATUS DISPLAY

When the status displays on the screen, the  user  can  exit  the
status display by entering a control key sequence.  After exiting
the status display, no status display  is  on  the  screen.   The
screen is displayed with the original screen data.

4.4.2  ENTER THE STATUS DISPLAY

The user can enter the status display by entering a key sequence.
The key sequence depends on what control character is defined for
function STATLN. For example, VT100(131) terminal defines ^A  key
as  the  control  character  to  access  the function STATLN. The
example as follows :


         ^A  D  CR (or ^A  d  CR)       :display on default area
         ^A  U  CR (or ^A  u  CR)       :on upper-corner
         ^A  E  CR (or ^A  e  CR)       :exit display
         ^A  #  CR  : # is between 1 to 24 (or 25)
            :display on line 1 to line 24(or 25)


Description :

a. ^A is defined in the LEVEL statements of  each  terminal  type
definition in the init file.  The format is as follows :

         LEVEL1(A.SOH,1,STATLN)   : where STATLN is a routine to
                                  : process the status display

b. ^A D CR - When  the  user  enters  ^A  D  CR,  the  status  is
displayed  on  the 24th, 25th line or upper-right corner (depends
on the parameter value on macro STADEF which defined in the  init
file for terminal type).

There are three different parameters in macro STADEF, that is  24
25 and 0.  Macro STADEF is in the terminal definition.

      a)  STADEF(24) - Defines the status display is on the 24th line.

      b)  STADEF(25) - Defines the status display is on the 25th line.




Page 87                   CMTI.ERS







STATUS LINE                                February 27, 1990



      c)  STADEF(0) -  Defines the status display is on the upper-right
                       corner.

c. ^A U CR - When  the  user  enters  ^A  U  CR,  the  status  is
displayed on the upper-right corner of the screen.

d. ^A E CR - When the user enters ^A E CR, the status  is  turned
off, no status displays on the screen.

e. ^A # CR - When  the  user  enters  ^A  #  CR,  the  status  is
displayed on the line the user request.

f. When the cursor is moved  to  the  status  display  area,  the
status  display  is turned off automatically.  The status display
can be turned on again by entering ^A D CR or ^A # CR.

       ^A  1 - 9         CR    :request to display status on the
                               :line 1 to the line 9

           1     0 - 9   CR    :request to display status on the
                               :line 10 to the line 19

           2     0 - 4/5 CR    :request to display status on the
                               :line 20 to the line 24/25

           ^     ^
           |     |
           |     second digit
           |
           first digit

        ** These two digits are the row number that the user requests
           to display the status on.

     Description :

        a) ^A is defined to access routine STATLN in the terminal
           definition.  It could be defined as a different key sequence
           for different terminal types to access routine STATLN.

        b) The two  digits entered after ^A  should follow these
           rules :

                 (a) If the user requests the status to be displayed on
                     a line between line 1 and line 9, the user
                     should enters ^A 1 CR, ^A 2 CR, .......
                     ..., ^A 8 CR or ^A 9 CR.
                 (b) If the  first digit is  1, then  the second digit
                     should be between 0 to 9.
                 (c) If the  first digit is  2, then  the second digit
                     should be between  0 to 4/5( the terminal can only



Page 88                   CMTI.ERS







STATUS LINE                                February 27, 1990



                     allow the user to access  line 1 to  line 24/25 ).
                 (d) If  the  user  enters  ^A 10 CR  and  enters
                     ^A 20 CR, the status  will be displayed on the
                     line 10 and then recover the line 10 original data
                     and display status on line 20.

g. All other  keys  entered  after  ^A  will  cancel  the  STATLN
routine command and sound the bell after the user hits CR.

4.4.3  CHANGE TO ANOTHER AREA TO DISPLAY THE STATUS

When the status is displayed on the screen, the  user  can  enter
key sequence to cause the status display area to be changed.  For
example, when the status is displayed on the upper-right  corner,
an  ^A 10 CR will cause the status be displayed on  line 10.  The
status keeps on displaying on line 10 until the user hits another
key sequence to ask to change the display area.

When the status is displayed on a certain line, the  user  enters
^A  U  CR  to  cause  the  status be displayed on the upper-right
corner.  The  status  information  keeps  on  displaying  on  the
upper-right  corner until the user enters another key sequence to
change the display area.

If there is a need to  change  the  default  status  line  for  a
terminal  type, the macro STADEF in the terminal definition needs
to be changed.  You would need to copy the terminal definition in
the  init  file  (I-file)  to  a  file  that you want to make the
change.  Then add in a line to kill the terminal macro name  (eg.
KILL  VT100M)  used  in the I file.  Then change the value in the
STADEF macro to the number that you want the status  line  to  be
displayed  as  the  default (eg. STADEF($A13) for line 13).  When
you are done with the change, make  sure  to  assemble  the  file
after  the  I file and before the tymfile (T-file) in the command
file.

4.5  THE CONDITIONS WHICH UPDATE THE STATUS LINE

With the automatic status display, the  status  is  automatically
updated.  The conditions are as follows :

a. CMT receives product id from the SNA host interface (for SNA status)
b. CMT receives product id from the X.25 host interface (for X.25 status)
c. CMT receives product id from the BSC host interface (for BSC status)
d. Before circuit is built from CMT to host interface (for CMT status)
e. FF command coming from the host interface(decide APPL or SYS or ? status)
   Please see reference documentation (DNDSPEC:39) CMTSYS.GED
f. CMT receives the DSP circuit enable message from either the host port
   or the printer port(for CRT:lu name or PRT:lu name)
g. RESET key with SNA protocol (for -F status to disappear)
h. Printer is busy (for WAIT status).



Page 89                   CMTI.ERS







STATUS LINE                                February 27, 1990



i. AID key (for LOCK status).
j. Host sends data (check for keyboard unlock).
k. RESET key with the BSC/X.25 protocol (check for keyboard unlock).
l. Enter insert character mode (for ISRT status).
m. Exit insert character mode (for ISRT status to disappear).
n. Move cursor (for PROT and NULK status).
o. In numeric lock mode, enter character on numeric unprotected field
   (for NULK status).

4.6  ALLOWABLE KEYS WHILE KEYBOARD LOCKED

When  the  keyboard  is  locked,  only  the  status  display  key
sequence, the RESET key are allowed.

4.7  TERMINALS SUPPORTING A 25TH LINE

The terminals that allow the user to use the  25th  line  as  the
status line in CMT :

a. ADDS VP-78
b. BEEHIVE (in DM5A mode, and in DM78 mode)

































Page 90                   CMTI.ERS







INACTIVITY TIMER                           February 27, 1990



                  5.  INACTIVITY TIMER


The inactivity timer(Inact)  in  the  Character  Mode  Translator
interface  is  used  to monitor the  network  session  inactivity
between the user terminal and CMT interface.  Specifically,   the
network  session inactivity will be determinated by a  predefined
inactivity  time interval and based on the data  traffic  between
the  user terminal and CMT interface.  The inactive user  session
will  be detached by the CMT interface upon the expiration of the
predefined inactivity time interval.

When  the session inactivity  timer  expires,   the  user   shall
optionally be warned with a message about the session inactivity.
A  second timer will be initiated as soon as the warning  message
has been forwarded to the user terminal.  This will give the user
a  defined  lead  time to continue the  current  network  session
before the CMT interface finally zaps the user circuit.

As  a consequence,  the effective  inactivity  time  interval  is
determined by two factors,  (1) Session Inactivity Time Interval,
and (2) Inactivity Time Interval after a warning message is  sent
to the user terminal.

5.1  CMT INACTIVITY TIMER

The  function of the CMT inactivity timer is to monitor  the data
traffic   between the CMT interface and User  terminal.  The user
circuit  should be zappped when the  predefined  inactivity  time
interval   expires   (which   is   composed   of   the    session
inactivity  time interval and the inactivity time interval  after
the warning message has been sent.)

5.1.1  SESSION INACTIVITY TIME INTERVAL

The  inactivity  time interval in the CMT  interface  ranged from
0  to  604800  seconds.   A  0  second inactivity  time  interval
indicates  no  time out at the CMT interface and  the  inactivity
timer  is  diabled.  If the user does not define  the  inactivity
timeout value, the session inactivity timer will be disabled.

5.1.2  USER WARNING MESSAGE INACTIVITY TIMEOUT

In  addition  to  the  user  defined  timeout   value   for   the
session inactivity,  a second timer will be added to the  session
inactivity  time interval in order to provide a warning  message.
This  warning message will notify the user of inactivity and give
the  user a defined lead time to continue the session before  the
CMT interface zaps the network circuit.

The  inactivity  timer for the user warning  message  ranges from



Page 91                   CMTI.ERS







INACTIVITY TIMER                           February 27, 1990



0  to 604800 seconds.  The timer will be activated as soon as the
session inactivity timer is expired and the warning  message  has
been  sent toward the user terminal.

Upon  the user  receiving the   warning  message,   if  the  user
inputs  redisplay  function  key  from  the  terminal,   then the
session inactivity timer will be reset and  the  network  circuit
will  remain  intact.   If  the  user  still remains inactive and
exceeds the defined timeout interval, then the CMT interface will
detach the user session.

5.1.3  EFFECTIVE INACTIVITY TIME INTERVAL

The  effective inactivity time  interval  is  composed   of   two
factors, (1) Session Inactivity Time Interval, and (2) Inactivity
Time  Interval after an optional warning message is sent  to  the
user terminal, which can be described as following :

Effective Inactivity Time Interval(X) = First Timer(Y) + Second Timer (Z)

Where
        (a) First  Timer(Y) = Session Inactivity Time Interval
                            Y  = 0 .. 604800 Seconds

        (b) Second Timer(Z) = Inactivity Time Interval after a pre-warning
                              message is sent to the user terminal.
                            Z  = 0 .. 604800 Seconds

        (c) Effective Inactivity Time Interval(X) :

                 X  = Y + Z = 0 .. 1209600 Seconds

The   CMT  interface   will   determine   the   network   session
inactivity and terminate the session based on the total effective
inactivity  time interval as defined above.  If the user does not
define a timeout value for the second timer,  then there will  be
no  warning  message to be sent toward the user terminal and  the
user  session will be detached as soon as the session  inactivity
time interval expires.

5.2  NEW MACROS

Several  macros  need  to   be   modified   and   developed    to
accommodate network session inactivity monitoring.

5.2.1  DEFIAT Macro

Define a default session inactivity time interval  for  the  user
session.  This macro is required to enable the session inactivity
timer.




Page 92                   CMTI.ERS







INACTIVITY TIMER                           February 27, 1990



        Syntax

        Defiat(#)

        where

        # = 0 .. 604800 in seconds

        Description

Define   an   inactivity   time   interval   for   the    Session
Inactivity   Timer   which  is global to the CMT  interface. This
timeout value can be  overridden  by  the  DEFUSR   macro  for  a
specified  user name.  A timeout value of  0 second, indicates no
timeout on  the  user  circuit.   Otherwise,  the  user   session
inactivity  timer  will be  determined  upon this inactivity time
interval.

The  default   timeout   value   is   0   second   or   the   CMT
inactivity timer is disabled.

5.2.2  DEFUSR Macro

In   order   to   define  both  the   session   inactivity   time
interval and the inactivity time interval after a warning message
has  been  sent toward the user terminal  for  a  specific   user
name,   macro  DEFUSR  should  be  modified   as follows.  If the
DEFIAT macro is not defined, the inactivity timer for a  specific
user is disabled.

        Syntax

        DEFUSR(user1, cu, #dv, st, pt)

        where

        user1 : Username.  A text string its length is not more
                than 8 characters.
        cu    : Control unit address. Optional.
        #dv   : No. of the device on this control unit.
                Optional.
        st    : Session inactivity time interval for user1.  If
                it is not defined,  the default  timeout  value
                defined by the macro DEFIAT will be chosen.
        pt    : Inactivity time interval after the  pre-warning
                message has been sent toward user1. If it's not
                defined, the second timer will be disabled  and
                no pre-warning message to be sent toward user1.
                User  circuit  will  be  zapped as  soon as the
                session inactivity time interval expires.




Page 93                   CMTI.ERS







INACTIVITY TIMER                           February 27, 1990



5.2.3  DEFMSG Macro

Define a pre-warning message for a user inactive session.

        Syntax

        DEFMSG(String)

        where

        string = ASCII character string

        Description

DEFMSG  macro defines a warning message to   the   inactive  user
of   up  to  80  characters  per  line and 3  lines.  The warning
messages  will be sent toward the  user  terminal after  inactive
session  timeout  if the  inactivity  timer for  warning messages
is defined.  This message is global to  the  CMT  slot but can be
ovrerridden  by  the  IATMSG macro,   which  defines  a  specific
session  inactivity warning message for a specified user name.

If  macro DEFMSG is not defined,  then no message will be sent.

5.2.4  IATMSG Macro

Define a  specific session inactivity pre-warning message  for  a
specified user name.

        Syntax

        IATMSG(String)

        where

        String = ASCII char string up to 80 chars per line and 3 lines.

        Description

This string will be sent toward  a   specific  user  terminal  as
soon  as  the  session inactivity timer expired to  warn the user
about session inactivity .

5.3  TYMFILE CONFIGURATION

Macros  in the Tymfile should be properly set up in order to have
the   CMT  inactivity  timer  operate  effectively  as  the  user
expects.

:   For example,
:



Page 94                   CMTI.ERS







INACTIVITY TIMER                           February 27, 1990



    Defhst(1001,10,5)
    Defhdr(Welcome To APL Tymnet Access)
    Defiat(600)
    Defmsg(Session is terminated due to inactivity!)
:       .
:       .
:       .
    Defusr(User1,,,100)
    Defusr(User2,,,,99)
    Defusr(User3,,100,99)
    Defusr(User4,,3600,90)
    Iatmsg(Session will be terminated within 90 secs)
    Iatmsg(due to inactivity. Please re-display  the)
    Iatmsg(screen to continue the current session !!)
:       .
:       .
:       .
:   Explanations,
:
:    1) Defiat  macro defines the default session inactivity time
:       interval for 600 seconds.
:    2) Defmsg  macro defines the default pre-warning message for
:       user session inactivity.
:    3) Use  the  username  -  User1,  session   inactivity  time
:       interval is 100  seconds.  No pre-warning message will be
:       sent toward  User1,  and user circuit will be zapped upon
:       the session inactivity time interval expires.
:    4) Use the username - User2,  no  session inactivity timeout
:       is defined, so the default value (600 seconds) is chosen.
:       The inactivity time  interval after a pre-warning message
:       has  been sent is  99 seconds.  The  default  pre-warning
:       message is chosen.
:    5) Use  the  username - User3,  the session inactivity  time
:       interval is 100 seconds, and the inactivity time interval
:       after  a  pre-warning  message has been sent toward  user
:       terminal  is  99  seconds.  And the  default  pre-warning
:       message is chosen.
:    6) Use  the  username - User4,  the session inactivity  time
:       interval is 3600 seconds,  the inactivity  time  interval
:       after a pre-warning message  has been sent is 90 seconds.
:       Label1  is  to reference a specific  pre-warning  message
:       defined in IATMSG macro for user4.
:    7) IATMSG  macro  defines a specific pre-warning message for
:       user4.
:









Page 95                   CMTI.ERS







INACTIVITY TIMER                           February 27, 1990



5.4  EFFECTIVENESS AND RECOMMENDATION

The  inactivity  timer  will be  activated   as   soon   as   the
network  circuit  is  completed  successfully  between  the  user
terminal and CMT interface.

It  is  recommended that once  the  CMT   inactivity   timer   is
enabled,  to  either  disable  the inactivity timer at  the  host
interface or to set it to a very large timeout value in order  to
avoid   inconsistency   between  the  CMT  interface   and   host
interfaces.











































Page 96                   CMTI.ERS







KATAKANA AND KANJI 3270 EMULATION          February 27, 1990



          6.  KATAKANA AND KANJI 3270 EMULATION

Because of the differences in processing between Japanese IBM and
non-Japanese  IBM hosts (or Japanese and non-Japanese application
programs on one computer), there are potential problems  in  both
configuration    and    operator   selection   of   terminal/host
combinations.  A further refinement in the host interface Tymfile
configuration  could  specify  the  two different IBM host types.
However this presents additional work for the  person  doing  the
Tymfile configuration.

Japanese IBM hosts may have both kinds of applications running on
one host computer; in native mode the device type may be either a
Katakana/Kanji terminal or a non-Katakana/Kanji terminal, and  as
long  as  the  operators  consistently use the same terminal type
they can use the same IBM host.  This is due to the fact that the
lower-case alpha characters and the Katakana characters reside in
roughly the same positions in  the  Ebcdic  table;  the  Katakana
characters  define a few more positions.  Since both applications
reside on the  same  host,  the  network  host  interface  cannot
configure  by  line  the  "IBM host type".  Thus CMTI and the HIF
cannot have a  handshake  to  attempt  to  control  configuration
problems  of  this  type,  unless there are restrictions based on
device address.

The host interface does have this capability, and  this  will  be
used.   There  will  a  configuration  of  pools  of  devices for
English, Katakana, and Kanji character terminals.  The HIF  cares
whether  the host is IBM, Fujitsu, or Hitachi because of the line
protocol differences, but makes no distinction  between  Japanese
IBM  and  non-Japanese  IBM  hosts.   This distinction will be by
virtue of the configuration.

The host selection is  dependent  on  the  DEFELE/DEFSTR  macros.
There  will be cross checks between the operator's host selection
and the terminal type being used.  Since the terminal  will  have
in  its  terminal  profile an indication of the character sets it
supports (English, English/Katakana,  or  English/Katakana/Kanji)
CMTI  can  ensure  they  match.  Thus for example a Katakana-only
terminal would not be allowed to access a circuit configured  for
Kanji.   There will be appropriate rejection messages for each of
the 3 invalid combinations (see appendix).

Thus it is operator dependent to  choose  a  terminal  type  that
matches.   The  operator chooses an English terminal type (like a
VT100) for an English application and a  Japanese  terminal  type
(like  the  Anritsu)  for  a Katakana application.  Both types of
terminal will be defined.

The printer logon may be for a different IBM host type  than  the
CRT.  This is due to the fact that the circuit type is defined in



Page 97                   CMTI.ERS







KATAKANA AND KANJI 3270 EMULATION          February 27, 1990



the DEFELE macro and stored  in  the  circuit's  DCB;  these  are
unique  to  each  circuit.  The operator can then have an English
application on his screen while printing a Katakana report on the
printer.

6.1  MANUAL LOGON

The same considerations apply to  the  Manual  Logon  feature  of
CMTI.   In  that  case,  the operator could be in a Japanese CMTI
slot and attempt to logon to a non-Japanese host.  This  will  be
more likely once the CMTI to HIF gateway logic is in place.

The Manual Logon screen will  have  a  new  field  -  a  line  to
indicate  the  character  set  type (1 of 3 values).  The default
character set will  be  English.   An  incorrect  selection  will
result  in  the  error  response "INVALID CHARACTER SET SELECTED,
PLEASE ENTER AGAIN".

For example, the second screen in the manual logon  process  will
look like this, where the character set default shows by the fact
that it is put in the field:

        CONNECTION REQUEST MODE:
        DESTINATION INTERFACE ADDRESS:
        APPLICATION IDENTIFIER:
        DESTINATION CONTROL UNIT:
        DESTINATION DEVICE ADDRESS:


        CHARACTER SET: 0                0=English
                                        4=Katakana
                                        5=Kanji

6.2  DOWNWARD COMPATABILITY WITH OLDER VERSIONS

Another consideration is downward compatability between old  CMTI
slots  and  old HIF slots, with the new slots of both types.  The
protocol being defined for identifying the host type should allow
for the older slots to talk to the new ones, by defaulting to IBM
and  the  A/N  character  set.   The  new  protocol  will   allow
specification of both host type and character set.

Possible erroneous information on the screen can occur in several
combinations.   This  will  be  shown in the chart below, for all
combinations of old and new HIF with old and  new  CMTI  for  IBM
hosts.   The  "X" indicates a possible erroneous screen where the
lower-case   and   the   Katakana   characters   are    switched.
Applications  that  use  only  upper case alpha characters should
usually come out ok.  Note that the  selection  of  the  Japanese
terminal  (Katakana  or  Kanji)  will  cause CMTI to shift-up any
lower-case alpha characters.



Page 98                   CMTI.ERS







KATAKANA AND KANJI 3270 EMULATION          February 27, 1990



                    ------------------------------------
                    |   OLD HIF   |      NEW HIF       |
                    |             |                    |
                    |             | ENGLISH | JAPANESE |
                    |             |   IBM   |   IBM    |
                    |             | PROGRAM | PROGRAM  |
-------------------------------------------------------|
                    |             |         |          |
CMTI - OLD          |     ok      |   ok    |   X      |
                    |             |         |          |
-------------------------------------------------------|
                    |             |         |          |
        JAPANESE    |     X       |   X     |   ok     |
        TERMINAL    |             |         |          |
                    |             |         |          |
CMTI - NEW      ---------------------------------------|
                    |             |         |          |
        ENGLISH     |     ok      |   ok    |   X      |
        TERMINAL    |             |         |          |
                    |             |         |          |
-------------------------------------------------------|

In summary, if a single CMTI slot needs to talk to both  Japanese
and  English application programs then the terminal definition in
the Tymfile should include both the Katakana/Kanji terminal  type
and  a terminal defined for English usage. The operator indicates
the application type in his host selection and CMTI  cross-checks
based  on  terminal  type.  The Kanji terminal will be allowed to
access any kind of host circuit.  The Katakana terminal  will  be
able to access Katakana or English circuits.

6.3  LOWER CASE ALPHA CHARACTERS

The Japanese hosts do not define lower-case alpha  characters  in
their  Katakana/Kanji  Ebcdic  tables.   However the asynchronous
terminals may and usually do support lower-case.  Thus CMTI needs
to  shift-up the lower-case alpha characters when transmitting to
the host, except in the  non-Japanese  circuit.   Since  this  is
determined  by  the logon selection (DEFELE macro in the Tymfile)
we do not need to set this as a mode by slot.  Thus a single slot
that  has  a  mixture of English and non-English terminals may be
used.

Since the default in the DEFELE macro is for English, the default
for  the  lower-case  alpha characters will be to process as CMTI
now does - no shifting up.  If the circuit is a non-English  one,
then  all  lower-case  alpha characters from the terminal will be
shifted up to upper case.

This will occur in the transmit-to-host  routine  of  CMTI.   The
lower  case  characters will be stored in the CMTI screen buffer.



Page 99                   CMTI.ERS







KATAKANA AND KANJI 3270 EMULATION          February 27, 1990



Thus any echo by the Consat or by CMTI will still  be  in  lower-
case.

6.4  CHARACTER SETS AND SHIFT CODE DESCRIPTIONS

The Katakana and English alphabets are similar in their  function
-  the  letters  do  not  have  meaning  in  themselves, but only
represent sounds.   This  is  in  contrast  to  Kanji  where  the
characters  each  have specific meaning.  The Katakana characters
are therefore similar to English  characters  for  considerations
such as buffer storage and echo.

6.5  KATAKANA CHARACTER SET

The Katakana alphabet has 46 phonetic characters.   In  addition,
there are 2 "auxiliary" Katakana characters that are written with
other Katakana characters as a pair.  These are the quote (") and
the circle (o). Both are written at the upper right corner of the
associated character and change the  sound  and  meaning  of  the
word.   Correct  use  of the  " and o will be operator dependent.
CMTI therefore will not be checking  the  correct  use  of  these
character  combinations  in functions such as Insert mode, Delete
mode, Erase-EOF, fields wrapping the line or screen, etc.

Thus the screen buffer for the IBM Katakana service is  the  same
as  for  the  present  Alphanumeric  service, and so the internal
processes of CMTI (like the optimizer) remain unchanged.

6.6  TERMINAL CHARACTER SETS

The terminal character sets are mapped to an 8-bit table  of  hex
values.   This   table  has  two halves each, in turn, having two
subdivisions.  The left half, which has the high-bit off, has one
division  called  C0  for the control codes (hex '00' through hex
'20'), and a second division called  GL  (hex  '21'  through  hex
'7f').   The  right half of the table, which has the high-bit on,
has two divisions called C1 and GR.  The terminal  will  normally
use GL for alpha-numeric and special characters - the usual Ascii
character set.  GR will be used for  either  Katakana  or  Kanji,
depending on the receipt of a specific hex value called the SHIFT
CODE.

6.7  JIS-8 CHARACTER SET

All terminals implemented should be able  to  support  the  JIS-8
character  set  which  is  an 8-bit character set.  JIS-8 has 256
values: hex '00' through hex 'FF'.   The  low  order  128  values
represent  the  7-bit  Ascii  table that CMTI currently supports.
The hi-order 128 values are used for  Kanji  codes  and  Katakana
codes. Pictorially the Jis-8 character set is as follows:




Page 100                  CMTI.ERS







KATAKANA AND KANJI 3270 EMULATION          February 27, 1990




                0 1 2 3 4 5 6 7 8 9 A B C D E F
               _________________________________
             0 |   |           |   |           |
             1 |   |           |   |           |
             2 |   |           |   |           |
             3 | C |  SAME     | C | KATAKANA  |
             4 | O |           | O |           |
             5 | N |    AS     | N |    OR     |
             6 | T |           | T |           |
             7 | R |     ASCII | R |   Kanji   |
             8 | O |           | O |           |
             9 | L |           | L |           |
             A |   |           |   |           |
             B |   |           |   |           |
             C |   |           |   |           |
             E |   |           |   |           |
             F |C0 |    GL     |C1 |    GR     |
               |___|___________|___|___________|


The DEC compatible terminals to be  defined  for  use  with  CMTI
display  lower-case  Latin  characters  and  use  them for Escape
sequences.  However, some terminals do not display lower-case and
do  not use lower-case characters in their Escape sequences.  The
terminals to be  defined  have  the  ability  to  load  different
character sets into GL and GR.  The CMTI configuration will be GL
= Alpha-numeric and GR = Katakana. The code set structure for the
ANRITSU DDY-880A is as follows:

























Page 101                  CMTI.ERS







KATAKANA AND KANJI 3270 EMULATION          February 27, 1990



        ______  __________  ______  __________
        |    |  |        |  |    |  |        |
        |    |  |        |  |    |  |        |
        | C0 |  |   GL   |  | C1 |  |   GR   |
        |    |  |        |  |    |  |        |
        |    |  |        |  |    |  |        |
        |____|  |________|  |____|  |________|
                ^  ^ ^^        ^      ^    ^
               /   | \\       /      /      \
	      /    |  \\    ESC ~   /        \
(7-BIT)    S-I    S-O  \\   /     ESC }      ESC |    (8-BIT)
            /      |    \\ /       |           |
           /       |     -----------------     |
          /        |     /    |    |     |     |
         /         |    /   ESC n  |    ESC o  |
        /          |   /      |    |     |     |
    __________  __________  __________  __________
    |        |  |        |  |        |  |        |
    |        |  |        |  |        |  |        |
    |   G0   |  |   G1   |  |   G2   |  |   G3   |
    |        |  |        |  |        |  |        |
    |ALPH-NUM|  |KATAKANA|  |KATAKANA|  | KANJI  |
    |________|  |________|  |________|  |________|
        ^        ^               ^       ^
        |        |              /       /
        |        |             /       /
    ESC (J ESC ) I   ESC * I   ESC + " o
        |        |           /       /
        |        |          /       /
        |        |         /       /
        |        |    ----------
        |        |    |        |
        |        |  ---------- |
        |        \ |         | |
        |         ---------- | |
        |         |        | | |
        |       ---------- | |--
        |       |        | | |
        --------|GRAPHIC | |--
                |CHAR    | |
                |CODE SET|--
                |        |
                ----------


CMTI must ensure in the terminal initialization that G0  maps  to
GL and that G2 maps to GR.







Page 102                  CMTI.ERS







KATAKANA AND KANJI 3270 EMULATION          February 27, 1990



6.8  CHARACTER SET DIFFERENCES

There  are  several  differences  between  the  IBM  and  HITACHI
character  sets.   HITACHI  does  not  use  the Katakana bar so a
hyphen will  be  substituted  instead,  for  the  terminal-->host
direction.   There will be no katakana bar from the HITACHI host.
These will be accounted for in the HITACHI mapping tables  HITJIS
and  JISHIT.  The left bracket, right bracket, exclamation point,
and  carat  all  have  different  values  for   HITACHI.    These
differences  will also be accounted for in the mapping tables for
the HITACHI character set to be provided by NSC.

HITACHI host supports lower case alphabets so there  will  be  no
need to shift them to upper case.

The FUJITSU host does not support lower case and is identical  to
the  IBM  host  character set.  However, for flexibility, we will
define different mapping tables for FUJITSU.  They will be called
FUJJIS  and  JISFUJ.  This will facilitate changes in the FUJITSU
mappings, either to account for errors or omissions (e.g.  future
lower  case  support  for  FUJITSU) or for custom applications (a
customer can change any of the character mappings in CMTI to suit
their needs, such as for file transfer protocols).

6.9  SHIFT CODES

Each terminal and host has a special  hex  control  sequence  for
entering Katakana and Kanji modes.  A hex character over 80 could
represent either Katakana or  Kanji.   To  differentiate  between
them,  the terminal and host in switching from Katakana to Kanji,
and vice versa, will send a shift code to signal the change. Then
a  single  character  or blocks of characters from that character
set may be transmitted.  KSI will be used in the  following  text
to represent the Kanji shift in code and KSO will be used for the
Kanji shift out code (i.e. begin Katakana) in this document.

The Kanji shift codes for HITACHI are as follows:  shift-in is 0A
42  and  shift-  out  is  0A  41.  The FUJITSU shift codes are as
follows: shift-in is 28 and shift-out is 29.

The Kanji sequence from the HITACHI host is either 0A41 or  0A42.
After receipt of the 0A, if the following byte is neither a 41 or
a 42 then an error message will be formatted on  the  screen  and
the circuit zapped.  The error message will be:

(CMT051) INVALID KANJI SHIFT CODE-CIRCUIT ZAPPED

In addition to the above, there are Katakana shift codes  for  7-
bit  terminals  which are used to shift Katakana or A/N  into the
GL table.




Page 103                  CMTI.ERS







KATAKANA AND KANJI 3270 EMULATION          February 27, 1990



6.10  ECHO

Because of the phonetic nature of the Katakana alphabet, the echo
considerations  are  the same for Katakana as for English.  There
need be no change to the fixup mechanism.

The rejection of Kanji from the terminal will  be  controlled  by
keeping  the  Consat  in  deferred  echo  until  the  a non-Kanji
character comes into CMTI.

6.11  HIGH-BIT HANDLING

The bulk of the considerations  for  the  high-bit  are  internal
considerations.   As  far as the CC and the terminal operator are
concerned, the areas of change are the terminal Set-up procedure,
the  Tymfile  definition  of  the  DEFELE  macros,  and the macro
checks.

As discussed elsewhere, the C1  control  sequences  will  not  be
used,  and  so the operator must set-up the terminal accordingly.
This means the terminal will not emit and will  not  receive  any
control characters with the high-bit on.

The special characters are normally given in hex in the  Tymfile.
For example the colon would be stored in the DEFELE macro as "BA.
CMTI will handle Ascii with the high-bit on or off, so there will
be  no  need  to encode these characters with the high-bit off in
current Tymfiles.  However it would be a good idea to do so; when
the  C1  control  sequences  are  eventually supported, the colon
would have to be stored as a "3A.  The "BA would have some  other
meaning,  as  a  C1  character.  CMTI will not be turning off the
high-bit anymore for stored logons and so Katakana may be in  the
freeform text in the Tymfile.

The macro checks for the high-bit will be removed.  This  affects
the   terminal  definition  macros  and  the  CHRMAP  macro,  for
redefining mapping tables.

6.12  HOW KANJI WILL BE HANDLED

In this Katakana only implementation, CMTI must deal with illegal
Kanji input from the terminal or sent from the host.

6.13  REJECTING KANJI FROM THE TERMINAL

Each terminal has special  control  sequences  defined  as  shift
codes  for  loading  different  character sets into the GR table.
When switching from Katakana mode to Kanji, the  Kanji  character
sequence  will  be prefixed by this Kanji shift control sequence.
However, when switching from A/N to Kanji there will be no  shift
control sequence. CMTI will be able to detect this change in mode



Page 104                  CMTI.ERS







KATAKANA AND KANJI 3270 EMULATION          February 27, 1990



and process it appropriately because it will be mapped to a level
statement in the terminal definition.

CMTI must keep track of what was last sent from the terminal, not
because  GR  may change but because CMTI must know if a character
sent is a valid Katakana character or an invalid Kanji character.
CMTI  will  store  the state of the character sets as part of its
general mechanism for storing the state of the terminal.

CMTI will signal rejection of these illegal Kanji  characters  by
flushing  the  shift sequence and the appropriate number of pairs
of bytes that represent the Kanji  characters  until  a  byte  is
found  that  is  less  than  80  (an  alpha/numeric)  or  is  the
corresponding Katakana shift control sequence.  For each pair  of
bytes  representing a Kanji character, a bell will be sent to the
terminal.

DATA STREAM EXAMPLES:

CMTI  <--(KSO)KATAKANA...A/N...(KSI)KANJI...(KSO)KATAKANA<--  TERMINAL
(SWITCH IN THE CHARACTER SET OF THE GR TABLE: KATAKANA TO KANJI)

CMTI  <--(KSI)KANJI...A/N...KANJI...(KSO)KATAKANA<--  TERMINAL
(NO SWITCH IN THE CHARACTER SET OF THE GR TABLE: KANJI TO KANJI)

6.14  PROCESSING KANJI FROM THE HOST

The IBM host shift codes for Kanji (in hex) are 0E for KSO and 0F
for KSI.  In this IBM Katakana implementation, the Kanji shift in
and out will be stored as  values in the initialization  file  so
that  CMTI will be able to compare them with data coming from the
IBM host. When  the KSO(0E),  signaling  the  start  of  a  Kanji
sequence  is  found, CMTI will flush the shift sequence and treat
the succeeding  pairs  of  bytes  as  Katakana  characters  until
receipt  of  a  KSI (0F) signaling the end of the Kanji sequence.
This will result in Katakana that is meaningless to the  operator
so  it  is  imperative  that  no Kanji be sent from the host in a
Katakana only implementation.  Note that shift  codes  begin  and
end  the Kanji sequences from the host, unlike the terminal logic
where the shift sequences begin Kanji or begin  Katakana  -  they
never are used to "end" Kanji.

6.15  KATAKANA SHIFT CODE REJECTION

The Katakana shift codes are used to switch A/N and  Katakana  in
the  GL  table.   This  would apply to a data stream from a 7-bit
terminal which is not permissible  in  this  implementation.   If
CMTI  finds  a  Katakana shift code in the data from the terminal
circuit, it will send an error message to the  terminal  and  zap
the circuits.




Page 105                  CMTI.ERS







KATAKANA AND KANJI 3270 EMULATION          February 27, 1990



6.16  LOGON AND ENSURING 8-BIT MODE ON THE TERMINAL CIRCUIT

6.16.1  REMOVING 7-BIT SPACE PARITY

There is no single message to remove the 7-bit space parity  that
the  TID  of  'o'  puts  the  Consat into.  However there is a 2-
message sequence that will  force  8-bit  non-transparency  mode.
That  is  to  first send the enter-transparency message, and then
immediately  send  the  leave-transparency   message!    Entering
transparency  forces  an  8-bit  mode,  and  leaving transparency
resolves the GR echo problem but leaves us in 8-bit mode.   While
this  may be considered more of an internal design consideration,
it does affect the individual doing support - because  they  will
see  the  enter and leave transparency messages in the dispatcher
rings.

This 2-message sequence occurs only once, during the logon phase.

6.17  STORED LOGON ERRORS VERSUS USER-FRIENDLINESS

There are more possible stored logon  errors  with  the  Katakana
slots  since the DEFELE macro has 1 more field, the character set
field.  This has to match the address configuration of  the  host
interface,  and  has  to  match  the  terminal  type the operator
selects.

In the case of Menu Bypass there may  be  problems  the  operator
could  not  surmount.   For  example  if  the operator has only 1
terminal  type  defined  for  his  username,  then  the  terminal
selection  screen  is  bypassed.   If this terminal were, say, an
English terminal and the host selections were all  Katakana  then
the operator could not logon.  Similarly, if there is only 1 host
defined then the  host  screen  is  bypassed;  there  may  be  no
terminal the operator could select that would allow logon.

Conversely, when it is known what terminal type the operator will
always  use, and what host (and IBM-type) the operator will want,
then both the terminal and host  menus  may  be  bypassed.   This
makes  it  very easy on the operator; since the PVC option of the
Consat is generating the TID automatically, and can be set up for
an  automatic  logon  to a network host, all the operator does is
turn on the terminal and the host banner will appear!  CMTI  will
be transparent to the operator.  This is user-friendly.

6.18  MESSAGE HANDLING - CMTI AND OTHER SOURCES









Page 106                  CMTI.ERS







KATAKANA AND KANJI 3270 EMULATION          February 27, 1990



6.18.1  THE M FILE

The solution to the messages problem will be to  provide  a  file
containing  all  of  the  messages deemed redefinable.  This file
will be called the M file, M standing for messages.  It  will  be
assembled  as  an option, and will precede the TYM file.  It will
not generate any storage, but will instead create a large set  of
macros  for  creating message storage, 1 macro for each different
message (both error messages and text messages).  Then  the  main
code  will  expand  the  macros, whether they were defined in the
Init file or the new M file.  The  main  effort  for  development
will be in assigning all of the new macro names.

Since each message is represented by a macro,  and  these  macros
are  created  before the Tymfile is assembled, any given customer
may redefine specific messages in their slot in their Tymfile  by
redefing  the  appropriate  macro.  Thus the M file redefinitions
will be on a language level and the Tymfile redefinitions will be
on a customer level.

An M  file  will  be  provided  with  each  version  of  code  to
facilitate configuration.

To have both English and Katakana messages will  require  2  CMTI
slots,  which is what will be done for the case of an operator in
the USA accessing a Japanese host computer.

All CMTI error messages will contain an error code.  It will  not
be  redefinable in the Tymfile or the M file.  Only the text part
of the message may be redefined.

Certain text does not reside in  the  messages  file  now.   This
includes  the  headers for the terminal selection screen, certain
error messages, and the COM text.  Most  of  This  text  will  be
moved  to  the  messages file (no code development required). The
terminal selection header will be defined as a macro and expanded
in  the  TPF  module, not in the messages module; but where it is
expanded is irrelevant to the person doing the redefinition.

The Status line mnemonics are redefinable  now  in  the  Tymfile.
There  are macros provided for this purpose, and these macros are
defined in the Init file.  The macros have default  names,  which
are  usually what is used.  The redefinition file will Kill these
macros, and recreate them,  in  order  to  redefine  the  default
Status  line mnemonics in a Katakana format.  Thus there will not
need to be a multitude of Tymfiles  with  the  Status  line  text
redefined  in  each  one.   This will aid both implementation and
maintenance.

The file for these messages could be of  the  format  CMTI##.M##,
for  example  CMTI04.M00, for version 4.00.  The M designator can



Page 107                  CMTI.ERS







KATAKANA AND KANJI 3270 EMULATION          February 27, 1990



be used since there are currently no M files in the  file  naming
scheme.   By  having the version number as part of the file name,
the  M  file  could  be  associated  with  the  appropriate  CMTI
versions,  which  would  be required since messages may be added,
changed, or deleted with each version.

The M file will be  preferable  to  Tymfile  redefinition  macros
because  it  aids  both implementation and maintenance.  When new
messages are added, or old messages are deleted or revised, there
will  be  1  central  place  for  message  storage  instead  of a
multitude of Tymfiles to maintain.

6.18.2  NON-REDEFINABLE TEXT

The COM text will not be moved as there is a  general  need,  for
support  considerations,  to  have  the  Operations  Monitors  in
English.   Thus,  the  COM  text   will   not   be   redefinable.
Consideration  should  be  given  to  a  general  policy  for all
products on whether  Operations  Monitors  should  always  be  in
English.

The assembly error  messages  and  Remark  messages  are  all  in
English  and  will,  again  for support considerations, remain in
English.  These can occur in general  anywhere  in  an  assembly,
although  for  CMTI  they  occur  primarily  when  assembling the
Tymfile.  Thus, the assembly errors will not be redefinable.

6.18.3  REDEFINING TERMINAL NAMES

The M file scheme is  sufficient  for  all  messages  except  the
terminal  type names.  The terminal type names stored in English,
for example VT100 for the DEC VT 100  terminal  family  (includes
the VT 101, VT 102, VT 131, etc).  It would be more user-friendly
to show a VT100 in Katakana.

Another advantage to Tymfile terminal name redefinition  is  that
with  the  extensive  use  of terminal emulators on PC's, a given
customer may want to show the emulation packages's  name  on  the
terminal  selection  screen  instead  of  the terminal type.  For
example if a customer was using Crosstalk and a  VT100  emulator,
"Crosstalk"  may  be  a  preferable  name  to  "VT100".   This is
applicable to Tymnets other  markets  as  well  as  the  Japanese
market.

The DEFTRM macro will allow for this by adding an operand to  the
terminal  macros.  This operand will be the new name.  If missing
the default name will be the stored English  name.   If  the  new
name  is  present, the operand will be a pair of entries with the
first being the keyword 'RENAME'.   For  example,  the  following
will   cause   a   terminal  selection  screen  with  2  entries,
"Crosstalk" and "Anritsu".



Page 108                  CMTI.ERS







KATAKANA AND KANJI 3270 EMULATION          February 27, 1990



DEFTRM  MACRO [
        VT100(RENAME,Crosstalk)
        ANRITSU
]

6.19  IBM ORDERS AND READ BUFFER PROCESSING

Attribute related orders from IBM may be Start Field (SF  Order),
Start  Field  Extended  (SFE  Order),  Set  Attribute (SA Order),
Modify Field (MF Order) or Set Buffer Address (SBA Order).   CMTI
does  not  currently  support  the  SA order, MF Order or the SFE
Order, but will be receiving them  from  some  applications.   Of
these  three,  only  the  MF   and SFE Orders, in addition to the
existing SF order, will be supported. It is therefore   necessary
that  CMTI  at least recognize the SFE and MF orders, so that the
field attributes  can be modified in the  screen buffer.

6.19.1  ATTRIBUTE TYPES

The attribute types that follow are those used in the start field
extended and modify field orders.

FIELD ATTRIBUTE: protection status,A/N,display status
FIELD VALIDATION: validation properties
FIELD OUTLINING: framing the field with lines
EXTENDED HIGHLIGHTING: highlighting properties
COLOR: color properties
CHARACTER SET: identifies character set to be used:
               A/N-KATAKANA-KANJI-APL

6.19.2  START FIELD EXTENDED

The start field extended attribute order is used to indicate  the
start  of  a  field  and  contains  information  on  the  field's
properties.  These are described in the extended field  attribute
and  will  be  partially  processed but not stored.  Of the Start
Field  Extended  attribute  types,  only  field   attributes(C0),
character  sets(43),  and  A/N-Katakana-Kanji(FE) attribute types
will be supported.  The C1, C2, 41, and 42 types will  simply  be
ignored.    This  means  that  field  validation  and  outlining,
extended highlighting and color will not be supported.

If a Kanji only (43F8) attribute type is detected, the field will
be set to display and protected and if a A/N-Katakana-Kanji(FE01)
type is detected the field will be  set  to  normal  unprotected,
unless  the  field  was  previously  specified as Kanji only.   A
nondisplay field specification will override any  other  extended
field  attributes  that  are  related  to  display  features,  so
nondisplay fields may not be specified as color  or  Kanji  only,
for example.  Any unspecified types will remain as previously set
and character sets other than A/N, Katakana  and  Kanji  will  be



Page 109                  CMTI.ERS







KATAKANA AND KANJI 3270 EMULATION          February 27, 1990



ignored.

An SFE order can have multiple attribute assignments, and in  the
case  of duplicates the last occurrence of a given type will take
effect.

6.19.3  MODIFY FIELD

The Modify  Field  Order  allows  the  redefining  of  field  and
extended  field  attributes  at  the  current buffer address.  By
using  this  order,  a  field's   attributes   may   be   changed
selectively,  instead  of  needing to redefine all attributes for
the given field as the SFE order  requires.   If  the  number  of
value  type  pairs  is  0 and a field attribute is at the current
address then the values will remain unchanged.  If  there  is  no
field  attribute at that position,  an error message will be sent
and the circuit will be zapped.

All descriptions regarding the attribute types and  values  given
for the SFE order also applies to the MF order.

6.19.4  SET ATTRIBUTE

The Set Attribute Order allows the specification of  the  graphic
rendition on a byte-by-byte basis. The Set Attribute Order is not
required and so will not be supported.  If received from a  host,
it will be ignored.

6.19.5  READ BUFFER

The Read buffer command will cause all  the  screen  buffer  data
(including  the  attributes),  from the current cursor address to
the last buffer location, to be transmitted to the  host.   Since
CMTI will not be supporting blink, color, extended highlighting ,
outlining, etc., neither the extended field  nor character  modes
will be supported.

Thus if a host creates a screen using extended  field  attributes
CMTI  will  answer  a  read  buffer  command  using  normal field
attributes.

6.20  FUJITSU SUPPORT

6.20.1  TYMFILE CHANGES

FUJITSU uses the same graphic characters  for  addressing  lines,
control  units,  and  devices  on control units as IBM. Therefore
there will be no Tymfile changes for  accessing  a  FUJITSU  host
other than the DEFELE host type indication.





Page 110                  CMTI.ERS







KATAKANA AND KANJI 3270 EMULATION          February 27, 1990



6.20.2  AID'S

FUJITSU AID'S have the same hex values as IBM and will be handled
in  the  same  manner  as  it  is  currently.  They have the same
functions keys and so forth that IBM has.

6.20.3  FUJITSU COMMANDS

FUJITSU  commands  are  essentially  like  those  of  IBM.    CMT
currently  supports  the erase/write, erase all unprotected, read
buffer, read modified, write and copy commands and  will  support
them  for  FUJITSU  in  the  same  way.  Read  modified  all  and
erase/write alternate are be processed by a FUJITSU host as  read
modified  and  erase/write.   There  are  also  distinctions  for
whether certain commands are used in BSC or FNA,  but  CMTI  will
not check for this; we either receive the command or not.

FUJITSU has no WSF command form.

6.20.4  FUJITSU ORDERS

FUJITSU orders are essentially the same as IBM orders.  CMT  will
support  the  set  buffer  address,  start  field, insert cursor,
program tab, repeat to address, erase unprotected to address, and
start  field  extended  orders  that  it  currently supports now.
However, the set attribute and modify field orders are  not  used
by the FUJITSU host.

6.20.4.1  EXTENDED ATTRIBUTES

Extended attributes from the FUJITSU host differ in  format  from
that of IBM in that they contain two attribute bytes.  The second
attribute in  each  FUJITSU  extended  attribute  order  will  be
ignored.  The host will  send screens either composed entirely of
extended attributes or normal attributes.  They cannot  be  mixed
as  in  an  IBM  datastream.   The  extended  attributes  will be
processed as as they are in an IBM  datastream  currently.   They
will  be decoded for field attribute components and the rest will
be ignored.

If a screen composed of extended  attributes  is  sent  from  the
host,  CMT  will set a flag to indicate this and if a read buffer
is requested  by  the  host,  CMT  will  send  all  the  extended
attributes  with  a  second  dummy attribute, "40", which selects
a/n, unprotected and display, appended.









Page 111                  CMTI.ERS







KATAKANA AND KANJI 3270 EMULATION          February 27, 1990



6.21  HITACHI SUPPORT

6.21.1  TYMFILE CHANGES

The main changes or the Tymfile are the  new  DEFELE  operand  to
select  the  host  type  (IBM, FUJITSU, and HITACHI) - see DEFELE
section - and for HITACHI device addressing.

6.21.2  DEVICE ADDRESSING

HITACHI uses a different method of addressing devices  than  does
IBM  or  FUJITSU.   These  other  2  vendors use the same control
characters for line, control unit, and device  addressing.   They
are  all  graphic characters.  HITACHI on the other hand uses the
same graphics as IBM for the line number, but turns the  high-bit
on  for  the  control  unit  address.  Finally, HITACHI subtracts
x'20' from the control unit  representation  to  get  the  device
address  format.   E.G.  the 1st line number is X'40' for IBM and
X'40' for HITACHI.  The 1st control unit  s  X'40'  for  IBM  and
X'C0' for HITACHI.  And the 1st device on a control unit is X'40'
for IBM and a X'A0' for HITACHI.

CMTI will use all addressing in both the  stored  logon  and  the
Manual  Logon  in  the  IBM  format  - that is, using IBM graphic
characters.  Then the Logon routine will translate the  addresses
as  required  for  the  HITACHI  host  after  the  host  type  is
determined.  Thus both the DCB storage and  the  Call  User  data
will be in the correct HITACHI formats.

6.21.3  AID'S, INCLUDING THE BREAK KEY

HITACHI AID'S differ from IBM in the following ways.  The "no aid
generated" for printer is not supported, PF 12-24 and operator ID
card reader have different hex  values  but  will  be  supported,
magnetic  slot  reader  will  not  be  supported  and there is an
additional break key which functions as an attention or interrupt
key,  generating  a  short read.  This function will be supported
for HITACHI only.  All other  AID'S  will  function  as  they  do
currently.

The Break key is implemented for a specific terminal type  by  an
entry  in  its  level statements in the terminal definition.  The
HITACHI Break key ca be  any  control  sequence,  and  this  will
include  the Break key on the terminal.  Depressing the Break key
on the terminal keyboard causes the Consat to to send  the  Break
Message  to  CMTI  (X'AE').  CMTI does not currently support this
control message, so changes will have to be made for it.

If it is desired to have the  Break  key  on  English  terminals,
specific  entries  must  be  made  in their terminal definitions.
This does not require any other code development, once the  basic



Page 112                  CMTI.ERS







KATAKANA AND KANJI 3270 EMULATION          February 27, 1990



support for the Break key is implemented.  However NSC has stated
that they only need the Break key for the Anritsu terminal and so
it will not be implemented for the English terminals.

6.21.4  HITACHI COMMANDS

HITACHI hosts do not  support  the  erase/write  alternate,  read
modified  all,  and  write  structured field commands.  The copy,
erase/write, write, and erase unprotected all  commands  are  all
formatted  differently from IBM in that a CB0 byte is substituted
for  the  WCC  byte  in  write  commands,  two  CB2   bytes   are
substituted  for  the  WCC byte in erase/write commands and a CB1
byte is substituted for the CCC byte in the copy command.  For  a
detailed   description   of  the  CB0,  CB1  and  CB2  bytes  see
(DNDSPEC)FUJHIT.REF.

HITACHI has no WSF command form.

6.21.4.1  WRITE, ERASE-WRITE, COPY COMMANDS

6.21.4.2  WRITE CB0 CONTROL BYTE

The CB0 control byte bits used in the write command  are  similar
in   function   to   IBM's  corresponding  WCC  bits.   The  only
significant difference is in bit 3 of the control byte, for print
control,  which  will  be  mapped  to  the  IBM equivalent of 132
characters.

6.21.4.3  ERASE/WRITE CB2 CONTROL BYTES

In erase/write commands, HITACHI has the option of using two  CB2
control  bytes to IBM's one WCC byte. The first control byte bits
correspond to the WCC bits except bit 3 for print  control  which
as  in the above write command, will be mapped to 132 characters,
and bit 1, which if not set, indicates that a second control byte
follows.  All bits of the second control byte, with the exception
of bits 3 and 4 for screen size, will be ignored.

If bits 3 and 4 indicate anything other than a 1920 screen  size,
an  error  message, "(CMT050) ALTERNATE SCREEN SIZE ERROR-CIRCUIT
ZAPPED" will be sent to the user and the circuit will be  zapped.
This  message  may  be  revised in the M file or Tym file, in the
usual way.

The "modulus" option for a checksum comparison of the  datastream
will not be supported.








Page 113                  CMTI.ERS







KATAKANA AND KANJI 3270 EMULATION          February 27, 1990



6.21.4.4  COPY CB1 CONTROL BYTE

The copy command uses a control byte, CB1, whose bits essentially
correspond to those of IBM'S CCC with the exception of bits 2 and
3.  Bit 2 of the CB1 is to be  ignored  and  bit  3  for  printer
control  character use will be translated to correspond to bits 2
and 3 of the CCC for print  format  as  using  either  the  print
control  characters to determine line length or in their absence,
using a default of 132 characters.  Conversely, all print  format
options  in  the  CCC  will  be translated to use printer control
character in the CB1 byte.  A space will be substituted for  each
print control character in the the data stream, if that option is
selected.

In addition to the  existing  NL,  EM,  FF,  and  CR  characters,
HITACHI  uses  the following printer control characters: SO, CAN,
VT, and BEL.  SO is the double-width command sequence.   See  the
PPF  (Printer  Profile)  section regarding support of these other
control characters.

6.21.5  HITACHI ORDERS

HITACHI orders are  set  buffer  address,  insert  cursor,  field
heading (equivalent to start field), online repeat (equivalent to
repeat to address), online tab (equivalent to program tab), erase
unprotected,  and start field extended.  Set attribute and modify
field are not supported.  The SF and SFE orders use DFC bytes  in
place of attributes, SF using 2 bytes and SFE using 3 bytes.

A number of  differences  exist  between  HITACHI  and  currently
supported IBM orders.  HITACHI's SBA, OR, and EU orders all use a
different 11 bit buffer addressing scheme as compared to  the  12
bit  buffer addressing currently used in CMT.  IBM uses either 12
or 14-bit addressing depending on the screen sizes involved.  The
important  point  is that the HITACHI format is a calculable form
and so it will be straightforward to do the conversion.

If a screen composed of extended  attributes  is  sent  from  the
host,  CMT  will set a flag to indicate this and if a read buffer
is requested  by  the  host,  CMT  will  send  all  the  extended
attributes with a second dummy attribute.

6.21.5.1  SF AND SFE DFC BYTES

The start field or field header order includes 2 DFC  bytes,  the
first  of  which specifies display intensity and color.  CMT does
not support color but if the HITACHI host sends the bit for color
set,  and  bits 0 and 1 are 1's then the attribute will be set as
being intensified, selector pen detectable display.  If the color
bit  is  not  set and bits 0 and 1 are set, the attribute will be
set as nondisplay and non-selector pen detectable.



Page 114                  CMTI.ERS







KATAKANA AND KANJI 3270 EMULATION          February 27, 1990



CMTI will not  support  the  following  attribute  options:  line
drawing  (underline,  overline,  vertical  line),  reverse video,
blink, right-justify, or katakana-shift.

The second DFC byte specifies A/N or U/P and MDT status.  If  the
A/N  bits  are 0 and 0 or 0 and 1, unprotected alpha will be set,
if 1 and 0 then protected numeric will be set and  if  1  and  1,
then   unprotected numeric will be set. The print bit will not be
supported.

The start field extended order uses 3 DFC bytes.  The  first  two
bytes  follow  the  same  scheme  as described in the start field
order above, but bit 5 in the second byte will be checked to  see
if a  third DFC byte which indicates the extended form follows.

Bits 0 and 1 set to 0 indicate an autoskip.  Anything  else  will
be  ignored.   If there is no third DFC byte, the default will be
to autoskip.  The problem here is that the  HITACHI  host  cannot
specify  a  protected  alphanumeric  field.  But this is what IBM
calls non-autoskip.

Therefore, if CMTI receives  from  a  HITACHI  host  a  protected
numeric  non-autoskip  attribute,  we  will  format  a  protected
alphanumeric attribute in the screen buffer.  In the event  of  a
Read  Buffer  command,  we  will  translate it back to its proper
form.

6.21.5.2  STATUS/SENSE MESSAGES

HITACHI has a more elaborate Status/sense protocol than IBM does.
For example there are various Status/sense codes for the handling
of 3270 protocol errors.  This will  not  be  implemented.   CMTI
will continue its present method of operations, namely to zap the
circuit for protocol violations, and send an error message to the
operators screen.

The one exception is the Status/sense message for when a  printer
comes  online  and  the  circuit  enable acknowledgement has been
received by CMTI.  This Status/sense message is forwarded to  the
host.  The IBM definition is C240.  HITACHI's definition is C4C0.

6.21.6  PRINTER CONSIDERATIONS

CMTI currently supports the NL, EM, FF, and CR control characters
for a printer datastream.  These are transferred from the host to
the printer.  HITACHI also has double-width, bell, tab, and can.








Page 115                  CMTI.ERS







KATAKANA AND KANJI 3270 EMULATION          February 27, 1990



6.21.6.1  PRINTERS TO IMPLEMENT

The printers that NSC has found to have the double-width function
are the following:

o  Anritsu DPR807A:     (8 bit)  SO = hex 0E - enter double-width
                                 SI = hex 0F - leave double-width

                        (7 bit) DC2 = hex 12 - enter double-width
                                DC4 = hex 14 - leave double-width

        CMTI will use the 8-bit definition

o  DEC LA84:            ESC [ n w  where
                        n=0 w=10  -  10 chars/inch = single width
                        n=1 w=10  -  10 chars/inch =    "     "
                        n=2 w=12  -  12 chars/inch =    "     "

                        n=5 w=5   -   5 chars/inch = double width
                        n=6 w=6   -   6 chars/inch =    "     "

                        CMTI will use ESC [ 5 5 (if 6/6 wanted,
                        NSC must specify and we will set up 2
                        PPF definitions for the DEC LA84)

o  NEC PC Printer PR201H:   ESC e n1 n2  where
                        n1 = horizontal pitch - values 1 or 2
                        n2 = vertical   pitch -   "    "  " "

        so ESC e 1 2 means double width.

Since NSC found no bell functions on any printer, it will not  be
supported.   Thus  of the 4 special functions on the HITACHI host
(BEL, Double-width, CAN, and VT), only the Double-width  will  be
supported.

6.21.6.2  PRINTER LINE LENGTH

The limit to the print line length  with  CMTI  is  132  columns.
While  the  host  may  attempt to format line lengths longer than
this, by ending each line with control  characters,  CMTI  has  a
specific limit.  NSC has stated that this is acceptable.

6.22  TEXT BLOCKING

HITACHI hosts send data streams down in text blocks  but  do  not
split  the  orders  in  the  data stream.  CMT does not presently
support text blocking but will be modified to accept text  blocks
that do not split orders.  For example,

esc--cmd--wcc--order1--text--etb--order2--text--etx



Page 116                  CMTI.ERS







KATAKANA AND KANJI 3270 EMULATION          February 27, 1990



(the etb separates the datastream into blocks)

CMT currently treats the etb as an etx.  This will change  for  a
HITACHI host and will remain for IBM or FUJITSU hosts.  A suspend
mechanism must  be  built  into  the  code  to  accommodate  text
blocking.   This  will  be  in the Decoder section of CMTI.  CMTI
already  blocks  text  into  256-byte  blocks  for  the   Inbound
datastream, which is correct for all 3 vendors.

6.22.1  FORWARD ABORT

Forward abort is handled in the same way for all 3 vendors.   The
etx is replaced by an enq by the host.  CMTI zaps the circuit.

6.22.2  PRINTER LOGIC

The CMTI printer logic will work for Katakana just as it does for
Alpha-numeric.   The  IBM  Japanese  host computers send the same
kind of datastreams as CMTI now processes.

The logon is independent of the CRT logon.  It  may  be  for  the
same  host  or  a different host.  Whether it is the same host or
not, it may be for a Japanese IBM circuit or a  non-Japanese  IBM
circuit,  independent  of  the CRT.  This is due to the fact that
the circuit type is indicated in the DEFELE macro, which  defines
each  circuit,  and  stored  in the DCB, which is unique for each
circuit.

There is a set-up requirement that the printer  be  in  an  8-bit
mode.   Otherwise the terminal and printer would be incompatible.
There is no way for CMTI to check whether the printer  is  set-up
correctly.

CMTI must recognize the Kanji  shift  codes  from  the  host  and
ignore  them  on  printer  circuits just like it does for the CRT
circuits.  Thus if Kanji is erroneously sent on a printer circuit
the operator will see nonsensical Katakana characters in pairs on
his printout.
















Page 117                  CMTI.ERS







CMT HALF-DUPLEX MODE FOR T78 PC SOFTWARE   February 27, 1990



      7.  CMT HALF-DUPLEX MODE FOR T78 PC SOFTWARE

7.1  INTRODUCTION

Half-Duplex mode  gives a response   time  advantage   since  the
local   echo   means  that  local  editing  functions  like  tab,
insert character, delete character,  etc all  occur  immediately.
The  operator  does not  have to wait  for a network  response to
an  escape  sequence.   This  is  of   particular  use  when  the
terminal is located far  away from the echoing interface, such as
between Europe and the USA,  or through multiple networks.

TYMNET78 is one emulation  of the Softerm emulation  package  and
is run in half-duplex mode on the PC.  TYMNET78 is developped for
the extension of ADDS 60 half-duplex.  This  emulation  has  more
features  than  ADDS  60  half-duplex  including 25th status line
usage, color monitor support and buffered screen mode operation.

7.2  TYMFILE FOR THE HALF-DUPLEX-MODE TYMNET78

The only requirement of TYMNET78 tymfile is to define macro DEFTRM.

For example :

DEFTRM macro [
        .
        .
        VT100M        :VT100 terminal with Full-Duplex mode
        ADD69M        :ADDS 60 or ADDS 90 with Full-Duplex mode
        ADDHDX        :ADDS 60 with Half-Duplex mode
                      :**NOTE** ADDS 60 must be a version 2.5 type
                      :terminal. ADDS 60 local status line tells
                      :you what version of microchip it uses.
        ADMHDX        :ADM 12 PLUS with Half-Duplex mode
        T78HDX        :TYMNET78 PC software with Half-Duplex mode.
        .
]

7.3  LOGON TO CMT

In order  to  preserve  Tymnets  login  security  of  non-display
passwords,  the  terminal configuration for TYMNET78 should start
off in full-duplex mode. After users log into CMT  as  usual  and
the TYMNET78 terminal type has been selected, CMT then down loads
ESC sequences to turn the terminal into half-duplex mode.

Please refer to section 1.9 for the configuration set-up  of  the
TYMNET78 PC software on the PC.






Page 118                  CMTI.ERS







CMT HALF-DUPLEX MODE FOR T78 PC SOFTWARE   February 27, 1990



7.4  FUNCTIONS IN THE TYMNET78 HALF-DUPLEX OPERATION

Most of the 3270 functions are supported by  CMT.   This  section
will list the 3270 funcitons that the CMT support in the TYMNET78
half- duplex operation.

7.4.1  CLEAR SCREEN

The screen is cleared locally and the  cursor  is  moved  to  the
first  position  on  the  screen by the terminal, and the host is
notified.

The CMT clears its internal screen buffer and updates the  cursor
position accordingly.

7.4.2  ZAP CIRCUIT

CMT will zap  the  circuit  and  the  operator  is  returned   to
'please log in :' and to full-duplex mode operation.

This function is invoked  by entering a  control  sequence   from
the keyboard.

7.4.3  ENTER

The application  program is  notified that   an  ENTER   function
has  been  requested.   Areas  of   the  screen   that have  been
modified  by the operator are reported back to  the  application,
as is the current cursor position.

7.4.4  DELETE CHARACTER

The character  at the  current cursor position  is removed,   and
all  characters  in the  field to the right  of that position are
shifted left one position.  If the unprotected field is more than
one  row, the other rows are not affected.  Operation of this key
when the cursor is located in an attribute character location  or
is   within  a  protected  data  field  causes  an  input-inhibit
condition.

This function is handled  locally by the terminal  and   the  CMT
updates its internal screen buffer.

7.4.5  RESET

The RESET function in  3270 or CMT  Full-Duplex  mode   operation
can do either one of the followings :

1. Exit out insert mode.

Key INS can be toggled for the entry or exit of insert mode.



Page 119                  CMTI.ERS







CMT HALF-DUPLEX MODE FOR T78 PC SOFTWARE   February 27, 1990



2. Unlock the keyboard.

Normally  the  keyboard  is locked  when  any  transmit   key  is
struck.   A  subsequent  message   from the host will unlock  the
keyboard.  In some cases this may not happen. Then  the  operator
may use  the RESET key to unlock the keyboard.  When the keyboard
is considered  locked by CMT, the only entry  from  the  terminal
operator  that  will  be  accepted is the  RESET  key. All  other
entries  will be   ignored   and   the  cursor  position  remains
unchanged.

In SNA environment, RESET function also turns off -F status item.

This function is handled locally by the terminal and the  control
code will not be transmitted to the CMT.

7.4.6  TAB

The TAB  function moves the  cursor to  the   beginning  of   the
next unprotected field. The cursor wraps to the first position of
the first unprotectd field if TAB is entered when the  cursor  in
the last unprotected field.

This  function  is handled  locally  and the  CMT   updates   its
current cursor position in the internal screen buffer.

7.4.7  BACK TAB

The BACKTAB function moves the cursor backward to  the  beginning
of  an  unprotected  field.  If  the   cursor  is  already at the
beginning  of an unprotected field, or if it  is in  a  protected
field,  the   cursor  moves  to  the  beginning of  the preceding
unprotected field; at  the beginning  of  the  screen,  it  wraps
around to the last unprotected field.   If the cursor is past the
first position within an  unprotected  field,  it  moves  to  the
beginning of the current field.

This function is  handled   locally  by  the  terminal  and   CMT
updates  its  current  cursor  position  in  the  internal screen
buffer.

7.4.8  CURSOR SELECT

This   function    allows     the    selector-light-pen-detection
function to be performed from a keyboard.

This function is invoked  by entering a  control  sequence   from
the keyboard.






Page 120                  CMTI.ERS







CMT HALF-DUPLEX MODE FOR T78 PC SOFTWARE   February 27, 1990



7.4.9  ERASE TO END OF FIELD

This  function  clears the  rest of  the  field,   including  the
current  cursor  position,  if  the  cursor  is in an unprotected
field. The operation can wrap lines or  the  screen.  The  cursor
does  not  move.  The MDT bit is set. If the cursor is located in
an attribute character location or is  within  a  protected  data
field, an input is not accepted.

This function is  handled   locally  by  the  terminal  and   CMT
updates its internal screen buffer.

7.4.10  ERASE ALL INPUT

This  function  clears  all  unprotected  fields  to  nulls,  and
repositions  the  cursor  to  the  first  unprotected.  With only
protected data fields, no character locations are cleared and the
cursor  is  repositioned to character location 0.  If the display
contains no field, the entire buffer is cleared to nulls and  the
cursor is repositioned to location 0.

This funciton is handled locally by  the  terminal  and  the  CMT
updates its internal screen buffer and the cursor position.

7.4.11  NEW LINE

This function  moves  the   cursor  to   the   first  unprotected
position on the  next line.  The cursor  may wrap the screen.  If
there are  no unprotected  fields  on the   screen,   the  cursor
will   move  to  character  position 0; if there are no formatted
fields, the cursor will be positioned at the first  character  on
the next line.

This function is handled locally by  the  terminal  and  the  CMT
updates  its  current  cursor  position  in  the  internal screen
buffer.

7.4.12  REDISPLAY

This function clears the screen and redisplays  its  contents  as
seen  by   CMT.   The  cursor stays at the same position.  If the
screen is unformatted the cursor is moved to the  first  position
on the screen.

This  function is  not  supported locally.  It can   be   invoked
by entering a control sequence from the keyboard.








Page 121                  CMTI.ERS







CMT HALF-DUPLEX MODE FOR T78 PC SOFTWARE   February 27, 1990



7.4.13  HOME CURSOR

The HOME function moves the  cursor  to  the  beginning  of   the
first  unprotected  field   on  the   screen.  If the  cursor  is
already there, nothing happens.

This function is handled  locally by the terminal  and   the  CMT
updates  its  cursor  position accordingly in its internal screen
buffer.

7.4.14  INSERT MODE

This function   causes   CMT   to   enter   insert   mode.   Each
character entered  in  this  mode  is  inserted  at  the  current
cursor position; data from  that position  to  the   end  of  the
field   is shifted right one position, and the cursor moves right
one position. The fields may wrap a line or the screen.

This function is  handled   locally  by  the  terminal  and   CMT
updates the internal screen buffer.

7.4.15  PF KEY DEFINITIONS

The application  program is  notified  that   the  function   has
been  requested.  Areas  of the screen that have been modified by
the operator are reported back to the application.

7.4.16  PA KEY DEFINITIONS

The application  program is  notified  that   the  function   has
been requested. No modifed fields are sent to the host unlike the
PF keys.

7.4.17  CURSOR LEFT OR BACKSPACE

This function moves the cursor left one character  position.   At
the  left  edge of a  line, the cursor wraps around to the  right
edge of the previous line. At the position 0 of the  screen,  the
cursor wraps around to the end of the screen.

This function is  handled   locally  by  the  terminal  and   CMT
updates its cursor position for the internal screen.

7.4.18  CURSOR RIGHT

This   function   moves   the   cursor   right   one    character
position.   At  the right edge of a line, the cursor wraps around
to the left edge at the next line.  At the last position  of  the
screen, the cursor wraps around to the position 0.

This function is  handled   locally  by  the  terminal  and   CMT



Page 122                  CMTI.ERS







CMT HALF-DUPLEX MODE FOR T78 PC SOFTWARE   February 27, 1990



updates its cursor position for the internal screen.

7.4.19  CURSOR UP

This function moves the  cursor vertically up.  At the top of the
screen, the cursor wraps around to the bottom line of the screen.

This function is  handled   locally  by  the  terminal  and   CMT
updates its cursor position of the internal screen.

7.4.20  CURSOR DOWN

This function moves the  cursor vertically down.   At  bottom  of
the screen, the cursor wraps around to the top line.

This function is handled  locally by the  terminal  and  the  CMT
updates its cursor position for the internal screen.

7.4.21  SYSTEM REQUEST KEY

In  the SNA   environment,  this  function   performs   a  switch
procedure  for  SSCP-LU, LU-LU and the unowned session.  This key
will be defined as a control sequence entered by  the  user  from
the keyboard.

This key locks  the keyboard, clears the  screen, and waits   for
a message from the host to unlock the keyboard.

During  the  keyboard  lock,  if  for   any   reason,   the   SNA
host  interface  does  not  respond, the RESET key can not unlock
the keyboard; only the KILL key is allowed to zap the circuit.

In the BSC environment, the SYSREQ key is not allowed.

This function is invoked by entering a control sequence from  the
keyboard.

7.4.22  STATUS LINE

The status line should always  be  set  to  ON  in  the  TYMNET78
tymfile.   TYMNET78  will  use line 25 as the only status display
area.  The users are not allowed to  select  the  status  display
area.

The first 40  columns  will  be  taken  by  CMT  to  display  the
following  first  6  status items and the rest 40 columns will be
left for the Softerm which is a package of  Async  terminal  type
emulations  to  paint its own local terminal status items such as
insert mode, protected field, numeric lock, keyboard lock or  the
current   cursor   position.   The  following  status  items  are
displayed by the CMT status line in full-duplex mode operation.



Page 123                  CMTI.ERS







CMT HALF-DUPLEX MODE FOR T78 PC SOFTWARE   February 27, 1990



 *  1. Host interface type. (BSC/SNA/X.25)
 *  2. Session type. (APPL/SYS/?)
 *  3. CRT luname. (CRT: crt lu string)
 *  4. PRT luname. (PRT: prt lu string)
 *  5. Printer busy. (WAIT)
 *  6. Unavailable function was requested. (-F)
    7. Insert mode. (ISRT)
    8. Protected field. (PROT)
    9. Numeric lock. (NULK)
   10. Keyboard lock. (LOCK)

7.5  FUNCTION KEYS FOR THE TYMNET78 PC SOFTWARE

TYMNET78 supports most of  the  3270  functions  listed  in  last
section.  This section lists a TYMNET78 key board map for the PC.

7.5.1  TYMENT78 LOCAL FUNCTIONS

3270 KEYS       TYMENT78        TYMNET78        ASCII sent
                PC KEYS         PC XT KEYS      to Tymnet
----------      ----------      ----------      ----------
ENTER           ENTER           ENTER           0D

<---            <---            <---            15

--->            --->            --->            06

DOWN ARROW      DOWN ARROW      DOWN ARROW      0A

UP ARROW        UPARROW         UP ARROW        1A

BACK SPACE      BACKSPACE       BACKSPACE       08

HOME            HOME            HOME            01

--->TAB         --->TAB         --->TAB         09

BACK TAB        SHIFT TAB       SHIFT TAB       1B 4F

CLEAR           PGUP            PGUP            03 0D

INSERT          INS             INS             1B 46

NEW LINE        SHIFT ENTER     SHIFT ENTER     04

DELETE          DEL             DEL             1B 45

EEOF            END             END             1B 4B

ERASE INPUT     ALT END         ALT END         1B 47




Page 124                  CMTI.ERS







CMT HALF-DUPLEX MODE FOR T78 PC SOFTWARE   February 27, 1990



RESET           ALT R           ALT R           05 0D

PRINT SCREEN    SHIFT PrtSc     SHIFT PrtSc     not sent

HARD DISCONNECT ALT CTRL D      ALT CTRL D      not sent

KEYBOARD HELP   ALT ?           ALT ?           not sent

7.5.2  TYMNET78 REMOTE FUNCTIONS

3270 KEYS       TYMNET78        TYMNET78        ASCII sent
                PC KEYS         PC XT KEYS      to Tymnet
----------      ----------      ----------      ----------
CURSOR SELECT   ALT C           ALT C           18 0D

SYSTEM REQUEST  ALT H           ALT SYSRQ       19 0D

SOFT DISCONNECT ALT D           ALT D           0B 0D
(ZAP CIRCUIT)

REDISPLAY       ALT CTRL R      ALT CTRL R      16 0D

PF1             F1              F1              02 31 0D

PF2             F2              F2              02 32 0D

PF3             F3              F3              02 33 0D

PF4             F4              F4              02 34 0D

PF5             F5              F5              02 35 0D

PF6             F6              F6              02 36 0D

PF7             F7              F7              02 37 0D

PF8             F8              F8              02 38 0D

PF9             F9              F9              02 39 0D

PF10            F10             F10             02 3A 0D

PF11            SHIFT F1        F11             02 3B 0D

PF12            SHIFT F2        F12             02 3C 0D

PF13            SHIFT F3        SHIFT F1        02 3D 0D

PF14            SHIFT F4        SHIFT F2        02 3E 0D

PF15            SHIFT F5        SHIFT F3        02 3F 0D



Page 125                  CMTI.ERS







CMT HALF-DUPLEX MODE FOR T78 PC SOFTWARE   February 27, 1990



PF16            SHIFT F6        SHIFT F4        02 40 0D

PF17            SHIFT F7        SHIFT F5        02 21 0D

PF18            SHIFT F8        SHIFT F6        02 22 0D

PF19            SHIFT F9        SHIFT F7        02 23 0D

PF20            SHIFT F10       SHIFT F8        02 24 0D

PF21            ALT F1          SHIFT F9        02 25 0D

PF22            ALT F2          SHIFT F10       02 26 0D

PF23            ALT F3          SHIFT F11       02 27 0D

PF24            ALT F4          SHIFT F12       02 28 0D

PA 1            CTRL F1         CTRL F1         02 29 0D

PA 2            CTRL F2         CTRL F2         02 2A 0D

PA 3            CTRL F3         CTRL F3         02 2B 0D


7.6  OTHER FEATURES FOR THE TYMNET78

TYMENT78, an emulation for the extension of half-duplex ADDS  60,
will  be running on the PC so that it can have more features than
the real half-duplex ADDS 60 has.

7.6.1  XON/XOFF

 XON/XOFF should be a default.

7.6.2  COLOR MONITOR

If a color monitor is chosen the following should be the default:
















Page 126                  CMTI.ERS







CMT HALF-DUPLEX MODE FOR T78 PC SOFTWARE   February 27, 1990




      3279 Model 2A color
      -------------------
      a black background for rows 1 to 24 with

      --- unprotected normal characters in green
      --- unprotected highlighted characters in red
      --- protected normal characters in blue
      --- protected highlighted characters in white
      --- the 25th status line in blue background with
          white characters


      3279 Model 2A monochrome
      ------------------------
      a black background for all rows

      --- all data in green character with highlighted characters
          in white

7.6.3  BUFFERED SCREEN MODE

Buffered  screen  mode   operates   by   using   BOP/FOP   (Begin
OPtimizer/End OPtimizer) mechanism. CMT optimizer routine is used
to paint the data on the screen.  At the beginning of  optimizer,
CMT sends the ESC sequence (ESC D) called BOP string to the PC to
turn the screen video off. Upon receiving BOP  string,  PC  holds
the  new  screen  data from the host sent by CMT in the PC screen
buffer until CMT sends the other ESC sequence (ESC d) called  FOP
string.   After  receiving  the  FOP  sent  by  CMT at the end of
optimizer, PC blasts the data in the screen buffer to the display
screen.

7.7  ASCII CODES FOR THE TYMNET78 TERMINAL FUNCTIONS

TERMINAL FUNCTIONS              ASCII sent from CMT
------------------              -------------------
UNLOCK KEYBOARD                         1B 36

LOCK KEYBOARD                           1B 35

CLEAR SCREEN                            0C 01

TRANSPARENT PRINT ON                    1B 33

TRANSPARENT PRINT OFF                   1B 34

CONVERSION MODE                         1B 56

FORM MODE                               1B 52




Page 127                  CMTI.ERS







CMT HALF-DUPLEX MODE FOR T78 PC SOFTWARE   February 27, 1990



PROTECTED HIGH                          1B 30 49

PROTECTED LOW                           1B 30 48

UNPROTECTED HIGH                        1B 30 41

UNPROTECTED LOW                         1B 30 40

UNPROTECTED NON-DISPLAY                 1B 30 44

UNPROTECTED NUMERIC                     1B 30 45

ERASE TO END OF FIELD                   1B 4B

ERASE TO END OF SCREEN                  1B 6B

ERASE ALL UNPROTECTED                   1B 47

MOVE CURSOR                             1B 59 R C
(R C = Row & Column, Refer to "CURSOR ADDRESSING CHART"
 in appendix C of ADDS 60 manual)

ACCESS TO THE 25TH STATUS LINE          1B 59 38 C
(C = columnar location on the status line)

ENABLE 25TH LINE                        1B 62

DISABLE 25TH LINE                       1B 42

BOP (VIDEO OFF)                         1B 44

FOP (VIDEO ON)                          1B 64

FDX (FULL-DUPLEX MODE)                  1B 37

HDX (HALF-DUPLEX MODE)                  1B 38

7.8  CMT OPTIMIZER FOR THE TYMNET78

The CMT optimizer is used to paint the data on the  screen.  Here
is the sequence for the TYMNET78 optimizer.

 1. CMT: sends a BOP string to the PC.
    PC : turns video off and starts collecting the data sent by
         the CMT into its screen buffer.

 2. CMT: sends a lock-keyboard string immediately following the
         BOP string to the PC.
    PC : At this moment, displays the status item for the keyboard
         lock on the last 40 columnar area of the 25th line.




Page 128                  CMTI.ERS







CMT HALF-DUPLEX MODE FOR T78 PC SOFTWARE   February 27, 1990



 3. CMT: sends a form-mode string and the updated screen data.
    PC : displays the "FORM" mode and the updated cursor position
         on the status line.

 4. CMT: sends a access-to-the-25th-line string to start painting
         the CMT status items on the first 40 columnar area of the
         25th line.

 5. CMT: completes the status line painting and then addresses the
         cursor to the designated position by sending a move-cursor
         string.
    PC : updates the cursor position on the 25th status line.

 6. CMT: sends a conversation-mode string and unlocks the keyboard.
    PC : displays the "CONV" mode on the status line.

 7. CMT: sends a FOP string to the PC.
    PC : blasts the buffered data to the screen.

7.9  CONFIGURATION SET-UP OF THE TYMNET78 ON THE PC

The marketing group will provide me the procedure of how  to  set
up the configuration of the TYMNET78 to run it on the PC XT.































Page 129                  CMTI.ERS







LU1 PRINTER SUPPORT CMTI/3270              February 27, 1990



              8.  LU1 PRINTER SUPPORT CMTI/3270

8.1  INTRODUCTION

This document describes the  support  for  SNA  Character  String
(SCS)  controls  by the CMTI/3270 Interface (CMTI).  SCS controls
are EBCDIC control codes that are used to define a  data  stream.
They are used to format the presentation on the printed page.

SCS control codes  are  not  supported  by  ASCII  printers  with
circuits  to  CMTI  via  a TYMSAT.  CMTI, by interpreting the SCS
control codes, allows SCS data streams to be transmitted to these
printers.

The data streams are forwarded to CMTI by the SNA Host  Interface
as  structured fields.  The structured fields are part of a Write
Structured Field (WSF) command.  The WSF commands  consist  of  a
WSF  command  code  followed  by  one  or  more structured fields
terminated with an ETX.

Data streams containing SCS control codes are received by the SNA
Host Interface and forwarded to CMTI via TYMNET using the Display
Systems Protocol (DSP).  CMTI interprets the  SCS  control  codes
and  translates  the  data  stream to ASCII.  The translated data
stream and the interpreted control codes are transmitted  to  the
printer.

The  data  streams  are  transmitted  by  CMTI  to  the   printer
associated  with  a  CRT  as  character  mode  data streams via a
TYMSAT.   The  TYMSAT  transmits  the  ASCII  characters  to  the
printer.    The  character  mode  data  stream  consists  of  the
translated ASCII data and the interpreted SCS control codes.

CMTI only supports serial printers that support form  feed,  line
feed,  carriage return, back space, bell function, and sufficient
columns for the specific application.

8.2  DATA STREAM PROCESSING

The SCS data stream is received from the SNA Host Interface as  a
structured  field  within  a  WSF  command.   Normally,  when WSF
commands are received, CMTI discards the command and  clears  the
circuit  to  the  host  PAD.  When CMTI is configured for LU1 SCS
data stream support, WSF commands containing SCS data streams are
not discarded.  The SCS data structured field(s) are processed by
CMTI and the data is then transmitted to the printer.

There may be more than one structured field associated with  each
WSF  command.  SCS data stream structured fields may not be mixed
with other types of structured fields.  DSP  commands  containing
WSF  commands  with  SCS data stream structured fields mixed with



Page 130                  CMTI.ERS







LU1 PRINTER SUPPORT CMTI/3270              February 27, 1990



other types of structured fields are discarded by  CMTI  and  the
circuit  is cleared.  CMTI keeps a count of the number of times a
circuit is cleared due to the receipt of a  WSF  command  with  a
structured  field  type  other  than  SCS  data.   This  count is
initialized to zero whenever the interface is started.  The count
is  output  by  the  WCNT  command  (for  further information see
Section 4).

8.2.1  DATA STREAM FORMAT - DSP

Data streams containing SCS control codes are received by CMTI as
DSP Commands.  An example follows:

| UCN | HDR | SEQ | ESC | WSF | LEN |  ID |  00 | SCS DATA | ETX |

The fields in the example are interpreted as follows:

UCN     DSP user circuit number (1 byte)
HDR     DSP header flags (1 byte)
SEQ     DSP sequence number (1 byte)
ESC     Escape, 27 (hex), (1 byte)
WSF     3270 WSF command code, F3 (hex), (1 byte)
LEN     Length of structured field (2 bytes)
ID      Structured field ID - SCS data, 41 (hex), (1 byte)
00      Zero (1 byte)
DATA    SCS data (LEN-4 bytes)
ETX     End of Text character

The LEN field may contain a value, which is  the  length  of  the
structured  field, or may be zero.  If the LEN field is zero, the
data field is variable length and is terminated by an ETX.

8.2.2  SCS CONTROL CODE PROCESSING

The following SCS control codes are expected from  the  SNA  Host
Interface  and  as such are interpreted and the interpreted codes
are transmitted to the printer via the Tymsat.

















Page 131                  CMTI.ERS







LU1 PRINTER SUPPORT CMTI/3270              February 27, 1990




                    ASCII
CODE    EBCDIC  INTERPRETATION  NAME
----    ------  --------------  ----
 BS      16     08              Back Space
 BEL     2F     07              Bell Function
 CR      0D     0D              Carriage Return
 ENP     14     Discarded       Enable Presentation
 FF      0C     0C              Forms Feed
 GE      08     Discarded       Graphic Escape
 HT      05     *               Horizontal Tab
 INP     24     Discarded       Inhibit Presentation
 IRS     1E     0D0A            Interchange-Record Separator
 LF      24     0A              Line Feed
 NL      15     0D0A            New Line
 SA      28     Discarded       Set Attribute
 SHF     2BC1   *               Set Horizontal Format
 SLD     2BC6   Discarded       Set Line Density
 SVF     2BC2   *               Set Vertical Format
 TRN     35     *               Transparent
 VCS     04xx   0D0A            Vertical Channel Select
 VT      0B     *               Vertical Tab

*  See following for interpretation


The SCS control codes are interpreted as follows:

Back Space (BS): Output as ASCII back space, 08 (hex), by CMTI.

Bell Function (BEL): Output as ASCII bell function, 07 (hex),  by
CMTI.

Carriage Return (CR): Output as ASCII carriage return, 0D  (hex),
by CMTI.

Enable Presentation (ENP): Discarded by CMTI.

Forms Feed (FF): Output as ASCII forms feed, 0C (hex), by CMTI.

Graphic Escape (GE): Discarded by CMTI.

Horizontal Tab (HT): Output as ASCII space, 20  (hex),  by  CMTI.
Spaces  are output until next horizontal tab stop is reached.  If
there are no horizontal tab stops to the  right  of  the  current
print position, a single space is output.

Inhibit Presentation (INP): Discarded by CMTI.

Interchange-Record Separater  (IRS):  Output  as  ASCII  carriage
return/line feed, 0D0A (hex), by CMTI.



Page 132                  CMTI.ERS







LU1 PRINTER SUPPORT CMTI/3270              February 27, 1990



Line Feed (LF): Output as ASCII line feed, 0A (hex), by CMTI.

New Line (NL): Output as ASCII carriage  return/line  feed,  0D0A
(hex), by CMTI.

Set Attribute (SA): Discarded by CMTI.

Set Horizontal Format  (SHF):  The  two  byte  code  and  n  byte
parameter  are discarded by CMTI.  The value of the Maximum Print
Position parameters used to specify the line length.   The  value
of  the Left Margin parameter is used to specify the left margin.
The value of the Tab parameters are used to  set  the  horizontal
tab  stops.   See Section 2.4, Print Line Formatting, for further
information regarding the SHF control code.

Set Line Density (SLD): The two byte code and two byte  parameter
are discarded by CMTI.

Set Vertical Format (SVF): The two byte code and n byte parameter
are  discarded  by  CMTI.   The  value  of the Maximum Print Line
parameters used to specify the page length.  The value of the Top
Margin  parameter  is  used  to specify the top margin of a page.
The value of the Bottom Margin parameter is used to  specify  the
bottom  margin of a page The value of the Tab parameters are used
to set the vertical tab stops.

Transparent (TRN): The one byte code  and  one  byte  length  are
discarded  by  CMTI.   The n bytes of transparent data are either
discarded  or  output  to  the  printer  without  translation  as
specified by the SCSTRN macro.

Vertical  Channel  Select  (VCS):  Output   as   ASCII   carriage
return/line feed, 0D0A (hex), by CMTI.

Vertical Tab (VT): Output as ASCII line feed, 0A (hex), by  CMTI.
Line  feeds  are  output until next vertical tab stop is reached.
If there are no vertical tab stops below the current printed line
position, a single line feed will be output.

Nulls are output as ASCII space characters, 20 (hex).  All  other
control signals, 01 through 3F (hex), within the SCS data stream,
except as noted above, are discarded by  CMTI  and  output  as  a
ASCII  dash,  2D (hex). All data characters, 40 through FF (hex),
are translated from EBCDIC to ASCII.  EBCDIC characters that have
no  ASCII  translation are translated to nulls, 00, and output to
the printer as ASCII space characters.  Transparent data  is  not
translated.







Page 133                  CMTI.ERS







LU1 PRINTER SUPPORT CMTI/3270              February 27, 1990



8.2.3  DATA STREAM FORMAT - CHARACTER MODE

The interpreted SCS data streams are transmitted to  the  printer
as  character  mode  data streams.  The data is placed in a print
buffer in CMTI.  When the end of the block is received  by  CMTI,
the entire buffer is transmitted to the printer via the TYMSAT.

8.2.4  PRINT LINE FORMATTING - SHF FORMAT CONTROLS

The line length may contain up to 255  character  positions.   By
default, the print line length is 132 characters, the left margin
is at  print  position  1,  and  horizontal  tab  stops  are  all
positions.  (When there are no horizontal tab stops, a horizontal
tab is output by CMTI as a space.) The right margin is  not  used
in  printing  operations.   The  format  is  reset to the default
format at the circuit building process or by a SHF  control  code
with  the  count  byte (CNT parameter) of one.  A new line format
operation is performed by CMTI as soon as  it  receives  the  SHF
control code.

The print line format is specified to the 3270 CMTI  by  the  SHF
(Set  Horizontal  Format) SCS control code.  The SHF control code
has the following format:

| SHF | CNT | MPP | LM | RM | TAB1 | ... | TABn |

The fields are interpreted as follows:

SHF     SHF control code 2BC1 (hex) (2 bytes)
CNT     Number of bytes to end of SHF string, including CNT byte (1 byte)
MPP     Line length (1 byte)
LM      Column value of left most print position (1 byte)
RM      Not used in printing operations (1 byte)
TABn    Horizontal tab stop settings (1 byte per tab stop)

The value of MPP is used  to  specify  to  CMTI  the  print  line
length.  A carriage return and line feed are output by CMTI after
the last print position in the line is reached.  (The line length
may  also  be  determined  by  the  application transmitting a NL
character.) The value of LM is used to specify the  left  margin.
Spaces  are  output to the printer to advance to the left margin.
It is only used when the application transmitt a CR, FF or  a  NL
character.   All  other  characters  will not advance to the left
margin.  The value(s) of TABn are used to specify the tab  stops.
The tab stops are set at the position(s) of the values of the TAB
parameter(s).  When CMTI  receives  a  horizontal  tab  character
(HT),  spaces  are output until the next tab stop is reached.  If
there are no  tab  stops  to  the  right  of  the  current  print
position, a single space is output to the printer.

The line format specified by the most recent SHF control code  is



Page 134                  CMTI.ERS







LU1 PRINTER SUPPORT CMTI/3270              February 27, 1990



used  for  the current print operation.  The SHF control code may
be in any data position in the structured field(s) of  a  message
block.   It  specifies  the  print line format that is used until
another SHF control code is received.  The format may be  changed
repeatedly  within a WSF command by the application (i.e., within
each message block).  The print  line  format  remains  unchanged
between  print  jobs unless a SHF control code is received or the
circuit is rebuilt.

8.2.5  PRINT PAGE FORMATTING - SVF FORMAT CONTROLS

The page length may contain up to 255 (decimal) lines.   However,
a  3270  SVF  control  can  specify the MPL value to be up to 102
lines.  By default, the print page length is 66 (decimal)  lines,
the top margin is at line 1, the bottom margin is at line 66, and
vertical tab  stops  are  all  positions.   (When  there  are  no
vertical  tab  stops,  a vertical tab is output by CMTI as a line
feed.) The format is reset to the default values at  the  circuit
building  process  or  by  a SVF control code with the count byte
(CNT parameter) of one.  A new page format operation is performed
by CMTI as soon as it receives the SVF control code.

The print page format is specified to the 3270 CMTI  by  the  SVF
(Set Vertical Format) SCS control code.  The SVF control code has
the following format:

| SVF | CNT | MPL | TM | BM | TAB1 | ... | TABn |

The fields are interpreted as follows:

SVF     SVF control code 2BC2 (hex) (2 bytes)
CNT     Number of bytes to end of SVF string, including
        CNT byte (1 byte)
MPL     Maximum page length (1 byte)
TM      Line value of top most print position (1 byte)
BM      Line value of bottom most print position (1 byte)
TABn    Vertical tab stop settings (1 byte per tab stop)

The value of MPL is used  to  specify  to  CMTI  the  print  line
length.   It is used to check the validity of the top, bottom and
tab parameters in the SVF.   If  the  top  or  bottom  margin  is
invalid, the values of TM or BM will be the same as MPL.  Invalid
tabs will be ignored.  The value of TM is used to specify the top
margin.   Line  feeds will be sent to the printer to reach the TM
value.  Advancement to the top margin will only occur  when  CMTI
receives  a  FF  control code or when it reach the BM value.  The
value of BM is used to specify the bottom margin.   A  form  feed
will  be output to the printer when BM is reached.  The values of
tab are used  to  specify  the  vertical  tab  stops.   Each  tab
parameter  represents  one vertical tab stop position.  When CMTI
receives a vertical tab character (VT), line feeds are output  to



Page 135                  CMTI.ERS







LU1 PRINTER SUPPORT CMTI/3270              February 27, 1990



the terminal until it reaches a vertical tab stop.  If a vertical
tab stop is not found below the current line, a single line  feed
will be sent to the printer.

The page format specified by the most recent SVF control code  is
used  for  the  current  print  operation.   It remains unchanged
between print jobs unless a SVF control code is received  or  the
circuit is rebuilt.

8.2.6  PRINT CONTROL

The processed SCS data is placed by CMTI into a buffer.  When the
the  buffer  if  full,  the  entire  buffer is transmitted to the
printer.

CMTI may be configured, through the use of the SCSNLN  macro,  to
perform  or to not perform a new line function at the end of each
print operation.  If a new line function is performed,  the  next
print  operation  begins  in  the first position of the following
line.  If a new line function is not performed,  the  next  print
operation begins in the next print position.

Note: If CMTI is configured to perform a new line function at the
end  of  each print operation, lines may not be split between two
message blocks.  If CMTI is not configured to perform a new  line
function at the end of each print operation, the application must
supply a new line function or a forms feed at the start  of  each
print job.

8.3  SAMPLE TYMFILE

:   Demonstration CMT/3270 for Tymshare Hosts 1100, 1200
:   Node: 2000  Kernel: 999     Slot: 1  Host: 1000

        SUBTTL CMT/3270 TYM FILE
        DEFHST(1000,8,2)
        DEFHDR(Welcome to the Demonstration of the CMT/3270)

: MISCELLANEOUS PARAMETERS

NCRSAV  EQ      3               :NUMBER OF CRASH TABLES TO SAVE
                                :IF NCRSAV > 0, set CRSTOP to 0
CRSTOP  EQ      0               :DON'T HALT ON CRASH
NUMLCK  EQ      1               :NUMERIC LOCK FEATURE ENABLED

DEFTRC(ON)                      :GENERATES CODE FOR COM
DEFPRT(SKIP)                    :SKIP BLANK LINES ON TTY TERM
DEFCUD(6,LEFT)                  :SAVE 6 CHAR OF USERNAME IN CUD
DEFSTA(ON)                      :ENABLE STATUS LINE
DEFLU1(YES)                     :SUPPORTS SCS DATA TO PRINTER
SCSTRN(YES)                     :SUPPORTS SCS TRN CONTROL CODE



Page 136                  CMTI.ERS







LU1 PRINTER SUPPORT CMTI/3270              February 27, 1990



                                :TRANSPARENT DATA TO PRINTER
SCSNLN(NO)                      :NEW LINE NOT PERFORMED AT END
                                :OF MESSAGE BLOCK BY CMTI

: DEFINE ELEMENTS

DEFELE(WILDCD,331061100"8D"8D"8D"8D)    :ELEMENT 1, ANY ADDRESS

: DEFINE STORED LOGON STRINGS


DEFSTR(P1200,TO HOST 1200/PRINTER,TO1200,WILDCD,TO1200,WILDCD)

: DEFINE MANUAL LOGON STRINGS

MANUAL(MANST1)                  :MANUAL LOGON - CRT ONLY
MANPTR(MANST2)                  :MANUAL LOGON - CRT/PRINTER

: MENU DEFINITIONS

DEFMEN(MENU2,MANST1,MANST2)

: DEFINE USERS

        DEFUSR(NCHANG)
        DEFTTY(-1)
        MENUSR(MENU2)

DEFCAL("0E"01"02"03"04"05"06"07)

: TERMINAL TYPES

DEFTRM  MACRO [
        ADD69M                  :ADDS VIEWPOINT 60/90
        ADD78M                  :ADDS VIEWPOINT 78
]

: CHARACTER TRANSLATION

CHRMAP []               :NO CHANGES TO TRANSLATION TABLE(S)














Page 137                  CMTI.ERS







SEPARATE CIRCUIT AND PRINTER ONLY LOGON    February 27, 1990



          9.  SEPARATE CIRCUIT AND PRINTER ONLY LOGON


This chapter describes the support of a separate circuit  printer
and a printer only logon to a host interface.

Separate circuit printer refers to the ability of CMTI  to  build
circuits  to  a  host  interface with the CRT and PRT devices and
interact with the sessions.  Normally, when  a  user  requests  a
print  job,  the  printer  is  busy  printing  while the terminal
session remains active.  In its original  design,  CMTI  may  not
process  any  input  from  the  terminal  or the host while it is
printing.  This depends  on  when  the  printer  datastreams  are
processed.  For a long print job, it may be impossible to process
any keyboard input or CRT data comming from the host.  Since  the
results are unpredictable, CMTI must be changed so that an active
CRT device may be used to communicate with the session while  the
print job is actively printing.

Printer only logon refers to the  ability  of  CMTI  to  build  a
circuit  to  a  host  interface  with only the printer device and
interact with the session.  A user who  only  wants  to  use  the
printer  device  to  do  a  print job can now do so without being
logged in with a CRT device.  This frees up the  CRT  device  for
other  users to use and it allows a user to send a print job to a
printer from his terminal without being logged in to the  printer
device.

9.1  SEPARATE CIRCUIT FOR PRINTER

The circuit building process for logging in with a  CRT  and  PRT
pair remains the same.  There are two circuits to the HIF and one
to the CONSAT.  The difference is the ability of CMTI  to  accept
input  from  the  terminal and from the host while the printer is
busy.  This requires two changes to CMTI.

The first change is to not backpressure the terminal and the host
on the CRT circuit when a printer buffer is scheduled for output.
Similarly, if a CRT screen buffer is scheduled  for  output,  the
PRT  circuit  is not backpressured.  Backpressure is only applied
to the port which fills up the screen  buffer.   This  is  either
caused  by  receipt of an ETX or, if it is a 132 column print, by
reaching the maximum printer buffer  size.   This  backpressuring
scheme  allows data to be retrieved from the IRING while a buffer
is put on the active list.

The second change is  to  have  the  printer  dispatcher  process
active  ports, those which request output to the printer, only up
to the maximum transmit limit.  An end of print string  needs  to
be  sent  to the terminal when it reaches this limit.  By sending
this end of print string, CMTI  frees  up  other  output  to  the



Page 138                  CMTI.ERS







SEPARATE CIRCUIT AND PRINTER ONLY LOGON    February 27, 1990



terminal that needs to be transmitted for this user.

9.1.1  HANDLING OF PRINT BUFFER

The print buffer is handled in one of two ways depending  on  the
printout  format  determined  by the WCC in the 3270 data stream.
If it is a 80 column print, CMTI fills up  the  buffer  until  it
receives  an  ETX.   If it is a 132 column print, CMTI only fills
the buffer up to the maximum allowed for  a  print  buffer.   The
size  of  the  print  buffer  is the same as the size of a screen
buffer which is 1920 bytes.  When the buffer is full, the rest of
the  data  is  stored in the bufferlet for later processing while
the circuit is  being  backpressured.   This  feature  allows  an
application  to  send  more  than 1920 characters in a block at a
time.

Processing data  comming  from  the  CRT  circuit  is  the  first
priority.   The  entire  screen buffer must be transmitted to the
terminal before giving up its process.  When output is  done  for
the  CRT,  the  printer  is  checked for any output.  If there is
printer output for this user, it is put on the active  list.   If
there is not, CMTI checks the bufferlet.

9.2  PRINTER ONLY LOGON

A printer with an attached keyboard is allowed to log  into  CMTI
as a printer only device.

If a printer with an attached keyboard is logged in as a  printer
only device, the user must supply a terminal type on the terminal
selection screen.  The only valid terminal type for  the  printer
only  logon  is  the  TTY  emulation.   However,  the validity is
determined at the host selection screen when the user selects his
logon.   The  terminal  selection  menu screen can be bypassed by
using the DEFTTY macro in the Tymfile.

Once the terminal is selected, a list of possible destinations is
displayed  on  the  screen.   This  is  based on the macro DEFMEN
defined in the Tymfile.  If there is only one selection  for  the
destination,  this  menu is bypassed.  Thus, if DEFTTY and DEFMEN
are correctly defined in the Tymfile, a user does not have to use
the keyboard after the username logon for a printer only logon.

A user who is logging  into  CMTI  with  a  printer  that  has  a
keyboard  attached  to  it should select the TTY terminal type at
the terminal selection screen.  Selecting a terminal  type  other
than the TTY would result in unpredictable printer behavior.







Page 139                  CMTI.ERS







SEPARATE CIRCUIT AND PRINTER ONLY LOGON    February 27, 1990



9.2.1  GETTING THE PRINTER ID

Should a user forget his  printer  ID,  it  can  be  recalled  by
pressing  a  control key to display it on the printer paper.  The
key sequence is dependent  upon  the  terminal  selected  on  the
terminal selection screen.  Refer to the specific terminal on the
CMTERM.ERS manual to get the correct key sequence.

The display of the printer ID depends on the macro LUNAME defined
in  the  Tymfile.   If there is not a match, the error message of
"ERROR - NO PRINTER ID" is displayed.  If there is a  match,  the
string defined in the LUNAME is displayed.

A printer ID will  be  initially  displayed  once  a  circuit  is
established.   The  message  "PRINTER  ID:" along with the string
defined in the LUNAME is displayed if there is a match.  If there
is not a match, the message "PRINTER ID: NO MATCH" is displayed.

9.3  SYSTEM GENERATION

There is one required macro that can be used in a  Tymfile.   The
macro  SOLOPT is used to define a logon string for a printer only
logon.

9.3.1  SOLOPT - PRINTER ONLY LOGON MACRO

The macro SOLOPT is used in the Tymfile to allow a user to  logon
to  CMTI  as a printer only device.  This macro is similar to the
DEFSTR macro.  The logon string for the elements and a  label  to
reference  it  are  the  required  parameters in the macro.  This
macro must also follow the DEFELE macros and precede other macros
which reference the label in SOLOPT (eg. DEFMEN).

The SOLOPT macro takes the following format:

        SOLOPT(label,text,ele0,ele1)

        a. label - a reference label which is used by the macro DEFMEN
           to allow a user to logon as a printer only device.  It is a
           required parameter.
        b. text - character string describing this logon string and/or
           destination host, up to 76 characters.  It is required.
        c. ele - element label as defined by the DEFELE macro.  Only
           two elements are required for the printer only logon (a
           network logon and the DSP logon).

This macro may be used more than once in  the  Tymfile  to  allow
more than one printer only logon.






Page 140                  CMTI.ERS







SEPARATE CIRCUIT AND PRINTER ONLY LOGON    February 27, 1990



9.4  LIMITATIONS

The speed of the printer is important when interacting  with  the
host  computer  while the printer is printing.  Tests show that a
slow speed printer delay the characters echo on the screen.  This
is  caused  by the printer sending the XOFF to the terminal which
stops sending characters in its buffer to the printer and the CRT
screen.   A user using a slow speed printer should not attempt to
input from the keyboard while the printer is printing although it
is  allowed to do so.  The display of the character on the screen
is just slow because of the way the  terminal  handles  the  XOFF
from  the  printer.  However, the echoing problem is not affected
when a high speed printer is attached to the terminal.

9.5  SAMPLE TYMFILE

:   Demonstration CMT/3270 for Tymshare Hosts 1100, 1200
:   Node: 2000  Kernel: 999     Slot: 1  Host: 1000

        SUBTTL CMT/3270 TYM FILE
        DEFHST(1000,8,2)
        DEFHDR(Welcome to the Demonstration of the CMT/3270)

: MISCELLANEOUS PARAMETERS

CRSTOP  EQ      1                       :DON'T HALT ON CRASH
NUMLCK  EQ      1                       :NUMERIC LOCK FEATURE ENABLED
        DEFTRC(ON)                      :GENERATES CODE FOR COM
        DEFPRT(SKIP)                    :SKIP BLANK LINES ON TTY TERM
        DEFCUD(6,LEFT)                  :SAVE 6 CHAR OF USERNAME IN CUD
        DEFSTA(ON)                      :ENABLE STATUS LINE
        DEFLU1(YES)                     :SUPPORTS SCS DATA TO PRINTER
        SCSTRN(YES)                     :SUPPORTS SCS TRN CONTROL CODE
                                        :TRANSPARENT DATA TO PRINTER
        SCSNLN(NO)                      :NEW LINE NOT PERFORMED AT END
                                        :OF MESSAGE BLOCK BY CMTI
: DEFINE ELEMENTS

        DEFELE(TO1200,ISISTECH"BA1200"BBPASSWORD"0D)
        DEFELE(WILDCD,331061100"8D"8D"8D"8D)    :ELEMENT 1, ANY ADDRESS

: DEFINE STORED LOGON STRINGS

        DEFSTR(P1200,TO HOST 1200/PRINTER,TO1200,WILDCD,TO1200,WILDCD)

: DEFINE MANUAL LOGON STRINGS

        MANUAL(MANST1)                  :MANUAL LOGON - CRT ONLY
        MANPTR(MANST2)                  :MANUAL LOGON - CRT/PRINTER

: DEFINE PRINTER ONLY LOGON



Page 141                  CMTI.ERS







SEPARATE CIRCUIT AND PRINTER ONLY LOGON    February 27, 1990




        SOLOPT(PTONLY,PRINTER ONLY LOGON,TO1200,WILDCD) : 1ST AVAILABLE

: MENU DEFINITIONS

        DEFMEN(MENU1,PTONLY)
        DEFMEN(MENU2,P1200,MANST1,MANST2)

: DEFINE USERS

        DEFUSR(LLIU)
        DEFTTY(-1)              :DISPLAY ALL TERMINAL SELECTIONS
        MENUSR(MENU2)           :DISPLAY ALL LOGON SELECTIONS

        DEFUSR(NCHIN)
        DEFTTY(1)               :TTY LOGON, MENU BYPASS
        MENUSR(MENU1)           :1 SELECTION, PRT ONLY, MENU BYPASS

DEFCAL("0E"01"02"03"04"05"06"07)

: TERMINAL TYPES

DEFTRM  MACRO [
        VT100M                  :VT100 TERMINAL
        TTYM                    :TTY TERMINAL
]

: CHARACTER TRANSLATION

CHRMAP []               :NO CHANGES TO TRANSLATION TABLE(S)
























Page 142                  CMTI.ERS







CIRCUIT BALANCING AND LOAD LEVELING        February 27, 1990



          10.  CIRCUIT BALANCING AND LOAD LEVELING

10.1  INTRODUCTION

This document describes the proposed support of circuit balancing
for multiple configurations of CMT.

When a customer has multiple CMT's and  HIF's  channeled  to  the
same  mainframe some means must be provided to balance the use of
resources.  Currently, CMT slots do not report the lack  of  port
availability  to  the  supervisor.   This  results in users being
routed to a CMT slot  which  has  no  ports  available  and  upon
connection,  the  user gets a "slot out of ports" message and his
circuit is zapped.

We propose to remedy this situation by forcing the supervisor  to
create  circuits  to  each  of  the  hosts   more  evenly  and by
reporting the current host status to the supervisor.

If a HIF associated with a CMT fails or a CMT is  out  of  ports,
users  will  still  be  able  to  logon  to  CMT  but  will get a
"resources unavailable" message.  We propose  to  alleviate  this
problem  by  issuing a host shut status message to the supervisor
until the HIF or ports are available again.

10.2  MULTIPLE HOST CONFIGURATIONS

Multiple CMT hosts can be configured in several ways.  These  are
multi-targeted  hosts,  multi-based  hosts,  and a combination of
these two types.  Each CMT must be on a different node due to the
path  cost  algorithm  using  the node number as a index into its
table.  In CMT's  case  there  is  no  advantage  in  having  one
configuration over the other except for the convenience of having
to register only one host number in Tymnet.

10.2.1  MULTI-TARGETING

Each CMT host can be assigned a different  host  number.   Multi-
targeting  refers to the selection of one of several HOME(must be
validated  as such) hosts (listed as destinations  in  the  MUD'S
access profile entry) during a login request without host number.
A target  list  of  these  host  entries,  is  processed  by  the
supervisor  to  determine  the  least  cost  path from CMT to the
destination host. This least cost path is based on  each  of  the
link  costs  and  the host cost at the destination.  If two paths
have equal costs then the first   on  the  target  list  will  be
selected.







Page 143                  CMTI.ERS







CIRCUIT BALANCING AND LOAD LEVELING        February 27, 1990



10.2.2  MULTI-BASING

Up to 6 CMTs located on different nodes can be assigned the  same
host  number.   Multi-basing  refers  to  the selection of one of
these CMTs during a login request with the  host  number.   These
CMTs  must  all  report  the  same  host key in order to identify
themselves as being part  of  the  same  set  and  thus   prevent
rejection by the supervisor.  The selection of a circuit to a CMT
host is determined the same way as for multi-targeting.

10.2.3  MULTI-TARGETING/MULTI-BASING

This configuration is a mixture of multi-based hosts and  several
home hosts together in a list to be multi-targeted.

10.3  LOAD-LEVELING

In order to distribute  the  user  circuits  more  equally  among
multi-targeted  and  multi-based  hosts  the  cost factor must be
adjusted to direct a circuit from a heavily used CMT  to  a  less
heavily  used  one.   CMT is unable to do anything about changing
the link costs but it can adjust the host cost in order to change
the  total cost for  a path and thus force the next user login to
a less heavily used CMT.  This is called load-leveling.

For every 4  users that log in to a CMT, the host cost (max value
of  256) will be incremented by 20 and a Report Host Cost message
will be sent to the supervisor.  Conversely, after each group  of
4 users logs off, the host cost will be decremented by 20 and the
message sent out.

10.4  PORT AVAILABILITY

Currently in CMT, if 2 hosts have equal cost paths, users will be
continually  routed  to  the  first  CMT  slot regardless of port
availability.  This is because the number of channels defined for
the  CMT  slot  in  the  tymfile  is  initially  reported  to the
supervisor as the number  of  ports  available  and  any  further
change in status is not reported.

This problem can be eliminated by reporting the host shut  status
to  the  supervisor  as  soon  as  a  threshold  number  of ports
remaining  (tymfile  defined)  condition  is  encountered.    The
supervisor  will  then  exclude  this  host  from its target list
calculations until the situation is reversed.   Conversely,  when
when  a  circuit  is zapped and  more ports become available, the
host answered state will be reported to the supervisor.







Page 144                  CMTI.ERS







CIRCUIT BALANCING AND LOAD LEVELING        February 27, 1990



10.5  HIF FAILURE

If the HIF associated with  a  CMT  fails,  host  costs  will  be
reduced  as  the  number  of  users on CMT is reduced.  Thus, the
supervisor would direct more circuits to this CMT and  the  users
would  continue  to  get "resources unavailable" messages as long
the the HIF was down.  We propose to issue  a  host  shut  status
message upon receipt of a B4 (logon status) message with a system
unavailable error code.

At this point, if a stored logon string was used, we will  resend
the  same  logon  string  every  5  minutes to try to establish a
circuit to the HIF.  If we are successful then  a  host  answered
status message will be issued to the supervisor.

If a manual logon or stored logon with prompt for p/w  was  used,
then the CMT will issue a host shut message to the supervisor and
remain in this state  for  the  next  5  minutes  to  enable  the
supervisor  to direct users logging in during this  time,  to the
next available CMT.  After the 5 minute interval, CMT will  issue
a  host  answered  message and if the next logon is unsuccessful,
the cycle will begin again.

10.6  MACROS

The following macros must be included in the tymfile if this  CMT
host  is  part  of  a  multi-based  host  configuration or if the
conditions for the host shut status are to be defined.

10.6.1  MLTBAS

This macro flags the configuration as having multi-based hosts.

MLTBAS(ON)

This sets a flag that the host key  needs  to  be  sent  and  the
status  bit  must  be  set  to  indicate  that  the  host  key is
significant.  A one byte value is assigned as the host key.   The
"off" or nonmulti-based state is the default.

10.6.2  PRTLTD

This macro sets the threshold number of ports activated at  which
point the host shut status message will be issued.

PRTLTD(VALUE)

When  "value"  (hexadecimal)  number  of  dispatcher  ports   are
activated  in  the  slot, the host shut message will be issued to
the supervisor.  The default number will be the  (maximum  number
of ports permitted on the interface) - 3.



Page 145                  CMTI.ERS







CIRCUIT BALANCING AND LOAD LEVELING        February 27, 1990



10.6.3  STHCST

This macro enables the user to set the host cost increment value.

STHCST(VALUE)

Host cost is incremented by "value"  and the host cost message is
issued  to  the  supervisor  after each group of 4 users logs on.
The default value will be 20. It is important  to  ascertain  the
normal  line  costs  between CMT and the HIF in order to select a
host cost value that will be effective in each environment.

10.6.4  HIFOUT

This macro enables the setting of CMT host status to "host  shut"
if  an  associated  HIF  fails.  Futhermore, as this macro is now
implemented, the load-leveling mechanism that  uses  Report  Host
Cost  messages  (see STHCST macro) and the shutting of a CMT host
when a threshold number of active ports is  reached  (see  PRTLTD
macro)  are  enabled  only when the argument to this macro equals
ON.

HIFOUT(ON)

The "off" state is the default.

When this feature is enabled, a user logging-on to a CMT that  is
shut due to the failure of an associated HIF will receive a "host
shut"  message,  rather  than  the  "host  resources  unavilable"
message that would be received if the feature were not enabled.

Also, when this feature is enabled, CMT will attempt a  logon  to
the  failed  HIF every 5 minutes.  When detecting that the HIF is
up, (the logon succeeds) CMT sends a "host answered"  message  to
the Supervisor, thereby making the CMT usable once again.

Another effect of setting HIFOUT to ON is that CMT will  be  shut
down  if  an  invalid  login string (containing a bad password or
invalid host number) is used to login to  a  HIF.   CMT  is  shut
after receiving from the supervisor the B4 message that indicates
login rejection.  Furthermore, the same invalid  string  will  be
used  every  5  minutes in the attempt to login to the HIF.  Care
must be taken, then, by CMT users manually logging-on  to  a  HIF
when HIFOUT is enabled.










Page 146                  CMTI.ERS







CIRCUIT BALANCING AND LOAD LEVELING        February 27, 1990



10.7  LIMITATIONS

The supervisor currently has a maximum limit of 6 hosts which  it
will  consider at one time when using its path finding algorithm.
Each of these hosts must be located on a different node.

A timing problem may infrequently exist with the supervisor where
a race condition will be set up if, for example, only a few ports
remain available in a slot and 10 users decide to  login  at  the
same  time.  Depending on the number of CMT hosts available, some
users may still be routed to the host in consideration and get  a
"slot  out  of  ports"  message  if  the  supervisor  has not yet
received the host shut message.  However, this should  happen  so
infrequently that it is not anticipated to be a problem.

If the HIFOUT macro is enabled,  even  if  more  than  1  HIF  is
associated  with the CMT, the user will not be able to access CMT
until the HIF that failed is up in the network again.   If a  HIF
has  several  lines  associated with different hosts and the user
was attempting to access  a  host  which  was  unavailable,  that
particular  HIF  will still be considered to be down and CMT will
be shut.
































Page 147                  CMTI.ERS







CMTI TTY ENHENCEMENT                       February 27, 1990



                  11.  CMTI TTY ENHENCEMENT

11.1  INTRODUCTION

This chapter describes the old and new supported  function  keys,
the new optimizer, and the file transfer for TTY terminal.

Here we  call the screen-oriented terminals running on  TTY  mode
which  output is line by line as the glass-TTY and the real line-
oriented TTY terminals as the paper-TTY.  The terminal type macro
defined  in  DEFTRM  for the glass-TTY is called TTYG, so is TTYM
for the paper-TTY.

The old supported function keys are : CLEAR, ZAP-CIRCUIT,  ENTER,
RESET,  ERASE-EOF, BACKSPACE-DELETE, HOME, REDISPLAY, ALL-PF, and
ALL-PA.  The new  supported  function  keys  are  :  FORWARD-TAB,
BACKSPACE, and NEW-LINE.

The new optimizer is used to eliminate the repeated lines on  the
outputs of both types.

A PC software package called RELAY-GOLD can do the file  transfer
in  TTY  mode.   Users  should select the glass-TTY terminal type
instead of the paper-TTY type to download files from a  mainframe
to a PC or to upload files from a PC to a mainframe.

Since the TTY  is  not  a  screen-oriented  terminal,  character-
oriented  keys  like  arrow Up, Down, Right, and Left to move the
cursor one location at a time into any character location are not
supported in TTY.

11.2  OLD FUNCTION KEYS

The followings are old function keys that have been  implemented.
Some of them may not function exactly like 3270 standard keys.

11.2.1  CLEAR SCREEN

STANDARD: The screen is cleared and the host  is  notified.   The
cursor is moved to the first position on the screen.

PAPER-TTY: CMT clears the  internal  buffer,  send  a  short-read
clear  to the host, and send a "screen cleared" message and CR/LF
to the terminal.  The current buffer position is redefined  to  0
and the printhead is on column 1 of a newline.

GLASS-TTY: CMT clears the  internal  buffer,  send  a  short-read
clear  to  the  host,  and send only CR/LF to the screen-oriented
termianl.  The current buffer position is redifined to 0 and  the
cursor is moved to the beginning of the next line.




Page 148                  CMTI.ERS







CMTI TTY ENHENCEMENT                       February 27, 1990



11.2.2  ZAP CIRCUIT

CMTI zaps the circuit and the operator is returned to "please log
in :".

11.2.3  ENTER OR RETURN

The application program is notified that an  ENTER  function  has
been requested.

11.2.4  RESET

STANDARD: The key is used to recover from an  inhibited  keyboard
operation that has resulted in a disabled keyboard.

PAPER-TTY: nothing happens.

GLASS-TTY: nothing happens.

11.2.5  ERASE TO END OF FIELD

STANDARD: The function clears the rest of  the  field,  including
the  current  cursor position, if the cursor is in an unprotected
field.  The cursor does not move.

PAPER-TTY: The function internally clears the whole of the  field
and  the current buffer position is repointed to the beginning of
the field.  The printhead is on the beginning of the next line.

GLASS-TTY: The function internally clears the whole of the  field
and  the current buffer position is repointed to the beginning of
the field.  The cursor is on the beginning of the next line.

11.2.6  BACKSPACE-DELETE

STANDARD: 3270 has no such function key.

PAPER-TTY: The function deletes the preceding character and  a  ^
is  sent  to  the  terminal to give visual indication of how many
preceding characters to be deleted. If the current position is in
column 1 or is an attribute or is in a protected field, a bell is
sent to the terminal.

     EXAMPLE:

     input: abcxk
     2 backspace-delete: abcxk^^
     resum input: abcxk^^d
     inside buffer: abcd

GLASS-TTY:  The  cursor  is  moved  one  position  left  and  the



Page 149                  CMTI.ERS







CMTI TTY ENHENCEMENT                       February 27, 1990



character  on  that  position  is  deleted.   If the cursor is in
column 1 or is an attribute or is in a protected field, a bell is
sent to the terminal.

11.2.7  HOME KEY

STANDARD: The function moves the cursor to the first  unprotected
field.

PAPER-TTY: The internal current buffer position is  redefined  to
the first unprotected field, but externally the printerhead is on
column 1 of a newline.

GLASS-TTY: The internal current buffer position is  redefined  to
the  first  unprotected field, but externally the cursor is moved
to the beginning of the next line.

11.2.8  REDISPLAY KEY

The TTY redisplay function is like the redisplay function for any
other  terminal.  However, instead of the screen being cleared, a
new  line  is  presented  and  the  buffer  contents   are   then
redisplayed.  Operation  of  this  key on both TTY-type terminals
gets the buffer contents but not the current buffer position.

11.2.9  PF KEYS

The application program is notified that the  function  has  been
requested.   Areas  of  the screen that have been modified by the
operator are reported back to the applicaiton.

11.2.10  PA KEYS

The application program is notified that the  function  has  been
requested.   No  modified fields are sent to the host, unlike the
PF keys.

11.3  NEW FUNCTION KEYS

The  following  function  keys  are  implemented   in   TTY   new
enhencement.

11.3.1  BACKSPACE

STANDARD: The  function  moves  the  cursor  left  one  character
position.

PAPER-TTY: The internal current buffer position is decremented by
one, and a < is sent to the terminal to give visual indication of
the backspaces.




Page 150                  CMTI.ERS







CMTI TTY ENHENCEMENT                       February 27, 1990



     EXAMPLES:

     input: abcxk
     3 backspaces: abcxk<<
     resume input: abcxk<<de
     inside buffer: abcde

GLASS-TTY: The internal current buffer position is decremented by
one, and a backspace (hex 08) is sent to the terminal to move the
cursor one position left.

11.3.2  NEW LINE

The function internally moves cursor  to  the  first  unprotected
position  of  next  line  or  lines,  and  a CR/LF is sent to the
terminal.

11.3.3  FORWARD TAB

Without TAB key being implememted, the user is always  forced  to
select the first logon string on the host selection menu. Now the
user can use it to select any logon string.

The TAB  key  for  both  TTY  terminals  is  only  used  in  host
selection.   After a logon string being selected, the function of
the TAB key to move the  cursor  to  the  unprotected  field   no
longer works due to TTY mode on the line-by-line basis.

The host selection screen example for TTY terminal is as follows:

Host Selection
  TO HOST 997
  TO HOST 998
  TO HOST 999
<TAB>: NEXT SELECTION, <RETURN>: END SELECTION
YOU ARE NOW IN THE SELECTED STRING #1

11.4  NEW OPTIMIZER FOR TTY

The reason why we need a new  optimizer  for  both  TTY  terminal
types  is  to  eliminate  the  repeat lines on the outputs.  When
receving write command from  the  host,  in  non-TTY  mode,  CMTI
writes updated data into the screen buffer and paints those spots
having changes on the screen.  But,  in  TTY  mode,  CMTI  writes
updated  data  into the screen buffer and paints the whole buffer
on the screen for each write command.  Therefore, it seems to the
user that those old lines are still repeatly painted.

In the old TTY optimizer, CMTI uses  OPTCLR  routine  to  send  a
screen buffer to the terminal. CR/LF's are sent instead of cursor
movement.  Whenever a line or the rest of a line is  blank,  CMTI



Page 151                  CMTI.ERS







CMTI TTY ENHENCEMENT                       February 27, 1990



sends CR/LF's to the terminal rather than spaces up to the end of
a line.

In the new TTY optimizer, CMTI compares the new  screen  and  the
old  on  a  line-by-line  basis  instead  of  on  a character-by-
character basis.  Only those lines which in the  new  screen  are
different  from  those  in  the  old  are  painted on the screen.
CR/LF's are sent whenever a line or the rest of a line is blank.

11.5  NEW OPTION IN THE TYMFILE

11.5.1  XFERSP

The new parameter XFERSP(ON) can be specified in the  tymfile  to
treat   spaces  as  graphic  (displayable)  characters.  Some  PC
packages like EQUALIZER emulating the TTY treat spaces as graphic
characters.  The default for XFERSP is off.

If parameter XFERSP(ON) is specified  in  the  tymfile,  the  new
optimizer  for  TTY to skip unchanged blank or non-blank lines is
not called by CMTI and the repainted screens still exist.

11.5.2  DEFPRT

The parameter DEFPRT(SKIP) can be specified  in  the  tymfile  to
skip TTY blank lines. The default for DEFPRT is off.


     With DEFPRT(SKIP) specified
_________________________________________________
|                                               |
| 1 THIS IS THE FIRST LINE                      |
|                                               |
| 2 THIS IS THE SECOND LINE                     |
|                                               |
| 6 THIS IS THE SIXTH LINE                      |
|                                               |
|                                               |
|                                               |
|                                               |
|                                               |
|                                               |
|                                               |
|_______________________________________________|










Page 152                  CMTI.ERS







CMTI TTY ENHENCEMENT                       February 27, 1990



      Without DEFPRT(SKIP) specified

_________________________________________________________________
|                                                               |
| 1 THIS IS THE FIRST LINE                                      |
| 2 THIS IS THE SECOND LINE                                     |
|                                                               |
|                                                               |
|                                                               |
| 6 THIS IS THE SIXTH LINE                                      |
:                                                               :
:                                                               :
|_______________________________________________________________|

11.6  USING RELAY-GOLD FOR FILE TRANSFER

With GLASS-TTY terminal  type  selection,  A  PC  package  called
RELAY-GOLD  allows  you  to  do  file  transfer between mainframe
system MVS/TSO and your PC.  At the begin of file transfer,  CMTI
gets  ESC  sequences  (ESC X B) from a PC or a host, and it turns
echo off.  At the end of file trnasfer, CMTI gets  ESC  sequences
(ESC X E) from a PC or a host, and it turns echo back.

After the completion of file transfer, the data formats  used  by
RELAY-GOLD  are displayed on the screen, which seems like garbage
to the user.  The garbage is cleared by clear screen sequence  if
VT100  terminal type is selected.  The garbage still stays on the
screen until the screen scolls up if GLASS-TTY terminal  type  is
selected.

11.7  RELAY-GOLD SET-UP FOR GLASS-TTY

First, input the entry in the Directory of  Computers  of  RELAY-
GOLD  to establish a connection to CMTI slot.  Remember to select
VT100 instead of TTY as a valid type entry for Glass-TTY.

Secondly, place the cursor on the entry you wish  to  review  and
press  the  F4  key,  and  then set up the connect options as the
followings for Glass-TTY.

 1) COM 1 or COM2? 2             2) Logon Script Filename?
 3) File Protocol?  S            4) Function Key Filename? TTY3270
 5) Parity Code? I               6) Translation Filename?
 7) Local Echo? N                8) Full or Half Duplex? F
 9) Auto Linefeed? N            10) Flow Control(XON/OFF)? Y
11) Stop Bits? 2                12) Turnaround Character? 11
13) Answerback Char? 00         14) Script Control Char? 00
15) Send LF with CR? N          16) Show Control Characters? N
                                17) Delay After Each line? 0

NOTE : Please refer to appendix - (RELAY-GOLD KEY DEFINITIONS FOR



Page 153                  CMTI.ERS







CMTI TTY ENHENCEMENT                       February 27, 1990



FILENAME - TTY3270) for item 4.





















































Page 154                  CMTI.ERS







DUP FM and ATTN KEYS                       February 27, 1990



                  12.  DUP FM and ATTN KEYS

12.1  INTRODUCTION

This chapter describes two field-oriented keys,  Duplicate  (DUP)
and  Field  Mark  (FM),  and one program attention key, Attention
(ATTN)

The DUP and FM keys are operative in both BSC and  SNA,  but  the
ATTN key is operative only in SNA.

12.1.1  DUP KEY

When the DUP key is entered from the terminal, CMTI transmits  an
asterisk  (2A  hex) and a horizontal tab (09 hex) to the terminal
and sends a unique character code (1C hex) to the host interface.
No duplicate operation is performed at the CMTI.

Pressing the DUP key  informs  the  application  program  that  a
duplicate  operation  is  indicated  for the rest of the field in
which it is located.

Pressing the DUP key does not affect  the  current  status  line.
Operation  of  this  key  on  the  attribute position or within a
protected data field is not  allowed  and  a  bell  (07  hex)  is
transmitted to the terminal.

12.1.2  FM KEY

When the FM key is entered from the terminal,  CMTI  transmits  a
semicolon  (3B  hex) to the terminal and sends a unique character
code (1E hex) to the host interface.

Pressing the FM key informs the application program of the end of
a field in which it is located.

Pressing the FM key does not  affect  the  current  status  line.
Operation  of  this  key  on  the  attribute position or within a
protected data field is not  allowed  and  a  bell  (07  hex)  is
transmitted to the terminal.

12.1.3  ATTN KEY

When the ATTN key is pressed, CMTI sends hex FF to SNA HIF,  then
the  SNA  HIF sends the Signal command to the host to request the
Change Direction (CD) indicator.  Once Signal has  been  sent  by
SNA HIF, pressing the ATTN keys does not initiate a second Signal
until the SNA HIF has received a response to the first Signal.

The ATTN key is operable in SNA LU-LU session, with the following
exceptions:



Page 155                  CMTI.ERS







DUP FM and ATTN KEYS                       February 27, 1990



   1. When inbound processing is queued for the display.
   2. When in shutdown condition.
   3. When in Data Traffic Reset state.
   4. When a second or successive ATTN which occurs prior to
      completion of processing for the first ATTN is ignored.

Use of ATTN in any session except LU-LU causes SNA  HIF  to  send
Input  Inhibit  Minus  Function  (FF 40 C4 ETX), i.e. -F for CMTI
status line.  Press the RESET key to unlock  keyboard  when  CMTI
displays -F on the status line.

The ATTN key is inoperative  in  BSC  and  a  bell  (07  hex)  is
transmitted to the terminal if it is entered.

NOTE: CMTI status item, APPL/SYS/?, indicates the session type
      that exists between the host and the end user.  APPL is
      displayed for LU-LU session, SYS for SSCP-LU, and ? for
      unowned session.

12.2  KEY PERFORMANCE ON THE SCREEN

This section contains sample screens representing DUP and FM keys
being  pressed.   It  also contains sample screens displaying the
host response to invalid field input.

This section also includes sample screens displaying the  changes
on the status item, APPL/SYS/?, while in session changes.

In the following examples, capital letters are  system  generated
text, and small letters are user entered data.

12.2.1  DUP KEY PERFORMANCE

The following screen example shows system generated text with
only one field for input data.

________________________________________________________________
|                                                              |
|   OPTION ===>                                                |
|                                                              |
|   1. SPECIFY TERMINAL AND USER PARAMETERS                    |
|   2. DISPLAY SOURCE DATA OR OUTPUT LISTINGS                  |
|   3. SUBMIT JOB FOR LANGUAGE PROCESSING                      |
|   4. PERFORM UTILITY FUNCTIONS                               |
:                                                              :
:                                                              :
:                                                              :
|  10. EXIT                                                    |
|______________________________________________________________|





Page 156                  CMTI.ERS







DUP FM and ATTN KEYS                       February 27, 1990



User happens to enter number 44 and  a  DUP  key  for  the  input
field.  The host application is indicated that the input field is
filled with 4's.


________________________________________________________________
|                                                              |
|   OPTION ===> 44*                                            |
|                                                              |
|   1. SPECIFY TERMINAL AND USER PARAMETERS                    |
|   2. DISPLAY SOURCE DATA OR OUTPUT LISTINGS                  |
|   3. SUBMIT JOB FOR LANGUAGE PROCESSING                      |
|   4. PERFORM UTILITY FUNCTIONS                               |
:                                                              :
:                                                              :
:                                                              :
|  10. EXIT                                                    |
|______________________________________________________________|

The host application responses to the invalid input  as  it  only
accepts  option  number 1 to 10.  The example shows the host send
data back without an asterisk.


________________________________________________________________
|                                         ---INVLID INPUT---   |
|   OPTION ===> 44                                             |
|                                                              |
|   1. SPECIFY TERMINAL AND USER PARAMETERS                    |
|   2. DISPLAY SOURCE DATA OR OUTPUT LISTINGS                  |
|   3. SUBMIT JOB FOR LANGUAGE PROCESSING                      |
|   4. PERFORM UTILITY FUNCTIONS                               |
:                                                              :
:                                                              :
:                                                              :
|  10. EXIT                                                    |
|______________________________________________________________|

12.2.2  FM KEY PERFORMANCE

The following screen example shows  system  generated  text  with
only one field for input data.












Page 157                  CMTI.ERS







DUP FM and ATTN KEYS                       February 27, 1990



________________________________________________________________
|                                                              |
|   OPTION ===>                                                |
|                                                              |
|   1. SPECIFY TERMINAL AND USER PARAMETERS                    |
|   2. DISPLAY SOURCE DATA OR OUTPUT LISTINGS                  |
|   3. SUBMIT JOB FOR LANGUAGE PROCESSING                      |
|   4. PERFORM UTILITY FUNCTIONS                               |
:                                                              :
:                                                              :
:                                                              :
|  10. EXIT                                                    |
|______________________________________________________________|


User happens to fill the input field with 4's.

________________________________________________________________
|                                                              |
|   OPTION ===> 4444444444                                     |
|                                                              |
|   1. SPECIFY TERMINAL AND USER PARAMETERS                    |
|   2. DISPLAY SOURCE DATA OR OUTPUT LISTINGS                  |
|   3. SUBMIT JOB FOR LANGUAGE PROCESSING                      |
|   4. PERFORM UTILITY FUNCTIONS                               |
:                                                              :
:                                                              :
:                                                              :
|  10. EXIT                                                    |
|______________________________________________________________|


User corrects the input data by entering a single digit 4  and  a
FM key instead of by erasing the entire field and then entering a
single digit 4.  As a result, the host application only  receives
a single digit 4 as a valid input.


















Page 158                  CMTI.ERS







DUP FM and ATTN KEYS                       February 27, 1990



________________________________________________________________
|                                                              |
|   OPTION ===> 4;44444444                                     |
|                                                              |
|   1. SPECIFY TERMINAL AND USER PARAMETERS                    |
|   2. DISPLAY SOURCE DATA OR OUTPUT LISTINGS                  |
|   3. SUBMIT JOB FOR LANGUAGE PROCESSING                      |
|   4. PERFORM UTILITY FUNCTIONS                               |
:                                                              :
:                                                              :
:                                                              :
|  10. EXIT                                                    |
|______________________________________________________________|


User happens to enter an invalid option number "a" and a FM key.


________________________________________________________________
|                                                              |
|   OPTION ===> a;44444444                                     |
|                                                              |
|   1. SPECIFY TERMINAL AND USER PARAMETERS                    |
|   2. DISPLAY SOURCE DATA OR OUTPUT LISTINGS                  |
|   3. SUBMIT JOB FOR LANGUAGE PROCESSING                      |
|   4. PERFORM UTILITY FUNCTIONS                               |
:                                                              :
:                                                              :
:                                                              :
|  10. EXIT                                                    |
|______________________________________________________________|


The host application responses to the invalid input  as  it  only
accepts  option  1 to 10.  This example shows that the data being
entered after the FM key are ignored by the host applicaiton.


















Page 159                  CMTI.ERS







DUP FM and ATTN KEYS                       February 27, 1990



________________________________________________________________
|                                         ---INVALID INPUT---  |
|   OPTION ===> A                                              |
|                                                              |
|   1. SPECIFY TERMINAL AND USER PARAMETERS                    |
|   2. DISPLAY SOURCE DATA OR OUTPUT LISTINGS                  |
|   3. SUBMIT JOB FOR LANGUAGE PROCESSING                      |
|   4. PERFORM UTILITY FUNCTIONS                               |
:                                                              :
:                                                              :
:                                                              :
|  10. EXIT                                                    |
|______________________________________________________________|

12.2.3  ATTN KEY PERFORMANCE

Pressing an ATTN key in SSCP-LU session  causes  keyboard  to  be
locked and -F to be displayed on the status line, and the session
type becomes unowned.


   SSCP-LU session                      unowned session
__________________________          __________________________
|                        |          |                        |
|    (screen cleared)    | ATTN key |    (screen cleared)    |
:                        : -------->:                        :
:                        :          :                        :
|SNA SYS                 |          |SNA ? -F LOCK           |
|________________________|          |________________________|


Pressing an ATTN key in an unowned session causes keyboard to  be
locked and -F to be displayed on the status line.


   unowned session                      unowned session
__________________________          __________________________
|                        |          |                        |
|    (screen cleared)    | ATTN key |    (screen cleared)    |
:                        : -------->:                        :
:                        :          :                        :
|SNA ?                   |          |SNA ? -F LOCK           |
|________________________|          |________________________|


Pressing an ATTN  key  in  LU-LU  session  and  before  the  host
application  data  set  being  allocated  causes the screen to be
cleared and two followed screens to be sent.






Page 160                  CMTI.ERS







DUP FM and ATTN KEYS                       February 27, 1990



   LU-LU session                         LU-LU session
__________________________          __________________________
|                        |          | |                      |
|(data set not allocated)| ATTN key |                        |
:                        : -------->:                        :
:                        :          :                        :
|SNA APPL                |          |                        |
|________________________|          |________________________|
                                               |
                                               |
                                               V
                                    __________________________
                                    |LOGON                   |
                                    |                        |
                                    :                        :
                                    :                        :
                                    |SNA APPL                |
                                    |________________________|


Pressing an  ATTN  key  in  LU-LU  session  and  after  the  host
application data set being allocated causes the screen with a bar
sign to be sent and the current screen to be redisplayed.


   LU-LU session                       LU-LU session
__________________________          __________________________
|                        |          ||                       |
|(data set is allocated) | ATTN key |                        |
:                        : -------->:                        :
:                        :          :                        :
|                        |          |                        |
|________________________|          |________________________|
                                                |
                                                |
                                                V
                                    __________________________
                                    |                        |
                                    |(redisplay current scn) |
                                    :                        :
                                    :                        :
                                    |SNA APPL                |
                                    |________________________|

12.3  KEY DEFINITION FOR FULL-DUPLEX TERMINALS

To support DUP and FM key funcitons, terminals must be  a  screen
or field oriented type.  To see the session type upon an ATTN key
being entered, terminals must have the status line capability.

The three function keys (DUP, FM and ATTN) are not  supported  in



Page 161                  CMTI.ERS







DUP FM and ATTN KEYS                       February 27, 1990



TTY  (paper-TTY  and  glass-TTY)  as TTY is not a screen or field
oriented terminal and has no status line capability.

The key definitions for full-duplex terminals are as follows:


FUNCTION        KEY             ASCII CODE
--------        ---             ----------
DUP             CTRL-U             15 HEX

FM              CTRL-V             16 HEX

ATTN            CTRL-W             17 HEX

DUP             CTRL-O             0F HEX (NOTE 1)

ATTN            CTRL-@             00 HEX (NOTE 2)

NOTE 1 : Only ADDS VP 60/90 uses CTRL-O for DUP key.
NOTE 2 : The following terminals use CTRL-@ for ATTN key.

         BEEHIVE 78/-ATL
         CONVERGENT TERMINAL
         DASHER D100/D200
         DASHRT D410/D460
         TELEVIDEO 910
         TELEVIDEO 920

12.4  KEY DEFINITION FOR HALF-DUPLEX TERMINALS

The three function keys are not supported in ADDS 60/HDX  due  to
the limitation of the terminal local functions.

The key definitions for TYMNET78 are as follows:

FUNCTION        KEY             ASCII CODE
--------        ---             ----------
DUP             N/A             1B 3B

FM              N/A             1B 3C

ATTN            N/A             1B 3A 0D












Page 162                  CMTI.ERS







WRITE STRUCTURED FIELD COMMAND             February 27, 1990



              13.  WRITE STRUCTURED FIELD COMMAND

This chapter describes the support  for  Write  Structured  Field
command with the structured field type, Read Partition with Query
Operations, by the CMTI/3270 Interface.

The Write Structured Field command is a write command  that  does
not  contain  explicit  control  information  and is used to send
encoded  data  or  control  information  in  a   variable   form.
Currently,  when  the CMT receives a WSF command, it discards the
entire message block and clears the circuit to the host PAD.

WSF command support is being implemented to allow for SNA support
of  TSO  for the Japanese market.  CMT provides a canned response
to WSF command structured field type Read  Partition  with  Query
Operations for devices with circuits to CMT.  The devices support
Kanji but do not support WSF commands and  communicate  with  the
SNA  Host Interface and with TSO on the Host.  The replies to the
WSF commands are different for CRTs and printers.

13.1  STRUCTURED-FIELD FORMAT

The Write Structured Field commands are received by  CMT  as  DSP
commands.  They have the following format:

| UCN | HDR | SEQ | ESC | WSF | ST FLD | ST FLD | ETX |

The fields in the example are interpreted as follows:

UCN     DSP user circuit number (1 byte)
HDR     DSP header flags (1 byte)
SEQ     DSP sequence number (1 byte)
ESC     Escape, 27 (hex), (1 byte)
WSF     3270 WSF command code, F3 (hex), (1 byte)
ST FLD  Structured Field (n bytes)
ETX     End of Text character (1 byte)

The structured field(s) within the WSF command have the following
format:

| LEN | ID | P/D |

The fields in the example are interpreted as follows:

LEN     Length of structured field (including length byte) (2 bytes)
ID      Field identifier, defines the function of the structured field
        (1 byte)
P/D     Parameters and/or Data (LEN minus 3 bytes)






Page 163                  CMTI.ERS







WRITE STRUCTURED FIELD COMMAND             February 27, 1990



13.2  WRITE WTRUCTURED FIELD COMMAND SUUPORT

The CMTI/3270  Interface  can  be  configured  to  process  Write
Structured  Field  commands.   CMT scans the WSF commands for the
structured field type, Read Partition with Query Operations.  The
default is to not scan WSF commands.

Note:  CMT may also be configured to support SCS data  structured
fields.   The  WSF  commands  are scanned for SCS data structured
fields.  WSF commands  with  other  structured  field  types  are
discarded.     See    the    CMT   LU1   Printer   Support   GED,
(DNDSPEC:39)CMTLU1.GED, for further information.

13.2.1  CMT DOES NOT PROCESS WSF COMMANDS

If CMT is configured not to process WSF  commands,  CMT  discards
the commands and clears the circuit to the host PAD.  This is the
default configuration.

13.2.2  CMT DOES PROCESS WSF COMMANDS

If CMT is configured to process WSF commands,  the  commands  are
scanned  for  structured  fields  of the type Read Partition with
Query Operations.  The structured field type, Read Partition with
Query Operations, has the following format:

| LEN | ID | PID | TYPE |

The fields in the example are interpreted as follows:

LEN     Length of structured field, 0005 (hex) (2 bytes)
ID      Field identifier, 01 (hex) (1 byte)
PID     partition identifier, FF (hex), indicates Query Operations (1 byte)
TYPE    operations type, 02 (hex), indicates query (1 byte)

For Read Partition with Query Operations, the structured field is
000501FF02  (hex).   For  WSF  commands  with multiple structured
fields, only the first field is examined.  Additional  structured
fields, if any, are discarded by CMT.

When CMT receives a WSF command and the first or only  structured
field  is  not Read Partition with Query Operations, CMT discards
the command and clears the circuit to the host PAD.

When CMT receives a WSF command and the first or only  structured
field  is  Read  Partition  with Query Operations, the predefined
Query Reply with partition is returned to the  Host  PAD  in  DSP
data  format as if a 3270 control unit had acknowledged the query
and returned its characteristics.  The command is flushed.

The  Query  Reply  with  partition  is  defined  by  the   system



Page 164                  CMTI.ERS







WRITE STRUCTURED FIELD COMMAND             February 27, 1990



generation  process  and  CMT  does  not  examine  this response.
However, CMT does format the reply as a DSP Response.

If CMT is configured to support WSF commands with the  structured
field  type,  Read  Partition  with  Query  Operations,  they are
supported for all devices configured for the interface.

13.3  SYSTEM GENERATION

There are two macros that are used to configure  and  define  the
support  capability  for  Write Structured Field commands in CMT.
CMT is defaulted not to support WSF commands.  The code  required
for  WSF  processing  is  not  included in the interface when not
needed.  The support capability is changed by the DEFRPL macro.

There are default replies for both CRTs and printers included  in
CMT.   The  RPLTXT  macro is used to define alternate replies for
CRTs or printers.

13.3.1  DEFRPL - DEFINE DEFAULT QUERY REPLY RESPONSE

Syntax: DEFRPL(label,type)

Description:

Inclusion of the DEFRPL macro in the Tymfile  configures  CMT  to
respond  to  WSF  command  structured  fields  of  the type, Read
Partition with Query Operations, with the appropriate reply.   As
such,  CMT  intervenes  in  the  processing of WSF commands.  The
arguments are optional.  If no  arguments  are  included  in  the
macro statement, the canned replies, as defined in this document,
are sent in response to WSF commands with  structured  fields  of
the  type,  Read Partition with Query Operations.  There are four
canned replies, one  for  CRTs,  one  for  Kanji  CRTs,  one  for
printers, and one for Kanji printers.

Alternate replies are defined in the  Tymfile  using  the  RPLTXT
macro.   To  define  alternate replies, the label associated with
the reply is the first argument  of  the  DEFRPL  macro  and  the
device  type,  either  CRT,  KANCRT, PRT or KANPRT, is the second
argument.  An alternate reply may be defined for any of the  four
types:  CRTs,  Kanji  CRTs,  printers, and Kanji printers.  (Four
DEFRPL macros must be  included  in  the  Tymfile  to  define  an
alternate reply for all four types.)

Example: DEFRPL

CMT is configured to process WSF commands and the canned  default
replies  are  sent  in  response  to WSF commands with structured
fields of the type, Read Partition with Query Operations.




Page 165                  CMTI.ERS







WRITE STRUCTURED FIELD COMMAND             February 27, 1990



Example: DEFRPL(WSCRT,CRT)
         DEFRPL(WSKCRT,KANCRT)
         DEFRPL(WSPRT,PRT)
         DEFRPL(WSKPRT,KANPRT)

CMT is configured to process WSF commands and  alternate  replies
are  sent  in  response to WSF commands with structured fields of
the type, Read Partition with Query  Operations.   These  replies
are defined by the RPLTXT macro.

13.3.2  RPLTXT - CONTENTS OF QUERY REPLY RESPONSE

Syntax: RPLTXT(label,b0,b1,b2,...,b14)

Description:

This macro defines the text and label for the  Query  Reply  with
partition  that  CMT  returns  to the Host PAD when a WSF command
with structured field type, Read Partition with Query Operations,
is received.  This macro is used to define alternate replies.

The RPLTXT macro takes 16 arguments, the first  being  the  label
for the text string or the label, CONT.  CONT is used to indicate
the continuation of the reply  defined  in  the  previous  RPLTXT
macro.   The  messages  may  be  of  any length provided there is
sufficient  memory  and  they  don't  exceed  3270   block   size
limitations.

Example:

RPLTXT(WSCRT,00,07,81,88,00,01,02)
RPLTXT(WSKPRT,00,11,81,0A6,00,00,0B,01,00,05)
RPLTXT(CONT,00,01,80,50,00,18)

13.4  CMT CANNED RESPONSE TO WSF COMMAND

The  canned  responses  to  a  WSF  Read  Partition  with   Query
Operations  are  stored  in CMT.  There is a reply for CRTs and a
reply for printers.

The canned response for non-Kanji CRTs (in hex) that is  returned
to  the  Host  PAD indicates that the device does not support WSF
commands and the CRT does not support Kanji.  The reply follows:

0017818101000050001800000200890002008509100780001181A600000B010000
50001800500018

The canned response for CRTs (in hex) that  is  returned  to  the
Host  PAD indicates that the device does not support WSF commands
but the CRT does support Kanji.  The reply follows:




Page 166                  CMTI.ERS







WRITE STRUCTURED FIELD COMMAND             February 27, 1990



88001781810100005000180000652710006527100D1D0780002381858E000C1800
0000000B00000000000000014C01228020F81818417F0172012C000A818C000000
000000000B81910003018003020100078188000102000C81950000080008000101
00168186000800F4F100F200F300F400F500F600F700000D81870400F0F1F1F2F2
F4F4001181A600000B01000050001800500018

The canned response for  non-Kanji  printers  (in  hex)  that  is
returned  to  the  Host  PAD  indicates  that the device does not
support WSF commands and the printer does not support Kanji.  The
reply follows:

001781813100008400660000010064000200850A0807B00010818580000A080400
000003000000

The canned response for printers (in hex) that is returned to the
Host  PAD indicates that the device does not support WSF commands
but the  printer  does  support  Kanji  (as  sent  by  IBM3283-52
printer).  The reply follows:

88001781813100009E007F00000100F0000100F0142007B0001B81858800142004
00000007000000000000008020F81C20417F000681880001

13.5  DOCUMENTATION

Parts of this documentation are taken from the following manuals:

   o  IBM 3270 Information Display System Data
      Stream Programmer's Guide, Order Number GA23-0059-1
   o  IBM 5550 PC with Japanese 3270 Manual, 5600-JWF V4.01
      Order Number N:SC18-2059-3, Appendix B
      This manual is referred to as IBM/JAPAN/PC Manual in
      the earlier sections.
   o  TYMNET 3270 BSC System Generation Reference Manual
   o  General Design Specification for Hitachi Protocol

13.6  OUTBOUND STRUCTURED FIELDS

       ID     NAME
      ----    ----------------
        00    Reset Partition

     *  01    Read  Partition
              02 = Query
              03 = Query List
              6E = Read Modified All
              F2 = Read Buffer
              F6 = Read Modified

     *  03    Erase/Reset

        06    Load Programmable Symbols



Page 167                  CMTI.ERS







WRITE STRUCTURED FIELD COMMAND             February 27, 1990



     *  09    Set Reply Mode

        0B    Set Window Origin

        0C    Create Partition

        0D    Destroy Partition

        0E    Activate Partition

     *  40    Outbound 3270 DS

        41    SCS Data

        4A    Select Format Group

        4B    Present Absolute Format

        4C    Present Relative Format

    **  D0    File Transfer

      0F01    Set MSR Control

      0F0A    Modify Partition

      0F71    Outbound Text Header

      0FC1    Outbound Type 1 Text

  Note : *  Defined in IBM/USA and IBM/JAPAN/PC Manuals
         ** Defined in IBM/JAPAN/PC Manual Only

13.7  INBOUND STRUCTURED FIELDS

       ID     Name
      ----    ---------------------
        80    Inbound 3270 DS

        81    Query Reply
            * 81    Usable Area

        83    Text Partition
              84    Alpha Partition
            * 85    Character Set
            * 86    Color
            * 87    Highlight
            * 88    Reply Modes

        8A    Field Validation




Page 168                  CMTI.ERS







WRITE STRUCTURED FIELD COMMAND             February 27, 1990



        8B    MSR Control
            * 8C    Field Outlining
              90    Format Presentation
            **91    DBCS(SO/SI)

        92    Save/Restore Format
            **95    DDM(Distributed Data Management)

        A0    Device Characteristics

        A1    RPQ Names

        A2    Data Stream
            * A6    Implicit partitions

      0FB1    Inbound Text Header

      0FC1    Inbound Type 1 Text

      1034    Save/Restore Format Inbound

  Note : *  Defined in IBM/USA and IBM/JAPAN/PC Manuals
         ** Defined in IBM/JAPAN/PC Manual Only































Page 169                  CMTI.ERS







CMTI ACCOUNTING ADDENDA                    February 27, 1990



                  14.  CMTI ACCOUNTING ADDENDA

This chapter discusses the  accounting  messages  that  the  CMTI
interface  sends to the Supervisor. Tymnet accounting gathers raw
accounting for use in billing Tymnet customers.

CMTI  (Character  Mode  Terminal  Interface)   allows   supported
terminals  to  access  3270  applica tions via a 3270 Bisync Host
Interface, X.25 Host Interface, or SNA Host Interface to  a  Host
sup porting Display System Protocol. It is a server-type product.
One circuit is created from origin (such as a terminal interface,
CONSAT)  to  server  (such as CMTI), and one or more circuits are
created from the server to the destination host  interface  (such
as  XCOM,  SNA,  PBH).  CMTI pro vides the accounting information
through the "addendum to accounting" message (ISIS B7).

Each ISIS B7 message has fixed length - 8 bytes.

_________________________________________________________________
|                               |               |               |
| RPORT                         | B7            | Unused        |
|_______________________________|_______________|_______________|
| Accounting Value              |               |               |
|_______________________________|_______________|_______________|


RPORT (2 bytes)           : Relative port number for the dispatch
B7 (1 byte)               : ISIS message for accounting addenda
Unused (1 byte)           : CMTI puts the value zero here
Accounting Value (4 bytes): See the following format

The format for CMTI accounting value is:

_________________________________________________________________
| type  | stype | contents                                      |
|_______|_______|_______________________________________________|

type (4 bits)     : the first 4 bits of each message indicates the
                    message type
stype (4 bits)    : a 4 bit subtype
contents (24 bits): a 24 bit number

14.1  CIRCUIT COMPLETION ACCOUNTING MESSAGES

CMTI sends the B7 Accounting Message to the  Supervisor  when  it
builds  the  circuit to the host interface and receives the logon
success message (ISIS B6 message). If user logs on with CRT  only
and  the  circuit is built successfully, CMTI gets one B6 message
and sends the B7 message to the Supervisor. If user logs on  with
CRT   and  the  attached  printer  and  two  circuits  are  built
successfully (one circuit for CRT and the other for the printer),



Page 170                  CMTI.ERS







CMTI ACCOUNTING ADDENDA                    February 27, 1990



CMTI  gets  two  B6  messages  and  sends  two B7 messages to the
Supervisor.

The value of accounting message used by CMTI is as follows:

_________________________________________________________________
| type  | stype | contents                                      |
|_______|_______|_______________________________________________|

type (4 bits)     : message type 14 (decimal)
stype (4 bits)    : subtype 10 (decimal)
contents (24 bits): invoice number

When the circuit connection between CONSAT (a terminal interface)
and CMTI is successful, CMTI gets the needle from the Supervisor.
The needle contains the invoice number which is the same one that
CMTI  uses for accounting message type 14. The sub-type 10 called
server-invoice number type is  used  for  a  server-type  product
(like  CMTI).  The invoice number permits the corre lation of the
accounting for the two circuits (one from the terminal  interface
to  server,  and  the  other  one  from  the  server  to the host
interface or for  the  three  circuits  (one  from  the  terminal
interface  to  server,  one from the server to the host interface
for CRT, and one from the server to the host inter face  for  the
attached  printer),  which  constitute one virtual circuit to the
user.

14.2  CIRCUIT TERMINATION

The circuit termination can be either from the host interface  or
from  CMTI.  A  zapper  (ISIS 9F) type message is used by CMTI to
disconnect the accounting activity.

14.2.1  CIRCUIT TERMINATION FROM CMTI

If the circuit termination is originated by CMTI,  the  host  and
terminal  interfaces  receive  a  detach  message (ISIS 9E) and a
zapper message (ISIS 9F) respectively, and both  interfaces  send
zap ac knowledged messages (ISIS BB) to CMTI as well. If there is
a circuit for the  attached  printer,  the  host  interface  also
receives  a detach message (ISIS 9E) and sends a zap acknowledged
message to CMTI upon the circuit termination.

14.2.2  CIRCUIT TERMINATION EITHER FROM THE HIF OR FROM THE TIF

Upon receipt of a zapper message either from the  host  interface
or  from  the  terminal  interface, CMTI sends a zap acknowledged
message to both interfaces. CMTI also sends  a  zap  acknowledged
message upon receipt of a zapper message for the attached printer
from the host interface.




Page 171                  CMTI.ERS







CMTI ACCOUNTING ADDENDA                    February 27, 1990



Note: What the Dispatcher does upon the receipt of a zapper  type
message  and  the  accounting  ac-  tivity  for  the  process the
interface  uses  to  disconnect,  refer  to  "Accounting  Addenda
Generated by the Dispatcher".


















































Page 172                  CMTI.ERS







                                           February 27, 1990























                           APPENDICES

































Page 173                  CMTI.ERS







CMT KEY SEQ FOR PAPER-TTY & GLASS-TTY      February 27, 1990



          I.  CMT KEY SEQ FOR PAPER-TTY & GLASS-TTY

3270 KEYS               CMTI KEYS               ASCII sent
                                                to Tymnet
---------               ----------              ----------
ENTER                   CTRL-M or <CR>          0D
BACKSPACE               CTRL-B                  02
HOME                    ESC H or ESC h          1B 68
FORWARD TAB             CTRL-I or TAB           09
CLEAR                   CTRL-C                  03
NEW LINE                CTRL-N                  0E
BACKSPACE-DELETE        CTRL-H                  08
ERASE-EOF               DELETE                  7F
RESET                   CTRL-R                  12
ZAP CIRCUIT             CTRL-Z                  1A
REDISPLAY               ESC R or ESC r          1B 72
PA1                     CTRL-P 1                10 31
PA2                     CTRL-P 2                10 32
PA3                     CTRL-P 3                10 33
PF1                     ESC 1                   1B 31
PF2                     ESC 2                   1B 32
PF3                     ESC 3                   1B 33
PF4                     ESC 4                   1B 34
PF5                     ESC 5                   1B 35
PF6                     ESC 6                   1B 36
PF7                     ESC 7                   1B 37
PF8                     ESC 8                   1B 38
PF9                     ESC 9                   1B 39
PF10                    ESC 0                   1B 30
PF11                    ESC !                   1B 21
PF12                    ESC @                   1B 40
PF13                    ESC #                   1B 23
PF14                    ESC $                   1B 24
PF15                    ESC %                   1B 25
PF16                    ESC ^                   1B 5E
PF17                    ESC &                   1B 26
PF18                    ESC *                   1B 2A
PF19                    ESC (                   1B 28
PF20                    ESC )                   1B 29
PF21                    CTRL-F 1                06 31
PF22                    CTRL-F 2                06 32
PF23                    CTRL-F 3                06 33
PF24                    CTRL-F 4                06 34











Page 174                  CMTI.ERS







RELAY-GOLD KEY SEQUENCES FOR GLASS-TTY     February 27, 1990



          II.  RELAY-GOLD KEY SEQUENCES FOR GLASS-TTY

3270 KEYS               RELAY-GOLD              ASCII sent
                        PC KEYS                 to Tymnet
---------               ----------              ----------
ENTER                   ENTER                   0D
BACKSPACE               CTRL-B                  02
HOME                    ALT-H                   1B 68
FORWARD TAB             TAB                     09
CLEAR                   CTRL-C                  03
NEW LINE                CTRL-N                  0E
BACKSPACE-DELETE        ALT-E                   08
ERASE-EOF               DELETE                  7F
RESET                   CTRL-R                  12
ZAP CIRCUIT             CTRL-Z                  1A
REDISPLAY               ALT-R                   1B 72
PA1                     ALT-1                   10 31
PA2                     ALT-2                   10 32
PA3                     ALT-3                   10 33
PF1                     F1                      1B 31
PF2                     F2                      1B 32
PF3                     F3                      1B 33
PF4                     F4                      1B 34
PF5                     F5                      1B 35
PF6                     F6                      1B 36
PF7                     F7                      1B 37
PF8                     F8                      1B 38
PF9                     F9                      1B 39
PF10                    F10                     1B 30
PF11                    ALT-F1                  1B 21
PF12                    ALT-F2                  1B 40
PF13                    ALT-F3                  1B 23
PF14                    ALT-F4                  1B 24
PF15                    ALT-F5                  1B 25
PF16                    ALT-F6                  1B 5E
PF17                    ALT-F7                  1B 26
PF18                    ALT-F8                  1B 2A
PF19                    ALT-F9                  1B 28
PF20                    ALT-F10                 1B 29
PF21                    CTRL-F1                 06 31
PF22                    CTRL-F2                 06 32
PF23                    CTRL-F3                 06 33
PF24                    CTRL-F4                 06 34











Page 175                  CMTI.ERS







RELAY-GOLD KEY DEFINITIONS FOR FILENAME    February 27, 1990



         III.  RELAY-GOLD KEY DEFINITIONS FOR FILENAME

In order to use RELAY-GOLD package to emulate TTY terminal, users
have  to  create  a  file  called  TTY3270.KEY to define the code
sequences for part of  3270  function  key  that  Glass-TTY  will
support.
















































Page 176                  CMTI.ERS







RELAY-GOLD KEY DEFINITIONS FOR FILENAME    February 27, 1990



FILE NAME : TTY3270.KEY

Key definitions for TTY emulation in ANSI mode.

For use with TYMNET's Async-t0-3270 protocol conversion service.

DELETE  SEND X"7F"              ;* ERASE-EOF key
ENTER   SEND X"0D"              ;* ENTER key
TAB     SEND X"09"              ;* TAB key
A-H     SEND X"1B68"            ;* HOME key
A-R     SEND X"1B72"            ;* Redisplay screen
A-S     STATUS                  ;* RELAY Gold status display
A-1     SEND X"1031"            ;* PA1 key
A-2     SEND X"1032"            ;* PA2 key
A-3     SEND X"1033"            ;* PA3 key
F1      SEND X"1B31"            ;* PF1 key
F2      SEND X"1B32"            ;* PF2 key
F3      SEND X"1B33"            ;* PF3 key
F4      SEND X"1B34"            ;* PF4 key
F5      SEND X"1B35"            ;* PF5 key
F6      SEND X"1B36"            ;* PF6 key
F7      SEND X"1B37"            ;* PF7 key
F8      SEND X"1B38"            ;* PF8 key
F9      SEND X"1B39"            ;* PF9 key
F10     SEND X"1B30"            ;* PF10 key
A-F1    SEND X"1B21"            ;* PF11 key
A-F2    SEND X"1B40"            ;* PF12 key
A-F3    SEND X"1B23"            ;* PF13 key
A-F4    SEND X"1B24"            ;* PF14 key
A-F5    SEND X"1B25"            ;* PF15 key
A-F6    SEND X"1B5E"            ;* PF16 key
A-F7    SEND X"1B26"            ;* PF17 key
A-F8    SEND X"1B2A"            ;* PF18 key
A-F9    SEND X"1B28"            ;* PF19 key
A-F10   SEND X"1B29"            ;* PF20 key
C-F1    SEND X"0631"            ;* PF21 key
C-F2    SEND X"0632"            ;* PF22 key
C-F3    SEND X"0633"            ;* PF23 key
C-F4    SEND X"0634"            ;* PF24 key

PGUP    SEND X"1B37"            ;* Same as PF7
PGDN    SEND X"1B38"            ;* Same as PF8

$XBEGIN SEND X"1B5842"          ;* ECHO OFF, begin file xfer
$XEND   SEND X"1B5845"          ;* ECHO ON, end file xfer
$RESET  SEND X"120A"            ;* RESET+CLEAR for file xfer
$ENTER  SEND X"0D"              ;* ENTER for file xfer
$PA2    SEND X"1032"            ;* PA2 for file xfer






Page 177                  CMTI.ERS







CMTI CRASH CODES                           February 27, 1990



                  IV.  CMTI CRASH CODES

CODES   REASON
-----   ------
   00 - Power failure
   01 - Manual restart
   03 - GCI crash, when get characters from rings
   04 - MCI crash, when move all characters from source to destination buffer
   05 - WCI crash, when write characters to rings
   06 - WRE crash, unreasonably fast storage drain
   0D - Buffer argument out of range
   0E - Parity error
   0F - Free timeout list exhausted
   10 - Dispatcher crash
   11 - Illegal instruction
   12 - Illegal SVC
   13 - System crash
   14 - Protection violation
   15 - Non-recoverable device check
   16 - Watch-frog timeout
   20 - Invalid port zero message
   21 - No activation routine in DCB
   22 - Invalid needle received
   23 - Invalid message received
   30 - Out of screen buffers
   31 - Read characters in EDMRCV routine
   32 - Bad character pair crash
   33 - Error returns from optimizer
   34 - No CCB available
   35 - Negative DXLIM (spaces remaining in output)
   36 - Error return from printer transfer
   37 - Out of logon element
   38 - Host missing language type
   39 - Terminal missing language type




















Page 178                  CMTI.ERS







CMTI MESSAGES                              February 27, 1990



                      V.  CMTI MESSAGES

The following is the documentation of all  CMTI  messages.   They
all  have  an  error  code which enables further documentation of
error conditions, which is  useful  for  both  English  and  non-
English slots.

All messages are redefinable in either the Tym file or  in  an  M
file.   The  M  file  is  a  separate  file  assembled  after the
initialization file which is used to redefine all of the messages
in  the  product  (see  M  file  section).  The redefinition of a
message uses the Inner macro name, the Inner macro being just the
text part of the message so that no control characters need be in
the Tym file or M file redefinition.  The Inner macro  names  are
documented here also.

Certain messages must remain in English for slots that will  make
use  of  enhanced  terminals  (8-bit terminals) like the Japanese
Katakana terminals.  This is for the messages that  arise  before
the  terminal has been selected, and therefore CMTI does not know
which mapping table to use.  When in doubt the message should  be
coded in hex with the high bit off, to ensure proper display.

The other English-only messages are the assembly  error  messages
(which  are  generated  by  the  assembler, not CMTI) and the COM
(CMTI Operations Monitor) which remains in English for all  slots
for  support  reasons.   It  is  felt  that support would be more
difficult if the COM were in  a  native  language  when  English-
speaking support personnel were involved.

Messages are defined in either Ascii or Ebcdic, depending on  the
usage.  Test messages are not documented here.






















Page 179                  CMTI.ERS







CMTI MESSAGES                              February 27, 1990



V.1  NON-ERROR MESSAGES


IN EBCDIC:

INNER
MACRO   MESSAGE
------------------------------------------------------------------------

 .MI1   LOGON IN PROGRESS

 .MI3   PLEASE LOGON                    (PROMPT FOR PASSWORD SCREEN)
 .MI5   PASSWORD:



THE EBCDIC MANUAL LOGON SCREENS:

INNER
MACRO   MESSAGE
------------------------------------------------------------------------
 .MI3   PLEASE LOGON:
 .MI4   USERNAME:
 .MI5   PASSWORD:

 .MI6   CONNECTION REQUEST MODE:
 .MI7   DESTINATION INTERFACE ADDRESS:
 .MI8   APPLICATION IDENTIFIER:
 .MI9   DESTINATION CONTROL UNIT:
 .MI10  DESTINATION DEVICE ADDRESS:
 .MI51  LANGUAGE:
 .MI52  LANGUAGE TYPE: 0 = ENGLISH
 .MI53  4 = KATAKANA
 .MI54  5 = KANJI


IN ASCII:

INNER
MACRO   MESSAGE
------------------------------------------------------------------------
 .MI2   SELECT LOGON PROCEDURE
 .MI50  SELECT TERMINAL TYPE











Page 180                  CMTI.ERS







CMTI MESSAGES                              February 27, 1990



V.2  ERROR MESSAGES

V.2.1  LOGON PROCESS ERROR MESSAGES



FORM:   NEW
EBCDIC  ERROR   INNER
/ASCII  CODE    MACRO   MESSAGE TEXT


  E     001     .MI11   BAD MUD
  E     002     .MI12   MUD ERROR
  E     003     .MI13   ACCESS NOT PERMITTED
  E     004     .MI14   HOST SHUT TO NEW LOGONS
  E     005     .MI15   BAD HOST NUMBER
  E     006     .MI16   HOST OUT OF PORTS
  E     007     .MI17   NO HOST SPECIFIED
  E     008     .MI18   HOST NOT AVAILABLE
  E     009     .MI19   HOST OR COMMUNICATIONS LINE UNAVAILABLE
  E     010     .MI20   CIRCUITS BUSY
  E     011     .MI21   TRY AGAIN IN 2 MINUTES
  E     012     .MI22   USERNAME ERROR DURING STORED LOGON
  E     013     .MI23   PASSWORD ERROR DURING STORED LOGON
  E     014     .MI24   PLEASE SEE YOUR REP...
  E     015     .MI25   BAD STORED DSP ELEMENT - LOGON ABORTED
  E     016     .MI26   NO GATEWAY LOGON ALLOWED.  LOGON FAILED
  E     017     .MI27   LOGON FAILED
  E     018     .MI28   NO PRINTER CAPABILITY...PLEASE SELECT AGAIN
  E     019     .MI29   NO PRINTER CAPABILITY...CIRCUIT BUILT FOR CRT ONLY
  E     020     .MI30   TYPE USERNAME
  E     021     .MI31   TYPE PASSWORD

  A     022     .MI32   DESTINATION RESOURCES UNAVAILABLE
  A     023     .MI33   NO CMTI RESOURCES CURRENTLY AVAILABLE
  A     024     .MI34   NOT A VALID USER ON THIS COMPUTER
  A     025     .MI35   INVALID TERMINAL SELECTION, PLEASE TRY AGAIN.

















Page 181                  CMTI.ERS







CMTI MESSAGES                              February 27, 1990



V.2.2  IN-PROCESSING ERROR MESSAGES



  A     026     .MI36   DATA TRANSFER OR HOST FACILITY PROBLEM
  A     027     .MI37   RECEIVED AN EXTERNAL ZAPPER, CIRCUIT IS DISCONNECTED
  A     028     .MI38   3270 PROTOCOL ERROR: TRANSPARENT DATA RECEIVED FROM HOST
  A     029     .MI39   DSP  PROTOCOL ERROR: INVALID DSP SEQUENCE NUMBER
  A     030     .MI40   3270 PROTOCOL ERROR: ESCAPE BYTE MISSING
  A     031     .MI41   3270 PROTOCOL ERROR: INVALID COMMAND CODE
  A     032     .MI42   3270 PROTOCOL ERROR: INVALID SCREEN ADDRESS
  A     033     .MI43   ILLEGAL DSP STATUS MESSAGE FROM HOST
  A     034     .MI44   TERMINAL IN 7-BIT MODE, ONLY 8-BIT ALLOWED
  E     035     .MI45   ENGLISH TERMINAL NOT ALLOWED TO ACCESS A KATAKANA
                        CIRCUIT
  E     036     .MI46   ENGLISH TERMINAL NOT ALLOWED TO ACCESS A KANJI CIRCUIT
  E     037     .MI47   KATAKANA-ONLY TERMINAL NOT ALLOWED TO ACCESS A KANJI
                        CIRCUIT
  E     038     .MI48   INVALID CHARACTER SET SELECTED, TRY AGAIN
  A     040     .MI55   MF ORDER: NO FIELD ATTRIBUTE AT THIS POSITION, CIRCUIT
                        ZAPPED
  A     045     .MI56   TOO MANY PRINTERS LOGGED ON
  A     046     .MI57   TOO MANY DEVICES LOGGED ON
  A     047     .MI58   FROM DEVICE NOT MATCHED IN COPY COMMAND
  A     048     .MI59   CONTROL UNIT NOT MATCHED IN COPY COMMAND
  A     049     .MI60   SYSTEM REQUEST KEY PROTOCOL VIOLATION
  A     050     .MI62   ALTERNATE SCREEN SIZE ERROR - CIRCUIT ZAPPED
  A     051     .MI63   INVALID KANJI SHIFT CODE - CIRCUIT ZAPPED


























Page 182                  CMTI.ERS







READER COMMENT FORM                        February 27, 1990



                  VI.  READER COMMENT FORM

Please use this form to tell us your opinions of this document.



                                                YES    NO

1. Does this document meet your needs?          ___    ___

2. Is the manual

   A. Accurate?                                 ___    ___

   B. Easy to read and understand?              ___    ___

   C. Complete?                                 ___    ___

   D. Well organized?                           ___    ___

3. Make specific constructive comments on the reverse, including

   - clarifications and errors

   - additions needed

   - deletions needed

4. What is your position and level of technical knowledge?





Please make other comments  on  the  reverse  of  this  page  and
remember that all comments are valuable to us.  We appreciate the
time you have taken to do this.


Please return completed forms to        CMTI Unit

                                Network Technology Development

                                BT Tymnet

                                2560 North First Street

                                San Jose, Ca   95161






Page 183                  CMTI.ERS







VALID TERMINAL TYPES                       February 27, 1990



                 VII.  VALID TERMINAL TYPES

        (The entries are sorted by the names of terminals)

MACRO NAME      TERMINAL NAME                   PRINTER SUUPORT
----- ----      -------- ----                   ------- -------
ADDHDX          ADDS Viewpoint 60 (HDX)         yes
ADD69M          ADDS Viewpoint 60               yes
ADD78M          ADDS Viewpoint 78               yes
ADD69M          ADDS Viewpoint 90               yes
ADM11M          Lear Siegler ADM11              yes
ADM11M          Lear Siegler ADM1178            yes
ADM11M          Tymshare 431                    yes
ADM12M          Lear Siegler ADM12              yes
ADM3AM          Lear Siegler ADM3a              no
ADM42M          Lear Siegler ADM42              yes
AT4425          AT &T 4425 & TELETYPE 5425      yes
BEDM5A          Beehive ATL-78 (DM5A mode)      yes
BEE78M          Beehive ATL-78 (DM78 mode)      yes
BEE78M          Beehive 78 (DM78 mode)          yes
CM3101          IBM 3101 - character mode       no
CONVT           Convergent terminal             no
CP108M          Concept 108                     yes
D41060          Data General Dasher D410/D460   yes
DASHER          Data General Dasher             no
                D100/D200/D210
DISPLM          Nothern Telecom Displaphone     no
EXLINK          Datastream 3270 emulation       yes
FT3101          Ftterm IBM 3101 emulation       no
HAZELM          Hazeltine 1500                  no
HP26XX          HP2622 through HP2628           no
                (HP2621 not included)
HP2621          HP2621                          no
IB3161          IBM 3161 MODEL 11               yes
PCI78M          PCI Networker 1078              yes
QT101M          Qume QVT101                     yes
QT103M          Qume QVT103                     yes
SCSETM          Scanset 410,415                 no
SMRTYM          Smartym terminal                yes
T5420M          TELETYPE 5420                   no
T78HDX          TYMNET78 PC software (HDX)      yes
TELE91          Televideo 910                   no
TELE92          Televideo 920                   yes
TELE92          Televideo 925                   yes
TELE92          Televideo 950                   no
                (TV920 compatable)
TELE92          Televideo 921                   no
                (TV925 compatable)
TV970M          Televideo 970                   yes
TTYM            Texas Instruments Silent 707    no
VT100M          Anderson Jacobson 520           no



Page 184                  CMTI.ERS







VALID TERMINAL TYPES                       February 27, 1990



                (VT100 compatible)
VT100M          Datastream 178                  no
                (VT100 compatible)
VT100M          DEC VT100 (with AVO)            yes
VT100M          DEC VT101                       no
VT100M          DEC VT102                       no
VT100M          DEC VT125                       no
VT100M          DEC VT131                       yes
VT220M          DEC VT220                       yes
VT52M           DEC VT52                        no
VT100M          Direct 831 (VT100 compatible)   no
WYSE50          WYSE 50                         yes










































Page 185                  CMTI.ERS







                          CONTENTS


  1.  INTRODUCTION .................................................  1
      1.1   CONNECTIVITY ...........................................  1
      1.2   ACCOUNTING .............................................  1

  2.  TERMINAL/USER INTERACTION ....................................  2
      2.1   ECHO CONTROL ...........................................  2
      2.2   LOCAL TERMINAL FUNCTIONS ...............................  2
            2.2.1    WHY LINEFEED MAPS TO CLEAR ON SOME TERMINALS ..  3
            2.2.2    FLDTAB ........................................  3 
            2.2.3    BACKTAB .......................................  4
            2.2.4    HOME ..........................................  4
            2.2.5    NEWLIN ........................................  4
            2.2.6    CURLEFT .......................................  4
            2.2.7    CURRIGHT ......................................  4
            2.2.8    CURUP .........................................  5
            2.2.9    CURDOWN .......................................  5
            2.2.10   DELCHAR .......................................  5
            2.2.11   EEOF ..........................................  5
            2.2.12   INSMODE .......................................  5
            2.2.13   FCNENT ........................................  6
            2.2.14   PF KEY DEFINITIONS ............................  6
            2.2.15   PA KEY DEFINITIONS ............................  6
            2.2.16   FCNCLR ........................................  7
            2.2.17   TTY BACKSPACE .................................  7
            2.2.18   RESET .........................................  7
            2.2.19   REDISPLAY .....................................  8
            2.2.20   CURSEL ........................................  8
            2.2.21   KILL ..........................................  8
      2.3   LOGON TO CMT/3270 ......................................  8
      2.4   AUTOMATED LOGON USING PC'S ............................. 10
            2.4.1    CONSAT PVC .................................... 10
            2.4.2    MENU BYPASS ................................... 10
      2.5   MULTI- TARGETTING AND HOST- COSTING .................... 11
      2.6   PROCESSING ERRORS ...................................... 11
            2.6.1    FORWARD ABORT ................................. 11
            2.6.2    OUT OF STORAGE - SCREEN BUFFERS AND BUFFERLETS  12
      2.7   INPUT INHIBITED ........................................ 12
      2.8   COM - CMTI OPERATIONS MONITOR .......................... 12
            2.8.1    INTRODUCTION .................................. 12 
            2.8.2    COMMANDS AND INFORMATION DISPLAYED ............ 13
                     2.8.2.1   HELP ................................ 13 
                     2.8.2.2   INSTRUCTION  ........................ 13
                     2.8.2.3   QUIT  ............................... 14
                     2.8.2.4   EXIT  ............................... 14
                     2.8.2.5   VERSION  ............................ 14
                     2.8.2.6   STATE ............................... 14
                     2.8.2.7   NAMES ............................... 15
                     2.8.2.8   MENU ................................ 15
                     2.8.2.9   USER ................................ 16
                     2.8.2.10  PORTS ............................... 17
                     2.8.2.11  CRASH ............................... 17
                     2.8.2.12  IRING ............................... 18
                     2.8.2.13  ORING ............................... 18
                     2.8.2.14  RINGS ............................... 18
                     2.8.2.15  WCNT ................................ 19
      2.9   PERSONAL COMPUTERS AND CMT/3270 ........................ 19
            2.9.1    CANNED LOGON .................................. 19
            2.9.2    FILE TRANSFER ................................. 20
                     2.9.2.1   IBM FILE TRANSFER -- FTTERM ......... 21
            2.9.3    NEW ESCAPE SEQUENCES .......................... 23
            2.9.4    WRITING EMULATORS ............................. 23
                     2.9.4.1   SCREEN FLASHING - BOP and FOP
                               SCREEN BLOCKING ..................... 23
            2.9.5    TYMNET SUPPORT OF PC AUTHORS .................. 24
      2.10  PRINTER SUPPORT ........................................ 24
            2.10.1   CONFIGURATIONS FOR ASYNC PRINTER SUPPORT ...... 25
      2.11  MICRODATA CMT DEVELOPMENT .............................. 28
            2.11.1   MICRODATA TYMFILE CONFIGURATION ............... 29
                     2.11.1.1  CMT TYMFILE ......................... 29
                     2.11.1.2  HOST INTERFACE TYMFILE .............. 30
            2.11.2   MICRODATA STATUS LINE FORMAT .................. 31
            2.11.3   COPY COMMAND .................................. 33
      2.12  SYS/REQ KEY ............................................ 34
            2.12.1   USER-INITIATED SESSION SWITCH ................. 35
            2.12.2   HOST-INITIATED SESSION SWITCH ................. 36
            2.12.3   MESSAGE FORMAT ................................ 36
                     2.12.3.1  MESSAGE FORMAT FROM SNA HOST
                               INTERFACE TO CMT .................... 36
                     2.12.3.2  MESSAGE FORMAT FROM CMT TO THE
                               SNA HOST INTERFACE .................. 37
            2.12.4   VERIFICATION OF VERSION NUMBER ................ 37
      2.13  CRM4 ................................................... 38
            2.13.1   LOGON PROCEDURE ............................... 38
                     2.13.1.1  CRT LOGON ........................... 38
                     2.13.1.2  PRINTER LOGON ....................... 39
            2.13.2   CMT TYMFILE CONFIGURATION ..................... 39
            2.13.3   RESTRICTIONS .................................. 40

  3.  THE TYM FILE ................................................. 47
      3.1   GENERAL MACROS ......................................... 41
            3.1.1    DEFHST ........................................ 42
            3.1.2    DEFHDR ........................................ 42
      3.2   STORED LOGON DEFINITIONS ............................... 42
            3.2.1    DISCUSSION .................................... 42
            3.2.2    PASSWORD CHARACTERS ALLOWED ................... 43
            3.2.3    PROMPT FOR PASSWORD ........................... 43
      3.3   DEFELE MACRO - INDICATE CHARACTER SET TYPE ............. 43
            3.3.1    DEFSTR ........................................ 45 
            3.3.2    DEFMEN ........................................ 46
            3.3.3    DEFUSR ........................................ 47
            3.3.4    DEFTTY ........................................ 47
            3.3.5    MENUSR ........................................ 47
            3.3.6    DEFTRM ........................................ 48
            3.3.7    ALLTRM ........................................ 48
      3.4   STORED LOGON ........................................... 48
      3.5   MANUAL LOGON PROCEDURES - CRT AND PRINTER .............. 50
            3.5.1    MANUAL LOGON .................................. 50
            3.5.2    MANHST MACRO .................................. 51
            3.5.3    MANUAL: MANUAL LOGON FOR CRT .................. 51
            3.5.4    MANPTR: MANUAL LOGON FOR CRT AND PRINTER ...... 63
      3.6   MISCELLANEOUS MACROS AND PARAMETERS .................... 64
            3.6.1    APL EDIT MACRO ................................ 64
            3.6.2    MANCHR MACRO .................................. 65
            3.6.3    JTERMS MACRO .................................. 65 
            3.6.4    DEFCAL ........................................ 65 
            3.6.5    DEFLU1 ........................................ 66
            3.6.6    DEFPRT ........................................ 66
            3.6.7    DEFTRC ........................................ 66
            3.6.8    DEFCUD ........................................ 67 
            3.6.9    FROG .......................................... 67
            3.6.10   CRSTOP ........................................ 67 
            3.6.11   MXCLMN ........................................ 67
            3.6.12   MXPAGE ........................................ 68 
            3.6.13   NCRSAV ........................................ 68
            3.6.14   NBFLET ........................................ 68
            3.6.15   NOSEQ ......................................... 69
            3.6.16   NUMLCK ........................................ 69 
            3.6.17   PBUFSZ ........................................ 69
            3.6.18   SCSNLN ........................................ 69 
            3.6.19   SCSTRN ........................................ 60
            3.6.20   WTFTR  ........................................ 60
            3.6.21   CHRMAP ........................................ 60 
                     3.6.21.1  REMAPC .............................. 61
                     3.6.21.2  UKSET ............................... 63 
            3.6.22   PRLTEN ........................................ 63 
            3.6.23   OPTAZR ........................................ 64 
            3.6.24   NULS78 ........................................ 64
            3.6.25   TTYCRLF ....................................... 64 
            3.6.26   PRJCOD ........................................ 65
            3.6.27   XPGFFH ........................................ 65
      3.7   DEFINE COPY-COMMAND GROUP .............................. 66
            3.7.1    CMT TYMFILE ................................... 66
            3.7.2    HOST INTERFACE TYMFILE ........................ 67
      3.8   DEFINE CRM4 PRINTER .................................... 68
      3.9   CHANGING FUNCTION KEY ASSIGNMENTS ...................... 71
            3.9.1    FUNCTION KEYS ................................. 71
      3.10  SENDING ESCAPE SEQUENCES FROM HOST TO TERMINAL ......... 72

  4.  STATUS LINE .................................................. 74 
      4.1   MACROS FOR STATUS LINE ................................. 74
	    4.1.1    DEFSTA ........................................ 74
	    4.1.2    LUNAME ........................................ 74
	    4.1.3    HICHG ......................................... 75
	    4.1.4    SESCHG ........................................ 75
	    4.1.5    STACHG ........................................ 76
      4.1   STATUS LINE FIELD DEFINITIONS .......................... 76
            4.2.1    BSC/SNA/X.25/CMT/UNK .......................... 76
            4.2.2    APPL/SYS/? .................................... 77
            4.2.3    CRT:lu name ................................... 77 
            4.2.4    PRT:lu name ................................... 78
            4.2.5    - F ........................................... 78
            4.2.6    WAIT .......................................... 78 
            4.2.7    ISRT - insert mode ............................ 78 
            4.2.8    PROT - protected field ........................ 78 
            4.2.9    NULK - numeric lock ........................... 78 
            4.2.10   LOCK - keyboard locked ........................ 79
      4.2   FORMAT OF THE STATUS LINE .............................. 79
            4.2.1    BSC STATUS DISPLAY ON THE UPPER-RIGHT CORNER .. 84
            4.2.2    SNA STATUS DISPLAY ON THE UPPER-RIGHT CORNER .. 84
            4.2.3    X.25 STATUS DISPLAY ON THE UPPER-RIGHT CORNER . 85
            4.2.4    CMT STATUS DISPLAY ON THE UPPER-RIGHT CORNER .. 86
            4.2.5    UNK STATUS DISPLAY ON THE UPPER-RIGHT CORNER .. 86
      4.3   KEY SEQUENCES FOR VARIOUS STATUS LINE DISPLAYS ......... 87
            4.3.1    EXIT THE STATUS DISPLAY ....................... 87
            4.3.2    ENTER THE STATUS DISPLAY ...................... 87
            4.3.3    CHANGE TO ANOTHER AREA TO DISPLAY THE STATUS .. 89
      4.4   THE CONDITIONS WHICH UPDATE THE STATUS LINE ............ 89
      4.5   ALLOWABLE KEYS WHILE KEYBOARD LOCKED ................... 90
      4.6   TERMINALS SUPPORTING A 25TH LINE ....................... 90

  5.  INACTIVITY TIMER ............................................. 91
      5.1   CMT INACTIVITY TIMER ................................... 91
            5.1.1    SESSION INACTIVITY TIME INTERVAL .............. 91
            5.1.2    USER WARNING MESSAGE INACTIVITY TIMEOUT ....... 91
            5.1.3    EFFECTIVE INACTIVITY TIME INTERVAL ............ 92
      5.2   NEW MACROS ............................................. 92
            5.2.1    DEFIAT Macro .................................. 92 
            5.2.2    DEFUSR Macro .................................. 93
            5.2.3    DEFMSG Macro .................................. 94
            5.2.4    IATMSG Macro .................................. 94
      5.3   TYMFILE CONFIGURATION .................................. 94
      5.4   EFFECTIVENESS AND RECOMMENDATION ....................... 96

  6.  KATAKANA AND KANJI 3270 EMULATION ............................ 97
      6.1   MANUAL LOGON ........................................... 98
      6.2   DOWNWARD COMPATABILITY WITH OLDER VERSIONS ............. 98
      6.3   LOWER CASE ALPHA CHARACTERS ............................ 99
      6.4   CHARACTER SETS AND SHIFT CODE DESCRIPTIONS .............100
      6.5   KATAKANA CHARACTER SET .................................110
      6.6   TERMINAL CHARACTER SETS ................................110
      6.7   JIS- 8 CHARACTER SET ...................................110
      6.8   CHARACTER SET DIFFERENCES  .............................113
      6.9   SHIFT CODES ............................................113 
      6.10  ECHO ...................................................114
      6.11  HIGH- BIT HANDLING .....................................114
      6.12  HOW KANJI WILL BE HANDLED ..............................114
      6.13  REJECTING KANJI FROM THE TERMINAL ......................114
      6.14  PROCESSING KANJI FROM THE HOST .........................115
      6.15  KATAKANA SHIFT CODE REJECTION ..........................115 
      6.16  LOGON AND ENSURING 8- BIT MODE ON THE TERMINAL CIRCUIT .116
            6.16.1   REMOVING 7- BIT SPACE PARITY ..................116
      6.17  STORED LOGON ERRORS VERSUS USER- FRIENDLINESS ..........116
      6.18  MESSAGE HANDLING - CMTI AND OTHER SOURCES ..............116
            6.18.1   THE M FILE ....................................117
            6.18.2   NON- REDEFINABLE TEXT .........................118 
            6.18.3   REDEFINING TERMINAL NAMES .....................118
      6.19  IBM ORDERS AND READ BUFFER PROCESSING ..................119
            6.19.1   ATTRIBUTE TYPES ...............................119
            6.19.2   START FIELD EXTENDED ..........................119 
            6.19.3   MODIFY FIELD ..................................110
            6.19.4   SET ATTRIBUTE .................................110
            6.19.5   READ BUFFER ...................................110
      6.20  FUJITSU SUPPORT ........................................110
            6.20.1   TYMFILE CHANGES ...............................110
            6.20.2   AID'S .........................................111
            6.20.3   FUJITSU COMMANDS ..............................111
            6.20.4   FUJITSU ORDERS ................................111
                     6.20.4.1  EXTENDED ATTRIBUTES .................111
      6.21  HITACHI SUPPORT ........................................112
            6.21.1   TYMFILE CHANGES ...............................112
            6.21.2   DEVICE ADDRESSING .............................112
            6.21.3   AID'S, INCLUDING THE BREAK KEY ................112
            6.21.4   HITACHI COMMANDS ..............................113
                     6.21.4.1  WRITE, ERASE- WRITE, COPY COMMANDS ..113
                     6.21.4.2  WRITE CB0 CONTROL BYTE ..............113
                     6.21.4.3  ERASE/WRITE CB2 CONTROL BYTES .......113
                     6.21.4.4  COPY CB1 CONTROL BYTE ...............114
            6.21.5   HITACHI ORDERS ................................114
                     6.21.5.1  SF AND SFE DFC BYTES ................114
                     6.21.5.2  STATUS/SENSE MESSAGES ...............115
            6.21.6   PRINTER CONSIDERATIONS ........................115
                     6.21.6.1  PRINTERS TO IMPLEMENT ...............116
                     6.21.6.2  PRINTER LINE LENGTH .................116
      6.22  TEXT BLOCKING ..........................................116
            6.22.1   FORWARD ABORT .................................117
            6.22.2   PRINTER LOGIC .................................117

  7.  CMT HALF- DUPLEX MODE FOR T78 PC SOFTWARE ....................118
      7.1   INTRODUCTION ...........................................118 
      7.2   TYMFILE FOR THE HALF- DUPLEX- MODE TYMNET78 ............118
      7.3   LOGON TO CMT ...........................................118 
      7.4   FUNCTIONS IN THE TYMNET78 HALF- DUPLEX OPERATION .......119
            7.4.1    CLEAR SCREEN ..................................119
            7.4.2    ZAP CIRCUIT ...................................119
            7.4.3    ENTER .........................................119
            7.4.4    DELETE CHARACTER ..............................119
            7.4.5    RESET .........................................119
            7.4.6    TAB ...........................................120
            7.4.7    BACK TAB ......................................120
            7.4.8    CURSOR SELECT .................................120 
            7.4.9    ERASE TO END OF FIELD .........................121
            7.4.10   ERASE ALL INPUT ...............................121
            7.4.11   NEW LINE ......................................121
            7.4.12   REDISPLAY .....................................121
            7.4.13   HOME CURSOR ...................................122
            7.4.14   INSERT MODE ...................................122
            7.4.15   PF KEY DEFINITIONS ............................122
            7.4.16   PA KEY DEFINITIONS ............................122
            7.4.17   CURSOR LEFT OR BACKSPACE ......................122
            7.4.18   CURSOR RIGHT ..................................122
            7.4.19   CURSOR UP .....................................123
            7.4.20   CURSOR DOWN ...................................123
            7.4.21   SYSTEM REQUEST KEY ............................123
            7.4.22   STATUS LINE ...................................123
      7.5   FUNCTION KEYS FOR THE TYMNET78 PC SOFTWARE .............124
            7.5.1    TYMENT78 LOCAL FUNCTIONS ......................124
            7.5.2    TYMNET78 REMOTE FUNCTIONS .....................125
      7.6   OTHER FEATURES FOR THE TYMNET78 ........................126
            7.6.1    XON/XOFF ......................................126
            7.6.2    COLOR MONITOR .................................126
            7.6.3    BUFFERED SCREEN MODE ..........................127
      7.7   ASCII CODES FOR THE TYMNET78 TERMINAL FUNCTIONS ........127
      7.8   CMT OPTIMIZER FOR THE TYMNET78 .........................128
      7.9   CONFIGURATION SET-UP OF THE TYMNET78 ON THE PC .........129

  8.  LU1 PRINTER SUPPORT CMTI/3270 ................................130 
      8.1   INTRODUCTION ...........................................130
      8.2   DATA STREAM PROCESSING .................................130
            8.2.1    DATA STREAM FORMAT - DSP ......................131
            8.2.2    SCS CONTROL CODE PROCESSING ...................131
            8.2.3    DATA STREAM FORMAT - CHARACTER MODE ...........134
            8.2.4    PRINT LINE FORMATTING - SHF FORMAT CONTROLS ...134
            8.2.5    PRINT PAGE FORMATTING - SVF FORMAT CONTROLS ...135
            8.2.6    PRINT CONTROL .................................136
      8.3   SAMPLE TYMFILE .........................................136

  9.  SEPARATE CIRCUIT AND PRINTER ONLY LOGON ......................138
      9.1   SEPARATE CIRCUIT FOR PRINTER ...........................138
            9.1.1    HANDLING OF PRINT BUFFER ......................139
      9.2   PRINTER ONLY LOGON   ...................................139
            9.2.1    GETTING THE PRINTER ID   ......................140
      9.3   SYSTEM GENERATION   ....................................140
            9.3.1    SOLOPT - PRINTER ONLY LOGON MACRO  ............140
      9.4   LIMITATIONS ............................................151
      9.5   SAMPLE TYMFILE .........................................151

 10.  CIRCUIT BALANCING AND LOAD LEVELING ..........................153
      10.1  INTRODUCTION ...........................................153
      10.2  MULTIPLE HOST CONFIGURATIONS ...........................153
            10.2.1   MULTI- TARGETING ..............................153
            10.2.2   MULTI- BASING .................................154
            10.2.3   MULTI- TARGETING/MULTI- BASING ................154
      10.3  LOAD- LEVELING .........................................154
      10.4  PORT AVAILABILITY ......................................154 
      10.5  HIF FAILURE ............................................155
      10.6  MACROS .................................................155
            10.6.1   MLTBAS ........................................155
            10.6.2   PRTLTD ........................................155
            10.6.3   STHCST ........................................156
            10.6.4   HIFOUT ........................................156
      10.7  LIMITATIONS ............................................157

 11.  CMTI TTY ENHENCEMENT .........................................158
      11.1  INTRODUCTION ...........................................158 
      11.2  OLD FUNCTION KEYS ......................................158
            11.2.1   CLEAR SCREEN ..................................158
            11.2.2   ZAP CIRCUIT ...................................159
            11.2.3   ENTER OR RETURN ...............................159
            11.2.4   RESET .........................................159
            11.2.5   ERASE TO END OF FIELD .........................159
            11.2.6   BACKSPACE- DELETE .............................159
            11.2.7   HOME KEY ......................................150
            11.2.8   REDISPLAY KEY .................................150
            11.2.9   PF KEYS .......................................150
            11.2.10  PA KEYS .......................................150
      11.3  NEW FUNCTION KEYS ......................................150
            11.3.1   BACKSPACE .....................................150
            11.3.2   NEW LINE ......................................151
            11.3.3   FORWARD TAB ...................................151
      11.4  NEW OPTIMIZER FOR TTY ..................................151
      11.5  NEW OPTION IN THE TYMFILE ..............................152
            11.5.1   XFERSP ........................................152
            11.5.2   DEFPRT ........................................152
      11.6  USING RELAY- GOLD FOR FILE TRANSFER ....................153
      11.7  RELAY- GOLD SET- UP FOR GLASS- TTY .....................153

 12.  DUP FM and ATTN KEYS .........................................155
      12.1  INTRODUCTION ...........................................155
            12.1.1   DUP KEY .......................................155
            12.1.2   FM KEY ........................................155
            12.1.3   ATTN KEY ......................................155
      12.2  KEY PERFORMANCE ON THE SCREEN ..........................156
            12.2.1   DUP KEY PERFORMANCE ...........................156
            12.2.2   FM KEY PERFORMANCE ............................157
            12.2.3   ATTN KEY PERFORMANCE ..........................160
      12.3  KEY DEFINITION FOR FULL- DUPLEX TERMINALS ..............161
      12.4  KEY DEFINITION FOR HALF- DUPLEX TERMINALS ..............162

 13.  WRITE STRUCTURED FIELD COMMAND ...............................163
      13.1  STRUCTURED-FIELD FORMAT ................................163
      13.2  WRITE STRUCTURED FIELD COMMAND SUPPORT .................164
            13.2.1   CMT DOES NOT PROCESS WSF COMMANDS .............164
            13.2.2   CMT DOES PROCESS WSF COMMANDS .................164
      13.3  SYSTEM GENERATION ......................................165
            13.3.1   DEFRPL - DEFINE DEFAULT QUERY REPLY RESPONSE ..165
            13.3.2   RPLTXT - CONTENTS OF QUERY REPLY RESPONSE .....166
      13.4  CMT CANNED RESPONSE TO WSF COMMAND .....................166
      13.5  DOCUMENTATION ..........................................167
      13.6  OUTBOUND STRUCTURED FIELDS .............................167
      13.7  INBOUND STRUCTURED FIELDS ..............................168

 14.  CMTI ACCOUNTING ADDENDA.......................................170
      14.1  CIRCUIT COMPLETION ACCOUNTING MESSAGES .................170
      14.2  CIRCUIT TERMINATION ....................................191
            14.2.1   CIRCUIT TERMINATION FROM CMTI .................191
            14.2.2   CIRCUIT TERMINATION EITHER FROM THE HIF OR
                     FROM THE TIF ..................................191



                         APPENDICES



  I.  CMT KEY SEQ FOR PAPER- TTY & GLASS- TTY .........................174

 II.  RELAY- GOLD KEY SEQUENCES FOR GLASS- TTY ........................175

III.  RELAY- GOLD KEY DEFINITIONS FOR FILENAME ........................176

 IV.  CMTI CRASH CODES ................................................178

  V.  CMTI MESSAGES ...................................................179
      V.1   NON- ERROR MESSAGES .......................................180
      V.2   ERROR MESSAGES ............................................181
            V.2.1    LOGON PROCESS ERROR MESSAGES .....................181
            V.2.2    IN- PROCESSING ERROR MESSAGES ....................182

 VI.  READER COMMENT FORM .............................................183

VII.  VALID TERMINAL TYPES ............................................184
    J@V