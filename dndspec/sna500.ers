.\" to print file use: soelim filename  | tbl | pic -Tpsc -D | psroff

.nr O 1.2i
.nr W 6.5i

.so /usr/calvin3/rodney/doc/lib/tmac

\&
.S 28
.ls 2
.ce 2
.B
.sp
SNA INTERFACE Version 5.00
.S 20
.ce 2
.B
DRAFT REQUIREMENTS STATEMENT
.ls 1
.R
.sp .5i
.S 16
.ls 2
.ce 2
.sp .75i
.ce 1
\*(DT
.sp 1.25i
.S 11 13
.ls 1
.TS
center linesize(36) box;
aw(5.5i).
T{
TYMNET's proprietary rights are included in the information disclosed herein.
The recipient, by receiving this document, agrees that neither this document nor
the information disclosed herein nor any part thereof shall be reproduced or
transferred to other documents or used or disclosed to others for manufacturing
or for any other purpose except as specifically authorized in writing by TYMNET.
T}
.sp .10i
.TE
.ds HP 12 12 12 12  
.ds HF 3 3 2 2
.PH "'SNADRS.DOC''\\\\*(DT'"
.PF "'SNA/SDLC External Reference Manual'\\\\*(a]'Page \\\\n(H1-\\\\nP'"
.H 1 "Introduction and Scope"
.sp  
The TYMNET SNA/SDLC Interface product provides access between an SNA
SDLC PU.T2 (such as a cluster controller) and an SNA/SDLC PU.T4/5
(such as a communication controller).
.sp  
In addition, this interface allows for non-SNA terminal devices
(such as ASYNC and BISYNC terminals)   access to an SNA/SDLC PU.T4/5. 
When a non-SNA terminal device is used, other TYMNET interfaces
must be used in conjunction with the SNA/SDLC Interface to provide for
the terminal support. Usage of a non-SNA terminal device is very close to
that of an SNA/SDLC terminal once the network signon procedures are completed.
.sp  
All of the original functions and capabilities of the PU.T4/5 and the remote
PU.T2 are preserved with little or no change to the system
generation of either the  communication controller or cluster controller.
.sp   
The SNA/SDLC Interface runs in a job slot on an ISIS network node. Host 
and terminal interfaces may reside in the same slot. The host interface 
appears 
as one or more SNA/SDLC cluster/terminal controller(s) to the host
front-end communication controller. The terminal interface provides local 
control of the
SNA/SDLC cluster/terminal controllers.
.SK 0
.H 2 "Introduction" 
.sp      
A TYMNET network  consists of a collection  of minicomputers (nodes)
interconnected by communication lines to allow information to travel
along alternative  paths between nodes  in the network.  The primary
function of  a node is  to pass  information. Nodes, typically  , do
little or no  processing of application tasks but do  provide a wide
range of communication interfacing capability.  As an enhancement to
the range of  communication interfaces provided  by the  Tymnet
network, Tymshare is extending its TYMNET  products to include the
support of the IBM SNA/SDLC communication protocol.
.sp   
SNA/SDLC Revision 1.03 includes native terminal and host interface and
virtual (DSP) host interface. Native mode interface provides support
for connections between SNA PU type 4 (communication controllers) and
PU type 2 (cluster controllers) nodes and LU-LU type 2 sessions.
The interface running a native mode gives the capability to build a connection
from a terminal to any host attached to the network (manually or with pre-set
logon stream) independently from other terminals on the same CU.
.sp  
The Tymnet SNA DSP Virtual Host Interface product provides the
access (1) between IBM 8100 Information System (or other PU type 4
Communication Controllers) and BSC Cluster Controllers (e.g. 3274,
3276, etc.) (2) between IBM Communication Controllers and
ASYNC terminals (such as,ADM-3A,VT-100,etc.).
SNA DSP Virtual Host Interface provides support for LU types 2 and 3.
.sp  
Devices (e.q. 3278, 3279, etc) on an BSC cluster
controller which are connected to the TYMNET BSC3270 Terminal
interface can individually access different hosts (SNA,BSC or other
hosts) and applications, increasing the flexibility of those BSC remote devices.
Printer support is also provided.
.sp  
ASYNC terminals connected to TYMSAT can individually
access different IBM hosts  which
are connected to the TYMNET SNA DSP Virtual Host Interface via
TYMNET CMT Interface. The types of CRT's or printers supported are
limited only by the current capabilities of CMT.
.sp   
If BSC or ASYNC devices are used as terminals, other TYMNET products
(BSC3270 TIF and/or CMT) must be used as terminal interface. The
corresponding information on these products could be found elsewhere.
.SK 0
.H 2 "References and Documents"
.sp   
The relevant documents include the following:
.sp  
[1] IBM SDLC General Information (GA27-3093)
.sp
[2] IBM SNA General Information (GA27-3102)
.sp
[3] IBM SNA Logical Unit Types (GC20-1868)
.sp
[4] IBM SNA Format and Protocol Reference Manual (SC30-3112)
.sp
[5] IBM 3270 Component Description (GA27-2749)
.sp
[6] IBM 3776/3777 Component Description (GA27-3145)
.sp
[7] ECMA Standard ECMA-71 HDLC Selected Procedures
.sp
[8] TYMNET ISIS-II Reference Manual
.sp
[9] TYMNET Interface Information Exchange (IIX)
.sp
[A] TYMNET 3270 ERS
.sp
[B] TYMNET SNA/SDLC Network Interface ERS
.sp
[C] TYMNET SNA/SVC Sysgen Manual
.sp
[D] TYMNET CMT/3270 ERS
.sp
[E] IBM General Information - Binary Synchronous Communications
.sp
[F] 3270 Display System Protocol
.SK 0
.H 1 "Support in a TYMNET Network"
.sp 2
.H 2 "TYMNET SNA/SDLC Network"
.sp 
TYMNET SNA/SDLC Interfaces can be used to replace links between SNA/SDLC
hosts and SNA/SDLC terminal/Cluster controllers and to convert BSC 3270
type (DSP) protocol into SNA. (For ASYNC device conversion from ASYNC to
DSP is performed by CMT product).
.sp 
.SK 0
The following diagram illustrates the interconnection of SNA/SDLC
hosts and terminals of various types using TYMNET.
.sp 2
.DS
.ft C
            ----------              ----------
            |        |              |        |
            |  IBM   |              |  IBM   |
            |   370  |              |   370  |
            |        |              |        |
            ----------              ----------
                 |                       |
                 |                       |
             --------                --------
             |      |                |      |
             | 370X |                | 370X |
             |      |    +++++++     |      |
             --------   +       +    --------       --------
            SNA | SDLC +         +   SNA / SDLC     | 3276 |
 --------     H | I F +           +   H /  I F      --------
 |      |  BSC  ++++++             +++++++         /
 | 3274 |-------+                         +  SNA  / --------
 |      |  TIF   +                         +--------| 3276 |
 --------         +                        + TIF    --------
                   +                       +
       --------     +      TYMNET          + BSC    --------
       |      | SNA +                     +---------| 3276 |
       | 8100 |-----+                  +++   TIF    --------
       |      | HIF +                 +
       --------     +                +     --------
                    +                +-----| 3275 |
                     +              +      --------
                      +        +++++
                       +      +     |     
                        ++++++      |
                         C|MT       --------
                       TYM|SAT      | 3271 |
                          |         --------
                       --------
                       | VT-  |
                       | 100  |
                       |      |
                       --------

.DE
.ft P
.sp 2 
                   TYMNET Network with SNA/SDLC Interface
.sp
.SK 0
.H 2 "Layout of the TYMNET SNA/SDLC Interface"
Figure 4 shows the conceptual layout of the Tymnet SNA/SDLC Interface.
.sp
.ft C
.nf
.DS
  ----------
  |SNA/SDLC|
  |  Host  |
  |--------|
  |  Front |
  |   End  |
  ----------
     |                     **                ----------
      |                  *     **            |SNA/SDLC|
       ||             *          *           |Terminal|
         |          *              *         |  or    |
          |     *                   *        | Cluster|
  ------------------                  *      ----------
  |   |  HILM    |  |                   *          |
  |   |----------|  |                    *        |
  |   |  HSNM    |  |                      *   |||
  |   |----------|  |                      *  |
  |   |  SDPHM   |  |                      *  |
  |   |----------|  |                      *  |
  |   |  VNPHM   |  |                  -------------------
  |   ------------  |                  |  |   TILM   |   |
  |                 |                  |  |----------|   |
  -------------------                  |  |   TSNM   |   |
 *       |  |  |                       |  |----------|   |
**        |  |  | |             -------|  |  VNPTM   |   |
*          |  |  | |           |       |  -------------  |
*           |  |  | ----------|        |                 |
 *           |  |  ------|             -------------------
  *       ----------      -----                 * 
   *      | CMT IF |           |                *
   *      ----------            |             *
      *     |                    | -------------------
        **  |       T Y M N E T    |   |   PBTM  |   |
       -------------               |   -----------   |
       |   TYMSAT  |            *  |   |  BDPTM  |   |
       -------------*      *       |   -----------   |
             |         **          -------------------
         -----------                           |
         |  ASYNC  |                       ------------
         | terminal|                       | BSC 3270 |
         -----------                       | terminal |
                                           |   or CU  |
                                           ------------
.fi
.DE
.ft P
.sp 2
                   TYMNET SNA/SDLC Interface usage Conceptual layout
.sp 
.SK 0
The SNA/SDLC Interface product consists of the following:
.sp
1. SNA/SDLC Terminal Access
.sp
    -  SNA/SDLC Terminal Interface Link Module (TILM)
.sp
    -  SNA/SDLC Native Mode Terminal Module (TSNM)
.sp
    -  SNA/SDLC VNP (Virtual Network Protocol) Terminal Module
       (VNPTM)
.sp
2. SNA/SDLC Host Access
.sp
    -  SNA/SDLC Host Interface Link Module (HILM)
.sp
    -  SNA/SDLC Native Mode Host Module (HSNM)
.sp
    -  SNA/DSP Virtual Host Convertor Module (SDPHM)
.sp
    -  SNA/SDLC VNP (Virtual Network Protocol) Host Module (VNPHM)
.sp
The TILM is the interface by which an IBM or IBM-compatible terminal
or cluster controller is connected to a TYMNET network. The protocol
used by this module
can be HALF-Duplex Point-to-Point/Multi-Point
Primary SDLC link procedures.
The connected external controller must use the corresponding
Secondary SDLC link procedure.
.sp
The TSNM emulates subset of SNA higher layer protocols to
locally control the connected IBM or IBM compatible SNA/SDLC
terminal/cluster controllers.
.sp
The VNPTM is paired with the VNPHM to permit an SNA/SDLC device to
establish a logical connection (virtual circuit) to an SNA/SDLC
host. The protocol used by these two modules is SNA/SDLC Virtual Network
protocol.  This protocol provides the necessary translation between
SNA/SDLC protocols and the Tymnet network protocols. The VNPTM and VNPHM
protocols are compatible to the TYMNET Bisync 3270 DSP (Display System
Protocol) protocol.
.sp
The HILM is the interface by which an IBM or IBM-compatible host or
front-end processor may be connected to a TYMNET network
using Half-Duplex
Point-to-Point/Multi-Point SDLC Link procedure.
.sp
The HSNM emulates subset of the SNA higher layer protocols to
locally respond to the connected host.
.sp
The SDPHM converts DSP response message arriving from BSC 3270 TIF or CMT
into SNA RU. Alternately, it converts SNA RU's arriving from SNA host to
DSP command message. Local support of other SNA messages is also provided.
.sp
Current SNA/SDLC users may use the TILM and HILM with the
SNA/SDLC SNM modules and
SNA/SDLC VNP modules with little or no changes to their software.
(Changes may be necessary to properly handle timings and disconnects.)
Also no changes are required to TYMNET BSC 3270 and/or CMT products for
the users which already had them for other types of connections.
.sp
.SK 0
.H 2 "Outline of Services"
.sp 2
The following are points of interest as an outline of the SNA/SDLC
interface services.
The supported PU_T2 nodes or devices for such a connection are:
3274, 3276, 8100, 8140, 8150. If the terminal interface used is other
then SNA/SDLC the list of supported devices can be found in corresponding
TIF documentation.
.sp
The supported PU_T4|5 nodes and systems for such a connection are:
37X5, 8100, 8150, 8140.
.sp
The outline of such services are :
.sp
Each device  utilizes a separate virtual circuit. Here, a
device means one 'Logical Unit' for SNA devices.
.sp
A virtual circuit will normally be established by a formatted
network services screen.
.sp
   -  A printer virtual circuit will normally be established by using the
Network Service Screen of a CRT connected to the same TYMNET TIF.
.sp
   -  A remote user/device is capable of communicating with a
number of hosts by changing the network signon.
.sp
   -  Data transfers will be locally acknowledged by the HILM and TILM
by following the SDLC link procedures. For non-SNA devices see
corresponding TIF documentation.
.sp
   -  The interface has configurable retry limits and timers
for the link level procedures.
.sp
   -  The interface has configurable parameters to match the system
characteristics of the connected external IBM or IBM-compatible SNA/SDLC
systems.
.sp
   -  The interface has configurable inactivity timers for each
device to logoff the user from host application.
.sp
   -  Only LU session types 2 and 3 are currently supported (LU type 3
support is limited to Virtual Host Mode only).
.sp
   -  Dial-Up from terminal to SNA Terminal Interface is available on
TYMNET SNA 1.05 and later versions.
.SK 0
.H 1 "TYMNET SNA/SDLC Interface - Principle of Operation"
.sp 2
This section describes the principles of operation
of Tymnet's SNA/SDLC Network interfaces.
It assumes that readers are familiar with SNA protocols and Tymnet
ISIS technology.
.sp 2
.H 2 "SNA/SDLC Terminal Interface"
.sp 
This document covers terminal interface operation for SNA/SDLC native
mode only. See corresponding documentation for operation of terminal
interface for non-SNA terminals.
.sp
.H 3 "SDLC/EIA signalling"
.sp 2
.DS
.ft C
      3276             TIF
        |               |
        |<--- DTR off   | DTR dropped when link is initialized
        |               | until either DSR drops or timer expired
        |<--- DTR on    | DTR raised
        |               |
        /               /
        |    DSR on --->| modem signals incoming call
        |               |
        |<-- SNRM ------|
        |               |
        |----- UA ----->| controller is ready
        |               |
.ft P
.DE
.sp 2
On a switched line, the TIF waits for DSR before issuing an SNRM.
.DS
.sp 2
.ft C
      3276             TIF
        |               |
        |               | Link initialized
        |<--- SNRM -----|
        |               |
        |---- UA ------>| controller is ready
        |               |
.ft P
.DE
.sp 2
On a leased line, the TIF issues SNRM after the link has been
initialized or re-initialized.
.SK 0
.DS
.ft C
      3276              TIF
        |               |
        |<--- SNRM -----| Polling timer starts
        |               |
        |               |
        |               |
        |               | timeout
        |<--- SNRM -----| Polling timer restarts
        |               |
.ft P
.DE
.sp 2
In either configuration, if no response is received, an SNRM will
be issued after the timer expired.
.sp 2
.H 3 "ACTPU"
.sp 2
.DS
.ft C
      3276             TIF
        |               |
        |<--- ACTPU ----|
        |               |
        |- +RSP,ACTPU ->| PU activated
        |               |
.DE
.ft P
.sp 2
Once the link is established, the TIF issues ACTPU to
the controller.
.sp 2
.DS
.ft C
      3276              TIF
        |               |
        |<--- ACTPU ----| APUTO starts
        |               |
        |               |
        |               | timeout,
        |<--- ACTPU ----| re-issue ACTPU, APUTO restarts
        |               |
.DE
.ft P
.sp 2
If a +RSP(ACTPU) is not received within a timeout period
specified in the Tymfile, or any other response is received,
the ACTPU will be re-issued.
The interval between ACTPU's is specified in seconds
in the Tymfile parameter APUTO. (This feature is not implemented in
the first phase.)
.SK 0
.H 3 "ACTLU"
.sp 2
.DS
.ft C
      3276             TIF
        |               |
        |<--- ACTLU ----|
        |               |
        |- +RSP,ACTLU ->| LU activated
        |               |
.DE
.ft P
.sp 2
Once the PU is activated
the TIF issues ACTLU to each LU associated with the PU.
If a +RSP(ACTLU) is not received within a timeout period
specified in the Tymfile, or any other response is received,
the ACTLU will be re-issued.
The interval between ACTLU's is specified in seconds
in the Tymfile parameter ALUTO. (The timeout feature is not implemented in the
first phase.)
.sp 2
.H 3 "Network Services Manager"
.sp
The TIF Network Services Manager (NSM) provides network services,
such as call establishment and call clearing, to the 3276 user.
It delivers these and other services through four
screens; services menu screen, network services screen, manual logon screen,
and DSP screen.
See following section  for a complete description of the NSM and the various screens.
.sp 2
.H 4 "NSM Initiated by TIF"
.sp 2
.DS
.ft C
.nf
      3276             TIF
        |               |
        |<--- BIND -----| NSM BIND
        |               |
        |- +RSP,BIND --ntroller accepts
        |               |
        |<--- SDT ------| Start Data Traffic
        |               |
        |- +RSP,SDT --->|
        |               |
        |<-- NSM menu --| NSS menu
        |               |
        |-- +RSP ------>|
        |               |
.DE
.fi
.ft P
.sp 2
All NSM screens are sent
on a local LU-LU session.
The BIND parameters for this session are defined
in the Tymfile.
The NSM services menu is sent:
.sp
  o after +RSP to ACTLU request
  o after network call is cleared
  o on request from user (not available in Phase I)
.sp 2
.H 4 "NSM requested from user"
.sp
Note: This feature is not available for Phase I.
.sp 
.DS
.nf
.ft C
       3276            TIF
        |               |
        |-- SSCP/LU --->| User entered SYS REQUEST, "Keyword"
        |               |
        |<-- SSCP/LU ---| TIF +rsp
        |               |
        |<-- UNBIND ----| TIF unbind LU/LU end-to-end session
        |- +RSP,UNBIND->|
        /               / 
        |               | NSS menu is sent using the
        |               | local bind profile
        /               /
        |               | while in this state, RUs on the LU-LU
        |               | session from the host get an exception
        |               | response indicating LU BUSY
        |               | <-- LU-LU RU ------
        |               | --- -RSP,LU BUSY -->
        /               /
        |-- menu entry >| once an entry is selected and the
        |<-- exit NSM   | network service is completed,
        |               | TIF unbind the local LU/LU session,
        |               | and bind a LU/LU session using the 
        |               | saved end-to-end bind profile
        |               | the host is sent LUSTAT indicating
        |               | presentation area lost
        |               |--- LUSTAT,082B ---->
        |               |
        /               /
.fi
.DE
.ft P
.sp
All SSCP-LU RUs, except those directed to network services,
are end-to-end.
The ability to log on again while an end-to-end LU-LU session
is established is required to support printer logon.
The string used to invoke this function is defined in the Tymfile
and is not sent on to the host SSCP.
.SK 0
.H 4 "Local Session Bind Timeout"
.sp 2
.ft P
.nf
.DS
       3276            TIF
        |               |
        |<--- BIND -----| BINDTO starts
        |               |
        |               | timeout or -RSP
        |<--- BIND -----| BINDTO restarts
        |               |
.fi
.ft P
.DE
.sp 2
If +RSP is not received in response to the NSM BIND, then
after BINDTO seconds, a Tymfile parameter, the BIND is re-issued.
.sp
.H 4 "Network Logon"
.sp 2
.DS
.ft C
.nf
      3276             TIF                     HIF          3705
        |   Logon       |                       |               |
        |- menu entry ->|                       |               |
        |<--- +RSP -----|                       |               |
        |               |                       |               |
        |<-- call in ---|---- call request ---->|               |
        |    progress   |                       |               |
        |<- call cmplt -|<-- call accepted -----|               |
        |               |                       |               |
        |<-- UNBIND ----|                       |               |
        |- +RSP,UNBIND >|                       |               |
        |               |                       |               |
.fi	
.DE
.ft P
.sp
The are two ways to perform the network logon:
.sp
  1) Manual Logon
  2) Preset Logon
.sp
Manual Logon allows the user to logon into any host interface he/she
desired.
The Preset Logon method minimizes keystrokes and avoids human errors
by displaying a pre-defined logon selection menu.
.sp
Once the user has completed the input to the manual logon menu and hits
the enter key
or an entry is selected from the preset logon selection menu, a network call is placed
to the indicated destination.
This call indicates the type of connection desired (native in this case).
Call progress signals are displayed on the network services screen,
i.e. call in progress, call completed, etc.
When the call is completed, the local LU-LU network services
session is unbound.
.SK 0
.DS
.nf
.ft C
       3276            TIF                     HIF          3705
        |               |                       |               |
        |               |                       |               |
        |               |--- network call ----->|               |
        |               |<---- call accepted ---|               |
        |               |                       |--- Host is -->|
        |               |                       |  informed of  |
        |               |                       | incoming call |
        |               |                       |<- SSCP-LU RU's|
        |               |<--- SSCP/LU RU's -----|               |
        |<-- SSCP/LU ---|                       |               |
        |    RU's       |                       |               |
        |               |                       |               |
        |--- SSCP/LU -->|                       |               |
        |     RU's      |---- SSCP/LU RU's ---->|               |
        |               |                       |-- SSCP/LU --->|
        |               |                       |    RU's ----->|
        |               |                       |               |
.fi	 
.DE
.ft P
.sp 2
Once the call is completed the host interface informs the host of the call
recieved to solicit the host welcome banner (see description of the opration
of the host interface for more details).
From this moments on most of the  SSCP-LU data
and LU-LU data will be treated as end-to-end data.
In the example above the host sends SSCP-LU banner message in response
to host interface actions.
The 3276 screen is now owned by the SSCP.
All SSCP-LU data, except for network services commands, are
handled end-to-end.
SSCP-LU message sent by the terminal operator in this example is actually
a part of end-to-end logon procedure, the same as in case of straight
connection between 3274 and 3705 after banner message was received (say,
the operator could key in TSO to connect to TSO host application).
.sp 
Some of the hosts skip this stage and go immediately to the next one.
Others go to the next stage of ene-to-end logon only after the operator
sends SSCP-LU message to the host. In either case, the operation of
both terminal and host interface is exactly the same as for regular
data transmission (see below), that is essentially transparent.
From the standpoint of the network, signon process is already completed,
but end-to-end signon may continue as follows.
.SK 0
.DS
.nf 
.ft C
       3276            TIF                     HIF          3705
        |               |                       |               |
        |               |                       |<-- BIND ------|
        |               |<--- BIND -------------|    menu       |
        |<-- BIND ------|     menu              |               |
        |    menu       |                       |               |
        |               |                       |               |
        |- +RSP,BIND -->|                       |               |
        |               |---- +RSP,BIND ------->|               |
        |               |                       |- +RSP,BIND -->|
        /               /                       /               /
        |               |                       |<-data traffic-|
        |               |<--data traffic (menu)-|   or nothing  |
        |<-data traffic-|        or nothing     |               |
        |   or nothing  |                       |               |
        /               /                       /               /
        |-data traffic->|                       |               |
        |   or nothing  |-data traffic (menu)-->|               |
        |               |        or nothing     |-data traffic->|
        |               |                       |   or nothing  |
        /               /                       /               /
        |               |                       |<-- UNBIND ----|
        |               |<---- UNBIND ----------|     menu      |
        |<-- UNBIND ----|       menu            |               |
        |     menu      |                       |               |
        |               |                       |               |
        |- +RSP,UNBIND >|                       |               |
        |               |--- +RSP,UNBIND ------>|               |
        |               |                       |- +RSP,UNBIND >|
        /               /                       /               /
        |               |                       |<-- BIND ------|
        |               |<---- BIND ------------|  application  |
        |<-- BIND ------|    application        |               |
        |  application  |                       |               |
        |               |                       |               |
.fi
.ft P
.DE
.sp 2
Once a logon is entered to the host SSCP, an end-to-end BIND
is issued by the host.
Some hosts may send an application menu on this session,
and UNBIND the menu session before making a BIND to the
target application.
.SK 0
.DS
.nf
.ft C
       3276            TIF                     HIF          3705
        |               |                       |               |
        |               |                       |<-- UNBIND ----|
        |               |<---- UNBIND ----------|  application  |
        |<-- UNBIND ----|    application        |               |
        |  application  |                       |               |
        |               |                       |               |
        |- +RSP,UNBIND >|                       |               |
        |               |---- +RSP,UNBIND ----->|               |
        |               |                       |- +RSP,UNBIND >|
        /               /                       /               /
        |               |                       |               |
        |               |                       |<-- BIND ------|
        |               |<---- BIND ------------|    menu       |
        |<-- BIND ------|      menu             |               |
        |    menu       |                       |               |
        |               |                       |               |
.fi
.ft P
.DE
.sp 2
On completion of the application session, the application
UNBIND may result in a menu BIND.
.sp 2
.H 3 "Data Flow"
.sp
Once the network call is completed, all LU-LU RUs are
end-to-end.
This includes not only SNA requests but also responses. In fact, almost all
SNA FMD's and DFC's are sent end-to-end in native mode.
.sp  
.H 3 "Logging Off"
.sp
.H 4 "Application Loggoff"
.sp  
.DS
.ft C
.nf
       3276            TIF                     HIF          3705
        |               |                       |               |
        |-- SSCP/LU --->|                       |               |
        |   logoff      |--- SSCP/LU logoff --->|               |
        |               |                       |--- SSCP/LU -->|
        |               |                       |     logoff    |
        |               |                       |<--- UNBIND ---|
        |               |<---  UNBIND ----------|               |
        |<--- UNBIND ---|                       |               |
        |- +RSP,UNBIND >|                       |               |
        |               |---- +RSP,UNBIND ----->|               |
        |               |                       |- +RSP,UNBIND >|
        |               |                       |               |
        |               |                       |               |
.fi
.ft P
.DE
.sp 2
For the above case the network circuit is not cleared. If the user wishes
to clear the network circuit, he/she must enter the NSM and select the
Network Logoff function.
.sp
.H 4 "Application Loggoff and Network Loggoff"
.sp 2
.DS
.ft C
.nf
       3276            TIF                     HIF            3705
        |               |                       |               |
        |---  LU-LU --->|                       |               |
        |     logoff    |---   LU-LU logoff --->|               |
        |               |                       |---  LU-LU --->|
        |               |                       |     logoff    |
        |               |                       |<--- DACTLU ---|
        |               |<--- call cleared ---->|- +RSP,DACTLU->|
        |<--- UNBIND ---|                       |               |
        |- +RSP,UNBIND >|                       |               |
        |               |                       |               |
        |<-- BIND ------|                       |               |
        |   NSS menu    |                       |               |
        |               |                       |               |
.fi
.ft P
.DE
.sp 2
For the above case when the SSCP deactivates the LU, the
network circuit is also cleared.
See host interface operation for more details on logoff process.
.SK 0
.H 2 "SNA/SDLC Host Interface"
.sp  
.H 3 "Startup"
.sp
Startup procedure at the host interface follows the host line enable process.
There might be several CU's on 1 line, but they are independent
from each other.
Typically the process will be as follows (only 1 CU is shown):
.sp 2
.DS
.nf
.ft C
                  HIF                    8150/3705
                   |                         |
                   |     <---- SNRM ----     |  Link level
                   |     -----  UA  ---->    |  set up
                   /                         /
                   |     <---- ACTPU ---     |  SSCP-PU
                   |     -- +RSP(ACTPU) ->   |  activatied
                   /                         /
                   |     <---- ACTLU ---     |  SSCP-LU
                   |     -- +RSP(ACTLU) ->   |  activated
                   |                         |
.DE
.fi
.ft P
.sp 2
The HIF responds to ACTPU and ACTLU from SSCP with +RSP.

At this moment 1 port is made available for signon from the network and
the network supervisor is informed correspondingly. As more ACTLU's are
coming from the host in a similar fashion, more ports become available.
This principle (1 active LU = 1 network port) is adhered to through
all activation and deactivation procedures (there is one exception, see
"Application Timeout" for details).
.sp
More messages could be sent by the host when an LU (device) is enabled.
They may have SSCP-LU FMD's (containing banner message) or BIND (to start
a session for menu screen).
The HIF will refuse any of these requests if a
network circuit is not established.
The principle in this case is to equate "no network circuit" condition
to "power off" or "not available" SNA sense codes.
.sp
Follwing are 2 examples of possible continuations of device activation
process.
.sp 2
.nf 
.ft C
.DS
                 HIF                     8100/3705
                  |                          |
                  |     <--- SSCP-LU FMD -   |   Banner message from
                  /                          /   host
                  |     ----  -RSP(0831) ->  |   Power off
                  |                          |
.fi
.ft P
.DE
.sp 2
Banner message is sent on SSCP-LU session in this example. The host will
not send anything at all after -RSP from HIF.
.sp 2
.nf
.ft C
.DS
                  HIF                   8100/3705
                   |                        |
                   |    <---- BIND ----     |   Start session for
                   /                        /   menu screen
                   |    - -RSP(BIND,080A) ->|   Not available
                   /                        /
                   |    <---- DACTLU --     |   Deactivate device
                   /                        /
                   |    ---- +RSP(DACTLU) - |   +RSP, 1 port less
                   /                        /
                   |    <---- ACTLU ---     |   Activate device
                   /                        /
                   |    ---- +RSP(ACTLU) -  |   +RSP, 1 more port
                   |                        |
.fi
.ft P
.DE
.sp 2
Deactivation and subsequent immediate activation is very typical for
various IBM SNA products (see logoff procedure for example).
.sp 2
.H 3 "Logon"
.sp
When the circuit is being built the HIF and TIF exchage information
according to X.25/DSP standards. This information allows HIF to map the
connection request to appropriate LU (see DSP documentation on connection
request modes). It also tells the HIF what kind of support will be required
during normal data flow (native or DSP virtual).
.sp
Now the HIF tries to inform the host of "circuit built condition" by sending
something of "power on" or "now available" kind of message.
The goal is to solicit any welcome banner which was rejected when there was
no circuit.
The following 2 examples correspond to the examples of disconnected condition.
.sp 2
.DS
.nf
.ft C
      TYMNET      HIF              8100/3705
                   |                   |
 - network call -> |                   |
 <- call accepted -|                   |
 - device status ->|                   |
                   | -- LUSTAT(082B) ->|   Now available, screen
                   |                   |   destroyed
                   /                   /   HIF goes to end-to-end
                   |                   |   mode
                   | <-- +RSP(LUSTAT) -|   +RSP 
                   /                   /
                   | <- SSCP-LU FMD -- |   Host banner welcome
.fi
.ft P
.DE
.sp 2
Everything after +RSP(LUSTAT) is processed in corresponding end-to-end mode
(that is either sent end-to-end as is in native mode or stripped of SNA
headers and enclosed in DSP framing in virtual DSP mode). As a matter of
principal, the logon process in finished for HIF at this point, and the
banner message is processed as described below for regular data flow.
.SK 0
.nf
.ft C
.DS
      TYMNET      HIF              8100/3705
                   |                   |
 - network call -> |                   |
 <- call accepted -|                   |
 - device status ->|                   |
                   |  -- dummy RU -->  |    Now available
                   |                   |    HIF end-to-end
                   |  <-- +RSP ------  |    +RSP
                   /                   /
                   |  <--- BIND ----   |    BIND for menu screen
                   |  -- +RSP(BIND) -> |    +RSP
                   | <-- data traffic -|    Menu screen
.fi
.ft P
.DE
.sp 2
Here everything after +RSP for dummy RU goes through regular data traffic
logic of HIF. Same is true for any possible data traffic necessary for the
host signon. HIF (and TIF) treats this traffic no different than other
data between terminal and host.
.sp 
.H 3 "Data Flow"
.sp
.H 4 "Native Mode"
.sp
Almost no intervention with data traffic is preformed by the interface
in this mode.
Segmented LU-LU RUs are sent on the network circuit
without waiting for the complete RU.
.sp
.H 4 "Virtual DSP mode"
.sp
See section entitled "SNA/DSP protocol convertor".
.sp 2
.H 3 "Logoff"
.sp
.H 4 "Application Logoff"
.sp
Two distinctly different procedures are involved in logoff process:
1. End-to-end logoff; 2. Network logoff (tearing down the circuit).
.sp
The first one is normally performed the same way as in native environment,
that is by keying some special word (like "logoff", "sysoff", etc.).
No deliberate attempt to perform network logoff is made in the interface
if the user performs application logoff.
.sp
However, some of the host systems would send DACTLU as part of their
logoff sequence.
The virtual circuit will be torn down in this case according to the principle
"active LU - active network port" (see also "Application timeout").
.SK 0
.DS
.nf
.ft C
      TYMNET      HIF              8100/3705
                   |                   |
  -- logoff word ->|                   |
                   | LU-LU FMD logoff->|   Logoff keyword from user
                   | <--- +RSP ------- |   +RSP
                   /                   /
                   | <-- data traffic -|   Job summary, etc. from
  <-- data traffic-|                   |   host
                   /                   /
                   | <--- DACTLU ----  |   Deactivate
                   | ---- +RSP ----->  |   LU deactivated, port
<- call cleared -> |                   |   zapped
                   | <---- ACTLU ----  |   Activate
                   | ---- +RSP ----->  |   LU activated, port
                   |                   |   available
.ft P
.fi
.DE
.sp 2
Circuit is cleared in this example solely due to the fact that the host
sent DACTLU. See example in 4.1.6.1 for illustration of the case when
application logoff does not cause network logoff.
.sp
The circuit will be cleared the same way if DACTLU or DACTPU comes from
the host unsolicited. The difference in this case will be that ACTLU
will most likely not follow immedeately. The port will stay unavailable
for network logon until ACTLU is received from the host again (see Startup).
.sp
.H 4 "Application timeout"
.sp
Application logoff sequence described in 4.2.4.1 is very typical for
various IBM host products (TSO, CICS, DPCX for example). For all these
cases application logoff will cause simultaneous network logoff due to
the fact that the host issues DACTLU in logoff sequence.
This side effect of application logoff could be desirable for the user.
.sp
However there might be cases when the user wants to retain the network
circuit after application logoff. A special feature (application timeout) is
provided for this purspose. If it is used the network circuit is retained
if DACTLU is followed by ACTLU and the time interval between the two
does not exceed the user specified application timeout value.
.sp 2
.H 4 "Network Logoff"
.sp
If network logoff is not performed during application logoff and user
wants to break the network connection the network services screen should
be used (see Network Services Manager for native mode of operation or
corresponding sections of BSC3270 or CMT manuals for virtual mode).
Virtual Host Printer connection will typically require this type of
logoff.
.sp
Invitation to clear coming from the terminal interface could be at the moment
when the application end-to-end session (LU-LU session) was already terminated
by the user issuing application logoff command before breaking the network
connection. There is nothing for the host interface to do but break the
network circuit in this case.
Same is true for the printer session if the circuit break happened
after the host transmitted the whole print file and then send UNBIND
for the printer session.
.sp
However if LU-LU session is still active the HIF must inform the host
of circuit break in such a way so that LU-LU session is terminated.
This is accomplished by sending SNA TERM-SELF message to the host.
.sp 2
.DS
.nf
.ft C
      TYMNET      HIF              8100/3705
                   |                   |
<- call cleared -> |                   |
                   | --- TERM-SELF --> |   Inform the host
                   | <---- +RSP ------ |   +RSP
                   /                   /
                   | <---- DACTLU ---- |   Deactivate LU
                   | ----- +RSP -----> |   Ok
                   /                   /
                   | <---- ACTLU ----- |   Activate LU
                   | ----- +RSP -----> |   Port available again
                   |                   |
.DE
.ft P
.fi
.sp 2
Appcation end-to-end session is terminated in the host system and ready
to accept the next logon from the user after this sequence.
.sp
.H 4 "Abnormal break of connection, inactivity timeout"
.sp
Network connection can occaionally break in the middle of end-to-end
application session. The host is notified in this case and the application
is logged off the same way as described in previous paragraph.
.sp
As an option, the HIF will maintain inactivity timeout
selectable by individual LU.
When this timeout occurs, the HIF will
issue TERM-SELF and initiate the process of tearing down the network
connection. The procedure is again the same as described in previous
paragraph.
.SK 0
.H 2 "Network Services Manager"
.sp
This section describes the functions of Network Service Manager for
SNA native mode terminal interface only. See corresponding manual for
Network Service description if other terminal interface is used.
.sp
Printer support functions are currently limited to Virtual Host Mode
only. See the description of Network Service Manager in
a corresponding TIF manual for the detail on building a printer
virtual circuit. See also the chapter on special printer
considerations for the functions of this interface in case of
printer support.
.sp
The Network Services Manager provides user-friendly access
to network functions, such as network logon and logoff,
through a set of services screens.
.sp
These screens are defined in the SNA TIF Tymfile.
A set of screens is assigned to each individual logical unit,
thus two logical units on the same controller may
be assigned two different screen sets.
.sp
.H 3 "Activating the Network Services Manager"
.sp
The NSM is active immediately after a +RSP(ACTLU) is received.
It is also active after a network call is cleared.
.sp
The NSM can be contacted by the user by entering pre-defined keyword
from the SSCP owned screen or by a pre-defined PF key from the PLU owned
screen.
The first screen sent out by the NSM when activated
is the network services menu.
.sp
.H 4 "Network Service Screen Functions"
.sp
The services menu
provides the following functions:
.sp
  o chain to preset logon screen
  o network logoff
  o return to session
  o chain to manual logon screen
  o chain to printer logon screen
  o chain to another services menu
.sp
.H 3 "Manual Logon Screen"
.sp
The manual logon screen provides a formatted screen to guide the
user to input proper network logon information.
.sp
.H 3 "Preset Logon Screen"
.sp
The preset Logon Selection Screen allows the user to select desired host
with pre-defined  destinations. The following is an example of a
Preset logon Screen. The entries on this screen are defined in the TIF
TYMFILE.
.sp 2
.DS
.TS
box,center;
cb
a.
TYMNET SNA Interface  1.03


1. Manual Logon
2. TSO
3. NY Stock Exchange
4. Center 1
5. Center 2

Select Function:

_
.TE
.DE
.sp 2 
.H 3 "DSP Information Screen"
.sp
This screen asks the user to provide further information for attaching the
LU to the desired LU on the host. 
For information about DSP, please refer to 
3270 Display System Protocol document.
.sp
CRM's 2 and 3 defined in DSP are treated identically. They provide the
capability to specify (if necessary) destination CU and/or LU address
to be connected to. If not specified, the first available LU within given
host (defined in logon stream) will be selected in HIF. If any of the
destination addresses is specified (CU and/or LU) it will be matched
with polling address in HIF (except when labels are used, see below).
Both of them are represented by 2 hex
digits (1 byte). These 2 hex digits should be entered on DSP screen
if specific connection is desired.
.sp
This mapping is unacceptable when BSC or CMT is used as a TIF because
CU and device addresses in BSC 3270 are one digit graphic charaters.
To compensate for this difference one byte label could be defined
for every CU and/or LU in SNA HIF. If any of those labels are defined
they are used instead of polling addresses while matching CRM
CU and device information.
.sp
If SNA TIF is used 2 hex digits
corresponding to 1-byte label should be entered on DSP screen if
specific request is desired and connection is to the HIF with labels.
If TIF is running BSC or CMT graphic characters should be used on
the screen (or stored logons). To have a match the labels should also
be graphics in this case.
.sp 
There is no requirement for the labels to be unique. If some of CU's
and/or LU's have the same labels they are treated as a pool for
CRM purposes. CRM fields are treated as a pool name to be signed on
to. Connection occurs with the first available device from the pool.
.sp
For example, we may have 32 LU's on 1 CU, all capable of running TSO,
but only the last 5 running TSO and CICS. The last 5 devices could be
given a label (say, "A"), the rest have no label. In CMT TIF 2
stored logons are defined: a. non-specific, b. specific to device "A".
Then logon a. connects to the first available device, logon b.
connects to one of the last 5 LU's.
.sp
Labels can be also used for the selection of a printer in Virtual Host
Mode. See the chapter on printer considerations for more information.
.sp
One of the elements of DSP information has no standard definition. This
element is appliction identifier. Some interfaces use this field to
request a specific line # to be logged in at the destination interface
(if wildcard selection does not satisfy the user).
.sp 1
SNA interface uses this field to convey 2 different units of information:
user class and line number to be logged in at the destination. Since other
interfaces accept only graphics as valid application ID's only, 6 low bytes
of this 1-byte field are actually used to convey this information.
.sp 
The structure of this byte in SNA interface is CCUUWLLL where
.sp
.in 3
CC - graphic conversion bits to be found from the table below;
.sp
UU - user class. Only 00 and 01 classes are currently defined. Class 01
will override whatever inactivity timeout was defined for host interface
to no timeout for this connection. 00 will have timeout defined at HIF;
.sp
W  - if set to 1 means that the next 3 bits will be used to request specific
line number at destination. Otherwise wildcard line selection is assumed;
.sp
LLL- if W=1 defines line number to log in at destination (0-7). Otherwise
these bits are ignored.
.sp 2
For stored logon the same character must be sysgened rather than entered from
screen.
.sp
If a non-graphic character is sysgened as application ID it will be converted
to 00 (null character) and sent to the host. 00 user class and wildcard
line selection will take place in this case. Same is true if other interfaces
(BSC3270 ot CMT) are used as terminal interface. This concerns also "8D
(CR) character recommended for wild card selection in documentation for these
other interfaces.
.SK 0
.DS
.TS
center,expand,tab(x);
csssss
cccccc
cccccc
cccccc
cccccc
cccccc
cccccc
cccccc
cccccc
cccccc.
GRAPHIC CONVERSION TABLE
_
6-bitxEBCIDICxASCIIxGraphicxUserxLine
valuex x x xclassxselection
_
00 0000x40x20xblankx00xWildcard
00 0001xC1x41xAx00xWildcard
00 0011xC3x43xCx00xWildcard 
00 0100xC4x44xDx00xWildcard
00 0101xC5x45xEx00xWildcard
00 0110xC6x46xFx00xWildcard
00 0111xC7x47xGx00xWildcard
.sp 2
00 1000xC8x48xHx00xLine 0
00 1001xC9x49xIx00xLine 1
00 1010x4Ax5Bx|x00xLine 2
00 1011x4Bx2Ex.x00xLine 3
00 1100x4Cx3Cx<x00xLine 4
00 1101x4Dx28x(x00xLine 5
00 1110x4Ex2Bx+x00xLine 6
00 1111x4Fx21x!x00xLine 7
.sp 2
01 0000x50x26x&x01xWildcard
01 0001xD1x4AxJx01xWildcard
01 0010xD2x4BxKx01xWildcard
01 0011xD3x4CxLx01xWildcard
01 0100xD4x4DxMx01xWildcard
01 0101xD5x4ExNx01xWildcard
01 0110xD6x4FxOx01xWildcard
01 0111xD7x50xPx01xWildcard
.sp 2
01 1000xD8x51xQx01xLine 0
01 1001xD9x52xRx01xLine 1
01 1010x5Ax5Dx]x01xLine 2
01 1011x5Bx24x$x01xLine 3
01 1100x5Cx2Ax*x01xLine 4
01 1101x5Dx29x)x01xLine 5
01 1110x5Ex3Bx;x01xLine 6
01 1111x5Fx5Ex^x01xLIne 7
.sp 2
.TE
.DE
Note: some of the graphics in this table might be different depending on
the keyboard used.
.sp
Values not in the table are currently reserved.
.sp 2
.H 3 "Printer Logon"
.sp 
Printer support in Native Mode is currently not implemented. See
printer logon information in corresponding TIF manuals for Virtual
Host Mode of operation.
.SK 0
.H 2 "SNA/DSP protocol convertor"
.sp
.H 3 "Data transfer from host to terminal"
.sp
Only requests of FMD category are converted to DSP and transmitted through the
network.
.sp
SNA messages of SC and DFC categories are handled locally by host interface
except that COMMAND ABORTED indication (ENQ) is provided for DSP if
CANCEL was received from the host. SNA responses are also provided locally
by HIF.
.sp
SNA chaining and segmentation protocols for FMD requests are mapped into
DSP's trailing character in command message (ETX, ETB or ITB) or X.25 M-bit.
.sp
SNA chain is a set of FMD RQ's starting with 3270 data stream command byte.
This corresponds to one DSP command message which has ETB or ETX as the
trailer byte.
.sp
Therefore for the last SNA segment of last SNA chain
element, we have to specify ETX if change direction was also specified.
Either ETX or ETB can be used if change direction was not specified.
This is a user option and it may have some effect on performance (TIF
will issue an extra select if only ETX's are used), but this effect is
probably limited (the direction is changed most likely after every screen
anyway).
.sp
SNA multi-element chains and segments are mapped into X.25 M-bit if
BSC does not allow transparency. 
In case of transparency multi-element RU chains could be optionally mapped
into ITB (first but not last chain element is
first segment ITB, intermediate is subsequent segment ITB, last but not
first is subsequent ETB or ETX, first and last is first segment ETB or ETX).
SNA segmentation is still reflected in X.25 M-bit.
Performance effect of this option should not be significant if early data
forwarding is employed by terminal interface.
.sp
SNA brackets received from host are treated the same way as change direction.
Additionally, there is an option to map end-of-bracket into DSP's ACK-bit.
Also, SNA's end-of-bracket restores the keyboard even if it was not done
explicitly in 3270 data stream. HIF generates a dummy keyboard, restores and
sends it through the network in this case.
.sp
One additional function for host to terminal data transfer is
the conversion of SCS character streams which are used for FMD's on SSCP-LU
session into corresponding 3270 character streams.
This conversion is performed by HIF if there is no LU-LU session when
this message was received from the host (typically - host banner welcome).
If SSCP-LU data message came during LU-LU session it is discarded without
delivering to terminal and -RSP(082D) (LU busy) is returned to the host.
.sp 2
.H 3 "Terminal to host data transfer"
.sp
DSP RESPONSE consists of one or several segments, each of which in
turn could be transmitted as several X.25 data packets. However it contains
only one 3270 AID at the beginning of the first DSP segment.  On the SNA side,
we have for terminal to host data only one FMD chain (2 chains are possible
if the first are LUSTAT).  Multiple RU chains are available or not as 
specified in BIND.  Segmentation is available.  Maximum RU size is
specified in BIND.
.sp
A segment in DSP RESPONSE does not exceed 256 bytes (including a few bytes
of header and trailer information). On the other hand, RU size (as specified
in BIND) is never less than 256. This means that if multiple RU chains are
allowed we can always map one DSP segment with ETB as a trailer into the
first or intermediate element of RU chain. DSP segment with ETX could be
mapped into last element of RU chain with change direction.
.sp
This is actually the conversion algorithm, except that not every DSP segment
is mapped into separate RU chain. If RU size allows for more data to be
put into the same RU SNA segments are used instead. This should provide for
better performance.
.sp
If multiple RU chains are not allowed on SNA session all ETB's are mapped
into separate SNA segments.
.sp
Segmentation is also used for mapping of X.25 M-bit. The net result of
such mapping provides for early data forwarding (that is the data message
is going through the interface without waiting for the last byte of the
message from the network).
.sp
If the DSP RESPONSE ends with ENQ (that is aborted) SNA CANCEL message is
generated by host interface.
.sp
There is one short-coming in this mapping process. Until the message is
completely received there is no way of saying how long it will be (unless
there is only one DSP segment there, in other words the very 1st segment
ends with ETX). On the other hand the convertor program must specify
chaining option in the very first SNA segment. The result is that (if both
chaining and segmentation were used) "not last chain" will be specified
very frequently even when "last chain" could be used instead (if DSP segment
with ETX had arrived earlier). To compensate for this case, a dummy RU with
"last chain element" is generated. There is some small loss of efficiency
in such cases, but it should not cause any problems unless host application
has a bug with handling this dummy RU.
.sp
DSP RESPONSE's converted to SNA RU chains are sent to the host one at a
time as soon as all SNA state machines maintained by HIF will be in send
state. Every such RU chain specifies change direction. Begin bracket is
specified if brackets are allowed on LU-LU session and the bracket
state machine is in "between bracket" state. End of bracket is never generated
by host interface.
.sp
There are differences between BSC and SNA treatment of half-duplex exchange.
Possible contention is resolved by stacking converted RU chains if SNA state
machines do not allow to send them. Optionally, SNA SIG message can be
generated by the interface with "request to send" signal code. It appears
however that some of IBM host applications are not prepared to handle this
SIGNAL in all conceivable cases.
.sp
DSP STATUS message is converted to SNA LUSTAT. Currently all status codes
are converted to 082B sense code (presentation space integrity lost).
The same LUSTAT message is generated for some error recovery procedures
initiated by host interface.
.sp
As in case of host to terminal data transfer host interface
converts 3270 to SCS character stream if LU-LU session does not exist
(typically during end-to-end signon).
.sp 2
.H 3 "3270 SYS/REQ Function Key Emulation"
.sp
The 3270 system/request function key is emulated by the coupled CMT TIF
and SNA HIF.  The SYS/REQ function key is supported by the CMT 4.00 or
later and the SNA 1.05 or later version.
.sp
The SYS/REQ key is entered by an end user from the keyboard to request
a session change between the LU-LU session and the SSCP-LU session or
between the unowned session and the SSCP-LU session.
.sp
The SYS/REQ key transferring from the CMT to the SNA uses the 3270
command with 'F0' AID.  The message format is described as follows:
.sp
.DS
                byte0    byte1    byte2    byte3
              +--------+--------+--------+--------+
              |   F0   |  SEQ#  | STATUS |   ETX  |
              +--------+--------+--------+--------+
.sp
	SEQ#   - 7E or 7F.
	STATUS - 40 (CMT currently displaying unowned session)
	       - C1 (CMT currently displaying SSCP-LU session)
	       - C2 (CMT currently displaying LU-LU session)
	       - C3 (CMT currently displaying force unowned session)
.DE
.sp
The SYS/REQ key ack. transferring from the SNA to the CMT uses the 3270
command with 'FF' AID.  The message format is described as follows:
.sp
.DS
                byte0    byte1    byte2    byte3
              +--------+--------+--------+--------+
              |   FF   |  SEQ#  | STATUS |   ETX  |
              +--------+--------+--------+--------+
.sp
	SEQ#   - 40 (host initiates the session transaction)
	       - 7E or 7F (SYS/REQ key response)
	STATUS - 40 (current session is unowned)
	       - C1 (current session is SSCP-LU)
	       - C2 (current session is LU-LU)
	       - C3 (current session is force unowned)
	       - C4 (session error)
.DE
.SK 0
.H 2 "Virtual Host Printer"
.sp 2
Printer device is recognized from CRT by SNA host interface by LU type.
For 3270 oriented sessions the procedure attaching a device checks for
LU type 2 (if device is CRT) or type 3 (if it is printer).
This information is contained in LUCB.
.sp
The support of printer in virtual host mode is concentrated in 2 areas:
1. LU service manager (presentation service); 2. Network I/O procedures
(mapping of DSP information and attaching a device).
This chapter deals with both aspects of printer support in turns.
.sp 2
.H 3 "LU type 3 support for Virtual Host printer"
.sp 2
.H 4 "Logon processing"
.sp
The main consideration for LU service during network logon is to notify
the IBM host that the connection is now available to establish (if
necessary) an LU-LU session for transmission of print data.
.sp
The logic for LU type 3 is different from what was described in 4.2.2
only in one respect, namely no SSCP-LU is ever sent to the host.
SSCP-LU LUSTAT(082B) is sent instead.
.sp 2
.H 4 "End-to-end operation"
.sp
The end-to-end operation for LU type 3 is basically the same as for LU
type 2.
Following are the exceptions to this rule.
.sp 2
No SSCP-LU messages will be accepted from the host. Should any such
message arrive, it will be rejected with -RSP(1007) - category not
supported.
.sp 2
After receiving a complete RU chain from the host, the interface will
generate RSP as required (see below the cases
when -RSP can be generated). In case of +RSP and change direction from
the host, it will be immediately
followed by LUSTAT(0002) - no data to transmit, with change direction.
.sp 2
.H 3 "Network I/O procedures for printer support"
.sp 2
Network I/O procedures for VHP (Virtual Host Printer)
support all standard connection request
modes (CRM's) provided by DSP protocol. It is assumed that terminal
interface uses one of these modes when printer signon is performed.
.sp
The essence of connection process reflected in CRM's is to give the
terminal operator some freeedom to either choose a specific line, PU
and LU combination during signon or to be sign on the first available
LU. Intermediate case when user supplies only 1 or 2 of these
parameters and leaves the rest to random choice should be considered.
.sp
The connection process has a special significance for printer signon
because the user will normally route a print report to a specific
printer which is the same as specific LU at the host.
.sp 2
Another possibility is that a printer (or a set of printers) might be
associated with a terminal (or a set of terminals) for some natural
reasons. Say, these could be printers and terminals on one 3270
controller or printer connected to ASCII terminal via auxiliary port.
If the user knows what host port he is using for CRT, he can use
specific host port for the printer signon too. Otherwise, he may
request a printer "associated" with this CRT and this is what CRM4
has to accomplish.
.sp 2
The host interface contains the following means to describe a specific
line, CU (PU) and device (LU) and associations between terminals and
printers.
.sp 2
Application ID in CRM information can be used by TIF user to request
a specific line number (see 4.3.4 for details of application ID
structure in SNA HIF).
.sp 2
PU number and origination LU number could be used in HIF for specific
requests for CU and/or device number. However, BSC and SNA convention
differ in this respect. Also, BSC-oriented TIF's allow only for
graphic charaters for this purpose.
.sp
For this reason, LABEL macro's were introduced in SNA HIF. They give
means to define an arbitrary 1-character label for any PU and/or LU.
Labels are not necessarily unique (that is, they could be the same
for different PU's and/or LU's). The general rule is that if at least
one LABEL macro is defined in the interface, DSP PU/LU information
is matched by label rather than PU/LU number.
.sp
For the purposes of VHP, only label approach is useful and will be
considered in this chapter.
.sp 2
.H 4 "CRM1 usage"
.sp 2
All 3 parameters must be given by TIF user if CRM1 is chosen for
signon. Application ID must be constructed in accordance with
SNA HIF rules.
.sp
More than 1 LU can satisfy the match on all 3 values if labels for
PU's and/or LU's are not unique. First available LU satisfying the
request is assgned in this case.
.sp
A check is performed on device type during the LU assignment. If
the device type indicated in CRM information is CRT, LU type 2
device is assigned. If a printer device is indicated, LU type 3
will be assigned.
.sp 2
.H 4 "CRM2 and CRM3 usage"
.sp 2
All considerations for CRM1 are valid for CRM2 and CRM3 except
it is not required to give all three signon parameters. Those
which are not given will come to SNA HIF as 0. Only non-zero
parameters will be matched in this case.
.sp
As in case of CRM1 more than one device could be available and
match the request. The first available is assigned in this case.
.sp 2
CRM2 and CRM3 are imlemented identically in SNA HIF.
.sp 2
.H 4 "CRM4 usage - to be implemented in version 2.001"
.sp 2
CRM4 is used to connect "associated device". In SNA HIF, it could be
used to connect printer.
.sp 2
Certain things must be done during sysgen to make CRM4 processing
possible. Namely, a printer (or printers) must be somehow associated
with a terminal (or terminals). Current code will associate
a printer (or printers) with a terminal (or terminals) by giving
all devices associated in one group the same LU label. It is
understood that this association may be somewhat restrictive (say,
it does not allow to associate 2 differently labeled terminal LU's
with 1 printer LU). But it is wide enough and does not require
additional tables for the information about associations.
.sp 2
Another thing which is done in SNA HIF code for CRM4 is sending
Additional Destination Designator to TIF in CIRCUIT ENABLE packet
whenever a CRT connection is established with the use of other
CRM's.
.sp
Addtional Destination Designator in SNA HIF consists of 1 to 3
bytes (depending on sysgen). The structure is: LU label, PU label,
line number (in this order). If less than 3 bytes are allowed by
sysgen only first bytes are sent to TIF.
.sp
When TIF originates printer signon with CRM4 it sends back the
Additional Destination Designator (which was received and saved
during CRT signon) in CALL CIRQUIT REQUEST packet.
.sp
Depending on the number of bytes of Additional Destination
Designator received, SNA HIF will choose a printer with the
same LU label, or the same PU and LU label, or the same
line number and PU/LU label as Additional Destination
Designator requires. If more than 1 printer is associated
whith this line number and labels, first available printer
matching the request will be assigned.
.sp 2
.H 3 "Special functions of VHP"
.sp 2
.H 4 "Handling of backpressure and other printer delays"
.sp 2
Printer devices may generate long delays due to an "intervention
required" condition, out of paper, for example. It is important, therefore
to handle various backpressure conditions without losing data
intergrity.
.sp 2
Data intergity is maintained in SNA on SNA chain basis. Any chain
can be rejected with -RSP and then resent by the host.
.sp
Another (and probably better) way to maintain the data integrity is
to send no RSP for the current chain if the delay with transmission
of previous chains occurred.
.sp
Both methods of flow control are implemented in SNA HIF. The choice
should be done during the SYSGEN. The second (no RSP) approach is
preferred if the host application can tolerate indefinitely long
delays with SNA +RSP. It should be noted that -RSP can also cause
problems (like UNBIND of the printer session) for some applications.
The option depends therefore on the host application to be used with
this HIF.
.sp 2
SNA HIF determines the delay condition by checking the status of
the data queue between SNA and Network I/O modules of the interface.
.sp
In case of flow control with no RSP/+RSP the RSP is delayed until
the last segment of the current RU chain is picked up by Network I/O
and excluded from the queue.
.sp
In case of flow control with -RSP, the queue is checked when the first
segment of the chain arrives from the host. If it is not empty -RSP
is sent to the host and the whole chain is discarded. When the
delay clears LUSTAT(available) is sent to the host.
.sp 2
The following sense codes are available to send to the host should
the backpressure requires to reject a chain with -RSP.
.sp
If the chain starts a bracket -RSP(0814) could be used. It should
be followed by RTR when the backpressure clears. This sense code
is not implemented. The condition is treated the same way as if
it were inside-bracket condition.
.sp
If the chain to be rejected arrives in inside-bracket state, the
sense code is 0802 - intervention required.
When the backpressure condition clears LUSTAT(0001)
should be sent to the host.
.sp 2
.H 4 "Printer copy initiated by host"
.sp 2
The host can initiate a CRT-to-printer copy function by sending a
corresponding request to 3270. This request is very
different for BSC and SNA sysgenned 3270s.
.sp 2
In BSC environment there is
a special copy command which is sent to the "to" terminal device and
contains the address of "from" terminal device. It is not clear
whether a partition can be copied.
.sp 2
In SNA environment the printer copy is initiated by sending a write
request to CRT with WCC start printer bit turned on.
.sp
The copy request is executed at the completion of write operation.
.sp
Start printer can be also placed in the last structured field.
.sp
"To" device is not specified in SNA environment. Any printer
configured on the CU and available at the moment can serve as "to"
device. The host has no control over the selection of printer.
.sp 2
SNA HIF scans the FMD's received on LU type 2 session for Write type
commands (including Write Structured Field). If start printer bit is
turned on in Write type command's WCC or in OUTBOUND 3270DS for
Write Structured field, the search for a printer circuit is started
at HIF. This must be LU type 3 connected by Virtual Circuit to the
same TIF (that is originations host number) and same origination
CU as LU type 2 FMD with start printer bit on. If such circuit is
available the check is done whether LU-LU session exists for the
LU type 3 and the session is in "in-bracket" condition. If not, the
printer is found and a BSC Copy Command is generated and sent to
TIF on the printer circuit.
.sp
If the latter condition exists the printer is considered short term
busy. If the right printer circuit is not found the printer is
considered not available. In both cases -RSP is sent to the host
with corresponding sense code and the FMD is sent to CRT.
.sp 2
The following sense codes are used for copy function:
.sp
082F - no printer available (no printer circuit found);
.sp
0807 - subsidiary printer is busy (in-bracket state).
.sp 2
The timing of copy function (before or after the screen update)
is not guaranteed in this implementation.
.SK 0
.H 2 "Terminal Dial Up"
.sp 2
As illustrated in following figure,
the SNA TIF, coupled with an RS-232-C/V.24 compatible modem, will be able to
answer, maintain, and disconnect
calls from a circuit-switched network.
These functions will be provided by the SNA TIF through the management of
modem signals, inactivity timers, and error recovery counters/timers.
.sp 2
.DS
     |-------|               *******                    *******
     | 3274  |              *       *                  *
     |  CU   |  |-------|  * circuit *                *
     |       |--| modem |==* switched *             |-----|
     | LU.T2 |  |-------|  * network  * |-------|   | SNA | 
     | PU.T2 |              *        *==| modem |---| TIF |
     |-------|               ********   |-------| ^ |-----|
                                                  |   *
                                                  |    *  Tymnet
                                        RS-232-C/V.24   *    
                                                         *******
.DE
.sp 2
The SNA TIF will be able to simulate some of the characteristics of a
modem through the use of a crossover cable, as illustrated in following
figure.
.sp 2
.DS
                               ***********
        |-------|             *
        | 3274  |          |-----|
        |  CU   |          | SNA |   
        |       |----------| TIF | 
        | LU.T2 |    ^     |-----|
        | PU.T2 |    |        *     Tymnet
        |-------|    |         *
                     |          **********
                     |
                crossover cable
                ASC-140-20
.DE
.sp 2
.H 3 "Constraints"
.sp 2
The features described for dial-up support apply to the SNA TIF only.
.sp
Only point-to-point Two-Way Alternate link configurations can be configured
with modem signalling.
.sp
Only Logical Unit Type 2 and Physical Unit Type 2 devices will initially
be supported.
The dial-up feature will be designed independent of Logical Unit types.
Therefore, as new Logical Unit types are added, dial-up support will also
immediately be available.
.sp
For modem simulation, the SIO hardware provides a 7200 bps clock speed.
.sp
Modem signals are scanned every half-second.  The SNA TIF thus has a
worst-case response to a change in modem signals of approximately
a half-second.
.sp
Timing parameters for modem signalling are defined for all lines configured
in a slot.
.sp
SDLC XID (Exchange Station Identification) frames are not supported.
.sp 2
.H 3 "Signalling Protocol"
.sp 2
The SNA TIF uses two RS-232-C (V.24) signals, Data Terminal Ready (DTR),
and Data Set Ready (DSR) on a dial-up line to control the establishment
and clearing of calls.
DTR is controlled
by the SNA TIF, DSR is controlled by the modem.
.sp
If the line is half-duplex,
RTS/CTS handshaking
is required before sending the first SDLC frame right after  line  is
turned around from RCV mode to XMT mode.
.sp
When the SNA TIF is initially loaded or restarted DTR is dropped for
at least 15 seconds to force any existing calls to be cleared.
DSR is subsequently monitored every half-second.  Note that it is possible
for DSR to be up (or down) at worst case nearly a half-second before the
SNA TIF will notice the change.
.sp
DSR must be raised for a configurable period of time, defaulted to 2 seconds,
before the SNA TIF will consider DSR to be active.
This time period, which applies to all dial-up lines in a slot, is controlled
by the variable ONTIME.
.sp
DTR is dropped within a half-second after DSR is dropped by the modem.
DTR is held down for a configurable period of time, defaulted to 5 seconds,
before being raised again.
This time period, which applies to each individual dial-up line in a slot,
can be adjusted by coding  the LDSCTM macro.
.sp 2
.H 3 "Disconnection"
.sp 2
Disconnection is accomplished when the SNA TIF drops DTR.
This causes
the modem to go on-hook, which clears the call.
At the same time as DTR is dropped, the SNA TIF clears all
active network virtual circuits.
.sp
The conditions under which the SNA TIF will drop DTR include the following:
.sp
   o whenever the modem drops DSR
.sp
   o if link level becomes inactive, i.e. no information frames
     are exchanged for a pre-determined period of time
.sp
   o when configured SDLC link level error recovery retry limits
     are reached.
.SK 0
.H 2 "Virtual Host Reflect" 
.sp 2
This section describes the principles of operation of the
Virtual Host Reflect (VHR) function, implemented in the
SNA Host Interface (HIF).
 This description will include
a product overview, functional overview, the circuit building procedures,
the SNA/DSP mapping, and
special SNA considerations such as SSCP-LU handling.
VHR will be available in version 2.0, October 1986.
.sp 2
.H 3 "Product Overview"
.sp 2
Microdata has requested project development to allow IBM SNA 327x
display stations, attached to an SNA network, access to Microdata
ASCII hosts via TYMNET.
The primary requirement is for a 327x display station to appear
as a PRISM terminal operating in RMODE to the host application.
.sp 2
To satisfy this request, the current SNA Host Interface (HIF) will
be enhanced by adding the VHR function, a new Microdata-written  
VTAM application will be
written and a new product called a Character Mode Host Server (CMH)
will be developed. 
.sp 2
The combined action of the new VTAM application (VTAM Reflect program)
and VNR function will appear to CMH as an SNA or Bisync (BSC) Terminal
interface (TIF) which supports Display System Protocol (DSP). The CMH Server will
convert the data stream from 3270 to ASCII and pass it to a TYMNET ASCII
Host Interface (such as TYMCOM). TYMCOM will be linked to the Microdata
Reality. This topology enables a 327x, having a native connection
to an IBM host,
access to the Microdata ASCII host by signing on to the special VTAM
Reflect application. Other ASCII host
connections should be possible if implemented in CMH.
.sp 2
Any TYMNET DSP HIF (specifically SNA and BSC 3270) will
be able to communicate with VHR 
providing a wide variety of 3270 interconnections.
.sp 2
.H 3 "Functional Overview"
.sp 2
The Virtual Host Reflect Function (VHR) will run as part of an SNA Virtual Host
Interface. It will be compatible with other Host Interface options
and will be sysgenned on a per LU basis.
.sp 2
SNA/SDLC protocols will be LU.T2 sessions between the
primary LU in PU.T4/T5 (represented by the VTAM reflect program) and the
secondary LU in PU.T2 (represented by the TYMNET SNA HIF). The only difference
from the regular LU.T2 connection will be on the presentation level
which will use 3270 outbound data stream in the inbound direction
and 3270 inbound data stream in the outbound direction.
.sp 2
The Network I/O level will look as if it was
a TIF rather than a HIF. This includes such important functions as
 circuit building and implementation of
the DSP protocol. The DSP support would involve  DSP/SNA chaining and segmentation
 mapping.
.sp 2
This section deals with these changes one by one, discussing the problems
and their proposed solutions. Printer support will also be considered
(mostly, it is no different from CRT as far as VHR is concerned).
.sp 2
Proper functioning of the Reflect approach depends on coordinated actions 
between the developement of VHR and the VTAM Reflect program.
 This coordination is performed by adhering 
to the exchange protocols specified below. These protocols require some
additional information to be exchanged between VHR and VTAM Reflect
program (referred to as VTR ).
.sp 2
This additional information could be carried in two or three header bytes
as defined in VTR DO. These bytes are meant to imitate Write Command Code
and WCC (from VTR to VHR) and AID and Cursor Address (from VHR to VTR).
Therefore, we have six unused bits of WCC (from VTR to VHR) and twelve unused
bits of Cursor Address (from VHR to VTR). The suggested structure of these
bits is described below.
.sp 2
.H 3 "Virtual Circuit Building"
.sp 2
VHR will be capable of building virtual circuits using network logon
and DSP information.
.sp 2
Information necessary to build virtual circuits 
will be given to the  HIF during the logon
exchange between HIF and VTAM Reflect program. The VTAM Reflect
program may either have the logon pre-stored or taken from the 3270 logon screen.
.sp 2
 VTR  could have the pre-stored logon information or
it could be supplied during manual stage-by-stage logon process.
In the first case all logon information is transmitted to VHR
in one piece, in the second case it comes gradually.
.sp 2
Regardless  of  which method for  supplying the logon information
is used, the circuit building information consists of network
virtual circuit information followed by DSP information.
Network virtual circuit information consits of an unspecified
number of circuit building stages.  These stages
correspond to a piece of circuit built between any two TYMNET
functional interfaces such as between an SNA HIF and CMH,
or between CMH and TYMCOM. 
.sp 2
It should be noted that multistage logon information is typical not
only when VHR is communicating with TYMCOM through CMH,
 but when a circuit involves a  gateway.
.sp 2
The format for the logon information during the first virtual circuit stage is as 
follows:
.sp
        username[:host#][;password]
        
        Host# and password are optional.
.sp 2
The format of the one and only DSP information element is as follows:
.sp
        CRM;CLDADR;APLID;DCU;DDEV;CLR;EXTATR
.sp
CRM   - Connection request mode (currently 1-4, disregarded by CMH);
.sp
CLDADR- called address as defined in X.25 Call Request packet;
.sp
APLID - Any 1-byte graphic, could be used to define the type of ASCII
host to CMH;
.sp
DCU   - destination Control Unit, 1-byte graphic, ignored by CMH;
.sp
DDEV  - Destination device, 1-byte graphic, could be used in conjunction
with CLDADR by CMH;
.sp
CLR   - color (Y/N);
.sp
EXTATR- extended attributes (Y/N).
.sp 2
This logon information is supplied by VTR to VHR in the first RU's
following BIND and SDT. The VTR logon information comes
to VHR either complete, in one (first) RU chain ( for VTR pre-stored case),
or one logon element at a time, waiting for the reply RU from VHR before
the next logon element is sent (logon element is either virtual 
circuit stage or DSP).
.sp 2
VHR tries to build a circuit or a piece of circuit corresponding to the
received logon element. VHR responds with a reply RU. This response
contains status information (success or failure), a possible prompt for the
next element (VC stage or DSP) and  a network data message (the latter
two response elements are only included in case of VTR manual logon).
.sp 2
The logon exchange consists, therefore, of a sequence of logon RU's
from VTR alternating with reply RU's from VHR; each sending one
RU chain at a time in a half-duplex fashion. VTR can abort this
sequence at any moment by sending UNBIND (or DACTLU). VHR can abort it by
 sending TERM-SELF or RSHUTD. Other SNA protocol requirements to support
logon exchange are no different from the regular data exchange mode and are
described later in this document.
.sp 2
The logon scenario may proceed as follows:
.sp 2
.DS
                VTR                                     VHR
                 |  ----        BIND              ---->  |
                 |  ----        SDT               ---->  |
                 |  ---- logon RU (network stage) ---->  |
                 |  <--- reply RU (ok, give next) -----  |
                 |  ---- logon RU (network stage) ---->  |
                 |  <--- reply RU (ok, give DSP)  -----  |
                 |  ---- logon RU (DSP info)      ---->  |
                 |  <--- reply RU (ok, logon end) -----  |


                SNA responses are omitted in this scenario.
.DE
.sp 2
Other scenarios, including logon aborts and failures, are possible.
The formats of logon and reply RU's are as follows.
.sp 2
Format of a logon RU (VTR to VHR):
.sp
   WCMD WCC [logon information]
.sp 2
   WCMD is hex F1 or F5 or anything else (disregarded by VHR);
.sp 2
   WCC fakes 3270 WCC and consists of the following:
.sp
      bits 0 and 1   Determined from IBM 6/8 bit translation table
                     (disregarded by VHR),
.sp
      bits 2-5       reserved,
.sp
      bit 6 -        Override VHR pre-stored logon information (1 -
                     zap PVC-type circuit and use  VTR  information,
                     0 - error if VHR has a pre-stored information),
.sp
      bit 7          VTR manual/pre-stored (1 for manual, 0 for  pre
                     -stored);
.sp 2
For VTR pre-stored logon, one RU chain would contain the complete logon
information. One logon element would be present for VTR manual
logon.
.sp 2
Complete logon information is sent in the format
.sp 2
   VC stage,VC stage, ... ,VC stage!DSP element
.sp 2
   Any of these elements for the complete logon information
   could be omitted.
.sp 2
Logon elements are transmitted in EBCDIC, no orders or other 3270
data stream insertions except for graphics are allowed.
.sp 2
Reply RU's format (from VHR to VTR):
.sp 2
EAID CADR1 CADR2 ERCDE [network data message]
.sp 2
EAID is hex 7D (or anything else to fake AID);
.sp 2
CADR1 consists of the following:
.sp
bits 0-1-determined from IBM 6/8 bit translation table,
.sp
bits 2-4-reserved,
.sp
bit 5   -Continue/completed (0 - logon completed, 1 - give next
logon element, always 0 in case of unrecoverable error or VTR-prestored),
.sp
bit 6   -VC stage/DSP (0 - for VC element, 1 - for DSP),
.sp
bit 7   -Enter half/full duplex mode of transmission, valid only if
logon completed (bit 5 zero) successfully (ERRCDE=0), 1 - full
duplex transmission, 0 - half duplex transmission.
.sp 2
CADR2 carries SNA protocol information and is described later in this
document;
.sp 2
ERCDE is a binary value for error code which is defined as follows:
.sp
0 - success,
.sp
1 - Bad username (all last stage logon information to be retyped in
case of manual logon),
.sp
2 - Bad password (only password could be changed during retry),
.sp
3 - circuits busy (try again),
.sp
4 - Host not available (problem with TYMNET destination interface or
wrong host number,
.sp
5 - host out of ports,
.sp
6 - host down,
.sp
7 - access not permitted,
.sp
8 - insufficient information to build circuit,
.sp
9 - incorrect VHR logon override,
.sp
0A -problem with DSP information (followed by text).
.sp 2
For error codes (ERCDE) 1 through 3, VHR will retry the logon
process. An UNBIND should be sent by VTR to VHR in case of
other error codes (VHR will abort the logon anyway).
Transfer to normal data exchange state occurs when ERCDE is 0 and
the logon complete bit in CADR1 is set.
.sp 2
Any network data messages will be discarded in case of VTR pre-stored logon.
In case of manual logon data messages will be translated to EBCDIC. All necessary
3270 commands and orders (Write, WCC, SBA, SF) will be attached to the
message, so that it may be output to the 3270 as FMD RQ (TH and
RH to be attached by VTR to present RU chain with the same chaining
indicators as the reply RU in which this data message is sent by VHR).
The only piece of information needed for this translation is the line
number on the screen to start the output message. This will be given
to VHR as a SYSGEN parameter.
.sp 2
.H 3 "SNA/DSP protocol and mapping functions"
.sp 2
All DSP exchanges, including logon procedures and data transfer, will
be reversed. That is VHR will be using the terminal interface DSP
instead of the host interface DSP functions.
All DSP protocol (including logon procedure and data exchange) will be
reversed; that is the Reflect Function in VHR will be using Terminal Interface
DSP protocols.
.sp 2
The SNA/DSP Virtual Host mapping (as described in this document),
 will be replaced  with a new mapping process for the LU's performing
 in the Reflect mode. This new mapping process is similar
to the Virtual Terminal Interface (VTI) mapping, accept
that VHR is mapping to primary station on the SDLC line, where as
VTIU is mapping to a secondary station on the SDLC line.
.sp 2
VHR will appear to the network as a DSP TIF. This allows VHR to 
communicate with any DSP HIF (including the CMH Server). DSP
multiple user circuits 
will not be supported (similar to any other TYMNET product).
The following subsections explain in detail the VHR mapping.
.sp 2
.H 4 "SNA/DSP mapping for host-terminal data transfer"
.sp 2
The following considerations and restrictions apply for this direction
of data transfer.
.sp 2
The data will be coming from HIF enveloped in DSP command headers
and trailers. The overall length of a command does not exceed 3000
bytes. Commands could be chained by
an ETX/ETB trailer. A DSP command has a standard DSP header followed by
a valid outbound 3270 data stream command (like Write, Erase/Write, etc.).
There is one 3270 command per one DSP command.
.sp 2
DSP commands travel through TYMNET in X.25 packets (connected
by X.25 M-bit). Each packet could be split into a few TYMNET data
messages  (see TYMNET SNA IIX documents for the details).
.sp 2
The protocol used to transmit data from VTR to VHR will be
compatible with the SNA LU.T2  secondary protocol.
To accomplish this, three header bytes (EAID, CADR1,
CADR2 as described above for logon reply RU format) will be attached
right before 3270 data stream command to form an SNA RU 
(one such header per every
DSP command). This is the only modification on the presentation level.
The format of CADR2 is described later in this section.
.sp 2
SNA TH and RH headers will also be created and attached right before
the RU. The bits to be set during this process are BC and EC (Begin
and End Chain Indicators), BB and EB (Begin and End Bracket), CD
(Change Direction) and BIU and EIU (Begin and End segment).
.sp 2
Out of these bits EB is always 0 for the secondary because the secondary
can not end the bracket for LU type 2. BB will be set to 1 (Bracket
started) if the session is not in bracket when VHR sends the RU to
VTR. Otherwise BB will be set to 0.
.sp 2
Begin Chain (BC) bit will be set on if and only if VHR received the beginning
of the new DSP command. The important consideration here is that only one
3270 command is allowed per RU chain and it must be the fist byte of the RU
(similar to DSP command).
.sp 2
End Chain (EC) and segmentation bits in the TH do not have any rigid requirements
for DSP/SNA mapping. From the SNA standpoint it does not matter how the chain
is split into RU's and RU's into segments as long as RU and segment lengths
do not exceed certain values. The maximum RU value for secondary to primary
direction is defined in the BIND. Also, multiple element RU chains could be
disallowed in BIND altogether. The size of the segment is limited by the
size of  the SDLC frame.
.sp 2
For this reason it is unimportant to have any correspondence between
the way the DSP command is split into X.25 and TYMNET packets and
the way SNA RU chain is split into chains and segments. The algorithm
of mapping will try to keep segments and RU's close to their maximum
sizes, but also leave some room there for the next TYMNET packet (if
it is expected) so that the mapping code is not over complicated.
.sp 2
Mapping of one DSP command into one RU chain is only possible if
the BIND parameters are set properly.
One DSP command is up to 3000 bytes long. This means either multiple RU chains
should be allowed in BIND or RU size should be no less than 3000.
.sp 2
Change Direction (CD) indicator controls the direction of transmission
in Half Duplex Flip-Flop mode. An LU type 2 performs in this mode of operation
while in-bracket state. We will assume therefore (for the duration of
discussion on Change Direction) that VHR/VTR session is in "in-bracket"
state (see also the section on Half/Full Duplex operation later in this
section).
.sp 2
In a typical 3270 environment, the application will use Flip-Flop mode
in the following manner. The host application paints the screen as a whole
or piece-by-piece issuing one or more 3270 Write commands (one per RU
chain). Change direction is specified only in the last of these chains.
Until this happens, input from the keyboard is inhibited.
.sp 2
Once the direction is changed (and keyboard unlocked by WCC or Reset)
the user makes his or her keystrokes and hits one of the enter keys.
The direction is changed at this moment. The important point is that
there is only one enter action for (possibly) a few write commands.
.sp 2
Correspondingly, SNA LU type 2 protocol allows an unlimited number of
RU chains in the host to terminal transmission before Change Direction is
specified by the host. However, every RU chain going from the terminal
to the host (except DFC chains which is unimportant for the purpose
of this discussion) must specify Change Direction.
.sp 2
Typical native data exchange may look as follows:
.sp 2
.DS
                370                                     3270
                 | ----- RU chain, RH(-CD), Wrt ---->    |
                 | ----- RU chain, RH(-CD), Wrt ---->    |
                 | ----- RU chain, RH(CD), Wrt  ---->    |
                 | <---- RU chain, RH(CD), Entr -----    |
.DE
.sp 2
The screen is painted with 3 Write commands, first two have -CD. SNA
responses are omitted.
.sp 2
Returning to VHR, it must specify Change Direction at the end of
every RU chain because it imitates terminal to host direction and must
act according to secondary-to-primary LU type 2 protocol.
.sp 2
However, this does not mean that this Change Direction is really
desirable at this moment. Moreover, if the data coming from the
host interface (like CMH) comes in several RU chains (several 3270
Writes) there will be a problem.
.sp 2
It could be argued that CMH could be implemented in such a way so
that it does not use multiple Writes (waits for "input sequence"
and only then writes, see CMH documentation for more details).
However, it is undesirable for performance purposes. It is also
dangerous to try and put all screen data in one DSP command because
the limit of 3000 bytes could be exceeded if CMH tries to paint
a piece of screen as soon as it is received (especially for scrolling
applications).
.sp 2
Running applications on SNA or BSC host would also become impossible.
.sp 2
Therefore, the Change Direction Indicator specified in the RH should be
used only to satisfy SNA and VTAM requirements. The real control
of Flip-Flop mode should be indicated separately, for example in
CADR2.
.sp 2
The following format is suggested for CADR2:
.sp
bits 0-1-determined from IBM 6/8 bit translation table;
.sp
bits 2-6-reserved;
.sp
bit 7   -Change Direction (1 - last RU chain for this direction, 0 - more
RU chains in this direction are forthcoming).
.end
.sp 2
The actions between VTR and the 3270 upon receiving these Change
Direction bits are not described in this document.
 However, this information should be enough to maintain
Half Duplex control of 3270. Conceivably, VTR could copy the Change Direction
(CD) bit from CADR2 into the RH of the message being sent to 3270. This way
multiple Writes should become possible for VTR/3270 communications.
.sp 2
However, for VTR/VHR communications multiple Writes require an additional
action on the part of VTR. After the direction was changed by VHR during
the first Write, VTR must help VHR to restore its sending state by
changing send direction back to VHR if VHR requested continuation
in CADR2. This could be achieved by VTR sending back to VHR a dummy
(RH only) RU indicating Change Direction if bit 7 of the preceding
CADR2 was 0. VHR will be able to send the second Write to VTR.
VTR sends back a dummy RU with CD if necessary, and so on until
CADR2 indicates Change Direction.
.sp 2
Duplex states.
.sp 2
One more consideration regarding Change Direction, is how VHR decides what
is the right value for CD in CADR2. If DSP command has ETB trailer then continuation is
definitely expected. CMH and SNA HIF's will have a definite sign
from corresponding hosts to change direction and therefore will use
ETX to indicate change direction to VHR.
.sp 2
The example of the native data transfer above will look as follows:
.sp 2
.DS
.nf
                VHR                             VTR
 DSP command     |                               |
 Wrt, ETB --->   |  ---- RU chain, RH(CD),       |
                 |       CADR2(-CD), Wrt   ----> |   RU chain, RH(-CD),
 DSP command     |  <--- dummy RU, RH(CD)  ----- |   Wrt   ---->
 Wrt, ETB --->   |  ---- RU chain, RH(CD),       |
                 |       CADR2(-CD), Wrt   ----> |   RU chain, RH(-CD),
 DSP command     |  <--- dummy RU, RH(CD)  ----- |   Wrt   ---->
 Wrt, ETX --->   |  ---- RU chain, RH(CD),       |
                 |       CADR2(CD), Wrt    ----> |   RU chain, RH(CD),
                 |                               |   Wrt   ---->
                 |                               |   RU chain, RH(CD),
                 |       RU chain, RH(CD), ----- |   <---- Entr
                 |  <--- Entr                    |
 DSP response    |                               |
 <--- Entr, ETX  |                               |
.fi
.DE
.sp 2
Communications with BSC HIF may have a problem, however if VHR relies
exclusively on ETB/ETX. To solve this problem, it is suggested that VHR examines
also WCC and specifies CD in CADR2 only if both ETX and keyboard restore
in WCC are specified. Occasionally, there might be a BSC application
which does not specify keyboard restore, but this will be considered
 a problem of this application.
.sp 2
.H 4 "SNA/DSP mapping for terminal-host data transfer"
.sp 2
This direction of exchange is represented by data coming to VHR from
VTR. On the presentation level there will be 2 bytes of header information
to make it look as Write type command followed by a valid terminal-to-host
3270 data stream. This information will be transmitted to VTR as (possibly)
multi-element RU chain and (possibly) segmented. All TH and RH options
valid for LU type 2 will be supported by VHR with one exception; VTR must
specify Change Direction at the end of every RU chain. This limitation is
the natural result of the reversed direction of the transmission (only
one enter action per terminal's turn to send).
.sp 2
This data message will be mapped into a DSP response message. The important
points to be observed during the mapping are as follows.
.sp 2
DSP response consists of segments each of which does not exceed 256 bytes.
Segments could be chained by the First Segment (FS) bit and ETB/ETX
trailer. The first byte of the data portion of SNA response should be
the beginning of the valid 3270 data stream, starting with AID and so on.
.sp 2
Therefore, each RU chain coming from VTR will be translated to a DSP response
message, each RU chain corresponding to a separate DSP response. The only
important point is not to exceed the limit of 256 bytes for each segment
of the DSP response.
.sp 2
Preserving SNA segmentation or chaining divisions of the RU chain by mapping
them into X.25 or TYMNET IIX packets is of no special importance (taking
into account a small 256 byte limit). TYMNET packages of maximum available
length will be used and output to the network as soon as possible.
.sp 2
.H 3 "SSCP-LU handling"
.sp 2
SSCP-LU data messages coming from the host to VHR can not be reasonably
treated as far as conversion and transmission of this data to the DSP HIF
(like CMH) is concerned.  This means, LU operating in VHR mode will
reject such data
with -RSP(LU busy) and discard the message.
.SK 0
.H 1 "User Interface - Operational Aspects"
.sp
This section describes the operational aspects of the SNA/SDLC
Interface product and is not intended to describe the technical
aspects.
.sp
The aim of this section is to describe how the product is used and what
operational changes would be necessary.
.sp
Currently there are two types of service available, that is the
SNA/SDLC Native Mode and SNA/DSP Virtual Host Mode.
.sp 2
.H 2 "SNA/SDLC Connection Types"
.sp
.H  3 "Native Mode"
.sp
The Native Mode service is the most straight forward to describe
of the two.
An SNA/SDLC device utilizing this mode connects to an SNA/SDLC
host. The SNA/SDLC Interface in this simplest form can be linked to an
extension cord replacing the leased communication line (see Figure
5). This application allows sharing of network facilities between
multiple SNA/SDLC applications.
.sp
Much greater value can be obtained from Native Mode service if there
are multiple host destinations for the device users.
A device/user may utilize a network services
screen to perform his/her network logon.  Thus each device can access to
a number of hosts or host applications independently.
.SK 0
.DS
    *----*
   |      |
  |SNA/SDLC|
  |terminal|
  |   or   |
  |cluster |
   |      |
    *----*
       |
        |
         |/|
            |  SDLC link procedures
             |
      --------------------
      |                  |
      |   SNA/SDLC       |
      |    terminal      |
      |    interface     |
      -------------------
                |
                |
        Native  |  Mode
                |
          ------------------
          |                |
          |   SNA/SDLC     |
          |    Host        |
          |    interface   |
          ------------------
                |
                 |
                  |/|
                     | SDLC link procedures
                 ----------
                 |SNA/SDLC|
                 |  Host  |
                 |--------|
                 |  Front |
                 |   End  |
                 ----------
.DE
.sp 2
                 Native Mode Service
.SK 0
.H 3 "SNA Virtual Host Mode"
.sp
In SNA 8100 virtual host mode, the host interface translates all
communication from the 3270 BSC terminal and formats the data into
normal SNA messages. Output to the 3270 BSC terminal is translated to
BSC by the host interface and SNA data flow control commands are
transformed into equivalent data sequences recognized by the
terminals. The SNA host computer therefore sees the BSC
terminal as a SNA/SDLC terminal device.
.sp
.DS
    *----*
   |      |
  |BSC3270 |
  |terminal|
  |   or   |
  |cluster |
   |      |
    *----*
       |
        |
         |/|
            |  BSC
             |
      --------------------
      |                  |
      |   TYMNET BSC3270 |
      |    terminal      |
      |    interface     |
      -------------------
                |
                |
    SNA Virtual | Host Mode
                |
          ------------------
          |                |
          |       SNA      |
          |  Virtual Host  |
          |    interface   |
          ------------------
                |
                 |
                  |/|
                     | SDLC link procedures
                 ----------
                 |SNA/SDLC|
                 |  Host  |
                 |--------|
                 |  Front |
                 |   End  |
                 ----------
.DE
.sp
                SNA Virtual Host Mode Service  
.SK 0
.H 2 "Network Services Screen"
.sp
.H 3 "Native Mode"
.sp
To logon to the network from an SNA/SDLC terminal
the user must in the network service mode.
Whenever there is no network virtual circuit, the SNA/SDLC network
interface places the device in the network service mode and is
waiting for the user to select the desired network service function.
.sp
The user may enter the network service mode even after the network
virtual circuit exists. To enter the network service mode in this case,
the user must enter 'network service keyword' when the screen is owned
by the SSCP or enter pre-defined PF key when the screen is owned by the PLU.
However, this feature may no be available for the phase 1 SNA/SDLC
interface.
.sp 2
.H 3 "Virtual Host Mode"
.sp
To logon to the network from an BSC terminal
the user must in the network service mode.
Whenever there is no network virtual circuit, the BSC3270 Terminal
interface places the device in the network service mode and is
waiting for the user to select the desired network service function.
Please see detail description in TYMNET 3270 Reference Manual.
.SK 0
.H 2 "User Interface - Configuration"
.sp
Generation of the SNA/SDLC interface requires configuration and loading
of the interface code. Before the interface codes can be loaded
into job slots on ISIS nodes, their operating environment must be defined.
.H 3 "Host Access"
.sp
The Host interface access configuration must be carefully planed.
When the host access for an interface is generated, several aspects
of the configuration must be defined:
.sp
1.  The numbers of SNA/SDLC host links (up to eight), terminal/cluster
controllers (up to 32 per link), and logical units (up to 32 per
controller) must be specified.
.sp
2.  For each SNA/SDLC host line, all polling addresses whose poll
messages are to be answered by that host interface must be defined.
.sp
3.  For each controller, all the logical unit addresses must be
defined.
.sp
4.  For each line, the characteristic of the SDLC link procedure must be
defined.
.sp
5.  For each line, its associated host number must be defined. The
host number will be used in assigning device addresses to network
circuits.
.sp
6.  For each line, its transmission/receiving speed (i.e. BAUD rate)
must be defined.
.sp
The detailed configuration of the host access links of an
SNA/SDLC interface is specified in its associated TYMFILE.
.sp 2
.H 3 "Terminal Access"
.sp
When the terminal access links for an SNA/SDLC interface is generated,
its configuration must specified.  This requires several relevant
information.
.sp
1.  The numbers of SNA/SDLC terminal lines (up to eight), terminal/cluster
controllers (up to 32), and logical units (up to 32) must be specified.
.sp
2.  For each SNA/SDLC line, the addresses (up to 32) of all terminal/cluster
controllers to be recognized must be specified.
.sp
3.  For each SNA/SDLC terminal/cluster controller, all logical unit (
devices) addresses must be specified.
.sp
4.  For each controller (PU TYpe 2 Node), the request unit (RU) data
for the activation of the physical unit must be defined.
.sp
5.  For each device (LU Type 2), the RU data for the activation of the
logical unit and the RU data for the local binding of the local primary
logical unit session with the secondary logical unit (i.e. the external
device) must be defined.
.sp
6.  For each device if supporting the preset logon feature, the
'logon selection' information and 'logon request' strings must be
defined.
.sp
The control unit and device (logical unit) addresses are in SNA/SDLC
format.  When the configuration is changed, an SNA/SDLC interface must
be regenerated with revised configuration information. The detailed
configuration of the terminal access for an SNA/SDLC interface is also
specified in the associated Tymfile.
.sp 2
.H 3 "Polling Address and Logical Unit Address"
.sp
The polling addresses for control units must be specified by hexadecimal
values in the tymfiles. These addresses must be the same as that
of those linked control units.
.SK 0
.H 2 "System Generation Parameters"
.sp
The following sections list the types of parameters which are necessary
for the configuration of an SNA/SDLC interface.  The exact syntax
of each configuration statement is defined in the
TYMNET SNA/SDLC Interface System Generation Manual
.sp
All configuration parameters are  defined through assembly macros.
.sp 2
.H 3 "General Slot Parameters"
.sp
The following parameters define the environment in which the SNA/SDLC
interface slots reside and also some general parameters:
.sp
   - The time zone correction from GMT for local time.
.sp
   - Whether the slot should freeze or restart upon an abend.
.sp
   - The ISIS Input and Output RINGS sizes.
.sp
   - and some other system related parameters.
.sp 2
.H 3 "Host Link Parameters"
.sp
The following parameters are required for the generation of a host
interface.
.sp
   - The network host numbers for the interface.
.sp
   - The specific line number, polling addresses, and logical unit
     local addresses for the host.
.sp
   - The lines and their ISIS logical unit number.
.sp
   - Time outs and retry limits for the handling of the SDLC 
     links.
.sp 2
.H 3 "Terminal Link Parameters"
.sp
The following parameters are required for the generation of a terminal
link.
.sp
   - Size of the buffer space for the interface. There will be a 
     default value.
.sp
   - The lines and their ISIS logical unit numbers.
.sp
   - The devices addresses on each line.
.sp
   - Whether a particular line requires RTS/CTS handshake before 
     allowing data transmission.
.sp
   - The specific logon option for each device (Manual or Preset
     logon).
.sp
   - The logon strings for Preset logons.
.sp
   - and many other necessary parameters.
.SK 0
.H 1 "CRM4 for Host Interface"
.sp 2
.H 2 "Overview"
This project  implements the support of 3270 Display System
Protocol (DSP) connection request mode 4 (CRM4) for SNA host interfaces
(secondary ports).
 An SNA host interface (HIF) connected to an SNA primary station will accept
CRM4 call requests from terminal PADs which support the 3270
DSP CRM4. This will allow terminals, connected to such interfaces
as  CMT, to be associated with a particular printer as soon as the
terminal establishes a call to the SNA HIF.
.sp 2
The SNA HIF currently, in versions 2.00 and earlier, supports
CRM1, CRM2 and CRM3. The next version, 3.00, will support all of these
CRM types with the addition of CRM4 for secondary ports. CRM4 support by
the SNA primary ports will follow in a future version.
.sp 2
To fully understand this document, the reader should be familiar
with the following documents:
.sp 2
    [1] 3270 Display System Protocol - 2nd Edition June 1983
    [2] Tymnet SNA External Reference Specification 
    [3] Tymnet Circuit Protocol Reference Manual (August 25, 1983)
.sp 2
.H 2 "CRM 4 Calling Procedures" 
.sp 2
CRM 4 is an associated device CRM. For this project, CRM 4
 is used by the terminal PAD, such as CMT, to request a connection for a
printer which is to be associated with an existing connection to a terminal.
.sp
For example, the SNA interface at the SNA host side will be sysgenned to
associate one or more printers with either one or more terminals. When the end user tries to
logon to the SNA host from a terminal which has associated printers, the 
SNA interface will allow the connection only if BOTH the terminal AND at least
one of the associated printers is not already connected to another end user,
and if the remote terminal configuration matches the local terminal configuration.
By finding an available terminal and printer as soon as the terminal
connection request arrives, the SNA HIF will  keep a terminal from
being assigned to a printer which may already be assigned to another
terminal. The printer will be restricted, by these requirements,
 from receiving data
from the wrong end user.
.sp
 When the SNA interface determines that the printer
may be assigned to the terminal, information uniquely identifying the terminal is sent
back to CMT. This information uniquely identifying the terminal is now echoed
back by CMT inside a connection request message for the associated printer
using the CRM 4 format. The SNA HIF will successfully assign the requested
printer to this circuit only if the associated terminal is still in the 'BUSY'
state AND the printer is in the 'WAIT' state, and also the remote printer configuration must match
the local printer configuration.
The SNA HIF
will tie together the terminal and associated printer until BOTH are disconnected
and once again become available.
.sp
The following subsections will describe in greater detail the call establishment
and call clearing procedures. These descriptions assume the configuration
illustrated below:
.sp 2
.DS
                      - - - - - - - - - - - - - - - - -
                    |                                   |
               ---------------          ---------   -----------
               |  SNA        |          |  CMT  |   | CONSAT  |--- CRT1
   -------     |  HIF        |          |       |   |         |--- CRT2
   | IBM |-----| HCRT1&HPRT1 |          |       |   |         |--- CRT3
   | host|     | HCRT2&HPRT1 |          ---------   |         |--- PRT1
   |     |     | HCRT3&HPRT2 |                      |         |--- PRT2
   -------     ---------------                      -----------
                    |                                   |
                      - - - - - - - - - - - - - - - - - 
Legend:
&    a logical association setup during system generation
HCRT host terminal
HPRT host printer
CRT  terminal
PRT  printer
HIF  host interface 
CMT  Character Mode Terminal server
.DE
.sp 2
                                         Example Configuration             
.sp 2
.H 3 "Call Establishment" 
.sp 2
The following stages demonstrate how a call request is made using CRM4.
.sp
Stage 1. When the end user at CRT2 wishes to logon to the SNA host, the end user
will first log into CMT and issue the CRM 4 logon selection from the CMT logon
screen.
CMT will then send a 'CALL USER DATA' message to the SNA HIF to request a connection
to a terminal with an associated printer.
This message will use  a CRM  3 format and
will indicate a printer is attached (byte 5 bit 4
of the user data field is set). 
.sp
Stage 2. The SNA HIF will use the requested CRM to find the first available
terminal with at least one available printer associated with it.
If HCRT1 and HCRT2 are both in use or don't have terminal configurations which
match the requesting terminal configuration, then the SNA HIF will check to see
if HCRT3 would qualify for the terminal connection. For HCRT3 to qualify,
it must be in the 'IDLE' state and must have an associated printer which
is also in the 'IDLE' state. 
If both HCRT3 and HPRT2 are in the "IDLE" state, 
then the SNA HIF will assign HCRT3 to this circuit. 
HPRT2 is now in the "WAIT" state and HCRT3 is in the "BUSY"
state. The SNA HIF returns a "CIRCUIT ENABLE" message to CMT. This message
contains all necessary information to uniquely identify HCRT3.
.sp
Stage 3. CMT now sends a "CALL USER DATA" message with the CRM 4 format back
to the SNA HIF to request a connection for the associated printer (HPRT2).
The Additional Destination Designator (ADD) portion of this 'CALL USER DATA'
message is the same as the ADD portion of the 'CIRCUIT ENABLE' message.
.sp
Stage 4. The SNA HIF will perform some checks before successfully assigning
HPRT2 to this circuit. HCRT3 must still be in the "BUSY" state AND HPRT2 must be in
in the "WAIT" state. If either device is not in the correct state, an
"INVITATION TO CLEAR" message with reason code "03" (facility failure detected)
is sent to CMT. In addition to the state checking, the configuration of 
HPRT2 in the SNA HIF must match the configuration of the printer found in the
"CALL USER DATA" requesting the printer connection. The configuration 
information which is checked is the device format, host number, 
transparency, color and character set. If the configuration information
doesn't match then an "EBCDIC" message will be sent to CMT and the end-user
to indicate the mis-match followed by an "INVITATION TO CLEAR" message also
with cause code "03" to request to disconnect the printer circuit.
.sp 
Stage 5. If all checks are successfull, the SNA HIF will assign HPRT2 to 
this new circuit. HCRT3 and PRT2 will now be in the "BUSY" state. The SNA
HIF sends a "CIRCUIT ENABLE" message back to CMT. 
.sp
 The following
table gives the "EBCDIC" messages which might be sent and under what
conditions:
.SK 0
.DS
.TS
tab(~);
cc
ltw(1i) ltw(1i).

"EBCDIC" MESSAGE~MESSAGE CAUSE
_
  
SNAH 01 - INVALID HOST NUMBER~o host # mis-match
  
SNAH 03 - CONTROL UNIT NOT AVAILABLE~o controller with available
\^~CRT & assoc. PRT not found

SNAH 04 - DEVICE NOT AVAILABLE~o no CRT device currently available

SNAH 06 - DEVICE WITH SPECIFIED~o PRT or CRT has transparency,
ATTRIBUTE NOT AVAILABLE~o device size, color, and/or
\^~character size mis-match

SNAH 07 - DEVICE NOT ACTIVATED ~o PRT or CRT device not activated
\^~by SNA host.

SNAH 08 - DEVICE ALREADY IN USE~o CRT or PRT device already in use
\^~by another end user.

SNAH 0B - NO ASSOCIATED DEVICE~o no PRTs associated to CRT

SNAH 0C - ASSOCIATED DEVICE ALREADY~o all associated PRTs are
\^~unavailable

SNAH 10 - ASSOCIATED CRT UNATTACHED~o CRT associated with this PRT 
\^~not in 'BUSY' state.

SNAH 11 - INVALID ASSOCIATION~o PRT connection is not for 
\^~LU.T1 or LU.T3
\^~o CRT and associated PRT
\^~are not attached correctly
.TE
.DE
.sp 2
					       "EBCIDIC" Error Messages
.sp 2
.H 3 "Call Clearing" 
.sp 2
Once a terminal has successfully been assigned by the SNA HIF
to it's associated printer, they will be tied together until the circuit
for BOTH devices is cleared. If just one circuit is lost, the SNA HIF will
also clear the other circuit. These devices will now be in the "IDLE"
state. If the inactivity timers for BOTH devices elapses, the SNA HIF
will also clear both circuits and put the devices into "IDLE" state.
.sp
.H 3 "Associating Terminals and Printers" 
.sp 2
To associate terminals and printers together in one pool, the TYMFILE macros
for defining PU and LU addresses and labels are used. No new macros were added
to implement the CRM 4 project.
.sp
For a terminal to have an associated printer, the terminal's PU and the
printer's PU must first have the same 'PU.LABEL' value defined, or if no label
is defined, the same 'PU.ADDRESS' value defined. In addition to this requirement,
the terminal's LU and the printer's LU must have the same 'LU.LABEL' value
defined, or if no label is defined, the same 'LU.ADDRESS' value defined.
.SK 0
.H 1 "Type 1 Virtual Host Printer"
.sp 2
.H 2 "Overview"
This document describes the general external design of the LU_T1
virtual printer feature in the SNA interface. This feature allows
SNA hosts to send LU_T1 SCS printer data streams through TYMNET
to an ASYNC or Bisync 3270 printer.
.sp
The SNA interface must map LU_T1 SCS printer data streams into 3270 Display 
System Protocol (DSP) Write Structured Field (WSF) commands for the network.
 The 3270 DSP messages are
destined for either a network server or interface which supports 3270
DSP implementation for LU_T1 SCS printer data streams. 
.sp
For communication between an SNA host and an ASYNC printer, the 3270 DSP
messages will be sent to the Character Mode Terminal (CMT) server. CMT
will then map the 3270 DSP messages into the TYMNET ASYNC protocol understood
by the destination ASYNC terminal PAD (TYMSAT).  TYMSAT  then sends
the printer data stream in an ASYNC format to the printer.
.sp
When communicating between an SNA host and a 3270 Bisync printer, 3270 DSP
messages are sent to the 3270 Bisync terminal interface (PBT). PBT
 then maps the SCS printer data stream from the DSP WSF into 3270
Bisync for the printer.
.sp
The following sections describe the format of SCS printer data streams 
received from the SNA host, the format of this data stream on the
network side, and finally how the SNA interface
maps between the 2 formats.
.sp
To fully understand this document, the reader should be familiar with
the following documents:
.sp 2
   [1] SNA Sessions Between Logical Units (GC20-1868-2)
   [2] IBM 3270 Information Display System Data Stream
       Programmer's Reference (GA23-0059-0)
   [3] 3274 Control Unit Description and Programmer's Guide
       (GA23-0061-0)
   [4] SNA Format and Protocol Reference Manual (SC30-3112-2)
   [5] 3270 Display System Protocol 2nd Edition June 1983
.SK 0
.H 2 "Conversion Between LU_T1 SCS Data and 3270 DSP WSF" 
The SNA interface will convert between LU_T1 SNA Character Streams (SCS)
and 3270 Display System Protocol (DSP) using Write Structured
 Fields (WSF). LU_T1 SCS printer data flows to and from the SNA host
in the form of Request Units (RUs) containing structured and/or unstructured
fields.
 On the network side, 3270 terminal side DSP messages carry the LU_T1 SCS
data in the form of WSF commands between the SNA interface and a 3270
DSP terminal interface.
.sp
   LU_T1 SCS Data
.sp
      LU_T1 printer data
.sp
	RU
.sp
For LU_T1 printer data, the SNA host will use an SCS data stream. The SCS printer
data stream is sent in an SNA Request Unit (RU). 
There are only 2 possible RU formats for this SCS data stream.
.sp
One format sends the SCS data stream as a structured field following a Function
Management Header type 1 (FMH1). The second format  sends the SCS data stream
without using structured fields. This second format would not include an FMH.
.sp
 The BIND sent
from the host will indicate whether FMHs are allowed. A bit in the
Request Header (RH) for that particular SCS RU will indicate whether the
FMH is present or not.
.sp
The IBM 3274 Programmer's Guide Chapter 1 discusses the format of RUs
using Write Structured Field (WSF) command and FMH1 to convey SCS data.
In this chapter, it is pointed out that the format header indicator in
the BIND command (byte 6, bit 1) must specify function management header included
if FMHs are to be used on this LU-LU session. However, in Chapter 5 of
this same document, a table indicates very clearly that the format indicator
in the BIND command must indicate no FMHs included or the BIND will be 
rejected. Because this document explains how structured fields could be
used for SCS data, but then points out that this is currently not supported
by 3274s, both methods have been included in this document in case
structured fields are ever used.
.sp
The following sections describe in detail both structured (with FMH)
and unstructured (without FMH) RU formats.
.sp 2
.H 4 "SCS Data Structured Field"
.sp 2
The SCS data structured field has the following general format
whether it is outbound (from the host) or inbound (to the host):
.sp
length - type - parameters and data
.sp
The length-field value includes the 2 bytes of the length field. A
value of zero causes the structured field to be treated as the last
field in the RU.
.sp
If SCS data is sent in the parameter and data field, then the type
must be X'41'. This is the SCS data identifier.
.sp
The first byte of the parameters and data field must be X'00'. This is
a reserved byte and will be rejected by the SNA interface if not
equal to X'00'.
.sp
When structured fields are used to convey SCS printer data, a FMH1 is
used to direct the structured field to a 3274 printer in LU type 1 session.
The 3274 will only support FMH type 1, and the contents of this header
must be X'0601000B6000'.
The FMH-1 will be the first 6 bytes of the RU after the RH. Refer to Appendix
II. Function Management Header Type 1 a description of the FMH-1 fields.
.sp
 As indicated by
the FMH concatenation bit in the FMH-1 (Byte 1, bit 0), no FMH will
follow this FMH-1 containing SCS data. This means an FMH-1 with SCS 
data is the first and only FMH in an RU.
.sp
An FMH-1 must be contained within a chain. It is mandatory that
the Request Header (RH) proceed the FMH-1 and have the Begin Chain Indicator
set to first in chain.
.sp
 The RU may
contain one or more structured fields of the same or different types.
Because of this, the length and type of structured field is specified
at the start of each structured field. A 3274 will only accept one FMH per
RU, that is, no concatenation of FMHs is supported by 3274s.
.sp
The host indicates structured field usage in the BIND command at the start of
the session. The 
format header indicator in the BIND command (byte 6, bit 1) must specify
function management header included. Also, the format indicator (FI) in the
RH of the first RU in the chain will be on to indicate that an FMH is at
the start of the RU. The 3274 will only support FMH type 1 and can only
support one FMH per RU. For each RU there maybe one or more structured fields.
These structured fields maybe of various types, such as Outbound
 3270 Data Stream (DS), SCS DS and so on. Refer to Appendix I.
Structured Fields.
.sp
The following is the format of an RU which includes  at least one SCS Data
structured field. An SCS Data structured field is not necessarily the first
structured field in the RU as depicted in this diagram.
.sp 2
                           Ru Format with FMH
.sp 2
.DS
           <--------------- RU ---------------------------------..>
----------------------------------------------------------------
| TH | RH | FMH | lngth | SCS  | 00 | SCS | other structured 
|    |    |     |       | ID   |    | Data|   fields .............
----------------------------------------------------------------
                 <--- Structured  -------->
                       Field 1             
.DE
.sp 2
                      Structured SCS RU Format  
.sp 2
The fields of the SCS structured RU have the following meanings:
.sp 2
.DS
.TS
box tab(~);
c|c|c|c|c
ctw(.9i)|ltw(.9i)|ltw(1i)|ctw(.8i)|ltw(1.5i).
_
Field~Name~Contents~Field~Meaning
 ~ ~ ~Length~ 
_
TH~T{
Transmission
Header
T}~T{
FID = B'02'
MPF = B'10'
T}~6~T{
FID must indicate FID2.
MPF must indicate first
segment.(Refer to FAPL
for detailed format)
T}

RH~T{
Request/
Response
Header
T}~T{
BC = B'01'
FI = B'01'
T}~4 or 3~T{
BC must indicate begin
chain.  FI must indecate
FMH follows. (Refer to
FAPL for detailed format) 
T}

FMH~T{
Function
Management
Header
T}~T{
X'0601000B6000'
(FMH-1)
T}~6~T{
The 327x equiped with SFAP 
support requires this format.
(Refer to 3274 Programmers
Guide pg.1-26)
T}

length~Length~X'nnnn'~2~T{
Length of structured field.
If X'0000', then indicates 
last or only structured
field in transmission.
(Refer to 3274
Programmers Guide pg. 1-31)
T}

SCS ID~T{
SCS Data
Identifier
T}~X'41'~1~T{
Indicates following struc-
tured field contains SCS
data stream. (Refer to 
Programmer's Guide pg. 2-26)	
T}

\^~\^~X'00'~1~Reserved, must be zero.

SCS Data~T{
SCS Data
Structured
Field
T}~  ~length-4~T{
The SCS printer data
stream. (Refer to Program-
mers Guide pg. 2-26)
T}
.TE
.DE
.sp 2
                                       Structured SCS RU Fields  
.sp 2
.H 4 "SCS Data without FMH"
The SNA host may send SCS printer data without employing FMHs. In this case,
the RU will contain only SCS printer data as defined by the IBM SNA Sessions
Between Logical Units (GC20-1868-2). SCS data streams consist of a sequential
string of SCS controls and data characters. The host will convey this SCS string
as an RU chain to the SNA interface.
.sp
The SNA interface will expect the first byte of the RU to be SCS data if
the Format Indicator in the RH indicates no FM header following the RH.
.sp
The following is the format of an RU containing SCS data without an FMH.
.sp 2
		      RU Format without FMH
.sp 2
.DS
           <--------------- RU ----------------->
--------------------------------------------------
| TH | RH |  SCS printer data stream  .......... |
--------------------------------------------------
.DE
.sp 2
                   "Unstructured SCS RU Format" 
.sp 2
The following table describes the different fields for an SCS RU
without an FMH:
.sp 2
.DS
.TS
box tab(~);
c|c|c|c|c
ctw(.9i)|ltw(.9i)|ltw(1i)|ctw(.8i)|ltw(1.5i).
Field~Name~Contents~Field~Meaning
 ~ ~ ~Length~ 
_
TH~T{
Transmission
Header
T}~T{
FID = B'02'
MPF = B'10'
T}~6~T{
FID must indicate FID2.
MPF must indicate first
segment.(Refer to FAPL
for detailed format)
T}

RH~T{
Request/
Response
Header
T}~T{
BC = B'01'
FI = B'01'
T}~4 or 3~T{
BC must indicate begin
chain.  FI must indecate
FMH follows. (Refer to
FAPL for detailed format) 
T}

SCS Data~T{
SNA
Character
String
T}~  ~n~T{
String of SCS control codes
and data characters. (Refer
to SNA Sessions between
Logical Unit Part 2 Ch.1)
T}
.TE
.DE
.sp 2
						 Unstructured SCS RU Fields
.sp 2
.H 3 "3270 DSP" 
The SNA interface will send the SCS printer data stream to the network
as a 3270 DSP command. The SCS data stream will be enclosed in a 3270  Write 
Structured Field (WSF) command.
.sp
The following diagram is the format of a 3270 DSP WSF message containing
an SCS printer data stream. There could be various types of structured
fields in one DSP WSF message. An SCS structured field is not necessarily
the first structured field in the message as the following diagram 
demonstrates.
.sp 2
                    DSP WSF Message Format
.sp 2
.DS
----------------------------------------------------------------------
| DSP | ESC | WSF | lngth | SCS | 00 | SCS |  Other Structured | DSP |
| HDR |     |     |       | ID  |    | Data|      Fields   ....| TLR |
----------------------------------------------------------------------
                   <-- Structured Field 1 ->
.DE
.sp 2
                    DSP WSF Message Format
.sp 2
The following table describes the fields of the WSF command for SCS data:
.sp 2
.DS
--------------------------------------------------------------------
Field   Name      Contents    Field    Meaning
                              Length
--------------------------------------------------------------------

DSP     3270 DSP                3      DSP header includes UCN,
HDR     Header                         flags, and Sequence number.
                                       (Refer to DSP manual)

ESC     Escape     X'27'        1      First byte of DSP command
                                       must be escape character.

WSF     Write       X'F3'       1      Identifies the next field 
        Structured                     as a structured field. (Refer 
        Field                          to 3274 Programmer's Guide 
                                       pg. 1-25)

lngth   Length      nnnn        2      Length of structured field. If
                                       X'0000' then SCS data field end
                                       indicated with ETX trailer.

SCS ID  SCS Data    X'41'       1      Indicates following structured
        Identifier                     field contains SCS data stream.
                                       (Refer to Programmer's Guide
                                        pg. 2-25)

                    X'00'       1      Reserved must be zero.

SCS     SCS Data    nnn...  length-4   The SCS printer data stream.
Data    Structured                     (Refer to Programmer's Guide
        Field                           pg. 2-26)
.sp 2
                         "DSP WSF Message Fields" 
.DE
.sp 2
.H 3 "Mapping Between LU_T1 SCS and 3270 DSP"
.sp 2
The SNA interface will convert between RUs consisting of SCS data streams
 on the host side, and
3270 DSP WSF commands containing SCS structured fields on the network
side.
.sp
Whether or not the SCS printer data stream is received from the host as a structured
field, the SCS data stream always has the same format when sent to the network.
The SNA interface will always use the 3270 DSP WSF command when communicating
with the network.
.sp
.H 4 "SCS Structured Field Mapping to DSP WSF" 
.sp 2
If the host is using SCS structured fields, then the SNA interface will
check the FMH. If the FMH has the value X'0601000B6000' , the BIND properly
specifies FMH accepted, the TH specifies first in segement and the
RH specifies begin chain and FMH follows, then the SNA interface will proceed to
map the remaining chain of RUs into a WSF command for the network.
.sp
The WSF command is appended
to the beginning of the remaining structured fields in the RU chain.
 This WSF command is
then sent to the network as a DSP command; that is, a DSP header and Escape
character is attached to the front of the command and a DSP trailer is
appended to the end of the WSF command (after the last structured field).
.sp
If the length byte in the structured field is zero, then the length field in
the DSP WSF command will also be zero and the message will be terminated
with an ETX.
.sp
For a description of the frame and network message
formats, refer to the sections entitled 'SCS RU Format with FMH' and section
entitled '3270 DSP'.
.sp
It is possible
to have more than one structured field in a single DSP WSF command. All
structured fields received from the host in the same RU chain will be
mapped into the same WSF command for the network.
.sp
The following figure demonstrates  an RU chain   containing FMH-1 and only
one structured field being
mapped into a DSP WSF command message for the network. 
.sp
            SCS Structured Field Mapping to DSP WSF Commands
.sp 2
.DS
 -----------------------------------------------------------
 |* TH |** RH |*** FMH-1 | lngth | SCS ID | 00 | SCS data  |
 ----------------------------------------------------------
                         |                                 |
                          ---------------------------------
                                     |
                                      |
                                       |
                           --------------------------------
                          |                                |
    ------------------------------------------------------------------
    | DSP HDR | ESC | WSF | lngth | SCS ID | 00 | SCS data | DSP TLR |
    ------------------------------------------------------------------
.sp
  * Mapping Field = Whole BIU (B'11') 

 ** Begin Chain Indicator = first in chain (B'1'),
    Format Indicator      = FMH follows (B'1')

*** FMH-1 = X'0601000B6000'
.DE
.sp 2
               "SCS Structured Field Mapping to DSP WSF" 
.sp 2
.H 4 "SCS Data without FMH Mapping to DSP WSF" 
.sp 2
.H 5 "SCS Unstructured Data Mapping"
If the host is not using structured fields to convey SCS data, then the 
SNA interface would expect the SCS data stream to be an RU chain without
any length bytes, FMHs, or structured field IDs. The SCS data starts with the
first RU in a RU chain. A whole RU chain received from the host is mapped
into one DSP WSF command for the network.
.sp
Mapping Field 
.sp
Segment
.sp
BIU
.sp
BCI
.sp
ECI
.sp
 The TH must have the MPF indicator set to first
in segment or whole BIU. The RH following this TH must have the BCI set to
begin chain. The FI must indicate no FMHs following. When all of these conditions
are met, then the following RU chain is the SCS data structured field of the WSFcommand sent to the network.
.sp
 For more
information on the unstructured RU format refer to the section entitled 
SCS RU Format without FMH.
.sp
 The
SCS data stream from this RU is sent inside a 3270 DSP WSF command to the
network.  The SNA interface adds 2 length bytes (always zero) an SCS ID byte (X'41') and a reserved 
X'00' byte in front of the SCS data stream. In this particular
case, the length bytes will always be X'0000' to specify this structured
field as the only field in this WSF command. An ETX DSP Trailer
would signify the end of the SCS data stream. The WSF command (X'F3')
is appended to the front of the length bytes to denote this field as structured.
For a more detailed account of the WSF format, refer to section
entitled '3270 DSP'.
.sp 2
It is possible to have the RU chain divided into more than one
segment, and in that case each segment of that RU chain would
be concatenated into the SCS data field of one WSF command.
The following figure demonstrates  an RU chain contained in 
one segment being
mapped into a single DSP WSF command message for the network:
.sp 2
         SCS Unstructured Field Mapping to DSP WSF Commands
.sp 2
.DS
                         ---------------------------
                         |* TH |** RH  | SCS data  |
                         ---------------------------
                                       |           |
                                        -----------
                                                 |
                                                  |
                                                   |
                                                 ----------
                                                |          |
 -----------------------------------------------------------------
 | DSP HDR | ESC | WSF | ***lngth | SCS ID | 00 | SCS data | ETX |
 -----------------------------------------------------------------
.sp 3
  * Mapping Field =  whole BIU (B'11')

 ** Begin Chain Indicator = first in chain (B'1'),
    Format Indicator      = no FMH follows (B'0')

*** Length = X'0000'
.DE
.sp 2
			 SCS Unstructured Field Mapping to DSP WSF

.SK 0
.H 1 "Virtual Host Reflect Mode"
.sp 2
.H 2 "Virtual Host Reflect Introduction"
.sp 2
	This GID describes Virtual Host Reflect Function within TYMNET
SNA Host Interface product.
.sp
	The design of this product is based on Standard ECMA-71 HDLC
Selected Procedures (Jan. 1981) for the link level procedures and IBM
SNA FAPL (Format and protocol Language) manual for higher level SNA
protocols.
.sp
	TYMNET SNA Interfaces with primary and secondary ports provide
access between SNA/SDLC protocol terminals and hosts utilizing the 
packet-switching data transmission services of TYMNET data
network. This interface can be used to replace leased lines
between hosts using SNA/SDLC PU.T4 protocol and SNA/SDLC PU.T2 terminals
connected by LU.T2 or LU.T3 sessions. Switched Virtual Call services
are provided allowing user access to multiple SNA hosts.
.sp
	In addition SNA Virtual Host interface allows usage of BSC 3270
displays and printers if 3270 Control Unit is connected to Tymnet
BSC 3270 Terminal interface. SNA Virtual Host interface allows also
for switched network access from ASCII termianls and printers connected
to TYMSAT interface and using Tymnet Character Mode Terminal Server for
ASCII to 3270 data stream conversion (Reference to TYMNET SNA ERS).
.sp 2
	Virtual Host Reflect Function provides for yet another type of
connection. LU.T2/T3 3270 user having a native connection to
IBM host will be able (by signing on special VTAM application running
in the host) to use TYMNET SNA HIF as LU.T2/T3 gateway (LU.T3 may be
implemented later).
.sp 2
	The combined action of this VTAM application
(VTAM Reflect program) and TYMNET SNA Virtual Host Reflect function
will make it look like TYMNET SNA/DSP Virtual TIF for other TYMNET
products. Specifically, it will be able to communicate to CMH
(TYMNET 3270/ASCII host convertor) which will allow to run
Microdata Reality System applications on 3270. Other ASCII host
connections should be possible if implemented in CMH.
.sp
	Any other TYMNET DSP HIF (specifically SNA and BSC 3270) should
be able to communicate with SNA Virtual Host Reflect Function
providing for wide variety of 3270 interconnections.
.sp 2
	The Software design provides for the following features:
.sp
	1. Be layered like the protocol, so that new layers can be added
without changing code, and a layer can be modified without affecting 
other layers.
.sp
	2. Use tables (such as State Machines) to drive code when
possible.
.sp
	3. Use independent communicating processes rather than complex
control structures.
.sp
	4. Minimize movement of data from one buffer to another.

.ss(|Virtual Host Reflect Function|)

	Virtual Host Reflect Function will run as a part of SNA Virtual
Host Interface. It will be compatibale with other Host Interface options
and will be selected on per LU basis by turning on the high bit in
LU type during sysgen (LUCTYP in LUCB).
.sp 2
	SNA/SDLC protocols for such LU will be LU.T2 session protocols
between primary LU in PU.T4/T5 (represented by VTAM reflect program) and
secondary LU in PU.T2 (represented by TYMNET SNA HIF). The only
difference from the regular LU.T2 connection will be on the presentation
level which will use 3270 outbound data stream in the inbound direction
and visa versa (see PIR 1830).
.sp 2
	All Network I/O level will be affected and should look as if it
was a TIF rather than HIF. This includes such important functions as
circuit building and support of DSP protocol. Both should be reversed.
Same is true with regard to DSP/SNA chaining and segmentation
protocols mapping.
.sp 2
	This document deals with these changes one by one discussing the
problems and proposed solutions. Printer support will also be considered
(mostly, it is no different from CRT as far as VHR is concerned).
.sp 2
	Proper functioning of Reflect approach depends on coordinated
actions of VHR and VTAM Reflect program. This coordination is performed
by adhering to exchange protocols specified below. These protocols
require some additional information to be exchanged between VHR and
VTAM Reflect program (referred to as VTR below).
.sp 2
	This additional information could be carried in 2 or 3 header
bytes as defined in VTR DO. These bytes are meant to fake Write Command
Code and WCC (from VTR to VHR) and AID and Cursor Address (from VHR to
VTR).  Therefore we have 6 unused bits of WCC (from VTR to VHR) and 12
unused bits of Cursor Address (from VHR to VTR). The suggested structure
of these bits is described below.
.SK 0
.H 2 "Network I/O Reserved Functions"
.sp 2
.H 3 "Virtual Circuit Building"
	VHR sould be capable of building Virtual Circuits and complete
connection with DSP information.
.sp 2
                                            N O T E !!
                                            - - - - --
.sp 2
	Usage of Circuit building is not necessarily restricted
to Reflect Function only. Most likely, HIF initiated Virtual Circuits
(VC's) could be used for Virtual Host Printer support. Therefore, the
function of building Virtual Circuit will be requested during sysgen for
the given LU independently of Reflect Function. Requesting the Reflect
Function will imply HIF intiated VC support.
.sp
However, the usage of Host Initiated Logon for the printer is not
discussed in this document. Other changes required for VHR do not have
(for the most part) anything to do with this printer function.
.sp 2
	Information necessary to build VC could be either stored in
TYMNET HIF (similar to pre-stored logon streams in TIF) or given to HIF
during the logon exchange between HIF and VTAM Reflect program (which
in turn may have it pre-stored or taken from 3270 logon screen).
.sp 2
	Another option to be considered is the moment when VC is built.
In case of pre-stored logon stream it could be built at the moment
when ACTLU comes from the host and torn down when DACTLU is received.
This type of circuit is close to PVC and it will be rebuilt if zapped
for any reason as long as LU stays active. Once this type of circuit is
built VHR will try to invoke VTAM Reflect program by sending a
configurable SSCP-LU data message (say, VTR) to the host (similar to any
other application, say TSO). The expected action from VTR is BIND and
then the same way as described below for BIND-time built VC.
.sp 2
	Alternative option is to build and tear VC duirng BIND and
UNBIND.  If pre-stored logon stream is not specified this could be the
only option available.
.sp 2
	In case of VTR (VTAM Reflect program) sending the logon
information there is a possibility of contradiction between pre-stored
VHR and VTR logon information. Options are - indicate contradiction to
VTR or zap
already built at ACTLU time PVC-type circuit and build another one.
.sp 2
	One more option in case of VTR-supplied logon information
has essential bearing on VHR/VTR logon
protocol. VTR itself could have pre-stored logon information or
it could be supplied during manual stage-by-stage logon process.
In the first case all logon information is transmitted to VHR
in one piece, in the second case it comes gradually.
.sp 2
	Regardless of ways of storing and supplying the logon
information it consists of network VC information followed by DSP
information.  Network VC information consists of unspecified number of
VC stages (corresponding to a piece of VC between any 2 TYMNET
functional interfaces like SNA HIF or CMH or TYMCOM or any such
interface and TYMNET gateway).
.sp 2
	It should be noted that multistage logon information is typical
not only in CMH case but in case of any gateway. CMH can be faking a
gateway as far as logon process in concerned. DSP information is not
needed then or used to convey other type of information - type of ASCII
host for example - or it could be dummy. Another possibility is that CMH
will build the circuit to TYMCOM using X.25 Called Address field (part
of DSP information).  VHR/VTR interaction does not depend on these CMH
options.
.sp 2
	The format of 1 VC stage is:
.sp
	username[:host#][;password]
.sp
	Host# and password could be absent.
.sp 2
	The format of one and only DSP information element is:
.sp
	CRM;CLDADR;APLID;DCU;DDEV;CLR;EXTATR
.sp
	where
.sp
	CRM - connection request mode (currently 1-4, disregarded by
CMH);
.sp
	CLDADR - called address as defined in X.25 Call Request packet;
.sp
	APLID - any 1-byte graphic, could be used to define the type of
ASCII host to CMH;
.sp
	DCU - destination Control Unit, 1-byte graphic, ignored by CMH;
.sp
	DDEV - destnation device, 1-byte graphic, could be used in
conjunction with CLDADR by CMH;
.sp
	CLR - color (Y/N);
.sp
	EXTATR - extended attrubutes (Y/N).
.sp 2
	This logon information is supplied from VTR to VHR in the first
RU's following BIND and SDT (if circuit is built by VHR at ACTLU time on
the basis of VHR-prestored information then  VTR logon information could
be dummy, but it must be present anyway). The VTR logon information
comes to VHR either complete in one (first) RU chain (VTR pre-stored
case) or one logon element at a time, waiting for reply RU from VHR
before the next logon element is sent (logon element is either VC stage
or DSP). 
.sp 2
	VHR tries to build a circuit or a piece of circuit corresponding
to the received logon element and sends back a reply RU containing logon
status information (success or failure) and possible prompt for the
next element (VC stage or DSP) and network data message (the latter
2 pieces only in case of VTR manual logon).
.sp 2
	The logon exchange consists therefore of a sequence of logon
RU's from VTR alternating with reply RU's from VHR, each sending one
RU chain at a time in a half-duplex fashion. VTR can abort this
sequence at any moment by sending UNBIND (or DACTLU), VHR can abort it by
TERM-SELF or RSHUTD. Other SNA protocol requirement to support
logon exchange are no different from regular data exchange mode and
discribed later in this document.
.sp 2
	The logon scenario may look therefore as follows:
.sp 2
.DS
                VTR                                     VHR
                 |  ----        BIND              ---->  |
                 |  ----        SDT               ---->  |
                 |  ---- logon RU (network stage) ---->  |
                 |  <--- reply RU (ok, give next) -----  |
                 |  ---- logon RU (network stage) ---->  |
                 |  <--- reply RU (ok, give DSP)  -----  |
                 |  ---- logon RU (DSP info)      ---->  |
                 |  <--- reply RU (ok, logon end) -----  |
.DE
.sp 2
                      VTR - VHR Manual Logon Scenario
.sp 2
                                    N O T E !!
                                    - - - - --
.sp 2
	SNA responses are omitted on this picture.
.sp 2
	For the case when VC is built at ACTLU time (PVC-type) the
scenario may look as follows:
.DS
                VTR                                     VHR
                 |  ----        ACTLU           ---->    |
                 |                                       |  building VC
                 |                                       |  VC built
                 |  <--- SSCP-LU FMD (VTR)      -----    |
                 |  ----        BIND            ---->    |
                 |  ----        SDT             ---->    |
                 |  ---- logon RU (dummy net,DSP) -->    |
                 |  <--- reply RU (ok, logon end) ---    |
.DE
.sp 2
                         VTR - VHR Prestore Logon Scenario
.sp 2
                                N O T E !!
                                - - - - --
.sp 2
	Other scenarios (including logon aborts and failures) are
possible.
.sp 2
	The formats of logon and reply RU's are as follows:
.sp 2
	Format of logon RU (VTR to VHR):
.sp
	WCMD WCC [logon information]
.sp 2
	WCMD is hex F1 or F5 or anything else (disregarded by VHR);
.sp 2
	WCC fakes 3270 WCC and consists of the following:
.sp
	bits 0 and 1 - determined from IBM 6/8 bit translation table
(disregarded by VHR),
.sp
	bits 2-5 reserved,
.sp
	bit 6 - override VHR pre-stored logon information (1 - zap
PVC-type circuit and use VTR information, 0 - error if VHR has a
pre-stored information),
.sp
	bit 7 - VTR manual/pre-stored (1 for manual, 0 for pre-stored);
.sp 2
	Logon information could be complete (in case of VTR-prestored
logon) one logon element (VTR manual) or empty (VHR-prestored case, VTR
manual/prestored must be set to pre-stored).
.sp 2
	Complete logon information is sent in the format:
.sp 2
	VC stage,VC stage, ... ,VC stage!DSP element
.sp 2
	Any of elements of complete logon information could be absent
and will be asumed dummy by VHR.
.sp 2
	Logon elements are transmitted in EBCDIC, no orders or other
3270 data stream insertions except for graphics are allowed.
.sp 2
	Reply RU's format (from VHR to VTR):
.sp 2
	EAID CADR1 CADR2 ERCDE [network data message]
.sp 2
	EAID is hex 7D (or anything else to fake AID);
.sp 2
	CADR1 consists of the following:
.sp
	bits 0-1 - determined from IBM 6/8 bit translation table,
.sp
	bits 2-4 - reserved,
.sp
	bit 5 - continue/completed (0 - logon completed, 1 - give next
logon element, always 0 in case of unrecoverable error or VTR-
prestored), 
.sp
	bit 6 - VC stage/DSP (0 - for VC element, 1 - for DSP),
.sp
	bit 7 - enter half/full duplex mode of transmission, valid only
if logon completed (bit 5 zero) successfully (ERRCDE=0), 1 - full
duplex transmission, 0 - half duplex transmission.
.sp 2
	CADR2 carries SNA protocol information and is described later in
this document;
.sp 2
	ERCDE is a binary value for error code which is defined as
follows:
.sp
	0 - success,
.sp
	1 - bad username (all last stage logon information to be retyped
in case of manual logon),
.sp
	2 - bad password (only password could be changed during retry),
.sp
	3 - circuits busy (try again),
.sp
	4 - host not available (problem with TYMNET destination
interface or wrong host number,
.sp
	5 - host out of ports,
.sp
	6 - host down,
.sp
	7 - access not permitted,
.sp
	8 - insufficient information to build circuit,
.sp
	9 - incorrect VHR logon override,
.sp
	0A - problem with DSP information (followed by text).
.sp 2
	Continuation of logon process will be expected by VHR for
ERCDE<4, otherwise UNBIND must be coming from VTR (or VHR will abort
logon anyway).  ERCDE=0 and logon complete bit in CADR1 will signal
transfer to normal data exchange state.
.sp 2
	The network data messages will be discarded in case of VTR pre-
stored logon.  In case of manual logon they will be translated to EBCDIC
and all necessary 3270 commands and orders (Write, WCC, SBA, SF) will be
attached to the
message, so that it is ready to be output to 3270 as FMD RQ (TH and
RH to be attached by VTR to present RU chain with the same chaining
indicators as the reply RU in which this data message is sent by VHR).
The only piece of information needed for this translation is the line
number on the screen to start the output message. This will be given
to VHR as SYSGEN parameter.
.sp 2
.H 3 "SNA/DSP protocol and mapping functions" 
.sp 2
	All DSP protocol (including logon procedure and data exchange)
will be reversed that is Reflect Function in VHR will be using Terminal
Interface DSP protocols.
.sp 2
                                        N O T E !!
                                        - - - - --
.sp 2
	This should not be mixed up with the case when host initiated
logon is requested. Call establishment procedures in this case will be
as described in DSP host initiated call protocol. No reversal of DSP
fucntions will be performed in this case.
.sp 2
	This also means that SNA/DSP Virtual Host mapping (as described
in TYMNET SNA ERS document) will be replaced
for the LU's performing in the Reflect mode. In some respects this mapping
reminds of Virtual Terminal (VTI) mapping, but they are not equal becuase
of asymmetry between SNA primary (VTI) and secondary (VHR).
.sp 2
	Specifics of this VHR mapping are as follows.
Terminal interface is represented by Reflect Function in VHR, host
interface could be any DSP HIF (including CMH). DSP multiple user circuits
will not be supported (similar to any other TYMNET product).
.sp 2
.H 4 "SNA/DSP host to terminal data transfer"
.sp 2
	The following considerations and restrictions apply for this
direction of data transfer.
.sp 2
	The data will be coming from HIF envelopped in DSP command
headers and trailers. The overall length of a command does not exceed
3000 bytes. Commands could be chained by
ETX/ETB trailer. A DSP command has a standard DSP header followed by
3270 data stream command (like Write, Erase/Write, etc.) and valid
3270 outbound data stream, one 3270 command per one DSP command.
.sp 2
	DSP commands are travelling through TYMNET in X.25 packets
(connected by X.25 M-bit). Each packet could be split into a few TYMNET
data messages, combined into X.25 packet with the help of IIX "turkey
level" protocol (see TYMNET SNA IIX documents for the details).
.sp 2
	This data should be transmitted to VHR compatibly with SNA LU.T2
secondary protocol. For this purpose 3 header bytes (EAID, CADR1,
CADR2 as described above for logon reply RU format) will be attached
right before 3270 data stream command to form SNA RU 
(one such header per every
DSP command). This completes modifications on presentation level.
The format of CADR2 is descibed later in this section.
.sp 2
	SNA TH and RH headers will also be created and attached right
before the RU. The bits to be set during this process are BC and EC
(Begin and End Chain Indicators), BB and EB (Begin and End Bracket), CD
(Change Direction) and BIU and EIU (Begin and End segment).
.sp 2
	Out of these bits EB is always 0 for the secondary because the
secondary can not end the bracket for LU type 2. BB will be set to 1
(Bracket started) if the session is not in bracket when VHR sends the
RU to VTR. Otherwise BB will be set to 0.
.sp 2
	Begin Chain (BC) bit will be set on if and only if VHR received
the beginning of the new DSP command. The important consideration here
is that only one 3270 command is allowed per RU chain and it must be the
fist byte of RU (similar to DSP command).
.sp 2
	End Chain (EC) and segmentation bits in TH do not have any rigid
requirements for DSP/SNA mapping. From SNA standpoint it does not matter
how the chain is split into RU's and RU's into segments as long as RU
and segment lengths do not exceed certain values. Maximum RU value for
secondary to primary direction is defined in BIND. Also, multiple
element RU chains could be disallowed in BIND altogether. The size of
the segment is limited by the size of SDLC frame.
.sp 2
	For this reason it is unimportant to have any correspondence
between the way the DSP command is split into X.25 and TYMNET packets
and the way SNA RU chain is split into chains and segments. The
algorithm of mapping will try to keep segments and RU's close to their
maximum sizes, but also leave some room there for the next TYMNET packet
(if it is expected) so that the mapping code is not overcomplicated.
.sp 2
	The important point is that this mapping - one DSP command into
one RU chain - is possible at all which depends on BIND parameters. One
DSP command is up to 3000 bytes long. So, either multiple RU chains
should be allowed in BIND or RU size should be no less than 3000.
.sp 2
                                        N O T E !!
                                        - - - - --
.sp 2
	Although VHR should be capable to work without allowing
multiple element RU chains, this
BIND option is undesirable for performance reasons. VTR will have (most
likely) no access to separate segments, only RU's. Therefore, RU's
should not be very big, so that VTR could pass them along as soon as
they were received. However, RU's should not be unncecessary small
because it would add some processing overhead for SNA interface.
.sp 2
	Change Direction (CD) indicator controls the direction of
transmission in Half Duplex Flip-Flop mode. LU type 2 performs in this
mode of operation
while in-bracket state. We will assume therefore (for the duration of
discussion on Change Direction) that VHR/VTR session is in "in-bracet"
state (see also the section on Half/Full Duplex opertion later in this
document).
.sp 2
	In typical 3270 environment, the application will use Flip-Flop
mode in the following manner. The host application paints the screen as
a whole or piece-by-piece issuing one or a few 3270 Write commands (one
per RU chain). Change direction is specified only in the last of these
chains.  Until this happens, input from the keyboard is inhibited.
.sp 2
                                    N O T E !!
                                    - - - - --
.sp 2
	There is another way to lock and unlock the keyboard - by
manipulating WCC. This second way (unlike Change Direction) is user-
recoverable by the user hitting Reset key. A typical SNA application
will use both methods to insure Flip-Flop mode simulteneously.
.sp 2
	Once the direction is changed (and keyboard unlocked by WCC or
Reset) the user makes his or her keystrokes and hits one of the enter
keys.  The direction is changed at this moment. The important point is
that there is only one enter action for (possibly) a few write commands.
.sp 2
	Correspondingly, SNA LU type 2 protocol allows unlimited number
of RU chains in host to terminal transmission before Change Direction is
specified by the host. However, every RU chain going from the terminal
to the host (except DFC chains which is unimportant for the purpose
of this discussion) must specify Change Direction.
.sp 2
	Typical native data exchange may look as follows:
.sp 2
.DS
                370                                     3270
                 | ----- RU chain, RH(-CD), Wrt ---->    |
                 | ----- RU chain, RH(-CD), Wrt ---->    |
                 | ----- RU chain, RH(CD), Wrt  ---->    |
                 | <---- RU chian, RH(CD), Entr -----    |
.DE
.sp 2
                                   VTR - VHR Data Exchange Flow
.sp 2
	The screen is painted with 3 Write commands, first two have -CD.
SNA responses are omitted.
.sp 2
	Returning to VHR, it must specify Change Direction at the end of
every RU chain because it fakes terminal to host direction and must
act according to secondary-to-primary LU type 2 protocol.
.sp 2
	However, this does not mean that this Change Direction is really
desirable at this moment. Moreover, if the data coming from the
host interface (like CMH) comes in several RU chains (several 3270
Writes) there will be a problem.
.sp 2
	It could be argued that CMH could be implemented in such a way
so that it does not use multiple Writes (waits for "input sequence"
and only then writes, see CMH documentation for more details).
However, it is undesirable for performance purposes. It is also
dangerous to try and put all screen data in one DSP command because
the limit of 3000 bytes could be exceeded if CMH tries to paint
a piece of screen as soon as it is received (especially for scrolling
applications).
.sp 2
	Running applications on SNA or BSC host would also become
impossible.
.sp 2
	Therefore, Change Direction Indicator specified in RH should be
used only to satisfy SNA and VTAM requirements. The real control
of Flip-Flop mode should be indicated separately, for example in
CADR2.
.sp 2
	The following format is suggested for CADR2:
.sp
	bits 0-1 - determined from IBM 6/8 bit translation table;
.sp
	bits 2-6 - reserved;
.sp
	bit 7 - Change Direction (1 - last RU chain for this direction,
0 - more RU chains in this direction are forthcoming).
.sp 2
	The actions of VTR upon receiving these Change Direction bits
are not prescribed in this document as far as its control of 3270 is
concerned. However, this information should be enough to maintain
Half Duplex control of 3270. Conceivably, VTR may copy Change Direction
bit from CADR2 into RH of the message being sent to 3270. This way
multiple Writes should become possible for VTR/3270 communications.
.sp 2
                                            N O T E !!
                                            - - - - --
.sp 2
	Notice the delay in copying CD bit. CADR2 comes to VTR in the
first RU of the chain, CD in RH should be specified in the last RU of
the chain.
.sp 2
	However, for VTR/VHR communications multiple Writes require an
additional action on the part of VTR. After the direction was changed by
VHR during the first Write, VTR must help VHR to restore its sending
state by changing send direction back to VHR if VHR requested
continuation in CADR2. This could be achieved by VTR sending back to VHR
a dummy (RH only) RU indicating Change Direction if bit 7 of preceding
CADR2 was 0. VHR will be able to send the second Write to VTR,
VTR sends back dummy RU with CD if necessary. And so on until
CADR2 indicates Change Direction.
.sp 2
                                     N O T E !!
                                     - - - - --
.sp 2
	Dummy RU with CD is legal but not typical. Occasionally, there
are implementation-specific probelms with dummy RU's. Therefore, VTR
should have an alternate way of handling CD. Namely, instead of
dummy RU with CD it may send to VHR a dummy RU with EB (End Bracket).
This type of dummy RU is so typical that no implementation-dependant
complications are expected. Also, this is an internal protocol
between VTR and VHR. So, although formally there is a contention
situation after EB, no complications typical for contention are
expected because both VTR and VHR will still keep their own Half
Duplex states.
.sp 2
	One more matter regarding Change Direction is how VHR decides
what is the right value for CD in CADR2. DSP protocol gives one
possibility in this respect. If DSP command has ETB trailer then
continuation is definitely expected. CMH and SNA HIF's will have a
definite sign from corresponding hosts to change direction and therefore
will use ETX to indicate change direction to VHR.
.sp 2
                                            N O T E !!
                                            - - - - --
.sp 2
	This option was never used for SNA HIF so far.
.sp 2
                                            N O T E !!
                                            - - - - --
.sp 2
	The indication for CD should be put in the first RU of the
chain. ETB and ETX are both trailers which come after the last character
of RU chain,
which might be much later. If the trailer is not available at the moment
when CD indication is generated VHR will send -CD (not Change Dircetion)
to VTR and then will send CD in a separate dummy RU consisting only of
3 RU header bytes (EAID, CADR1, CADR2). VTR will strip these bytes and
send dummy (RH-only) RU with CD to 3270. The remark above about
replacing CD by EB applies to this instance too.
.sp 2
	The example of the native data tranfer above will look as
follows:
.sp 2
.DS
                VHR                             VTR
 DSP command     |                               |
 Wrt, ETB --->   |  ---- RU chain, RH(CD),       |
                 |       CADR2(-CD), Wrt   ----> |   RU chain, RH(-CD),
 DSP command     |  <--- dummy RU, RH(CD)  ----- |   Wrt   ---->
 Wrt, ETB --->   |  ---- RU chain, RH(CD),       |
                 |       CADR2(-CD), Wrt   ----> |   RU chain, RH(-CD),
 DSP command     |  <--- dummy RU, RH(CD)  ----- |   Wrt   ---->
 Wrt, ETX --->   |  ---- RU chain, RH(CD),       |
                 |       CADR2(CD), Wrt    ----> |   RU chain, RH(CD),
                 |                               |   Wrt   ---->
                 |                               |   RU chain, RH(CD),
                 |       RU chain, RH(CD), ----- |   <---- Entr
                 |  <--- Entr                    |
 DSP response    |                               |
 <--- Entr, ETX  |                               |
.DE
.sp 2
                                 VTR - VHR Data Conversion  
.sp 2
	Communications with BSC HIF may have a problem, however if VHR
relies exclusively on ETB/ETX. It is suggested therefore that VHR
examines also WCC and specifies CD in CADR2 only if both ETX and
keyboard restore
in WCC are specified. Occasionally, there might be a BSC application
which does not specify keyboard restore, but this will be considered
as a problem of this application.
.sp 2
                                             N O T E !!
                                             - - - - --
.sp 2
	Unfortunately, this problem occurs in some versions of TSO
during signon. It must be bypassed in some artificial way.
.sp 2
.H 4 "Sna/DSP terminal to host data transfer"
.sp 2
	This direction of exchange is represented by data coming to VHR
from VTR. On the presentation level there will be 2 bytes of header
information to make it look as Write type command followed by a valid
terminal-to-host 3270 data stream. This information will be transmitted
to VTR as (possibly) multi-element RU chain and (possibly) segmented.
All TH and RH options valid for LU type 2 will be supported by VHR with
one exception: VTR must specify Change Direction at the end of every RU
chain. This limitation is the natural result of the reversed direction
of the transmission (only one enter action per terminal's turn to send).
.sp 2
	This data message will be mapped into DSP response message. The
important points to be observed during the mapping are as follows.
.sp 2
	DSP response consists of segments each of which does not exceed
256 bytes. Segments could be chained by the First Segment (FS) bit and
ETB/ETX trailer. The first byte of the data portion of SNA response
should be the beginning of the valid 3270 data stream, starting with AID
and so on.
.sp 2
	Therefore, each RU chain coming from VTR will be translated to a
DSP response message, each RU chain corresponding to a separate DSP
response. The only important point is not to exceed the limit of 256
bytes for each segement of the DSP response.
.sp 2
	Preserving SNA segmentation or chaining divisions of the RU
chain by mapping them into X.25 or TYMNET IIX packets is of no especial
importance (taking into account a small 256 byte limit). TYMNET packages
of maximum available length will be used and output to the network as
soon as possible.
.SK 0
.H 2 "Special SNA consideration for VHR"
.sp 2
.H 3 "SSCP-LU handling" 
.sp 2
	SSCP-LU data messages coming from the host to VHR could not be
reasonably treated as far as conversion and transmission of this data to
the DSP HIF (like CMH) is concerned. So, LU operating in VHR mode will
reject such data with -RSP(LU busy) and discard the message.
.sp 2
	A message could come from HIF (like CMH) while LU-LU session
does not exist. This can happen only if PVC-type circuit was built. The
host will be notifyed in this case by sending VTR application name to
the SSCP-LU session and the host shall anwer with BIND. Until it happens
the message will stay in NIO/SNA data queue. If VTR comes back with
UNBIND or VTAM issues DACTLU this pending message will be purged and the
circuit will be zapped.
sp 2
.H 3 "Half Duplex/Full Duplex mode of operation"
.sp 2
	All discussions so far assumed Half Duplex mode of operation
when only one side (terminal operator or host) can transmit data. This
is not true for a typical ASCII host and terminal relations. Therfore if
there is a goal to make 3270 operate in a mode similar to a typical
ASCII terminal this cannot be achieved without giving 3270 at least some
semblance of Full Duplex operation.
.sp 2
	A specific problem which makes the necessity to have such mode
of operation absolutely clear is the impossibility to determine from any
formal approach when
an ASCII host application finished to paint a screen and ready to
receive. The only possible approach is wait for a timeout. This approach
is unrelyable (especially in network environment) and badly affects
performance.
.sp 2
	Therefore if the goal of emulating the ASCII mode is to be
achieved the full duplex operation of 3270 must be provided.
.sp 2
	The closest 3270 can approach the full duplex mode is when it
operates
in "between bracket" condition. The brackets cannot be ended from the
secondary. Therefore the primary (that is VTR) should end the bracket
as soon as possible. That is every RU chain sent from VTR in either
direction should indicate End of Bracket. Also, VTR should send back
dummy RU with End of Bracket after receiving any RU chain from either
side.
.sp 2
	This approach would allow to output to the screen at virtually
any moment of time thus bypassing the problem mentioned above.
.sp 2
	The trade-off is some complication of VTR program. It must
be able to handle contention and retransmissions.
.sp 2
	However, as a matter of principle such program could be built
on a simple principle of stacking RU chain if its transmission is
currently impossible and retransmitting the chain should it be rejected
as a result of contention.
.sp 2
	The type of the mode (Half or Full duplex) depends on the type
of the host which the user is trying to reach. In some cases it could
be determined from the product ID of TYMNET HIF (like SNA and BSC
HIF's require that VTR works in Half Duplex mode). In case of CMH
this will be impossible to determine. Application ID could be used
in this case to differentiate between the 2 types. VTR receives
the indication what mode to use in the last reply RU of logon
sequence before entering the corresponding mode of data transfer.
.sp 2
.H 3 "Printer support"
.sp 2
	Support for LU type 3 printer could be provided in VHR/VTR
product.
Although VTR will control the printer via LU type 3 session, this
type of session cannot be used on VTR/VHR connection. LU type 3
does not allow for transmission of data from the terminal to the host.
So LU type 2 session between VTR and VHR should be used instead.
.sp 2
	All SNA/DSP mapping for this session could be performed the same
way as for real LU type 2 (CRT). Every RU chain coming from VHR should
be followed by a dummy RU from VTR to change direction of transmission
back to VHR/VTR.
.sp 2
	A big problem with printer support is error recovery. Delays are
inherent for the printer. Say, paper jam will cause a delay and
necessity to re-transmit.
.sp 2
	Sending -RSP in case of such delay is probably not the best
approach.
It is suggested that if an RU chain is aleady partailly transmitted
it will be accepted by VTR with +RSP and retained there for possible
retransmission to 3270. But no new RU chain will be started from
VHR to VTR until the delay condition clears. This could be achieved
in VTR by simply not sending the dummy RU chain with change direction
mentioned above while the delay exists.
.sp 2
	If such backpressure is applied by VTR then VHR will experience
accumulation
of buffered data for this LU. After a short while VHR will pass the
backpressure signal to the network. HIF on the other side (say, CMH)
will backpressure the host and the print data will be stopped from
sending.
.sp 2
	Printer logon is no different from CRT logon. Printer is
separate LU and
separate VC and there will be no knowledge within VHR of any logical
or physical relations between the printer LU and any other LU.
.sp 2
	In other words VTR will send printer logon information to VHR on
the session for the printer LU. The logon protocol will be the same as
for CRT.
.sp 2
	Although not discussed here, the possible option for VTR is to
obtain printer logon information from the autorized CRT acting on behalf
of this printer. Another possibility is to use PVC-type VC for the
printers.
.sp 2
	If printer logon information is obtained from a CRT there is a
question
when this information is obtained. There might be a requirement (like
in TYMNET BSC interface) that the user can request printer logon at any
time, including the period when the CRT used to request it is already
in end-to-end session with remote host application.
.sp 2
	In this case there is a problem for VTR to backpressure any new
screen updates coming from VHR and to restore the screen in its
previous shape after printer logon information was obtained.
.sp 2
	Backpressure could be applied from VTR to VHR the same way as
described
previously for the data going to the printer. As far as restoring the
screen is concerned this is internal VTR function.  A possible technique
is to obtain the screen content by issuing Read Buffer, save it and
then restore form this information.
.SK 0
.H 1 "Virtual Terminal Mode"
.sp 2
.H 2 "Virtual Terminal Introduction"
.sp 2
	This section describes Virtual Terminal Interface within TYMNET  SNA
Terminal Interface product.

	The design of this  product  is  based  on  Standard  ECMA-71  HDLC
Selected  Procedures (Jan.  1981) for the link level procedures and
IBM SNA FAPL (Format and protocol Langauge) manual for higher level
SNA protocls.

	TYMNET SNA Interfaces with  primary  and  secondary  ports  provide
access  between SNA/SDLC protocol terminals and hosts utilizing the
packet-switching data transmission services of TYMNET data network.
This  interface  can  be used to replace leased lines between hosts
using  SNA/SDLC  PU.T4  protocol  and  SNA/SDLC   PU.T2   terminals
connected  by  LU.T2  or  LU.T3  sessions.   Switched  Virtual Call
services are provided allowing user access to multiple SNA hosts.

	In addition SNA Virtual Host interface allows  usage  of  BSC  3270
displays  and  printers if 3270 Control Unit is connected to Tymnet
BSC 3270 Terminal interface.  SNA  Virtual  Host  interface  allows
also  for switched network access from ASCII termianls and printers
connected to TYMSAT  interface  and  using  Tymnet  Character  Mode
Terminal Server for ASCII to 3270 data stream conversion (Reference
to TYMNET SNA ERS).

	Virtual Host Reflect Function provides  for  yet  another  type  of
connection.   LU.T2/T3  3270 user having a native connection to IBM
host will be able (by signing on special VTAM  application  running
in  the  host) to use TYMNET SNA HIF as LU.T2/T3 gateway (LU.T3 may
be implemented later).

	Virtual Terminal Interface  (VTI) will provide local support for 3270
SNA devices. All SNA functions required for LU.T2 support will be
implemented within SNA Terminal Interface which will look as
PU.T4 SNA node running a primary LU.T2 session for PU.T2 SNA node
(like 3274) running the secondary LU.T2 session.

	Internally (in the direction of TYMNET) Virtual Terminal Interface
product will use Terminal DSP (TDSP) protocol which will allow
it to communicate with any other TYMNET product using Host DSP
(HDSP) protocol in the direction of TYMNET. A variety of such products
exist already or will be available in the nearest future.

	Specifically,  VTI  will  be  able  to  communicate  to  CMH (TYMNET
3270/ASCII host  convertor)  which  will  allow  to  run  Microdata
Reality  System applications on 3270.  Other ASCII host connections
should be possible if implemented in CMH.

	Any other TYMNET DSP HIF (specifically SNA and BSC 3270) should  be
able   to  communicate  with  SNA  Virtual  Terminal Interface
providing for wide variety of 3270 interconnections.

	The Software design provides for the following features:

	1.  Be layered like the protocol, so that new layers can  be  added
without  changing  code,  and  a  layer  can  be  modified  without
affecting other layers.

	2.  Use  tables  (such  as  State  Machines)  to  drive  code  when
possible.

	3.  Use independent communicating  processes  rather  than  complex
control structures.

	4.  Minimize movement of data from one buffer to another.

.SK 0
.H 2 "Principles of Operation for Virtual Terminal Interface"

	Implementation of VTI will require changes in the existing SNA Terminal
Interface product which are not concentrated in one specific area of
this interface. These changes will be considered in this document
in a manner which follows the layered structure of the interface and
the protocol itself. However, this document concentrates on the
functional issues rather than formal layers and will cross layer
boundaries in favour of functional integrity. We will use the word
level rather than layer for this reason.

.H 3 "SDLC level"

	This layer should not require (theoretically) any extensive changes.
However, connection establishment error recovery procedures may have
to be enchanced. If so, this change will have nothing to do with
VTI function itself, but rather with Terminal Interface as a whole.
Specifics of this enhancement will be documented later.

.H 3 "PU level"

	Remarks on SDLC layer are fully applicable to this level.

.H 3 "SSCP-LU level at session establishment"

	This level is also common to all Terminal Interface options. Any
enhancements on this level are meant not only for VTI, but native
product as well.

	The Terminal Interface as it is currently implemented does not
process RSP(ACTLU) in full. Specifically long form of this response
is processed the same way as short. As a result, the attempt to BIND
for an LU will be made even if RSP(ACTLU) indicates that the secondary
LU is currently inoperable (power off). It is not known whether this
attempt can cause any real problems. -RSP(BIND) from such LU will
enable the interface to continue a correct functioning if the secondary
LU informs TIF of power on condition when the device becomes operable.

	This way of operation should be changed to the commonly acceptable
exchange. Long response for ACTLU will be processed to find out
if the LU is operable. BIND will be send to the secondary LU in this
case immediately. Otherwise, TIF will wait for NOTIFY from the
secondary before sending BIND.

	Processing for some other session service messages could be also
implemented. Although 3274 usage of such messages is limited to
NOTIFY, support for at least INIT-SELF and TERM-SELF is probably
desirable.

	It should be noted that current implementation of TIF does not have
a special SSCP_SVC to handle these messages. Unfortunately, Network
Services in FAPL are covered only in narrative and no
meta-implementation is provided. For this reason, processing for these
messages will be developped gradually. First release of VTI will handle
only power on/off condition in RSP(ACTLU) and NOTIFY.

.H 3 "LU-LU level"

	VTI operation after LU-LU session is established will be an extention
of current TIF local mode of operation. It will differ from local mode
mostly by enhanced error recovery capabilities.

	The most common for SNA error recovery situation occurs when -RSP is
received from the session partner. All sense codes will be split into
3 categories according to 3 types of actions which VTI can take for
error recovery.

	a. Contention category.

	Contention for LU type 2 session may occur only in between bracket
state. Typically, brackets are allowed for LU type 2 session and
this is reflected in BIND. If VTI is gennned with BIND which does not
allow brackets contention will be treated the same way as category
b below, however this type of BIND is strongly discouraged for usage.

	Contention category is represented by 813 and 814 sense codes. VTI will
never attempt to open the bracket (as opposed by current TIF) by
simply setting BB in RH. Instead, BID will be used. In case of -RSP(813)
it will be repeated after a small timeout. For -RSP(814) VTI will be
waiting for RTR. This way, no loss of actual data can occur due to
contention between the primary and secondary LU.

	b. Recoverable sense codes.

	This category covers the sense codes which could be recovered by
re-displaying the screen. Representatives of this category are
82A, 82B, 84A and possibly some other sense codes.

	VTI will attempt error recovery for these codes by first UNBINDing
and then BINDing the LU-LU session again. After the session is
successfully re-established again, VTI will request error recovery
from the host by sending DSP status message to HIF. Sense/Status
bytes of the status will indicate DC (Data Check) and US (Unit Specify)
with resulting sense code X'C4C4'.

	This status will be passed to the host if HIF happened to be 3270 BSC
HIF. If also the host follows IBM recommended error recovery procedures
it will make an attempt to re-send the whole screen completing the
error recovery process. SNA HIF will react by sending LUSTAT(82B) to
the host which may also result in host repainting the screen. If
the HIF is CMH it will also re-display the screen. It should be
noted, however, that except for CMH the success of such error recovery
depends largely on the ability of the host to re-send the screen. No
attempt will be made by any other TYMNET DSP HIF to save and re-send
the information needed to rebuild the screen.

	c. Unrecoverable errors.

	These will include every error which is not covered in 2 previous
cases. VTI will UNBIND the session, zap the circuit and then go to
local session to display Network Service screen (as currently
implemented in TIF).

.H 3 "SSCP-LU vs. LU-LU FMD RU's"

	Data messages coming from 3274 could be either SSCP-LU or LU-LU. SSCP-LU
messages are in SCS (SNA Character Stream) and typically have a very
limited volume (normally signon and possibly signoff). The bulk of
the data messages are LU-LU and they use 3270 data stream.

	The 3270 user operating in SNA/SDLC mode can select the desired session
by hitting SYS/REQ key (if both sessions are active). 3270 BSC does not have
any similar option and uses 3270 data stream only.

	Output data (to 3270) have the same option. The data is displayed on CRT
only if the screen mode selected by the operator coincides with the session
type which was chosen by the host for this message. Otherwise 3274 replies
with -RSP(829) - LU busy. Again, there is nothing similar in BSC which uses
only 3270 data stream.

	VTI handling of these 2 data streams depends on what kind of HIF it talks to.
If it happens to be BSC HIF or CMH VTI will assume that the screen is always
in LU-LU mode (SYS/REQ key is not used). If this assumtion is wrong (the user
hit this key accidentally) VTI will receive -RSP(829). This will be handled
as recoverable error of category b above. That is the session will be
UNBIND and BIND again. This will bring the screen back to LU-LU mode. DSP
status message will be sent to HIF next and the last screen will be
redisplayed (for BSC it depends on error recovery capabilities of the host).

	In case of having SNA HIF as a session partner VTI will attempt to make
the screen look as if it was the native mode, even in terms of SSCP-LU/LU-LU
option. The data will always be sent or receivewd from HIF in 3270 data
stream. The conversion from or to SCS will be performed (if necessary)
at both SNA TIF and HIF. It could be argued that it will create unnecessary
workload for both interfaces, but SSCP-LU streams are normally so
insignificant as compared to total workload that this is not a consideration.
The double conversion requires much less adjustment to the
existing HIF which makes it preferable.

	To implement this approach SNA TIF and HIF must exchange some information.
HIF should inform TIF that it received BIND or UNBIND (also DACTLU if
application timeout is requested at HIF). TIF should inform HIF of the
screen mode change whenever it learns of this change. Data-like messages
used in SYS/REQ implementation for SNA/CMT communication will be used
for this purpose (see SNAERS.DOC).

	VTI will maintain the mode of the screen. This mode information will change
if such data-like (Write Status) message is received from HIF or if the
information received from 3274 indicates that the operator hit the SYS/REQ
key.

	There are a few possibilities how VTI can learn that SYS/REQ key
was hit. It can receive -RSP(829) - LU busy - while attempting to send
a data message on one of the two sessions (SSCP-LU or LU-LU). This will be
be interpreted by VTI as the indication that currently the screen
is owned by the session alternate to what the data was sent to. Another
indication is receiving a data message or LUSTAT from 3274 on the
alternate session (that is different from previously known to VTI as
current screen mode).

	Upon receiving such indication from 3274 VTI will change its
current screen mode and send a data-like message (SYS/REQ AID) with
the next available sequence number to HIF (exactly as CMT for
CMT/SNA HIF SYS/REQ interface). At this moment VTI enters SYS/REQ
cycle similar to SYS/REQ cycle of CMT.

	SNA HIF will receive this SYS/REQ AID and respond with Write
Status command with the matching sequence number. SYS/REQ cycle will
end when VTI gets back Write Status with the matching sequence number.
Any data message from the host will be discarded while VTI is in
SYS/REQ cycle. Also, if SYS/REQ cycle was initated because of receiving
a data message or LUSTAT from 3274 these messages will not be responded
until the end of SYS/REQ cycle.

	Sequence number used for SYS/REQ AID will be non-zero. Zero
sequence number is reserved for Write Status initiated by HIF. This will
happen whenver BIND or UNBIND was received by the host. VTI will follow
the Write Status command by BINDing or UNBINDing LU-LU session. This
action will also change the screen mode known to VTI.

	Any data message received from HIF outside the SYS/REQ cycle
will be send to the session which corresponds to the last known screen
mode of VTI. If this happens to be SSCP-LU owned screen the data
message from HIF will be converted from 3720 to SSCP-LU data stream.

	Since SYS/REQ and BIND/UNBIND come from different sources
contention between them is possible. Unlike CMT VTI cannot ignore
BIND/UNBIND indication (Write Status with 0 sequnce number) while
in SYS/REQ cycle. For this reason the status coming from HIF may
be different from what is known to VTI at the end of SYS/REQ cycle.
VTI will generate an extra SYS/REQ AID and enter the next SYS/REQ
cycle without sending anything to 3274 if this situation happens.

.H 3 "SNA/DSP host to terminal data transfer"

	The  following  considerations  and  restrictions  apply  for  this
direction of data transfer.

	The data will be coming from HIF enveloped in DSP  command  headers
and trailers.  The overall length of a command does not exceed 3000
bytes.  Commands could be chained by an  ETX/ETB  trailer.   A  DSP
command has a standard DSP header followed by a valid outbound 3270
data stream command (like Write, Erase/Write, etc.).  There is  one
3270 command per one DSP command.

	DSP  commands  are  travelling  through  TYMNET  in  X.25   packets
(connected  by  X.25 M-bit).  Each packet could be split into a few
TYMNET  data  messages  (see  TYMNET  SNA  IIX  documents  for  the
details).

	DSP commands are received and processed by TDSP part of VTI
which operates as a part of NIO (Network I/O) module of SNA interface.
Together with SNA module they perform the necessary conversion of
DSP command to SNA FMD RQ.

	DSP header will be discarded and the information in this
header will be used to create SNA headers (see below). Data staream
does not require any conversion if it is sent on LU-LU session, otherwise
3270/SCS conversion will be performed.

	SNA TH and RH headers will  be  created  and  attached  right
before  the  RU.  The bits to be set during this process are BC and
EC (Begin and End Chain Indicators),  BB  and  EB  (Begin  and  End
Bracket),  CD  (Change  Direction)  and  BIU and EIU (Begin and End
segment).

	BB and EB bits are not defined during DSP/SNA conversion by NIO,
but are determined by internal logic in SNA module (LU-SVC). Specifically,
BB will be always set to 0 by VTI since BID will be used if the session is
not in bracket when data is sent by VTI.
EB will be always
set to 1 (which will allow contention between the host and terminal operator).

	Begin Chain (BC) bit will be set on if and only if VTI received the
beginning of the new DSP command.  The important consideration here
is that only one 3270 command is allowed per RU chain and  it  must
be the first byte of the RU (similar to DSP command).

	End Chain (EC) and segmentation bits in the  TH  do  not  have  any
rigid  requirements for DSP/SNA mapping.  From an SNA standpoint it
does not matter how the chain is split  into  RU's  and  RU's  into
segments  as  long  as RU and segment lengths do not exceed certain
values.  The maximum RU value for secondary to primary direction is
defined  in  the  BIND.   Also, multiple element RU chains could be
disallowed in BIND altogether.  The size of the segment is  limited
by the size of the SDLC frame.

	For this reason  it  is  unimportant  to  have  any  correspondence
between  the  way  the  DSP  command  is split into X.25 and TYMNET
packets and the way SNA RU chain is split into chains and segments.
The  algorithm  of mapping will try to keep segments and RU's close
to their maximum sizes, but also leave some room there for the next
TYMNET  packet  (if it is expected) so that the mapping code is not
over complicated.

	Mapping of one DSP command into one RU chain is  only  possible  if
the  BIND  parameters  are  set properly.  One DSP command is up to
3000 bytes long.  This means either multiple RU  chains  should  be
allowed in BIND or RU size should be no less than 3000. VTI gen for
BIND should comply with this limitation.

	Change  Direction  (CD)  indicator  controls   the   direction   of
transmission  in Half Duplex Flip-Flop mode.  An LU type 2 performs
in this mode of operation while in-bracket state.  Since VTI will
end bracket after every RU chain and enter contention mode this bit will
not be used.

.H 3 "SNA/DSP terminal to host data transfer"

	This direction of exchange is represented by  data  coming  to  VTI
from  3274 Control Unit.

	This data message will be mapped into a DSP response message.   The
important points to be observed during the mapping are as follows.

	DSP response consists of segments each of which does not exceed 256
bytes.  Segments could be chained by the First Segment (FS) bit and
TB/ETX trailer.  The  first  byte  of  the  data  portion  of  SNA
response  should  be  the  beginning of the valid 3270 data stream,
starting with AID and so on.

	Therefore, each RU chain coming from 3274 will be  translated  to
a DSP response message, each RU chain corresponding to a separate DSP
response.  The only important point is not to exceed the  limit  of
256 bytes for each segment of the DSP response.

	Preserving SNA segmentation or chaining divisions of the  RU  chain
by  mapping  them  into X.25 or TYMNET IIX packets is of no special
importance (taking into account a small 256  byte  limit).   TYMNET
packages of maximum available length will be used and output to the
network as soon as possible.


.H 1 "Accounting Host"

.sp
.H 2 "Background"
.sp
The  accounting host number or pseudo-host number was used for accounting
purposes only.  The 15th bit of this host number is set and
does not appear on the supervisor's host table.  This is because no 
circuits are ever built to them so there was no need to place them
in the host table as a check for valid hosts during circuit build requests.
.sp
Operations currently needs to expand the range of numbers needed for
real hosts to the 5 digit numbers presently dedicated to accounting hosts.
Supervisor version 43.0, will drop the use of accounting host numbers
and will require their replacement with normal, real host numbers.
.sp
.H 2 "Current Environment"
.sp
The SNA TIF does not use a host number but instead,
defines a pseudo-host number and then sends this pseudo-host
number as the origination host number in the pseudo-needle
request message (07).  The 15th bit of the defined pseudohost number
is set so the supervisor
never recognizes it as a real host.  Hence, there is no status message
or port availability message sent to the supervisor as is done
for real hosts.  In addition, DDT does not display the TIF host status 
because it is not reported to the supervisor.
.sp
.H 2 "Requirements"
.sp
In order to conform to the requirements of Supervisor version 43,
the SNA TIF will have to define an accounting host number to be sent
in the pseudo-needle request.  This accounting host number will be
treated as a real host number.
.sp
.H 2 "ACTHOS macro"
.sp 
The pseudo-host number for the TIF will have to be replaced by a 
real host number.  A new macro, ACTHOS, will replace the PSEUDO.HOST
macro.  This macro will define the Accounting Host number, check 
for numeric range validity, check if a parameter is present
and if the macro is at the correct level.  There is no default.

.sp
.H 2 "Pseudo-needle Request Message"
.sp
The Accounting Host number will be sent out as the origination host
number in the pseudo-needle request (07) without setting the 15th bit.

.sp
.H 2 "Extended Host Status Message"
.sp
The  extended host status message (10) indicating host answered
must be sent by the slot at slot start up.  The message must
indicate that the host is an origination host only so that 
circuits will not be built to it.
.sp
.H 2 "Limitations"
.sp
Because the extended status message sent by the slot will
specify host answered, DDT will reflect this state for the 
TIF's accounting host.  However, it must be documented that
this may not reflect the actual line active state between
the TIF and the CU on each of the lines involved. 

.H 1 " Memory Management"
.sp
.H 2 " Purpose"
.sp
The purpose of this project is :
.AL a
.LI 
to reduce the size of the SNA INTERFACE 
by basing the buffer allocation on the number of concurrent LUs (not users)
that are defined for each line and host # ,
.sp
.LI
and to reduce the amount of required buffer for each active and inactive LU
to allow the definition of 256 devices per interface which will double the
current limitation of 128.
.LE
.sp
To address the above task, new Sysgen macro and parameters will be introduced
to define quotas for the number of concurrent LUs.
These quotas will then enable the user to 
customize the SNA Interface size according to their current needs.
.sp
.H 2 " Overview"
.sp
To define and process these quotas, two different approaches will be taken 
in order
to handle both the SECONDARY and PRIMARY Lines (HIFs & TIFs).
.sp
For a SECONDARY line (HIF), quotas will be set for each HOST# that is defined
in the TYMFILE. Multiple SECONDARY lines could be assigned the same HOST# and
will therefore share this available LU quota amongst themselves. However, no
new macros will be introduced to define these quotas. Instead, the GHOST
and the HOST macros will be expanded and updated in order to take on new 
arguments to define the quotas.
.sp
Because PRIMARY lines do not have HOST#'s assigned, the concurrent LU quota
will be defined on a per line basis. This quota will be set by a 
new SYSGEN macro which will be used for PRIMARY lines only.
.sp
The above quotas will actually be comprised of two separate arguments, one for
the number of concurrent Display devices (LU.T2) and another for the number of
concurrent Printer devices (LU.T1 & LU.T3). Allowing different thresholds
for different LU types is an attempt to ensure access to a specified device.
.sp
The algorithm that determines the buffer requirement, will take the sum of all
quotas and allocate enough buffer space to support all concurrent LUs.
Furthermore, it will also allocate some buffer space for all the other
LUs that are defined in the TYMFILE in order to enable the LU activation
process to complete successfully for those extra LUs.
.sp
ASSEMBLY ERROR MESSAGEs will be generated if the above mentioned macros
are not defined properly.
.sp
SYSTEM ERROR MESSAGEs will be generated in case there 
is a need to reject a logon request due to the unavailability of an active LU
(that is if one of the quotas has been reached).
.sp
.H 2 " Assumptions"
.sp
.BL
.LI
It is assumed that no changes will be made to the amount of space allocated
for the control blocks ( however, the size of a given control block may
increase to allow for full-word pointers ).
.LI
There will be no changes made to the amount of space allocated for the 
base code ( obviously, the base code will grow due to the new additions and
modifications ). A code optimization process would be needed in order to be able
to perform this, properly.
.sp
.LI
All LU types ( LU.T1, LU.T2, LU.T3 ) will be allocated the
same amount of buffer space. The base code would include all
necessary routines that are required for all specified options, such as
VHR, VTI, and Host DSP Support.
.sp
.LI
BUFSIZE parameter determines the overall size of the buffers that
are allocated for each LU and this will act in the same manner with this new 
option ( however, the default value for BUFSIZE will be decreased to 90d
from the current value of 140d ).
.LI
The quotas that are set for each Host# and each Primary line will not be
changed dynamically. This means that if there are lines which are not active,
the buffer space which is allocated to all those LUs will be unused ( the actual
physical space will be used as part of the buffer chain process but no extra
devices on the active lines will be allowed to be used ).
.sp
.LE
.H 2 " Limitations & Risks"
.sp
.BL
.LI
Buffer space could be mis-managed if a thorough planning is not done prior
to defining these new quotas. Proper estimates need to be done to come up
with a configuration that would minimize the buffer requirement and at the
same time provide equal access to all required LUs.
.sp
.LI
At this time, the sum of all the defined LUs within a given slot should
not exceed 256.
This limit might be changed in the future versions of the Interface.
.sp
.LI
Because all SYSGEN ERRORS are fatal, the assembly process will be aborted
until they are all corrected.
.LE
.PH "'\fB\s-1\\*(DT'MDC Confidential'Examples'"
.bp
.H 2 " Examples"
.sp
This section will demonstrate how much buffer space would be allocated for a
given configuration. 
.sp
.H 2 " Buffer Requirements"
.sp
.H 3 " Current Implementation (w/o this feature)"
.sp
.BL
.LI
Base code \(~= 168 Kb assuming TERMINAL support, HOST support, VHR support,
VTI support, and BUFSIZE = 140
.LI
Each line \(~= 5Kb
.LI
Each PU \(~= 8 Kb
.LI
Each LU \(~= 6 Kb
.LE
.sp
Please, keep in mind that these are approximate figures.
.sp 2
.DS
.TB "Current Memory Requirements"
.sp
.TS
box, center;
cb | cb | cb | cb
a | a | a | a.
Line(s)	Control Units (PUs)	Terminals (LUs)	Total (Kb)
=
1	1	1	187
1	1	2	194
1	1	3	200
_
1	2	1	196
1	2	2	201
1	2	3	207
_
1	3	1	203
_
2	4	20	330
2	5	35	429
.TE
.DE
.bp
.H 3 " Future Implementation (with this feature)"
.sp
.BL
.LI
Base code \(~= 170 Kb assuming TERMINAL support, HOST support, VHR support,
VTI support, and BUFSIZE = 90
.LI
Each line \(~= 5Kb
.LI
Each PU \(~= no more than 2 Kb
.LI
Each LU within the defined quota \(~= no more than 4.4 Kb
.LI
Each extra LU defined in the Tymfile upto 10 \(~= no more than 1.3 Kb
.LI
Each additional LU over 10 \(~= 0.8 Kb
.LE
.sp
Please, keep in mind that these are approximate figures and 
are subject to change.
.sp 2
.DS
.TB " Memory Requirements With New Feature"
.sp
.TS
box, center;
cb | cb | cb | cb | cb | cb
a | a | a | a | a | a.
Line(s)	Control Units (PUs)	Terminals (LUs)	Concurrent LU(s)	Total (Kb)	Savings %
=
1	1	1	1	181.4	3.0
1	1	2	1	182.7	5.8
1	1	3	1	184.0	8.0
_
1	2	1	1	183.4	6.4
1	2	2	1	184.7	8.0
1	2	3	2	189.1	8.6
_
1	3	1	1	185.4	8.7
_
2	4	20	15	260.5	21.1
2	5	35	10	259.0	39.6
.TE
.DE
.H 1 "SNA/SDLC Integration"
.sp

.H 2 "System Functions"
This section describes the new functionality which will be 
implemented into the SNA interface for the SNA/SDLC integration project.
The integrated SNA interface will support both the current SDLC/QLLC functionality,
and the current SNA functionality. To accomplish this task, more dialects,
a new level of support, new circuit types and new configurations will be supported.
.sp
The following table specifies combinations of dialects, support level, circuit types,
and connections which will be supported for the integrated SNA version 5.

.sp

.TS
box, expand;
c|c|c|c
l|l|l|l.
Dialect	Support Levels	Circuit Types	Connections
=
T{
.na
DSP (SNA to non SNA)
.ad
T}
_
	PS only support
		DSP SVC
			T{
.na
CMT/PBT to SNA HIF
.ad
T}
			T{
.na
SNA VHR to CMH
.ad
T}
			T{
.na
SNA VTI to CMH/PBH
.ad
T}
			T{
.na
SNA TIF (old) to SNA HIF
.ad
T}
			T{
.na
SNA TIF to SNA HIF (old)
.ad
T}
_
T{
.na
X.25 (SNA to X.25)
.ad
T}			
_
	DLC only support	
		X.25 PVC	
			T{
.na
SNA outgoing to X.25 incoming
.ad
T}
			T{
.na
SNA incoming to X.25 outgoing
.ad
T}
		X.25 SVC	
			T{
.na
SNA outgoing to X.25 incoming
.ad
T}
			T{
.na
SNA incoming to X.25 outgoing
.ad
T}
_
T{
.na
SNA/DSP (SNA to SNA)
.ad
T}			
_
	PS only support
		SNA/DSP SVC
			T{
.na
SNA outgoing to SNA incoming
.ad
T}
_
.TE
.sp
The new functionality can be divided into two major
categories. The first category is new dialects which will be added,
SNA/DSP dialect and X.25 dialect. The second category of changes is
a new SNA data link only level of support, called DLC, in addition to the current PS
level of support.
.bp
.H 3 "Dialect Support"
.sp
In order to support the DLC connections, the X.25 dialect will be
implemented. The SNA interface will support the current DSP dialect
and the new SNA/DSP dialect for the native printer project.
.sp
The X.25 dialect is the dialect which the SDLC/QLLC interface currently
uses when communicating with an X.25 interface (using QLLC), or another
SDLC/QLLC interface (using SDLC). The implementation of the X.25 dialect
will be functionally equivalent to the X.25 dialect implementation in the
SDLC/QLLC interface. For more information on the implementation of
the X.25 dialect, refer to the SDLC/QLLC External Reference Manual.
.sp
The SNA/DSP dialect is a functional superset of the DSP dialect. This is an
IIX dialect which will be used between two SNA integrated interfaces.
This dialect will be used for PS connections.  Because this is 
a new dialect (this is the first implementation of SNA/DSP) this dialect
will be described in subsequent subsections and also in the SNA/DSP appendix.

.sp
The following diagram is an overview of the logon stages.
.sp
.sp
.sp
.sp
.so logon.pic

.bp
.sp
.H 4 "SNA/DSP Support"
The SNA/DSP dialect is a functional superset of the DSP dialect. 
In addition to providing all of the current DSP functionality, the
SNA/DSP dialect will allow the exchange of Virtual Circuit options,
SNA headers and control messages, and QLLC information.
.sp
The SNA interface implementation of the DSP
dialect supports a subset of the X.25 Switched Virtual Call (SVC)
capabilities with no Permanent Virtual Circuit (PVC) capabilities.
The SNA/DSP dialect implementation will support all the SVC and PVC
functionality which is currently provided by the SDLC/QLLC interface. 
.sp
For a specific description of the SNA/DSP dialect message formats and 
scenarios, refer to the SNA/DSP appendix. 
.sp
In summary, the implementation of the SNA/DSP dialect will include the
following functionality:
.sp
.AL 1
.LI
Virtual Circuit Options - Information pertaining to the SNA interface
options for a particular virtual circuit will be exchanged for possible
negotiation. The information will be exchanged inside of a new SNA/DSP
Circuit Init DQ message. This message will replace the DSP Circuit 
Request and Circuit Enable messages.
.LI
SNA Header and Control Messages - The format of the data messages have been
modified to allow the inclusion of SNA transmission headers, request/response
headers and SNA control messages.
.LI
QLLC Information - QLLC formatted information will be exchanged inside a
new SNA/DSP QLLC DQ message. Because QLLC specifies some information
which is sent as part of the Call User Data, the DSP information which resides
in the Call User Data packet, will be moved to the new DQ Circuit Init 
message. The SNA implementation of the SNA/DSP dialect and X.25 dialect
has adopted the IBM QLLC standard.
.LI
PVC Capabilities - The implementation of the SNA/DSP dialect will include
the PVC messages and procedures as they are supported by the SDLC/QLLC
interface. The PVC request and response messages and the Reset message
will be supported as they are in the SDLC/QLLC interface.
.LI
SVC Capabilities - The implementation of the SNA/DSP dialect will include
the SVC messages and procedures as they are supported by the SDLC/QLLC
interface. Utilities and Facilities messages and  all Call Request messages
as they are supported by the SDLC/QLLC interface will be supported for X.25
dialect.
.LE
.sp
The next two subsections describe the
PVC procedures, SVC procedures and their messages which will be implemented.
.bp
.H 4 "SNA/DSP Dialect for PVCs"
.sp
.sp
The following is a list of messages which will be implemented 
and supported ONLY by PVCs using the SNA/DSP or X.25 dialects:
.sp
.sp
.sp
.AL 1
.LI
PVC REQUEST (X.25 dialect ID byte = X`C099')
.LI
PVC RESPONSE (X.25 dialect ID byte = X`C09A')
.LI
RESET (X.25 dialect ID byte = X`C096')
.LE
.R
.bp
.H 5 "Sample Scenario of SNA/DSP PVCs"
.sp
SNA/DSP logon procedures for SNA to SNA (PVC) with DLC support
.nf
.DS
.ft C
          TIF                           HIF
        (outgoing)                    (incoming)
           |                             |
           |<---------Select Dialect-----|          1
           |          (8080)             |
           |---Select Dialect Response-->|          2
           |   (8081)                    |
           |---Turkey Level------------->|          3
           |   (C093)                    |
           |<---------Turkey Level-------|          
           |          (C093)             |
           |---PVC Request-------------->|          4
           |   (C099)                    |
           |<---------PVC Response-------|          5
           |          (C09A)             |
           |---Circuit Init------------->|          6
           |   (C094/22) Q=1             |
           |<---------Circuit Init-------|
           |          (C094/22) Q=1      |
           |---Status------------------->|          7
           |   (C094/12) Q=1             |<--SNRM   8
           |<---------Q-bit Data Packet--|          
<--SNRM----|          (C094/20/QSM) Q=1  |          
--UA------>|                             |          9
           |---Q-bit Data Packet-------->|
           |   (C094/20/QUA) Q=1         |--UA-->
           |                             |<--ACTPU 10
           |<---------Data Packet--------|
<--I frame-|          (C094/ACTPU) Q=0   |
   (ACTPU) |                             |
      .                  .                    .
      .                  .                    .
      .                  .                    .
           |                             |<--DISC  11
           |<---------Q-bit Data Packet--|
<--DISC----|          (C094/20/QDISC)Q=1 |
--UA------>|                             |         
           |---Q-bit Data Packet-------->|
           |    (C094/20/QUA) Q=1        |--UA-->
 

.DE
.bp
.ft P
.fi
.R
.sp
The following comments correspond to the numbers on the right side:
.sp
.AL 1
.LI
The incoming side will send a SELECT DIALECT COMMAND message in response to a 
received NEEDLE message. This message includes a list of all dialects supported
by the interface (steps 1 thru 3 are the same for both PVCs and SVCs).
.LI
The outgoing side will respond with a SELECT DIALECT RESPONSE message. 
This message will include only one dialect. The dialect included will be
one of the dialects received in the SELECT DIALECT COMMAND message. The dialect
with the highest preference, as defined in the TYMFILE< which matches is chosen. This
will be the dialect spoken for this circuit.
.LI
Both sides now exchange turkey levels, using the TURKEY LEVEL message.
The SNA/DSP TURKEY LEVEL of 1 will be used.
.LI
The outgoing side must now send the PVC REQUEST message. This message
uses the same format as the SDLC/QLLC version 2 interface. PVC information
such as destination host number, line number, station address etc. is included
in this message.
.LI
The incoming side checks the information in the PVC REQUEST and if
the incoming side determines that this information is consistent with
it's own destination information, a PVC RESPONSE message is returned.
.LI
The outgoing side checks the information in the PVC RESPONSE message for
consistency with the outgoing side's destination information. Circuit Init messages are now exchanged.
The Circuit Init from the outgoing side indicates DLC as the requested
level of support. The variable logon information, up to the DLC layer, can be
passed in this message. The incoming side checks if it can support the
requested DLC level and variable parameters. If incoming side finds 
the information to be compatible, a Circuit Init is returned with the agreed
upon parameters for this virtual circuit. Virtual circuit establishment is now complete.
.sp
Until this step, logons with the PS layer of support will operate the same
as logons with DLC layer of support. During this step, if PS layer is supported,
information up to the PS layer will be exchanged in the CIRCUIT INIT.
.LI
The outgoing side returns a STATUS message to be consistent with DSP.
This step will be made for logons with DLC or PS layer of support.
.LI
Both sides are now in data transfer mode. The connection has been successfully
established. The received SNRM can now be sent to the remote side. This 
scenario is an example of a DLC configuration with end-to-end unnumbered frame
handling. The SNRM is sent as a QLLC QSM DQ packet to the remote side. The
remote side then sends the SDLC SNRM to the secondary station. For a thorough
description of how the end-to-end DLC frames are handled, refer to the SDLC/QLLC
External Reference Manual. For virtual circuits with PS support, the SNRM
will be handled locally.
.LI
The UA received from the secondary, is handled the same as the previous SNRM.
For virtual circuits with PS support, the UA will also be handled locally.
.LI
The ACTPU is sent as a DATA PACKET with the Q bit reset. The I-Field in the
SDLC Information frame received from the host, is transparent in DLC mode.
The I-field is sent unchanged, that is PIU formatted, inside of the DATA PACKET. The remote side
sends this as an SDLC Information frame to the secondary station. For virtual
circuits with PS support the ACTPU will be handled locally.
.LI
The DISC and UA are handled in the same manner as the previous unnumbered frames.
For virtual circuits with PS support, these frames will be handled locally.
.LE
.bp
.H 4 "SNA/DSP Dialect for SVCs"
The following is a list of messages which will be implemented 
and supported ONLY by SVCs using the SNA/DSP or X.25 dialects:
.sp
.sp
.sp

.AL 1
.LI
CALLED ADDRESS (X.25 dialect ID byte = X`C087')
.LI
CALLING ADDRESS (X.25 DIALECT ID byte = X`C088') 
.LI
CALL USER DATA (X.25 DIALECT ID byte = X`C089')
.LI
FACILTIES (X.25 dialect ID byte = X`C08D')
.LI
UTILITIES (X.25 dialect ID byte = X`C08C')
.LI
CALL ACCEPT(X.25 dialect ID byte = X`C092')
.LI
CALL CLEAR (X.25 dialect ID byte = `XC095')
.LE
.sp
.sp
Messages 1 through 5 are part of the X.25 Call Request packet.
Messages 2, 4, and 5 will not be used in SNA/DSP dialect implementation
in version 5 and will be discarded if received.
.bp
.H 5 "Sample Scenario of SNA/DSP SVCs"
.sp
SNA/DSP logon procedure for SNA to SNA (SVC) with DLC support
.nf
.DS
.ft C
          TIF                           HIF
        (outgoing)                    (incoming)
           |                             |
           |<---------Select Dialect-----|          1
           |          (8080)             |
           |---Select Dialect Response-->|          2
           |   (8081)                    |
           |---Turkey Level------------->|          3
           |   (C093)                    |
           |<---------Turkey Level-------|          
           |          (C093)             |
           |---Called Address----------->|          4
           |   (C087)                    |
           |---Call User Data----------->|
           |   (C089)                    |
           |<--------Call Accept---------|          5
           |         (C092)              |          
           |---Circuit Init------------->|          6
           |   (C094/22) Q=1             |
           |<--------Circuit Init--------|
           |         (C094/22) Q=1       |
           |---Status------------------->|          7
           |   (C094/12) Q=1             |
<--DTR ON--|                             |<--SNRM   8
           |<---------Q-bit Data Packet--|          
<--SNRM----|          (C094/20/QSM) Q=1  |          
--UA------>|                             |          9
           |---Q-bit Data Packet-------->|
           |   (C094/20/QUA) Q=1         |--UA-->
           |                             |<--ACTPU  10
           |<---------Data Packet--------|
<--I frame-|          (C094/ACTPU) Q=0   |
   (ACTPU) |                             |
      .                  .                    .
      .                  .                    .
      .                  .                    .
           |                             |<--DISC  11
           |<---------Q-bit Data Packet--|
<--DISC----|          (C094/20/QDISC) Q=1|
--UA------>|                             |         
           |---Q-bit Data Packet-------->|
           |    (C094/20/QUA) Q=1        |--UA-->
 

.DE
.ft P
.fi
.bp
.R
The following comments correspond to the numbers on the right side:
.AL 1
.LI
The incoming side will send a SELECT DIALECT COMMAND message in response to a 
received NEEDLE message. This message includes a list of all dialects supported
by the interface. (steps 1 thru 3 are the same for both SVCs and PVCs)
.LI
The outgoing side will respond with a SELECT DIALECT RESPONSE message. 
This message will include only one dialect. The dialect included will be
one of the dialects received in the SELECT DIALECT COMMAND message. The dialect
which matches and has the highest preference, as defined in the TYMFILE, will be chosen. This
will be the dialect spoken for this circuit.
.LI
Both sides now exchange SNA/DSP turkey levels, using the TURKEY LEVEL message.
TURKEY LEVEL 1 is used.
.LI
The outgoing side must now send the call request messages. The only two messages currently
sent on an SNA/DSP connection are the CALLED ADDRESS message and the CALL USER
DATA message. Other call request messages such as CALLING ADDRESS, FACILITIES,
and UTILITIES messages will be discarded if received.
.LI
The incoming side checks the information in the CALLED ADDRESS message to
determine which station to attach to this connection. If all the destination
information is supplied in the CALLED ADDRESS a station is attached to this
circuit request. If there is not enough information, the rest will be supplied by
the CIRCUIT INIT message. The CALL USER DATA
must have the proper SNA-to-SNA indication. If an attachment can be made
and the user data is acceptable a CALL ACCEPT message is returned.
.LI
CIRCUIT INIT messages are now exchanged.
The CIRCUIT INIT from the outgoing side indicates DLC as the requested
level of support. The variable logon information, up to the DLC layer, can be
passed in this message. The incoming side checks if it can support the
requested DLC level and variable parameters. If incoming side finds 
the information to be compatible, a Circuit Init is returned with the agreed
upon parameters for this virtual circuit. Virtual circuit establishment is now complete.
.LI
The TIF returns a STATUS message to be consistent with DSP.
.LI
Both sides are now in data transfer mode. The connection has been successfully
established. The received SNRM can now be sent to the remote side. This 
scenario is an example of a DLC configuration with end-to-end unnumbered frame
handling. The SNRM is sent as a QLLC QSM DQ packet to the remote side. The
remote side then sends the SDLC SNRM to the secondary station. For a thorough
description of how the end-to-end DLC frames are handled, refer to the SDLC/QLLC
External Reference Manual.
.LI
The UA received from the secondary, is handled the same as the previous SNRM.
.LI
The ACTPU is sent as a DATA PACKET with the Q bit reset. The I-Field in the
SDLC Information frame received from the host, is transparent in DLC mode.
The I-field is sent unchanged inside of the DATA PACKET. The remote side
sends this as an SDLC Information frame to the secondary station
.LI
The DISC and UA are handled in the same manner as the previous unnumbered frames.
.LE
.bp
.sp 2
SNA/DSP logon procedure for SNA to SNA (SVC) with PS support.
.nf
.DS
.ft C
          3270 CU       SNATIF               SNAHIF       HOST FRONT END
                      (outgoing)            (incoming)
            |             |                    |               |
            |<---SNRM-----|                    |<----SNRM------| 1
            |-----UA----->|                    |------UA------>|
            |<--ACTPU-----|                    |               | 
            |-- +RSP ---->|                    |<---ACTPU------| 2
            |<--ACTLU-----|                    |--- +RSP ----->|
            |-- +RSP ---->|                    |<---ACTLU------|
            |<--BIND -----|       <-port avail-|+RSP/poweroff->| 3
            |-- +RSP ---->|                    |               |
            |<-- SDT -----|                    |               |
            |-- +RSP ---->|                    |               |
NSM <-------|<-- NSM -----|                    |               |
screen      |             |                    |               |
Logon ----->|     Build VC|                    |               | 4
Selection   |             |                    |               |
                          |                    |
                          |<--Select Dialect---|                 5
                          |      (8080)        |
                          |--Dialect Selected->|                 6
                          |      (8081)        |
                          |---Turkey Level---->|                 7
                          |      (C093)        |
                          |<--Turkey Level-----|          
                          |      (C093)        |
                          |---Called Address-->|                 8
                          |      (C087)        |
                          |---Call User Data-->|
                          |      (C089)        |
                          |<--Call Accept------|                 9
                          |      (C092)        |          
                          |---Circuit Init---->|                 10
                          |   (C094/22) Q=1    |
                          |<--Circuit Init-----|
                          |   (C094/22) Q=1    |
                          |---Status---------->|                 11
            |<--UNBIND----|   (C094/12) Q=1    |----NOTIFY---->| 12
            |-- +RSP ---->|                    |<-- +RSP ------|

.DE
.ft P
.fi
.bp
.R
The following comments correspond to the numbers on the right side:
.AL 1
.LI
The initialization is started locally by the SNATIF and continues independently
from what is happening on the the SNAHIF side.
.LI
The host initializes the SNAHIF.
.LI
The SNAHIF reports the power off condition for the LUs.
.LI
The SNATIF starts the logon LU-LU session and sends the NSM screen to the 3270
device.  For automatic SVC, the NSM screen is not sent.
.LI
The operator selects the CRT logon option and enters the logon information.
The SNA/DSP connection between the SNATIF and the SNAHIF is established.
.sp
For automatic SVC, the host destination and the necessary logon information are
retrived from the genned parameters.
.LI
Same as the SNA to SNA (SVC) with DLC support.
.LI
Same as the SNA to SNA (SVC) with DLC support.
.LI
Same as the SNA to SNA (SVC) with DLC support.
.LI
Same as the SNA to SNA (SVC) with DLC support.
.LI
Same as the SNA to SNA (SVC) with DLC support.
.LI
For virtual circuits with PS layer of support, the CIRCUIT INIT messages will
contain more information to support PS connections.
.LI
Both sides are now in data transfer mode. The connection has been successfully
established. The local session of the SNATIF is unbinded and the NOTIFY with
power on is sent to the host.
.LE
.bp
.H 3 "DLC Support"
.sp
.sp
.sp
The SDLC protocol is made up of three types of frames; supervisory frames,
information frames, and unnumbered frames. There are basically two ways of 
handling these frames; one is locally and the other is on an end-to-end  
basis. Supervisory frames, such as RRs, RNRs and REJs, will  always be
handled locally. Information frames, for DLC support, will always be handled
end-to-end. Unnumbered frames, such as SNRM, UA and DISC, will be handled
on an end-to-end basis for DLC support.
.sp
.H 4 "Supervisory Frames"
.sp
Supervisory frames, such as RR, RNR and REJ will be implemented in SNA
version 5 as described by the Full Duplex and Service Order Table sections of this
document. These frames must by implemented in such a way as to support 
full duplex and half duplex data modes. The current implementation 
of supervisory frames in the SDLC/QLLC and SNA interfaces will only support the
half duplex data mode.
.sp
.H 4 "Unnumbered Frames"
.sp
Handling unnumbered frames in SNA version 5, will be done on an end-to-end basis.
In future releases it may be possible to specify local handling of these
frames for DLC support. For release 5 only end-to-end will be available. 
.sp
End-to-end handling of unnumbered frames will be different than
end-to-end handling of information frames. Not each and every SNRM, UA
etcetera, will be sent to the remote side. Only the first in a group of
received unnumbered frames will be sent end-to-end.
.sp
The secondary interface  will remember which unnumbered frame it last received
from the line. If the next received frame is the same as the last
 unnumbered frame, then the latest received frame
is  discarded and not
sent across to the remote. This process of discarding continues indefinately
until the secondary interface receives a different frame from the line or
the circuit is reset or cleared.
.sp
The primary interface will not perform the discard logic as described for
the secondary interface above. The primary interface will send a sequence
of unnumbered frames to the line.
 The number of frames
in a sequence is defined by the separate retries macros (SEQ.RETRIES,
NUM.RETRIES and PAU.RETRIES). These macros will operate
similarly to the current SDLC/QLLC SNRMRETRIES, XIDRETRIES and TESTRETRIES
macros. Refer to the SDLC/QLLC External Reference Manual for more information 
on end-to-end handling of unnumbered frames for the primary.
.sp
.H 4 "Information Frames"
.sp
In SNA version 5 information frames will be sent end-to-end for DLC support. 
This will be done in the same manner as the current SDLC/QLLC interface processes
information frames. Refer to the SDLC/QLLC External Reference Manual for more
details. The current SNA interface does not send information frames end-to-end.
The SNA headers inside of the information frames are analyzed and processed.
For the DLC support, these higher SNA layers will be transparent. 
The contents of the information field will not even be looked at for circuits
with DLC support.
.sp
.H 4 "Addressing"
.sp
If a primary interface PU is defined to have a PU.ADDRESS of FF then
the first address received from the secondary station on the line is
accepted as this station's address. If the PU.ADDRESS is NOT FF then
the secondary station on the line must send the correct genned address.
Only a primary interface PU can have the PU.ADDRESS defined as FF.
.sp
The primary interface will always include the received address in the
data packet sent to the remote secondary interface. The remote secondary
decides for itself what address to send to the primary station on the line.
.sp
The secondary interface PU will accept an FF address as well as the genned
PU.ADDRESS. This address is NOT included in the network data packet. Instead
an FF address is always sent in the data packet. This follows the QLLC
format. According to the QLLC format, a command always has an FF address.
.sp
When the secondary interface receives a data packet from the remote with
the remote's address, this address is ignored. Instead the locally genned PU.ADDRESS
is included in the frame sent to the local primary station on the line.

.bp
.H 3 "Cause Codes and Diagnostic Codes"
.sp
This section describes the cause codes and diagnostic codes which will be 
added to the SNA interface for the integration project. Currently, the CLEAR
message and the RESET message are not sent by the interface. Therefore, there 
are no cause codes or diagnostic codes coded in the interface. The next few
subsections describe the cause codes and diagnostic codes which are used by
the SDLC/QLLC interface and which will be added to the SNA interface for 
version 5.
.sp
For a more thorough description of cause codes and diagnostic codes refer to
THE X.25 INTERFACE FOR ATTACHING SNA NODES TO PACKET-SWITCHING DATA NETWORKS
GENERAL INFORMATION MANUAL (GA27-3345-1) (NPSI Document).
.sp
.H 4 "Clear Cause Codes"
.sp
.TB "Cause Codes for CLEAR Message (C095)"
.sp
naming convention: CC prefix stands for Clear Cause code.
.TS
box, expand;
nc|c|c
l|l|l.
	Code Label	Code Value (hex)
=
DTE Generated	CCDTE	00
_
  Number Busy	CCBUSY	01
  Out of Order	CCOUT	09
  Remote procedural error	CCRPER	11
  Reverse charging acceptance not subscribed	CCRCHG	19
  Incompatible destination	CCINCD	21
  Fast select acceptance not subscribed	CCFSLC	29
_
  Invalid facility request	CCINVF	03
  Access barred	CCABRD	0B
  Local procedural error	CCLPER	13
_
  Network congestion	CCNETC	05
  Not obtainable	CCNOBT	0D
  RPOA out of order	CCRPOA	15
_
.TE

.bp

.H 4 "Reset Cause Codes"
.sp
.TB "Cause Codes for RESET Message (C096)"
.sp
naming convention: RC prefix stands for Reset Cause code.
.TS
box, expand;
c|c|c
l|l|l.
	Code Label	Code Value (hex)
=
DTE Generated	RCDTE	00
_
  Out of Order	RCOUT	01
  Remote procedural error	RCRPER	03
  Local procedural error	RCCLPER	05
  Network congestion	RCNETC	07
  Remote DTE operational	RCDOP	09
  Network operational	RCNETO	0F
  Incompatible destination	RCINCD	11
_
.TE
.sp

.bp
.H 4 "Network Generated Diagnostic Codes"
.sp
The following table contains diagnostic codes which may be found in the
diagnostic field of CLEAR and RESET messages for network generated
cause codes.
.sp
.TB "Diagnostic Codes for Network Generated Diagnostic Fields"
.sp
naming convention: DC prefix stands for DCe diagnostic code.
.TS
box, expand;
c|c|c
l|l|l.
	Code Label	Code Value (hex)
=
No Additional Information (General)	DCNOIF	00
_
Call Setup Problems (General)	DCCALL	40
  facility code not allowed	DCFCOD	41
  facility parameter not allowed	DCFPAR	42
  invalid called address	DCCALD	43
  invalid calling address	DCCALG	44
_
  *invalid select dialect rsp	DCSLDL	94
  *bad turkey level	DCTRKY	AA
  *incoming access not allowed	DCNIAC	B7
  *wrong circuit state	DCBUSY	BE
_
.TE
.sp
* defined by X.25 interface (reserved by NPSI)

.bp
.H 4 "DTE Generated Diagnostic Codes"
.sp
The following table contains diagnostic codes which may be found in the
diagnostic field of CLEAR and RESET messages for DTE generated
cause codes.
.sp
.TB "Diagnostic Codes for DTE Generated Diagnostic Fields"
naming convention: DT prefix stands for DTe generated diagnostic code.
.sp
.TS
box, expand;
c|c|c
l|l|l.
	Code Label	Code Value (hex)
=
Pad Error (General)	DTPDER	70
  PAD Access facility failure	DTACFC	71
  SDLC timeout	DTTIMO	73
  SDLC frame invalid	DTINFR	74
  SDLC sequence error	DTSQER	76
_
.TE
.H 4 "Processing of CLEAR Cause and Diagnostic Codes"
.sp
Anytime one of these cause codes is received in a CLEAR message it is
ignored, along with any diagnostic codes which might also be present.
The following descriptions pertain to generated cause codes
only.
.VL 5
.LI
\fBCCDTE\fP - DTE Generated. This cause code is generated when a Pad 
Error has occurred on the local SDLC link. 
.BL
.LI
\fBDTPDER\fP - PAD Error (General). This is sent when the FG sends an
NEF (not expected frame) command to DLCPRO.
.LE
.LI
\fBCCBUSY\fP - Number Busy. This cause code is never generated.
.LI
\fBCCOUT\fP - Out of order. This cause code is never generated.
.LI
\fBCCRPER\fP - Remote procedural error.  The following diagnostic code(s)
are sent along with the CCRPER cause code as specified.
.BL
.LI
\fBDCBUSY\fP - Wrong circuit state.
.sp
When a CALLED ADDRESS message is received by an incoming SVC and the requested
station is NOT in the proper state for accepting a logon CCRPER and DCBUSY
codes are sent in the CLEAR message.
.LE
.LI
\fBCCRCHG\fP - Reverse charge acceptance not subscribed. The following diagnostic
code(s) are sent along with the CCRCHG cause code as specified.
.BL
.LI
\fBDCFCOD\fP - Facility code not allowed.
.sp
When an incoming SVC receives a FACILITY message for reverse charge,
but the attached station does NOT subscribe to reverse charge a CLEAR message
with CCRCHG and DCFCOD codes is sent.
.LE
.LI
\fBCCINCD\fP - Incompatible destination. The following diagnostic code(s) are
sent along with CCINCD for the specified conditions.
.BL
.LI
\fBDCCALD\fP - Invalid called address.
.sp
When an invalid called address in a CALLED ADDRESS message is received, these
codes are sent in the CLEAR message.
.sp
Also, if there is not a address within the local interface as defined in the called
address field, then the address is considered invalid and these codes are sent in the
CLEAR message.
.LE
.LI
\fBCCFSLC\fP - Fast select acceptance not subscribed. The following diagnostic
code(s) are sent along with CCFSLC for the specified conditions.
.BL
.LI
\fBDCFPAR\fP -Facility parameter not allowed.
.sp
When an incoming SVC receives a FACILITY message for reverse charge and
fast select is requested, these codes are sent in the CLEAR message.
.LE
.LI
\fBCCINVF\fP - Invalid facility request.
.BL
.LI
\fBDCFCOD\fP - Facility code not allowed.
.sp
If a FACILITY message for throughput negotiation is received
by an incoming SVC which does not subscribe to throughput negotiation, then
CCINVF and DCFCOD are generated.
.sp
Also, if a FACILITY message with a parameter
field containing something other than throughput negotiation and/or
reverse charge, is received by an incoming SVC then CCINVF and DCFCOD
are generated.
.LI
\fBDCFPAR\fP - Facility parameter not allowed.
.sp
If a FACILITY message for throughput negotiation is receive
by an incoming SVC and the parameter field is invalid then CCINVF and DCFPAR
are generated.
.sp
Also, if a FACILITY message for reverse charge is received by an
incoming SVC but reverse charge requested is not allowed for this station,
then CCINVF and DCFPAR are sent in a CLEAR message.
.LE
.LI
\fBCCABRD\fP - Access barred. The following diagnostic code(s) are sent
along with CCABRD under the specified conditions.
.BL
.LI
\fBDCNIAC\fP - Incoming access not allowed for CUG. 
.sp
If a CUG UTILITY message is NOT received for an incoming SVC which
is a CUG subscriber, a CLEAR message is sent with CCABRD and DCNIAC codes.
.sp
If a CUG UTILITY message is received by an incoming SVC, but the incoming 
SVC is not a CUG subscriber or is a subscriber but the CUG codes don't 
match, then the CLEAR is also sent with CCABRD and DCNIAC codes.
.LE
.LI
\fBCCLPER\fP - Local procedural error. Not used.
.LI
\fBCCNETC\fP - Network congestion. The following diagnostic code(s) are sent
along with CCNETC cause code under the specified conditions.
.BL
.LI
\fBDCSLDL\fP - Invalid select dialect diagnostic code.
.sp
If an incoming SVC receives a SELECT DIALECT RSP with a dialect specified
that is not supported, then a CLEAR is sent with these codes.
.LI
\fBDCTRKY\fP - Bad turkey level.
.sp
If a turkey message is received with an incompatible turkey level then the
circuit is cleared with these codes.
.LE
.LI
\fBCCNOBT\fP - Not obtainable. This cause code is never generated.
.LI
\fBCCRPOA\fP - RPOA out of order. This cause code is never generated.
.LE
.bp
.H 4 "Processing of RESET Cause and Diagnostic Codes"
.sp
If a RESET message is received from
the remote with a cause code other than RCDOP or RCOUT, the diagnostic
code is ignored and the
station is put into NDM. The circuit is fully operational once the RESET
CONFIRMATION has been sent to the remote. 
.sp
If a RESET message is received from a remote with a cause code of RCOUT
(Out of order), the local station attached to that circuit will go into
NDM. The diagnostic code is ignored. A RESET CONFIRMATION is returned to
the remote. The local station will not be operational until the remote
side sends another RESET indicating RCDOP (remote DTE operational), and
assuming the local stations link is still UP. 
.sp
The following is a description of when the reset cause codes and diagnostic codes are 
generated by the local interface.
.sp
.VL 5
.LI
\fBRCDTE\fP - DTE generated.  This cause code is generated when an
error on the link occurrs. The following diagnostic codes along
with RCDTE are sent in a RESET message under the specified conditions.
.BL
.LI
\fBDTPDER\fP - Pad Error (general). This is sent when an NEF (not expected
frame) command is sent from FG to DLCPRO.
.LE
.LI
\fBRCOUT\fP - Out of order. The following diagnostic code along with RCOUT cause
code are generated under the specified conditions.
.BL
.LI
\fBDCNOIF\fP - No additional information.
.sp
If the link goes from UP to DOWN then these codes are sent in RESET packets for
each existing PVC on the effected link.
.LE
.LI
\fBRCRPER\fP - Remote procedural error. Not used.
.LI
\fBRCLPER\fP - Local procedural error. Not used.
.LI
\fBRCNETC\fP - Network congestion. Not used.
.LI
\fBRCDOP\fP - Remote DTE operational.
.BL
.LI
\fBDCNOIF\fP - No additional information.
.sp
When the link goes from DOWN to UP a RESET message with these codes is
sent for each existing PVC effected on the link.
.LE
.LI
\fBRCNETO\fP - Network operational. Not used.
.LI
\fBRCINCD\fP - Incompatible destination. Not used.
.LE

.bp
.H 2 "System Generation"
Some new TYMFILE macros will be added and some current SNA macros
will be modified to support the integration project. The new macros are
designed to fit into the current SNA macro scheme. This could not
be done without making some adjustments to the
present SNA macros, to make the completed set of SNA version 5 system
generation macros consistent and easy to understand.
.sp
The following is a list of removed SNA macros:
.AL 1
.LI
DLG.LOGON - Logon string.
.LI
GPV.CHRSET - General PVC character set.
.LI
GPV.COLOR - General PVC color setting. 
.LI
GPV.CRM - General PVC connection request mode.
.LI
GPV.LINE - General PVC destination line number.
.LI
GPV.LOGON - General PVC logon string. 
.LI
GPV.LTYPE - General PVC LU type.
.LI
GPV.LUADDR - General LU address.
.LI
GPV.PUADDR - General PVC PU address.
.LI
GPV.SELECTION - General PVC entry selection.
.LI
GPV.SIZE - General PVC screen size. 
.LI
PV.CHRSET - PVC character set. 
.LI
PV.COLOR - PVC color setting. 
.LI
PV.CRM - PVC connection request mode.
.LI
PV.LINE - PVC destination line number.
.LI
PV.LOGON - PVC logon string. 
.LI
PV.LTYPE - PVC LU type. 
.LI
PV.LUADDR - PVC LU address.
.LI
PV.PUADDR - PVC PU address.
.LI
PV.SELECTION - PVC entry selection.
.LI
PV.SIZE - PVC screen size. 
.LE
.bp
.sp
.sp
.sp

Any macros which appear in the macro appendix of this document 
are modified or new macros.
Most of the new macros were implemented to support the X.25 dialect and 
the SNA/DSP dialect. The remaining macros were necessary to support the
new DLC layer of support and the native printer support.
.bp
.H 3 "DLG/PLG/LG Prefixed Macros"
Any macro which is related to TYMNET specific functions, rather than
device dependent such as LU type and LU address, will have a prefix
of DLG, PLG or LG.
.BL
.LI
DLG represents a default logon macro. Macros with this prefix must be
defined before any LINE macros. This is a general level macro.
.LI
PLG represents PU level logon macros. Macros with this prefix must be
defined after  PU macros.
.LI
LG represents LU level logon macros. Macros with this prefix must be defined 
after LU macros.
.LE
.sp
The implementation of the DLG, PLG and LG macros is hierarchical. Logon entries
defined on the general level, may be directly referenced ONLY by the PU level. Logon
entries defined on the PU level, may be referenced ONLY by the LUs attached to
that PU. 
.sp
DLG, PLG and LG macros are defined in groups which are referred to as
entries. DLG prefixed macro definitions must be preceded in the TYMFILE by
a DLG.ENTRY(n) or DLG.DEFAULT macro definition. PLG prefixed macros must be preceded by a
PLG.ENTRY(n) or PLG.DEFAULT definition, and LG prefixed macros must be preceded by a
LG.ENTRY(n) macro definition. DLG, PLG and LG.ENTRY macros do not
need to be sequentially defined. The entry number is simply an
identifier.
.bp
The following is an example of logon entries
defined on all three levels within the same TYMFILE:
.sp
.ft C
.nf
 DLG.ENTRY(0)            :Logon entry 0 for entire interface
   DLG.DIALECT(X25)     
   DLG.PUADDR(40)      
   ................      :other DLG logon macros

 DLG.ENTRY(1)            :Logon entry 1 for entire interface
   DLG.DIALECT(SNADSP)
   DLG.VC(SVC)
   ................      :other DLG logon macros

 LINE(0)                 :first line in this interface
 .......                 :other line macros

   PU(0)                 :first PU on this line
   .....                 :other PU macros

    PLG.ENTRY(0)         :this PU uses DLG.ENTRY(0)with following exceptions
     PLG.DIALECT(SNADSP) :use DLG.ENTRY(0) except with SNA/DSP dialect

    PLG.ENTRY(4)         :define a new entry 4 logon selection
     PLG.DIALECT(X25)    :this entry uses X25 dialect
     PLG.PUADDR(40)      :destination PU address is 40
     ................    :other PLG logon macros

     LU(0)               :first LU on this PU
     ......              :other LU macros

      LG.ENTRY(4)        :this LU uses PLG.ENTRY(4) with following exceptions
       LG.PUADDR(C1)     :destination PU address is C1

      LG.ENTRY(0)        :this LU uses DLG.ENTRY(0) with the same exceptions
                         :  defined by PLG.ENTRY(0).
      LG.ENTRY(6)        :this is a new LG entry only to be used by this LU.
       ............      :complete set of LG logon macros

   PU(1)                 :second PU on this line
   .....                 :other PU macros

    PLG.ENTRY(4)         :define a new entry 4 logon selection
     PLG.DIALECT(DSP)    :this entry uses DSP dialect
     PLG.PUADDR(40)      :destination PU address is 40
     ................    :other PLG logon macros

     LU(0)               :first LU on this PU
     ......              :other LU macros

      LG.ENTRY(4)        :this LU uses PLG.ENTRY(4) with following exceptions
       LG.PUADDR(C1)     :destination PU address is C1

      LG.ENTRY(0)        :this LU defines a new ENTRY 0

      LG.ENTRY(6)        :this is a new LG entry only to be used by this LU.
       ............      :complete set of LG logon macros

      LU(1)              :second entry on this PU
      .....              :other LU macros
       LG.ENTRY(all)     :all PU(1)'s PLG entries (PLG.ENTRY(4)) are selected
                         : there can be no exceptions when all is used.
.bp
.fi
.ft P
In this TYMFILE example, there are 2 logon entries on the DLG level
(DLG.ENTRY(0) and DLG.ENTRY(1)). Any PU, using PLG.ENTRY,
can reference these 2 general logon entries.
.sp
The first PU, PU(0), references the general logon entry 0 and defines a
new PU level logon entry 4. Only one logon parameter for entry 0 was 
overwritten. All other logon parameters as defined on the general level under
DLG.ENTRY(0) will be in effect for this PLG entry 0. Different PUs may not
reference PLG entries on other PUs or LUs. They may only reference DLG
entries on the general level.
.sp
Any LU attached to this PU(0) may select PLG.ENTRY(4), and/or 
the new PLG.ENTRY(0).
LUs on this PU may not reference PLG entries on other
PUs, such as PLG.ENTRY(4) on PU(1). LUs on this PU may not reference LG
entries defined on other LUs.
.sp
LU(0) on PU(0) has defined 3 LG.ENTRY macros. The first one, LG.ENTRY(4),
is referencing the PLG.ENTRY(4) logon entry with one parameter overwritten.
LG.ENTRY(0) references PLG.ENTRY(0) without any exceptions. Logon 
entry 0 for this LU will use the SNA/DSP dialect with all other parameters the same
as is defined by DLG.ENTRY(0). LG.ENTRY(6) is a new entry which can not
be referenced by any other PU or LU in this interface TYMFILE.
.sp
The second PU, PU(1), has one entry defined. This is a new entry 4. Note that
there are two entries with number 4 on the PU level. Since they are on the 
same level the same number can be used.
.sp
The first LU on the second PU, has two logon entries selected. Entry 4 refers to
PLG.ENTRY(4) for PU(1) with only one parameter overwriten.
Entry 6 is a new entry only to be used by this LU. 
.sp
The second LU on the second PU, only has one entry defined. This entry selects all
entries defined on the higher PU(1) level. This includes only
PLG.ENTRY(4) defined by PU(1).
.bp
.H 3 "SNA to SNA DLC Support Using PVCs"

The following TYMFILE is an example of an SNA to SNA configuration
with PVCs using the DLC level of support. The PU on the first line
is an outgoing PVC targeted for the PU on the second line which
is an incoming PVC.
.sp
The outgoing side must include the username and password used during
circuit building. The incoming side doesn't need this information defined.
.sp
For PVCs, both sides must have the host number, destination host number, 
destination line number and
destination PU address defined in the TYMFILE.
This information could be defined either on the general level or on the
PU level. In this example most definitions are on the PU level. For PVCs
the switched(yes) macro must be defined.

.nf
.ft C
   GSWITCHED(YES)          : PVCs must be switched
    LINE(0)                : First line
     HOST(863)             : this line's host number
     PRIMARY               : this is a primary line
     ......                : other line level macros
: This PU(0) is an outgoing PVC with DLC support, targeted for PU(0)
: on line(1) of this interface
       PU(0)               : First PU on this line
        PU.ADDR(40)        : address of this PU is 40
        ...........        : other PU level macros
        PLG.ENTRY(0)       : first logon entry for this PU
        PLG.LAYER(DLC)     : PU logon entry has DLC level of support
        PLG.VC(PVC)        : PU logon entry is PVC
        PLG.DIALECT(X25)   : PU entry uses X.25 dialect
        PLG.CALL(out)      : PU logon entry is an outgoing PVC
        PLG.HST(864)       : PU logon entry destination host# is 864
        PLG.USR(username)  : PU logon entry username
        PLG.PSW(password)  : PU logon entry password
        PLG.LINE(1)        : PU logon entry destination line number is 1
        PLG.PUADDR(C1)     : PU logon entry destination PU address is C1
    LINE(1)                : this is the second line
     SECONDARY             : this is a secondary line
     HOST(864)             : this line's host number is 864
     ........              : other line level macros
: This PU(0) is an incoming PVC with DLC support targeted for PU(0)
: on line(0) of this interface.
       PU(0)               : first PU on this line
        PU.ADDR(C1)        : this PU's address is C1
        ...........        : other PU level macros
        PLG.ENTRY(1)       : first logon entry for this PU
        PLG.VC(PVC)        : PU logon entry is PVC
        PLG.DIALECT(X25)   : PU logon entry uses X.25 dialect
        PLG.LAYER(DLC)     : PU logon entry has the DLC support level
        PLG.CALL(IN)       : PU logon entry direction of the PVC is incoming
        PLG.HST(863)       : PU logon entry destination host # 863
        PLG.LINE(0)        : PU logon entry destination line # is 0
        PLG.PUADDR(40)     : PU logon entry destination PU address is 40
.ft P
.fi
.bp
.H 3 "SNA to SNA DLC Support Using SVCs"
The following TYMFILE is an example of an SNA to SNA configuration
with SVCs using the DLC level of support. The PU on the first line
is an outgoing SVC targeted for the PU on the second line which
is an incoming SVC.
.sp
The outgoing side must include the username and password used during
circuit building. The incoming side doesn't need this information defined.
.sp
For SVCs, only the incoming side needs to have a host number defined.
Unlike PVCs, SVCs need to have the destination host number,
destination line number and destination PU address defined for the outgoing
side only. The SVC incoming side doesn't require this information.
.sp
The logon macros, in this example TYMFILE, could be defined on
either the general level or on the PU level. In this example they are defined 
on the PU level.

.ft C
.nf

    LINE(0)                : First line
     PRIMARY               : this is primary line
     ........              : other line level macros
: This PU(0) is an outgoing SVC with DLC support, targeted for PU(0)
: on line(1) of this interface.
       PU(0)               : first PU
        PU.ADDR(40)        : the PU address is 40
        ...........        : other PU level macros
        PLG.ENTRY(0)       : first  logon entry for this PU
        PLG.LAYER(DLC)     : PU logon entry has DLC support level
        PLG.VC(SVC)        : PU logon entry is SVC 
        PLG.DIALECT(X25)   : PU logon entry uses X.25 dialect
        PLG.CALL(OUT)      : PU logon entry direction of the call is outgoing
        PLG.HST(864)       : PU logon entry destination host # is 864
        PLG.USR(username)  : PU logon entry username
        PLG.PSW(password)  : PU logon entry password
        PLG.LINE(1)        : PU logon entry destination line number
        PLG.PUADDR(C1)     : PU logon entry destination PU address

    LINE(1)                : Second line
     SECONDARY             : this is a secondary line
     HOST(864)             : the host # for this line is 864
     .........             : other line level macros
: This PU(0) is an incoming SVC with DLC support targeted for PU(0)
: on line(0) of this interface.
       PU(0)               : first PU 
        PU.ADDR(C1)        : the address of this PU is C1
        .............      : other PU level macros
        PLG.ENTRY(1)       : first logon entry for this PU
        PLG.LAYER(DLC)     : this PU logon entry has DLC support
        PLG.VC(SVC)        : PU logon entry is an SVC
        PLG.DIALECT(X25)   : PU logon entry uses X.25 dialect
        PLG.CALL(IN)       : PU logon entry is incoming 
.ft P
.fi
.bp
.H 3 "SNA to X.25 DLC Support Using PVCs"

This section contains example TYMFILEs of an SNA interface
and an X.25 interface. The SNA interface has 2 PVC PUs with DLC support,
targeted to 2 different channels on the X.25 interface. These PVCs must
use the X.25 dialect. The first PVC is outgoing and the second is incoming.
.sp
The first
PVC is targeted to
link 1 channel 1 of the X.25 interface. Because SNA line 0 has
a higher host number than X.25 link 0 (HOST#864 > HOST#863), SNA line 0 pu 0
is the outgoing side.
.sp
The second PVC is targeted to
link 1 channel 2 of the X.25 interface.
Because SNA line 1 has a lower host number than X.25 link 1
(HOST#862 < HOST#863),
SNA line 1 pu 0 is the incoming side.
.sp
The outgoing SNA PVC must have the logon username and password defined.
The incoming SNA PVC doesn't need to have this information defined.
Both PVCs must have the destination host number, destination line #,
destination pu address and destination X.25 channel # defined.
.sp
For the X.25 dialect, the destination X.25 channel number is sent in the PVC request (from
outgoing PVCs). This channel number
is used to determine which channel this circuit will attach to.
.sp
The destination PU address, when using the X.25 dialect, is not used
to attach the circuit to the destination. The QLLC response packets must contain the
secondary station's PU address. The destination PU address provides this information.

.bp
.nf
.ft C


: SNA INTERFACE TYMFILE

  GHOST(864)

    LINE(0)                : First line
     SECONDARY             : this is a secondary line
     ..........            : other line level macros
: This PU(0) is an outgoing PVC with DLC support targeted to link(1)
: channel(1) of the X.25 interface.
       PU(0)               : First PU
        PU.ADDR(40)        : this PU address is 40
        ..........         : other PU level macros
        PLG.ENTRY(0)       : first logon entry for this PU
        PLG.LAYER(DLC)     : this PU has DLC level of support
        PLG.VC(PVC)        : PU logon entry is PVC
        PLG.DIALECT(X25)   : PU logon entry is X.25 dialect
        PLG.HST(863)       : PU logon entry  destination host # is 863
        PLG.USR(username)  : PU logon entry username
        PLG.PSW(password)  : PU logon entry password
        PLG.LINE(1)        : PU logon entry destination X.25 link # 1
        PLG.PUADDR(C1)     : PU logon entry destination PU address
        PLG.CHANNEL(01)    : PU logon entry destination channel #
    LINE(1)                : Second line
     PRIMARY               : this is a primary line
     HOST(862)             : this is the host # for this line
     ........              : other line level macros
: This PU(0) is an incoming PVC with DLC support, targeted to link(1) 
: channel (2) of the X.25 interface.
       PU(0)               : first PU
        PU.ADDR(C1)        : this is the address of this PU
        PLG.ENTRY(1)       : first logon entry for this PU
        PLG.LAYER(DLC)     : this PU has DLC level of support
        PLG.DIALECT(X25)   : PU logon entry dialect is X.25
        PLG.VC(PVC)        : PU logon entry is PVC
        PLG.HST(863)       : PU logon entry destination host #
        PLG.LINE(1)        : PU logon entry destination X.25 link # 1
        PLG.PUADDR(40)     : PU logon entry destination PU address
        PLG.CHANNEL(02)    : PU logon entry destination X.25 channel #
.bp
: X.25 INTERFACE TYMFILE

    LINK(0)
      HOSTLINKS(855,0)       : link 0 has host # 855

: Link 1 has 2 PVC channels targeted for the SNA interface

    LINK(1)
     HOSTLINKS(863,1)        : link 1 has host # 863

: PVC channel 1 is incoming
:  OCHAN=1, DHOST=864, DLINK=0, DCHAN=40, PST=7, PSR=7, PWT=7,
:  PWR=7, TCT=10, TCR=10

      PCNL(1,1)
       PVCHANNEL(1,864,0,64,,7,7,7,7,10,10)

: PVC channel 2 is outgoing
      PCNL(2,2)
       PVCHANNEL(3,862,1,193,,PST,PSR,PWT,PWR,TCT,TCR)

.ft P
.fi
.bp
.H 3 "SNA to X.25 DLC Support Using SVCs"

This section contains example TYMFILEs of an SNA interface
and an X.25 interface. The SNA interface has 2 SVC PUs with DLC support,
targeted to 2 different channels on the X.25 interface. These SVCs must
use the X.25 dialect. The first SVC is outgoing and the second is incoming.
.sp
The first
SVC is targeted to
link 1 of the X.25 interface. This SVC is defined as outgoing
from the SNA interface.
.sp
The second SVC is incoming, and can be called by any X.25 interface which
provides the correct destination information.
.sp
The outgoing SNA SVC must have the destination information and logon information
defined. The only destination information which an incoming SVC needs to
define is the destination PU address. This address is included in the QLLC
packets. Interfaces with at least one incoming SVC defined must have at least one
host number defined.
.bp
.ft C
.nf

    LINE(0)                : First line
     PRIMARY               : this line is primary
     ........              : other line level macros
: This PU(0) is an outgoing SVC with DLC support, targeted to link(1) 
: channels(3 thru 8) of the X.25 interface.
       PU(0)               : first PU
        PU.ADDR(40)        : the PU address is 40
        ............       : other PU level macros
        PLG.ENTRY(0)       : first logon entry for this PU
        PLG.LAYER(DLC)     : PU logon entry has DLC support level
        PLG.VC(SVC)        : PU logon entry is SVC
        PLG.DIALECT(X25)   : PU logon entry uses X.25 dialect
        PLG.CALL(OUT)      : PU logon entry call is outgoing
        PLG.HST(864)       : PU logon entry destination host # is 864
        PLG.USR(username)  : PU logon entry username
        PLG.PSW(password)  : PU logon entry password
        PLG.PUADDR(C1)     : PU logon entry destination PU address
                           :  as defined by NPSI

    LINE(1)                : Second line
     SECONDARY             : this line is secondary
     HOST(863)             : the host # for this line is 863
     ........              : other line level macros
: This PU(0) is an incoming SVC with DLC support

       PU(0)               : first PU 
        PU.ADDR(C1)        : the address of this PU is C1
        ..............     : other PU level macros
        PLG.ENTRY(1)       : first logon entry for this PU
        PLG.LAYER(DLC)     : PU logon entry has DLC support
        PLG.VC(SVC)        : PU logon entry is SVC
        PLG.DIALECT(X25)   : PU logon entry uses X.25 dialect
        PLG.CALL(IN)       : PU logon entry call is incoming
        PLG.PUADDR(40)     : PU logon entry destination PU address as
                           :  defined by the QLLC cu 

: X.25 INTERFACE TYMFILE
  LINK(1)
   HOSTLINKS(864,1)        : link 1 has host # 864
:
: Channels 3 thru 8 are SVCs (both incoming and outgoing, two way)
:  Facilities - Throughput Negotiation

      TCNL(3,8)            : channels 3 thru 8 are two way SVCs
       MAXPSIZE(512,512)   
       PKTOPT(+TKSUP,+TKDSP)
       PWIND(5,5)
       TCLASS(10,10,+NEG)  : TPUT negotiation, 9600 baud
.ft P
.fi
.bp
.H 3 "SNA to SNA PS Support Using PVCs"
The following TYMFILE is an example of an SNA to SNA configuration
with PVCs using the PS level of support. The LU on the first line
is an outgoing PVC targeted for the LU on the second line which
is an incoming PVC.
.sp
The outgoing side must include the username and password used during
circuit building. The incoming side doesn't need this information defined.
.sp
Both sides must have the host number, destination host number, destination 
line number, destination PU address and destination LU address
defined in the TYMFILE.
This information could be defined either on the general level, on the
PU level, or on the LU level.
.sp
In this example most definitions are on the LU level.
.bp
.nf
.ft C
    LINE(0)                 : first line
     HOST(863)              : host number for this line is 863
     PRIMARY                : this line is primary
     ........               : other line level macros
       PU(0)                : first PU
        PU.ADDR(40)         : the address of this PU is 40
        ........            : other PU level macros
        PLG.ENTRY(0)        : first logon entry for this PU
        PLG.LAYER(PS)       : PU logon entry has PS support
        PLG.VC(PVC)         : PU logon entry is PVC
        PLG.DIALECT(SNADSP) : PU logon entry uses SNA/DSP dialect
        PLG.CALL(OUT)       : PU logon entry is an outgoing PVC
: This LG.ENTRY(0) is an outgoing PVC with PS support, targeted for line(1)
: PU(0) LU(0) of this interface.
         LU(0)              : first LU
          LU.ADDR(02)       : the address of this LU is 02
          .........         : other LU level macros
          LG.ENTRY(0)       : first logon entry selected
          LG.HST(864)       : LU logon entry destination host # is 864
          LG.USR(username)  : LU logon entry username
          LG.PSW(password)  : LU logon entry password
          LG.LINE(1)        : LU logon entry destination line # is 1
          LG.PUADDR(C1)     : LU logon entry destination PU address is C1
          LG.LUADDR(02)     : LU logon entry destination LU address is 02
    LINE(1)                : second line
     SECONDARY             : this line is secondary
     HOST(864)             : the host # for this line is 864
     ........              : other line level macros
       PU(0)               : first PU
        PU.ADDR(C1)        : the address of this PU is C1
        ....               : other PU level macros
        PLG.ENTRY(1)       : first logon entry for this PU
        PLG.LAYER(PS)      : PU logon entry has PS support
        PLG.VC(PVC)        : PU logon entry is PVC
        PLG.DIALECT(SNADSP): PU logon entry uses SNA/DSP dialect
        PLG.CALL(IN)       : PU logon entry is an incoming circuit
: This LG.ENTRY(0) is an incoming PVC with PS support, targeted to line(0)
: PU(0) LU(0) of this interface.
 
         LU(0)             : first LU
          LU.ADDR(02)      : this LU address is 02
          LG.ENTRY(1)      : first logon entry selected
          LG.HST(863)      : LU logon entry destination host # is 863
          LG.LINE(0)       : LU logon entry destination line # is 0
          LG.PUADDR(40)    : LU logon entry destination PU address is 40
          LG.LUADDR(02)    : LU logon entry dest. LU address is 02
.ft P
.fi


.bp
.H 3 "SNA to SNA PS Support Using SVCs"

The following TYMFILE is an example of an SNA to SNA configuration
with SVCs using the PS level of support. The LU on the first line
is an outgoing SVC targeted for the first LU on the second line which
is an incoming SVC.
.sp
The outgoing side must include the username and password used during
circuit building. The incoming side doesn't need this information defined.
.sp
For interfaces with incoming SVCs defined, there must be at least one host number definned.
Unlike PVCs, SVCs need to have the destination host number defined.
Other destination information for outgoing SVCs is optional.
The SVC incoming side doesn't require this destination information.
.bp
.ft C
.nf

    LINE(0)                : first line
     PRIMARY               : this is a primary line
     ........              : other line level macros
       PU(0)               : first PU
        PU.ADDR(40)        : this PU has address 40
        .........          : other PU level macros
        PLG.ENTRY(0)       : first logon entry for this PU
        PLG.LAYER(PS)      : PU logon entry has PS support
        PLG.VC(SVC)        : PU logon entry is SVC
        PLG.DIALECT(SNADSP): PU logon entry uses SNA/DSP dialect

: This LG.ENTRY(0) is an outgoing SVC with PS support, with prestored
: logon targeted for line(1) PU(0) LU(0) of this interface.

         LU(0)             : first LU
          LU.ADDR(02)      : this LU has address 02
          ........         : other LU level macros
          LG.ENTRY(0)      : first logon entry selected
          LG.HST(864)      : LU logon entry dest. host # is 864
          LG.USR(username) : LU logon entry username
          LG.PSW(password) : LU logon entry password
          LG.LINE(1)       : LU logon entry dest. line # is 1
          LG.PUADDR(C1)    : LU logon entry dest. PU address is C1
          LG.LUADDR(02)    : LU logon entry dest. LU address is 02
          
          LG.ENTRY(1)      :: second logon entry defined
          ..........       : other LG macros
    LINE(1)
     SECONDARY             : this is a secondary line
     HOST(864)             : this line's host # is 864
     .......               : other line level macros
: This LU(0) is an incoming SVC with PS support. 

       PU(0)               : first PU
        PU.ADDR(C1)        : this PU has address C1
        .......            : other PU level macros
        PLG.ENTRY(1)       : first logon entry for this PU
        PLG.LAYER(PS)      : PU logon entry has PS support
        PLG.VC(SVC)        : PU logon entry is SVC
        PLG.DIALECT(SNADSP): PU logon entry uses SNA/DSP dialect

: This is an incoming SVC.

         LU(0)             : first LU
          LU.ADDR(02)      : the address of this PU is 02
          .......          : other LU level macros
          LG.ENTRY(1)      : first logon entry selected
.ft P
.fi


.bp
.H 3 "SNA to SNA PS Support Using Automatic SVCs"

The following TYMFILE is an example of an SNA to SNA configuration
with automatic SVCs using the PS level of support. The LU on the first line
is an outgoing SVC targeted for the first LU on the second line which
is an incoming SVC.
.sp
The outgoing side must include the username and password used during
circuit building. The incoming side doesn't need this information defined.
.sp
For interfaces with incoming automatic SVCs defined, there must be at least one
host number defined.
.sp
Unlike PVCs, SVCs need to have the destination host number defined.
Other destination information for outgoing SVCs is optional.
The SVC incoming side doesn't require this destination information.
.bp
.ft C
.nf

    LINE(0)                : first line
     PRIMARY               : this is a primary line
     ........              : other line level macros
       PU(0)               : first PU
        PU.ADDR(40)        : this PU has address 40
        .........          : other PU level macros
        PLG.ENTRY(0)       : first logon entry for this PU
        PLG.LAYER(PS)      : PU logon entry has PS support
        PLG.VC(SVC)        : PU logon entry is SVC
        PLG.DIALECT(SNADSP): PU logon entry uses SNA/DSP dialect

: This LG.ENTRY(0) is an outgoing SVC with PS support, with automatic SVC
: logon targeted for line(1) PU(0) LU(0) of this interface.
: N O T E : for automatic SVC logon, there can only have one prestored logon
:	    entry defined.

         LU(0)             : first LU
          LU.ADDR(02)      : this LU has address 02
          ........         : other LU level macros
          LG.ENTRY(0)      : first logon entry selected
          LG.HST(864)      : LU logon entry dest. host # is 864
          LG.USR(username) : LU logon entry username
          LG.PSW(password) : LU logon entry password
          LG.LINE(1)       : LU logon entry dest. line # is 1
          LG.PUADDR(C1)    : LU logon entry dest. PU address is C1
          LG.LUADDR(02)    : LU logon entry dest. LU address is 02
          LG.VC(SVC,1)     : defined it as an automatic SVC

    LINE(1)
     SECONDARY             : this is a secondary line
     HOST(864)             : this line's host # is 864
     .......               : other line level macros
: This PU(0) is an incoming SVC with PS support. 

       PU(0)               : first PU
        PU.ADDR(C1)        : this PU has address C1
        .......            : other PU level macros
        PLG.ENTRY(1)       : first logon entry for this PU
        PLG.LAYER(PS)      : PU logon entry has PS support
        PLG.VC(SVC)        : PU logon entry is SVC
        PLG.DIALECT(SNADSP): PU logon entry uses SNA/DSP dialect

: This is an incoming SVC.

         LU(0)             : first LU
          LU.ADDR(02)      : the address of this PU is 02
          .......          : other LU level macros
          LG.ENTRY(1)      : first logon entry selected
.ft P
.fi


.bp
.H 3 "SNA to SNA PS Support With Printers Attached To CRT"

The following TYMFILE is an example of an SNA to SNA configuration
with automatic SVCs using the PS level of support. The LU on the first line
has two printers attached to it.
.sp
The keyword to invoke the NSM is defined as "NETSCN" and the PF/PA key to
invoke the NSM is defined as "PF5"
.ft C
.nf

    LINE(0)                : first line
     PRIMARY               : this is a primary line
     ........              : other line level macros
       PU(0)               : first PU
        PU.ADDR(40)        : this PU has address 40
        .........          : other PU level macros
        PLG.ENTRY(0)       : first logon entry for this PU
        PLG.LAYER(PS)      : PU logon entry has PS support
        PLG.VC(SVC)        : PU logon entry is SVC
        PLG.DIALECT(SNADSP): PU logon entry uses SNA/DSP dialect

: This LG.ENTRY(0) is an outgoing SVC with PS support, with automatic SVC
: logon targeted for line(1) PU(0) LU(0) of this interface.
: N O T E : for automatic SVC logon, there can only have one prestored logon
:	    entry defined.

         LU(0)             : first LU
          LU.ADDR(02)      : this LU has address 02
	  LU.TYPE(2)	   : CRT type device
	  LU.PRT(03)	   : LU addr. 03 should be a printer and is attached to this CRT
	  LU.PRT(05)	   : LU addr. 05 should be a printer and is attached to this CRT
	  NS.WORD(NETSCN)  : keyword to invoke the NSM
	  NS.KEY(PF5) 	   : PF key to invoke the NSM
          ........         : other LU level macros
          LG.ENTRY(0)      : first logon entry selected
          LG.HST(864)      : LU logon entry dest. host # is 864
          LG.USR(username) : LU logon entry username
          LG.PSW(password) : LU logon entry password
          LG.LINE(1)       : LU logon entry dest. line # is 1
          LG.PUADDR(C1)    : LU logon entry dest. PU address is C1
          LG.LUADDR(02)    : LU logon entry dest. LU address is 02
          LG.VC(SVC,1)     : defined it as an automatic SVC
:
         LU(01)            : second LU
          LU.ADDR(03)      : this LU has address 03
	  LU.TYPE(1)	   : LU type 1 printer device
:
         LU(02)            : third LU
          LU.ADDR(05)      : this LU has address 05
	  LU.TYPE(3)	   : LU type 3 printer device


    LINE(1)
     SECONDARY             : this is a secondary line
     HOST(864)             : this line's host # is 864
     .......               : other line level macros
: This PU(0) is an incoming SVC with PS support. 

       PU(0)               : first PU
        PU.ADDR(C1)        : this PU has address C1
        .......            : other PU level macros
        PLG.ENTRY(1)       : first logon entry for this PU
        PLG.LAYER(PS)      : PU logon entry has PS support
        PLG.VC(SVC)        : PU logon entry is SVC
        PLG.DIALECT(SNADSP): PU logon entry uses SNA/DSP dialect

: This is an incoming SVC.

         LU(0)             : first LU
          LU.ADDR(02)      : the address of this PU is 02
          .......          : other LU level macros
          LG.ENTRY(1)      : first logon entry selected
.ft P
.fi


.H 1 "SNA/DSP Message Formats and sample scenarios"
.sp 2
SNA/DSP is an IIX dialect used in all connections between two SNA
interfaces. It is a functional superset of DSP dialect.
DSP dialect is a TYMNET implementation of the DSP protocol defined in [7].
.sp 2
SNA/DSP performs all (non-BSC specific) DSP functions.
In addition, it allows the exchange of the following information:
.BL
.LI
SNA interface options for the given Virtual Circuit (during the circuit
establishment). These options are classified according to the SNA layer
to which the given option is relevant.
.LI
SNA headers and control messages.
.LI
Link layer (QLLC) message.
.LE
.sp 2
All basic SNA/DSP formats are the same as DSP. The only exceptions
are listed below.
.sp
.BL
.LI
A new Circuit Init DQ message has been added.
.LI
Call User Data Field of the Call request packet has been modified to
reflect X.25/QLLC conventions. The DSP information is taken from this
packet and moved to the new Circuit Init DQ message.
.LI
The DSP Circuit Request and Circuit Enable messages have been eliminated
and replaced by Circuit Init DQ message.
.LI
A new DQ QLLC message was introduced to transmit QLLC information.
.LI
The format of the data message has been modified to allow for transmission
of SNA header and control messages.
.LE
.sp 2
The DSP protocol as defined in [7] is valid for SNA/DSP except for
the following:
.sp
.BL
.LI
The DSP sequence response diagrams relevant to VC establishment and
defined in 5.1.1 (a,b) and 5.1.2 (a,b) in [7] are not valid. They are
replaced by the corresponding sequence response diagrams below in this
discussion.
.LI
A new type of connection (host-to-host) is allowed in SNA/DSP. The host
interface (PAD) identifies itself by the even Protocol Identifier (PID) (see
Circuit Init format). This type of connection is not implemented in version 5.
.LI
The commands and responses of the modified SNA/DSP formats are treated
the same as the command and responses in DSP and are governed by the
same sequence response diagrams as in [7] on the terminal-to-host
connections.
.LI
The host-to-host connection is not allowed to use the response data
format. Also, the status message is not allowed. All sequence response
diagrams in [7] using the Teminal PAD and response message format remain
valid, however for this type of connection if the Terminal PAD is replaced
by another Host PAD and the response messages are replaced by command
messages (see examples below).
.LI
The newly defined DQ QLLC messages are treated the same as SNA/DSP
commands and responses (depending on the direction of the transmission
and the type of connection).
.LE
.sp 2
.H 2 "SNA/DSP message formats"
.sp 2
Below are the formats of the messages which were changed in SNA/DSP
as compared to the standard DSP. Notice that the meaning of two DQ messages
has been changed compeletely - Circuit Enable and Circuit Request defined
in DSP have been replaced by QLLC and Circuit Init correspondingly in SNA/DSP.
.sp 2
.H 3 "Call User Data (C089)"
.sp 2
The format of this message has been changed to reflect X.25/QLLC format.
Since the X.25/QLLC format changes in time (adding more information)
more bytes than defined below are allowed in this field. Refer to [8]
for more information on this subject.
.sp 2
.BL
.LI
Byte 0 - X.25 Protocol Identifier.
.sp
Defined values are:
.DL
.LI
X'C0' and X'C1' for SNA-to-non SNA connections
.LI
X'C2' and X'C3' for SNA-to-SNA connections.
.LE
.sp
The value of X'C3' is used for the SNA/DSP implementation in version 5.
.LE
.sp 2
.H 3 "Circuit Init (C094/22)"
.sp 2
This message is used during the circuit establishment to convey the
circuit usage information. The side initiating the circuit sends the
Circuit Init containing the proposed circuit parameters (sometimes
in the form of the list of options). The recepient of the circuit
responds with the Circuit Init containing the confimation (positive or
negative) or the selection of one of the options. The pair of
Circuit Init messages can be repeated a number of times (not implemented
in version 5).
.sp 2
The Circuit Init message is transmitted as the X.25 Q-packet. The data portion
of the message has the following format:
.sp 2
.ft C
.nf
         Circuit Init header | Layer Info | ........ | Layer Info
.fi
.ft P
.sp 2
The Circuit Init header has the following format:
.sp
.BL
.LI
Byte 0 - User Circuit Number (UCN). Defined as in DSP.
.LI
Byte 1 - Message Identifier (MID). The value of X'22' identifies Circuit
Init.
.LI
Byte 2 - negotiation success indication.
.DL
.LI
Bits 0-3. Level of service requested (LRQ). The values defined are:
.ft C
.nf
       L.GEN = 0        - general level
       L.DLC = 1        - DLC level
       L.PC  = 2        - Path Control (PC) level
       L.SES = 3        - Session level
       L.TC  = 4        - Transmission Control (TC) level
       L.DFC = 5        - Data Flow Control (DFC) level
       L.PS  = 6        - Presentation Service (PS) level
.fi
.ft P
.LI
Bits 4-7. Level agreed upon (LOK). The values defined for LOK are
the same as for LRQ. The meaning of this field is the maximum level
number for which the two sides exchanging Circuit Init messages came
to the full agreement (inculding the selection of the list options).
The negotiation process is complete when LRQ=LOK in the Circuit Init
message received by the circuit initiator from the circuit target.
.LE
.LI
Byte 3 - overall length in bytes of the remainder of the message (LGT).
The value of 0 indicates no layer information pieces in the Circuit Init
message.
.LE
.sp 2
The layer information for each layer has the following format:
.BL
.LI
Byte 0.
.DL
.LI
Bits 0-3. Layer number (LNU). The allowed values are the same as defined
for LRQ.
.LI
Bits 4-7. Layer info length (LLG).
The next layer info field with the same LNU continues the current
layer information. This type of continuation is used if more than
16 bytes of the layer information are required .
Layer information below in this document
is considered to be an indefinetely long length.
.LE
.LI
Bytes 1-n. Specific layer information. This information is defined
below for each layer separately.
.LE
.sp 2
.H 4 "Layer info formats"
.sp 2
Layer info formats are shown for each layer separately. Byte 0 (containing
LNU/LLG as described above) is not shown. Not all combinations of the
layer information parameters are implemented in version 5.
.sp 2
.H 5 "General layer info"
.sp 2
.BL
.LI
Byte 1 - SNA/DSP Protcol ID (PID). The values are as defined in DSP.
Odd values define the TIF SNA/DSP, even values define the HIF SNA/DSP.
Each side transmits its own PID thus identifying itself as a TIF or a HIF.
.LI
Byte 2.
.DL
.LI
Bit 0 - Single/Multiple (0/1) User Circuit (as in DSP). Version 5 implements
only Sinlgle User Circuits on one Virtual Circuit.
.LI
Bits 1-7 - Connection Request Mode (CRM) as defined in DSP.
.LE
.LI
Byte 3 - Application Identifier (AID) as defined in DSP.
.LE
.sp 2
.H 5 "DLC layer info"
.sp 2
.BL
.LI
Byte 1 - Source PU address (SPU). This byte is similar to the source CU in DSP.
.LI
Byte 2 - Target PU address (TPU). This byte is similar to the destination
CU in DSP.
.LI
Byte 3-4 - Receive Frame Size (RFSZ).
.LI
Byte 5-6 - Transmit Frame Size (XFSZ).
.LI
Byte 7 - local support indicators.
.DL
.LI
Bit 0 - ability/option to act as primary (0 - not able, 1 - able). The
circuit initiator indicates its ablity, the circuit target selects the
option (if the option is available)
.LI
Bit 1 - ability/option to act as secondary (0 - not able, 1 - able).
Same remark as for primary.
.LI
Bit 2 - ability/option to support XID locally (0 - not able, 1 - able). See
remark for bit 0.
.LI
Bit 3 - ability/option to support XID end-to-end (0 - not able, 1 - able).
See remark for bit 0.
.LI
Bit 4 - ability/option to support SNRM locally (0 - not able, 1 - able).
See remark for bit 0.
.LI
Bit 5 - ability/option to support SNRM end-to-end (0 - not able, 1 - able).
See remark for bit 0.
.LI
Bits 6-7 - reserved.
.LE
.LE
.sp 2
.H 5 "PC layer info"
.sp 2
.BL
.LI
Bytes 1-2 - Source Network Address (SNAD). The second byte of this address
is similar to the source device address in DSP.
.LI
Bytes 3-4 - Target Network Address (TNAD). The second byte of this address
is similar to the destination device address in DSP.
.LI
Bytes 5-8 - Additional Destination Information (ADI), similar to the same
field in DSP.
.LE
.sp 2
.H 5 "Session layer info"
.sp 2
.BL
.LI
Bytes 1-8 - LU name.
.LI
Byte 9 - number of the session types to be supported on the circuit.
.LI
Bytes 10-n - LU-LU session types to be supported on the circuit (LUTY).
.LE
.sp 2
.H 5 "TC layer info"
.sp 2
.BL
.LI
Byte 1 - local support indicators.
.DL
.LI
Bit 0 - pacing support required (0 - end-to-end, 1 - local).
.LI
Bits 1-7 - reserved.
.LE
.LE
.sp 2
.H 5 "DFC layer info"
.sp 2
.BL
.LI
Byte 1 - local support indicators.
.DL
.LI
Bit 0 - SNA response message support required (0 - end-to-end support,
1 - local support).
.LI
Bits 1-7 - reserved.
.LE
.LE
.bp
.H 5 "PS layer info"
.sp 2
.BL
.LI
Byte 1 - number of devices described by PS layer info (NDEV).
.LI
Byte 2 - device info.
.DL
.LI
Bits 0-2 - device type (DTY).
The following device types are defined for version 5:
.sp
.ft C
.nf
            DV.NONE = 0                 - none
            DV.CRT = 1                  - CRT.
            DV.PRT = 2                  - printer.
.fi
.ft P
.sp
.LI
Bit 3 - associated device indicator (ADVI, 1 for associated device,
otherwise 0)
.LI
Bits 4-7 - length of the device information in bytes (LDVI).
.LE
.sp
.LI
Bytes 3-4 - number of columns on the presentation surface (DNCN).
.LI
Bytes 5-6 - number of rows on the presentation surface (DNRW).
.LI
Byte 7 - data stream identifier (DSID). The following values are defined:
.nf
.ft C
     DSID.3270 = 1      3270 data stream
     DSID.SCS  = 2      SCS data stream
.ft P
.fi
.LI
Byte 8 - data stream attributes (depending on DSID)
.LI
Byte 9 - character set.
.LI
Bytes LDVI+1-LDVI+8 - similar to bytes 2-9, for the first additinal device,
other additional or associated devices may follow.
.LE
.sp 2
.H 3 "QLLC data message (C094/20)"
.sp 2
QLLC information is transmitted as an X.25 Q-packet. The format of the
QLLC information packet is similar to that defined by the QLLC standard,
but displaced by two bytes to comply with the SNA/DSP standards (which
are similar to the DSP standards).
.sp 2
.BL
.LI
Byte 0 - User Circuit Number (UCN).
.LI
Byte 1 - Message Identifier (MID). The value X'20' identifies the message
as QLLC.
.LI
Bytes 2 - n+1. Identical to octets 1 - n defined for the QLLC protocol.
.LE
.sp 2
.H 3 "Data Message (C094)"
.sp 2
The format for the SNA/DSP command and response message is the same as
the format for the DSP command and response messages except for
Format 1 commands and responses. This format is as follows:
.sp
.BL
.LI
Byte 0 - the same as in DSP.
.LI
Byte 1.
.DL
.LI
Bits 0-5 the same as in DSP.
.LI
Bits 6-7 are defined as follows:
.ft C
.nf
   00 - RU format (no TH or RH, same as the standard DSP message)
   01 - BIU format (first 3 bytes of the data are RH information
                    followed by the SNA RU).
   10 - PIU format (TH information followed by RH followed by RU)
.fi
.ft P
.LE
.LI
Bytes 2-3 - the same as DSP.
.LI
Bytes 4-n - RU or BIU or PIU according to the bits 6-7 of the first byte.
.LI
Byte n+1 - a trailer, same as in DSP.
.LE
.sp 2
.H 2 "Sample scenarios"
.sp 2
.H 3 "SVC establishment"
.sp 2
.H 4 "Host-to-Terminal connection"
.sp 2
The following sequence response diagrams replace the call establishment
procedures defined in [7] by 5.1.1 (a and b) and 5.1.2 (a and b).
.sp 2
.ft C
.nf
     Terminal initiated logon                 Host initiated logon

    HIF                   TIF               HIF                    TIF
     |                     |                 |                      |
     | <---CALL REQUEST--- |                 | ----CALL REQUEST---> |
     | ----CALL ACCEPT---> |                 | <---CALL ACCEPT ---- |
     | <---CIRCIUT INIT--- |                 | ----CIRCUIT INIT --> |
     | ----CIRCUIT INIT--> |                 | <---CIRCUIT INIT --- |
     | <--- STATUS ------- |                 | <--- STATUS -------- |
     |                     |                 |                      |
.fi
.ft P
.sp 2
The Circuit Init Command/Response or Response/Command pair could be
repeated a number of times (providing for the negotioations between
the TIF and the HIF). The negotiations are completed when LRQ and LOK
fields in the second Circuit Init of the pair are equal.
.sp 2
The unsuccessful negotiations should end with Circuit Disconnect or Invitation
to Clear. Either side can initiate the clearing process.
.sp 2
.H 4 "Host-to-Host connection"
.sp 2
.ft C
.nf
                           Host to Host logon

                        HIF                   HIF
                         |                     |
                         | <---CALL REQUEST--- |
                         | ----CALL ACCEPT---> |
                         | <---CIRCIUT INIT--- |
                         | ----CIRCUIT INIT--> |
                         |                     |
.fi
.ft P
.sp 2
The Host-to-Host connection protocol could be used any time a symmetrical
connection is required. It has no bearing on the primary/secondary
relations on DLC or higher layers.
.sp 2
The negotiation conventions are the same as in the terminal-to-host case.
Status message is not used on the host-to-host connection.
.sp 2
.H 3 "PVC establishment"
.sp 2
PVC establishment follows the same sequence response diagrams as SVC
except for CALL REQUEST/CALL ACCEPT exchange which is replaced by
TYMNET-defined PVC REQUEST/PVC RESPONSE IIX messages. The example
below shows Host-to-Host PVC establishment.
.ft C
.nf
                             Host to Host PVC

                        HIF                   HIF
                         |                     |
                         | <---PVC REQUEST---- |
                         | ----PVC RESPONSE--> |
                         | <---CIRCIUT INIT--- |
                         | ----CIRCUIT INIT--> |
                         |                     |
.fi
.ft P
.sp 2
No negotiations are allowed on the PVC connection. CIRCUIT INIT
exchange is used for the checking purposes only.
.sp 2
.H 3 "Host-to-Host data exchange"
.sp 2
Below is an example of a replacement of a DSP sequence response diagram
by the SNA/DSP diagram for the host-to-host connection. Two HIF's
(rather than the Terminal and Host PAD's) are the participants in the exchange.
The DSP responses are replaced by the SNA/DSP commands in both directions.
.sp
The exapmle below replaces 5.1.12 in [7] for the host-to-host connection.
.sp 2
.ft C
.nf
                       Host to Host data exchange

                        HIF                   HIF
                         |                     |
                         | ----Command/ETB---> |
                         | ----Command/ETX --> |
                         | <---Command/ETB---- |
                         | <---Command/ETX --- |
                         |                     |
.fi
.ft P
.sp 2
The HIF-to-HIF SNA/DSP protocol can be used regardless of whether or
not the interface as a whole is actually HIF or TIF. The SNA/DSP
HIF identification applies to the SNA/DSP dialect only. Other layers
can be actually any combination of the primary or secondary roles
within the corresponding interfaces. The CIRCUIT INIT message should
serve to identify these roles for the higher layers.
.sp 2
.SK 0
.H 1 "SNA/SDLC Operations Monitor"
.sp

.H 2 "Current Environment"
.sp
The SDLC interface incorporates an operations monitor which enables a network
operator to DISPLAY the current status of each physical link and station 
that is attached to the interface. Furthermore, by using the CHANGE commands,
the pre-defined settings and parameters as well as the logon and targeting
information can be changed and redefined through this facility.
.sp
A unique host number is used in each SDLC interface for the operations
monitor. Users with the appropriate network validation and the username 
sysgenned in the MGOODGUY macro of the SDLC tymfile can log into this host
number and access the op monitor. Each user is assigned an authorization level
during the SDLC interface sysgen. If the user is assigned the lower
authorization level, this user will not be allowed to use all the CHANGE
commands of the op monitor. If the user is assigned the higher
authorization level, this user will be able to use all the commands
of the op monitor.
.sp
Three types of terminals are supported by this facility : low speed hard-copy
terminals, Tymshare Model 444 (HP), and Tymshare Model 425 (ADM-1A). To select
a terminal type, the user enters the terminal type followed by a carriage
return. The op monitor then outputs the Interface Status Display until a
command is issued or the operator logs off. 
.sp
The Interface Status Display consists of the following:
.sp
.BL
.LI
header line, with SDLC interface ID, node number, and slot number
.LI
detail line, with interface version number, time the slot was last started, 
the crash count, and the last crash code
.LI
and the command prompt ">".
.LE
.sp
.H 2 "Objectives"
.sp
For the integrated SNA/SDLC interface, an op monitor should be designed and
developed which would be functionally equivalent to the existing SDLC op
monitor. Moreover, the currently available options and commands need to be 
expanded in order to include LUs as a part of their parameters, as they 
pertain to the PS support level.
.sp
New commands will also need to be added , as they are required, to improve
the overall functionality of the op monitor.
.sp
In addition to the above, it is desirable to have the capability of
accessing the op monitor from the network console.
.sp
To achieve the above objectives, the SDLC op monitor will be modified in
order to allow it to be accessed through the extended DDT (XDDT).
.bp
.H 2 "System Functions"
.sp
.H 3 "Modifications"
.sp
As mentioned above, the integrated SNA/SDLC interface will be modified so
that the current op monitor can be accessed through XDDT. Modifying SNA/SDLC
to allow XDDT access to the op monitor will mean modifying both the SNA XDDT 
modules and the SDLC op-monitor modules.
.sp
XDDT changes will involve adding all the current op monitor commands to the 
current XDDT commands. A new version of STATUS.LIB module, a user command
handler, will be used to communicate with the XDDT modules for all the input
and output processes.
.sp
Op-monitor modules, on the other hand, are currently designed to communicate 
with FRNTND.LIB for input and output over network circuits. These module will
therefore be modified to interface to STATUS.LIB instead. The state tables,
state routines, message tables, and messages within these modules will
require additional changes and modifications in order to accommodate new options
and commands.
.sp
Some sysgen macros may be removed due to the above changes and some new ones
may be added.
.sp
.H 3 "Operations"
.sp
To access the new SNA/SDLC op monitor, the user will first have to 
log into DDT. DDT is a generalized debugging and monitoring tool that is part
of ISIS. At the prompt "*", the op monitor would be accessed from DDT
by entering the ?STAT command. When in the XDDT mode (op monitor), the prompt
":>" indicates that the op monitor is ready to accept commands.
.sp
Command lines will be terminated by a carriage return. Arguments will be 
separated by either a comma, space, line feed, or tab.
.sp
There will be limited editing control for the op monitor. An ESCAPE will 
abort the current command line and return to the prompt ":>". A control W
"^W" will discard the partial token already input, either word or number. A
control A "^A" and control H "^H" will discard the last character of the 
token, effectively a backspace.
.sp
A control C "^C" could be entered at any time to terminate the current 
process of the op monitor (i.e., halt output). The user will then be returned
from the op monitor to DDT.
.sp
The appendix entitled 'Operations Monitor Commands' gives a description of 
some of the current and new 
commands which will be modified to accommodate the PS support level.
.bp
.H 2 "System Generation"
.sp
The following additions and modifications to the sysgen will be implemented
as part of this project :
.sp
.BL
.LI
All current macros associated with the SDLC operations monitor
will be removed since the access method will be different.
.LE
.sp
.H 2 "Limitations"
.sp
.BL
.LI
To run the op monitor, the users will need to login to DDT which also allows 
them to change and modify the object or the slot code.
.sp
.LI
There is no mechanism embedded in this method for setting authorization
levels or restricting access to the op monitor.
.sp
.LI
The response time might vary and at times be slow since the kernel I/O process
has the lowest priority within the node.
.sp
.LI
Access to the op monitor will be limited to the async terminals connected to 
the network - no 3270 type devices will be able to use this facility.
.LE

.H 1 "Operations Monitor Commands"
.sp
For the new integrated SNA/SDLC interface, the current SDLC op monitor commands
and the SNA XDDT commands will be combined and functionally supported. The 
following sections give a description of options/commands which will be added 
or modified in order to accommodate the PS support level and the integration
process. Additional commands may be added as they are required. 
.sp
For a display of all possible commands available at this point, the users need
only type in "?" or "HELP".
.sp
The following is a list of the current SNA XDDT commands :
.sp
.ta 0.8i +0.8i +0.8i
.VL 5 5 
.LI
ALL	ALLS	DIR
.LI
DLK	DLKO	DLKS
.LI
DNT	DNTO	DNTS
.LI
DOR	DR	DRRG
.LI
DRSF	DTLN	ETLN
.LI
EXI	FASTC	GMT
.LI
HELP	IFOFF	IFON
.LI
INOFF	INON	LINK
.LI
OTOFF	OTON	Q
.LI
RVOFF	RVON	SYM
.LI
TMOFF	TMON	XROFF
.LI
XRON	XTOFF	XTON
.LI
ZZ	/	?
.LE
.sp
The following sections give a description of all the commands which will be 
modified and added to the XDDT module for the new SNA/SDLC interface op 
monitor.
.sp
For more details regarding the above commands, please consult the SNA/SDLC
Extended DDT Guide.
.bp
.H 2 "General Information Functions"
.sp
This section consists of commands that provide general information about the
monitor itself and the state of the SNA/SDLC interface.
.sp
.ta 1.0i +1.0i +1.0i +1.0i +1.0i +1.0i
.H 3 "DTLN"
.sp
.BL
.LI
Syntax:
.sp
	DTLN <ARG>
.sp
.LI
Arguments:
.sp
	ARG - line number
.sp
.LI
Definition:
.sp
This command is used to turn off the Information Frame trace facility (refer
to next command) for the given line once the user is done with debugging.
.LE
.sp
.H 3 "ETLN"
.sp
.BL
.LI
Syntax:
.sp
	ETLN <ARG>
.sp
.LI
Arguments:
.sp
	ARG - line number
.sp
.LI
Definition:
.sp
Currently, in the SNA interface, this command is being used to allow the
user to enable a sub-process which records all
information frames that are sent and received on a particular line or station. 
This command, along with its associated processes, have proved to be a 
valuable debugging tool and it would be
desirable to have an equivalent command for the DLC level of support.
.sp
For DLC support level, this "command" will be used to record all
un-numbered frames that are sent and received on a line or station. 
This information will be saved in a ring buffer, the size of which is 
determined at assembly time, and will not be displayed in an specific format.
.sp
.LI
Limitations:
.sp
.VL 0 0
.LI
The implementation of this command and its processes might be costly
since some changes in the current implementation may be required.
Therefore, this command will only be implemented (for DLC support level)
if there is a need for it.
.LE
.LE
.sp
.H 3 "EXIT , ZZ"
.sp
.BL
.LI
Syntax:
.sp
	EXIT , EXI , BYE , LOGOFF , LOGOUT , ZZ
.sp
.LI
Definition:
.sp
This command is used to logoff from the interface operations monitor and
off of DDT.
.LE
.sp
.H 3 "HELP , ?"
.sp
.BL
.LI
Syntax:
.sp
	HELP , ?
.sp
.LI
Definition:
.sp
These commands would be used in order to display the menu of possible 
extended DDT commands. A new feature will be added in order to keep the
screen from scrolling, after one screenful of information is displayed,
until a specified key is pressed. This would enable
the user to scan the screen freely without losing any lines of information.
.LE
.sp
.H 3 "LOGTABLE"
.sp
.BL
.LI
Syntax:
.sp
	LOGT
.sp
.LI
Definition:
.sp
This command is used to display the contents of the slot log file. The slot
log file contains exceptional events occurred since the slot initially started.
Each entry in the table is 10d bytes long. The data recorded for an event 
include the time when such an event occurs, the event code, and the associated
line/station/device number. When the log table is full, the new event log will
be written into the log table from the beginning of the table, and the oldest
entries will be lost.
.sp
The number of entries in the log table could be changed using the MLOG.TBL
macro. The default value of 50 is usually long enough.
.sp
The information displayed from this slot log file includes :
.sp
.VL 5 5
.LI
GMT_TIME
.LI
sub_code
.LI
.ta 0.5i
.VL 5 5
.LI
0	slot initial start
.LI
1	slot restart
.LI
2	circuit built
.LI
3	circuit zapped
.LI
4	ckt/pu/lu shut
.LI
5	ckt/pu/lu removed from shut
.LI
6	line up
.LI
7	line down
.LI
8	ckt/pu/lu shut due to excessive logon retry
.LI
9	ckt/pu/lu logon failed
.LI
A	ckt/pu/lu inoperable
.LI
B	circuit received black ball
.LI
C	circuit/pu/lu received data overflow
.LE
.LI
simple text explaining the event
.LE
.LE
.ta 1.0i +1.0i +1.0i +1.0i +1.0i +1.0i
.sp
.H 3 "SYM"
.sp
.BL
.LI
Syntax:
.sp
	SYM
.sp
.LI
Definition:
.sp
This command prints a list of symbol addresses
which are commonly needed and used for testing purposes such as :
.sp
.VL 5 5
.LI
IRING
.LI
ORING
.LI
PORTAB
.LI
BBUFER
.LI
DCBLKS
.LI
CRAT
.LI
LCBPTR
.LI
LCBTAB
.LI
LSCLKS
.LI
SCBBLK
.LI
NCBBLK
.LI
EVBLK
.LI
PCBBLK
.LI
PUCPTR
.LI
PUCTAB
.LI
LNCPTR
.LI
LNCTAB
.LI
LUCPTR
.LI
LUCTAB
.LE
.LE
.sp
.H 3 "QUIT"
.sp
.BL
.LI
Syntax:
.sp
	QUIT
.sp
.LI
Definition:
.sp
The quit command exits the user from the interface operations monitor to 
the slot's DDT.
.LE
.bp
.H 2 "Display Commands"
.sp
Display commands will be  used to get information regarding a specific line,
station, or device. Currently, these commands apply only to lines and 
stations, but with the addition of the PS support level these commands will
be expanded to include devices (LUs) as part of their parameters.
.sp
This section only describes the modifications which are needed to accomplish 
this task. The SNA/SDLC ERS document should be consulted if more detailed
information regarding these commands is desired.
.sp
For Display commands, user may stop the display of information by
using manual XOFF.
Enabling the
display again (manual XON), would result in the completion of the current
display.
.bp
.ta 1.5i +1.5i +1.0i +1.0i +1.0i +1.0i
.H 3 "Display Configuration"
.sp
.BL
.LI
Syntax:
.sp
DCNF [line],[station],[device] 
.sp
.LI
Definition:
.sp
This command lists the configuration data for lines, stations, and devices.
The device number will only be used when the PS support level is available
or else it will be disregarded.
If the device number is omitted, then configuration data for all devices
on the specified station will be displayed. If both device and station numbers
are omitted, then the configuration data for all stations on the 
specified line will be displayed. If the line number is also omitted, then
configuration data for all lines, stations, and devices will be
displayed, including:
.sp
.VL 5 5
.LI
LINE # 	line number
.LI
LINE_TYPE	seconadry/primary line
.LI
HOST # 	host number (if any)
.LI
TOTAL_PU	total number of stations
.LI
DATAMODE	link type ( half-duplex , full-duplex )
.LI
FRAMESIZE	maximum frame size
.LI
WINDOWSIZE	maximum window size
.LI
TOTAL_LU	maximum number of concurrent users
.LI
SERVICE_ORDER	the order in which the stations on the line are serviced
.LI
ENTRYLIM	entries made for normal servicing before special servicing
.LI
DTR/DSR	DTR/DSR signalling option
.LI
RTS/CTS	RTS/CTS signalling option
.LI
PU_ADDR	physical unit address
.LI
PU_LABEL	this PU's label
.LI
STATION#	this PU's relative number
.LI
DATAMODE	link type ( half-duplex , full-duplex ) for this PU
.LI
PASSLIM	max # of consecutive PIUs sent at one time
.LI
LU_ADDR	logical unit address
.LI
LU_LABEL	this LU's label
.LI
DEVICE #	this LU's relative number
.LI
LU_PRINTER	available printers for this CRT
.LI
LU_NAME	symbolic name of this LU
.LI
LU_TYPE	LU type (1, 2, 3)
.LI
LU_VHR	VHR supported
.LI
LU_VTI	VTI supported
.LI
LU_EXTSYS	external host system ( IBM, Fujitsu, Hitachi )
.LE
.LE
.bp
.H 3 "Display Logon"
.sp
.BL
.LI
Syntax:
.sp	
DLGN [line],[station],[device],[entry]
.sp
.LI
Definition:
.sp
This command displays PVC/SVC logon information for lines, stations, and devices.
If the entry number is omitted, then all logon entries will be displayed.
If the device number is omitted, then logon information for all
devices on the station will be displayed. If the station number is omitted,
then logon information for all stations and devices on the line will be
displayed. Finally, if the line number is omitted, then all logon information
will be displayed, including:
.sp
.VL 5 5
.LI
LINE #	line number
.LI
PU_ADDR	station address
.LI
LU_ADDR	device address
.LI
ENTRY#	logon entry number
.LI
LGN_LAYER	layer of support
.LI
LGN_VC	logon circuit type
.LI
LGN_DIALECT	avaiable dialect
.LI
LGN_LINE	destination line #
.LI
LGN_PUADDR	destination station address
.LI
LGN_LUADDR	destination device address
.LI
LGN_SIZE	screen size
.LI
LGN_CHRSET	available character set
.LI
LGN_COLOR	available color
.LI
LGN_CHANNEL	logon channel number
.LI
LGN_DDNIC	data network identifier code
.LI
LGN_CRM#	logon connection request mode
.LI
LGN_CUGLIST	logon closed user group list
.LI
TPUT_CLASS	throughput class negotiation subscription (SUB or NO)
.LI
XT_CLASS	value of transmit throughput class (3-12)
.LI
RT_CLASS	value of receive throughput class (3-12)
.LI
RVCHARGE	reverse charge subscription (SUB or NO)
.LI
REQUEST	reverse charge requested subscription (SUB or NO)
.LI
NOT_REQUEST	reverse charge not requested subscription (SUB or NO)
.LI
CUG	close user group subscription (SUB or NO)
.LI
INCOMING	incoming call access subscription (SUB or NO)
.LI
OUTGOING	outgoing call access subscription (SUB or NO)
.LI
LGN_STRING_LEVEL_0	logon string level 0
.LI
LGN-STRING_LEVEL_1		logon string level 1
.LI
LGN_STRING_LEVEL_2	logon string level 2
.LE
.sp
Device number information will only be displayed in case of PS support level.
.LE
.bp
.H 3 "Display Statistics"
.sp
.BL
.LI
Syntax:
.sp
DSTA [line],[station],[device]
.sp
.LI
Definition:
.sp
This command displays the statistical information for lines, stations, and
devices. If the device number is omitted, then statistics for all devices
on the station will be displayed. If the the station number is also omitted,
then the statistics for all stations and devices on the specified line will
be displayed. If line number is omitted, then the statistics for all lines, 
stations, and devices will be displayed, including:
.sp
.VL 0 5
.LI
LINE #	line number
.LI
number of frames received
.LI
number of frames transmitted
.LI
number of frames rejected
.LI
number of transmit timeout
.LI
PU_ADDR	station address
.LI
LU_ADDR	device address
.LI
LUSSTA	this device's SNA SSCP-LU state
.ta 1.2i
.VL 10 10
.LI
0	reset state
.LI
1	pending for DACTPU
.LI
2	pending for ACTPU
.LI
3	active PU
.LI
4	pending for DACTLU
.LI
5	pending for ACTLU
.LI
6	active LU
.LI
7	LU_LU session began
.LI
8	pending for link down response
.LE
.LI
.ta 1.5i +1.5i +1.0i +1.0i +1.0i +1.0i
LUPSTA	this device's ACT/NON-ACT state
.VL 10 10
.ta 1.2i
.LI
0	deactive state
.LI
1	pending active state
.LI
2	active state
.LI
3	pending deactive state
.LI
4	pending SNA recovery state
.LI
5	pending link down recovery state
.LI
6	pending link reset state
.LE
.ta 1.5i +1.5i +1.0i +1.0i +1.0i +1.0i
.LE
.sp
Device number information will only be displayed in case of PS support level.
.LE
.bp
.H 3 "Display I-Frame trace Buffer"
.sp
.BL
.LI
Syntax:
.sp
	DIFO
.sp
.LI
Definition:
.sp
This command is used to display the I-frame trace buffer. This command works
concurrently with ETLN command. If ETLN command is issued before the DIFO
command, the I-frame trace buffer will trace all input and output I frames
as soon as ETLN command is entered. In other words, if ETLN command is never
issued, no I-frames will be put into the trace buffer. Consequently, DIFO
command will not show any I-frame trace.
.sp
The information displayed from this I-frame trace buffer includes :
.VL 5 5
.LI
X/R	transmit to the external PU or receive from the external PU
.LI
TH0	transmit header byte 0
.LI
DAF	destination address field
.LI
OAF	origination address field
.LI
SNF	sequence number field
.LI
RQ/RP	request or response
.LI
RH0	request/response header byte 0
.LI
RH1	request/response header byte 1
.LI
RH2	request/response header byte 2
.LI
RU0	request/response unit
.LE
.bp
.H 2 "Change Commands"
.sp
Change commands will be used to alter specific information and settings
as they are related to lines,
stations, or devices. Currently, these commands apply only to lines and 
stations, but with the addition of the PS support level these commands will
be expanded to include devices (LUs) as part of their parameters.
.sp
This section only describes the modifications which are needed to accomplish 
this task. The SNA/SDLC ERS document should be consulted if more detailed
information regarding these commands is desired.
.bp
.ta 1.0i +1.0i +1.0i +1.0i
.H 3 "Change Configuration Remove Shut"
.sp
.BL
.LI
Syntax:
.sp
RSHT [line],[station]
.sp
.LI
Corresponding Macros:
.sp
None
.sp
.LI
Note:
.sp
The implementation of this command is not available in version 5 of SNA.
.sp
.LI
Definition:
.sp
This command is used to reactivate a shut station or device (if PS support 
level is available). If no device is specified, then all shut devices on 
the station will be activated. If no station is specified, then all shut 
stations on the specified line will be activated. If no line is specified, 
then all shut stations and devices on all lines will be activated.
.sp
.LI
Limitations:
.sp
.VL 0 0 
.LI
The implementation of this command (for the PS support level) may prove to 
be costly due to the nature of the SNA activation and deactivation process.
Therefore, unless there is a real need for this command, this command will 
not be implemented for the PS support level.
.LE
.LE
.bp
.H 3 "Change Configuration Shut"
.sp
.BL
.LI
Syntax:
.sp
SHUT [line],[station]
.sp
.LI
Corresponding Macros:
.sp
None
.sp
.LI
Note:
.sp
The implementation of this command is not available in version 5 of SNA.
.sp
.LI
Definition:
.sp
This command is used to shut a station or device (if PS support level is 
available) on a particular line. If no device number is specified, then all
devices on a station will be shut. If no station is specified, then all 
stations on the line will be shut. Finally, if no line number is specified, 
then all stations and devices on all lines are shut.
.sp
.LI
Limitations:
.sp
.VL 0 0 
.LI
The implementation of this command (for the PS support level) may prove to 
be costly due to the nature of the SNA activation and deactivation process.
Therefore, unless there is a real need for this command, this command will 
not be implemented for the PS support level.
.LE
.LE
.bp
.ta 1.5i +1.5i +1.0i +1.0i +1.0i +1.0i
.H 3 "Change Logon Closed User Group"
.sp
.BL
.LI
Syntax:
.sp
CCUG [line],[station],[value]
.sp
.LI
Corresponding Macros:
.sp
DLG.CUG, PLG.CUG
.sp
.LI
Definition:
.sp
This command is used to change the closed user group subscription for a
particular SVC line or station using the X.25 dialect.
.sp
The value must be one of the following :
.ta 0.5i
.sp
.VL 5 5
.LI
0	CUG not subscribed, neither incoming nor outgoing access
.LI
1	CUG subscribed, neither incoming nor outgoing access is allowed
.LI
2	CUG subscribed, incoming access is barred, outgoing access is allowed
.LI
3	CUG subscribed, outgoing access is barred, incoming access is allowed
.LI
4	CUG subscribed, both incoming and outgoing access are allowed.
.LE
.sp
The line and station numbers must be specified. Once the command
is entered, the op monitor will display the new value.
.sp
.LI
Limitations:
.sp
.VL 0 0 
.LI
This command will not perform any processing for the PS support level at 
this moment.
.LI
Corresponding macros should be referred to, whenever this CHANGE command 
is used since all dependencies and limitations described in those cases will 
also apply here.
.LE
.LE
.bp
.H 3 "Change Logon Destination Line"
.sp
.BL
.LI
Syntax:
.sp
CLIN [line],[station],[device],[entry],[desti. line]
.sp
.LI
Corresponding Macros:
.sp
DLG.LINE, PLG.LINE, LG.LINE
.sp
.LI
Definition:
.sp
This command will be used to assign a new destination line for a particular
station or device (if PS support level is available). This information is
required after the PVC is built from the originating interface to the
destination interface in order to attach the PVC to the desired station/device
on a particular line on the destination interface.
.sp
The line, station, device, and logon entry numbers must be specified. The destination line
# must be entered in hexadecimal format.
.sp
.LI
Limitations:
.sp
.VL 0 0 
.LI
Corresponding macros should be referred to, whenever this CHANGE command 
is used since all dependencies and limitations described in those cases will 
also apply here.
.LE
.LE
.bp
.H 3 "Change Logon Destination Station Address"
.sp
.BL
.LI
Syntax:
.sp
CPU [line],[station],[device],[entry],[address]
.sp
.LI
Corresponding Macros:
.sp
DLG.PUADDR, PLG.PUADDR, LG.PUADDR
.sp
.LI
Definition:
.sp
This command will be used to assign a new destination station address for
a particular station or device (if PS support level is available). This 
information is required after the circuit is built from the originating
interface to the destination interface.
.sp
The line, station, device, and logon entry numbers must be specified. The destination
be entered in hexadecimal format.
.sp
.LI
Limitations:
.sp
.VL 0 0 
.LI
Corresponding macros should be referred to, whenever this CHANGE command 
is used since all dependencies and limitations described in those cases will 
also apply here.
.LE
.LE
.bp
.ta 1.5i +1.5i +1.0i +1.0i +1.0i +1.0i
.H 3 "Change Logon Receive Throughput Class"
.sp
.BL
.LI
Syntax:
.sp
CRTC [line],[station],[device],[entry],[value]
.sp
.LI
Corresponding Macros:
.sp
DLG.TCLASS, PLG.TCLASS
.sp
.LI
Definition:
.sp
This command will be used to assign new receive throughput class value for
a particular SVC line, station or device.
The value must be between 3-12 in decimal, which corresponds to the CCITT TPUT class
standard.
.sp
The line, station, and device numbers must be specified. Once the command is
entered, the op monitor will display the new value (see DISPLAY LOGON).
.sp
.LI
Limitations:
.sp
.VL 0 0 
.LI
This command will affect only the gauging of virtual circuits for non-X25
connections.
.LI
Corresponding macros should be referred to, whenever this CHANGE command 
is used since all dependencies and limitations described in those cases will 
also apply here.
.LE
.LE
.bp
.H 3 "Change Logon Reverse Charge"
.sp
.BL
.LI
Syntax:
.sp
CRVC [line],[station],[value]
.sp
.LI
Corresponding Macros:
.sp
DLG.RVCHARGE, PLG.RVCHARGE
.sp
.LI
Definition:
.sp
This command will be used to change reverse charge subscription for a 
particular line or station
and is valid only for SVCs. The new value must be one of the following:
.sp
.VL 5 5
.LI
0	reverse charge subscribed with requested
.LI
1	reverse charge subscribed with not requested
.LI
2	reverse charge subscribed with both requested and not requested
.LI
3	reverse charge not subscribed
.LE  
.sp
The line and station numbers must be specified. Once the command is entered, 
the op monitor will display the new value (see DISPLAY LOGON).
.sp
.LI
Limitations:
.sp
.VL 0 0 
.LI
This command will not perform any processing for the PS support level at 
this moment.
.LI
Corresponding macros should be referred to, whenever this CHANGE command 
is used since all dependencies and limitations described in those cases will 
also apply here.
.LE
.LE
.bp
.H 3 "Change Logon String"
.sp
.BL
.LI
Syntax:
.sp
CSTR [line],[station],[device],[entry],[level],[userid:host#;password] 
.sp
.LI
Corresponding Macros:
.sp
.nf
DLG.PSW, PLG.PSW, LG.PSW
DLG.USR, PLG.USR, LG.USR
DLG.HST, PLG.HST, LG.HST
DLG.LEVEL, PLG.LEVEL, LG.LEVEL
.fi
.sp
.LI
Definition:
.sp
This command is used to change the logon information for a particular outgoing
station or device (if PS support level is present). The line, station, and 
device numbers must be specified. Once the command is executed, the op 
monitor will display the current logon information and prompt for the new
logon string records.
.sp
The format of each logon string record is :
.nf
.sp
	LEVEL, USERID : HOST # ; PASSWORD , or
	LEVEL, USERID : HOST # , or
	LEVEL, USERID .
.sp
.fi
For logon going through gateways, the appropriate number of logon string records
must be entered, each preceded by its appropriate level. A logon level of 0
indicates this logon is not going through a gateway.
Once this information is entered, the op monitor will display
the new logon information.
.sp
.LI
Limitations:
.sp
.VL 0 0 
.LI
No additional logon levels could be introduced when this command is being
used (can not increase the number of logon stages). However, the number of 
logon levels for a specific logon entry could be reduced.
At the time when SNA version 5.00 is completed, NAD-DDT restricts the maximum 
number of parameters that can be typed on the command line in the Extended
DDT is four parameters, and they all have to be numeric. In other words, 
No alphabets or alphanumeric characters can be accepted by NAD-DDT as a
parameter input. Therefore, this
command will not work well with any NAD version 2.14 and earlier.
.LI
Corresponding macros should be referred to, whenever this CHANGE command 
is used since all dependencies and limitations described in those cases will 
also apply here.
.LE
.LE
.bp
.H 3 "Change Logon Throughput Class Subscription"
.sp
.BL
.LI
Syntax:
.sp
CTPT [line],[station],[device],[entry],[0 , 1]
.sp
.LI
Corresponding Macros:
.sp
DLG.TCLASS, PLG.TCLASS
.sp
.LI
Definition:
.sp
This command is used to change the throughput class negotiation subscription
for a particular SVC line, station, or device. If the value equals 0, then
the line entered will not subscribe to throughput class negotiation. On the
other hand, if the value equals 1, then the line will subscribe to throughput
class negotiation.
.sp
The line, station, and device numbers must be specified. Once the command is
entered, the op monitor will display the new value (see DISPLAY LOGON).
.sp
.LI
Limitations:
.sp
.VL 0 0 
.LI
This command will affect only the gauging of virtual circuits for non-X25
connections.
.LI
Corresponding macros should be referred to, whenever this CHANGE command 
is used since all dependencies and limitations described in those cases will 
also apply here.
.LE
.LE
.bp
.H 3 "Change Logon Transmit Throughput Class"
.sp
.BL
.LI
Syntax:
.sp
CXTC [line],[station],[device],[entry],[value]
.sp
.LI
Corresponding Macros:
.sp
DLG.TCLASS, PLG.TCLASS
.sp
.LI
Definition:
.sp
This command will be used to assign new transmit throughput class value for
a particular SVC line, station or device.
The value must be between 3-12 in decimal, which corresponds to the CCITT TPUT class
standard.
.sp
The line, station, and device numbers must be specified. Once the command is
entered, the op monitor will display the new value (see DISPLAY LOGON).
.sp
.LI
Limitations:
.sp
.VL 0 0 
.LI
This command will affect only the gauging of virtual circuits for non-X25
connections.
.LI
Corresponding macros should be referred to, whenever this CHANGE command 
is used since all dependencies and limitations described in those cases will 
also apply here.
.LE
.LE
.H 1 "Native Printer"
.sp
This section describes the native SNA 3270 printer within the integrated 
SNA Terminal Interface (SNA TIF) as requested by PIR 1621.
.sp 2
The integration project (PIR 2342) will allow native (extention cord)
support for a variety of SNA devices including 3270 (CRT and printer).
However, the DLC type of service is not expected to provide the degree
of performance to satisfy the requirments of the conversational environment.
The native printer
project is meant to complete the existing TYMNET PS service for the
3270 devices by supporting the 3270 printer for the native SNA-to-SNA
connection.
.sp 2
The proposed implementation requires that SNA 3270 Virtual Terminal
Interface (VTI) feature of SNA TIF is fully completed to include SNA 3270
native mode for CRT's.
The required changes to this feature will be implemented
therefore as a part of this PIR although such development has certain
merits of its own.
.sp 2
This section describes the overall functionality and the implementation
principles for the proposed VTI enhancement and the native 3270 printer.
.sp 2

.H 2 "Current Environment"
.sp 2
The current status of the SNA VTI feature is described below. Emphasis is made
on the current problems with the usage of CRT's and those parts of the
current implementation which need to be developed to be able to support
the printer.
.sp 2
.H 3 "CRT logon"
.sp 2
The logon procedure is performed using the 
Network Service Manager (NSM) screen.
.sp
The screen appears on every CRT connected to the 3270 CU and defined
in SNA TIF via corresponding macros
after the successful activation of the CRT LU or after
the previous Virtual Circuit (VC) has been zapped. It can also be
entered on request of the operator (see CRT logoff below).
.sp
The screen presents a menu of the logon/logoff actions. If
the action requires more information, further screens guide
the operator through the logon process.
.sp 2
The logon/logoff actions defined in NSM are:
.sp
.BL
.LI
Manual and preset CRT logon.
.LI
Manual and preset printer logon.
.LI
CRT logoff.
.LI
Printer logoff.
.LI
Exit. This last action is used if NSM is entered due to the operator's
request.
.LE
.sp
Below the list of actions there is an action selection line. It prompts for
the action number and a specific printer address (for printer logon/logoff
and associated printer logon actions).
.sp
NSM also displays the status, which consists of the LU name (if it is genned) and
the connection mode (connected to remote or disconnected) of the CRT and its
attached PRTs.
.sp 2
If the manual CRT logon is selected, the next screen prompts for the logon string
which provides the username, the host interface's host number, and the password
to the network.  If the given logon string is valid and the host is up, the next
screen prompts for the DSP information which contains the CRM type, the source/destination
addersses, the mode of operation or end-to-end response mode (used for associated
device logon and printer logon), and attributes.  If the host interface found an
LU matches the given DSP information, it notifies the host to send the banner
message.  At this moment, the user should see the host banner message and be able
to sign on to a desired application.
.sp 2
If the preset CRT logon action is selected, the next screen is a
menu of the host destinations. The menu of destinations and the necessary logon
informations are defined in the tymfile and can vary from CRT to CRT (by macro calls).
Once the destination is selected, the logon string and the DSP information are given.
If they are valid, the host banner message should appear on the screen and is ready
for the user to sign on.
.sp 2
In DSP mode, the logon proceeds according to the TYMNET/DSP specifications and is therefore
compatible with the existing TYMNET/DSP HIF products (SNA, BSC3270, MCP
and CMH).
The typical logon types (manual, preset, and associated device)
are supported in this version of SNA TIF.
.sp 4
.H 3 "CRT logoff"
.sp  2
Only the network (as opposed to application) logoff is considered in this
section.
.sp
The network logoff can happen due to the actions of the host or the actions of the
end user.  In the former case, the SNATIF receives a zapper from the network; in the
latter case, the end user needs to invoke the NSM menu and select the CRT logoff
action.
.sp
To invoke the NSM while the CRT is in the LU-LU session, the SNATIF requires that
the end user hits a PF/PA key (gennable in the tymfile) or put the screen
in the SSCP-LU session, by hitting the SYS/REQ key if the screen was not in
such mode, and enters a gennable keyword.
.sp 2
.H 3 "CRT end-to-end mode"
.sp 2
Prior to this version, the VTI mode makes use only
of the Terminal DSP protocol (TDSP) and is consistent with any TYMNET
Host DSP (HDSP) product (SNA, BSC3270, MCP, CMH). It did not implement any of the
features specific to SNA3270 (as opposed to BSC3270).
.sp 2
The most important implementations of the SNA-specific features in this version of
the VTI mode are:
.sp
.BL
.LI
SSCP-LU (SCS) messages transmission. For the host-to-terminal direction, they were
converted by the SNA HIF into the 3270 data stream and sent as such by the SNA TIF
to the 3270 CU. For the terminal-to-host direction, the only SSCP-LU message allowed
was the NSM request, any other SSCP-LU message caused the error recovery
procedure.  Now, the SCS data is sent unconverted from the SNA HIF to the SNA
TIF then to the 3270 CU on SSCP-LU session.
.LI
The genned BIND was used by the SNATIF in all its LU-LU sessions. This fact greatly
limits the usage of non-standard screen sizes (or any other session-specific
BIND parameters).  Now, the genned BIND is only used for the local session,
which allows the user to build virtual circuit.  After the virtual circuit is
biult, the local session is unbinded.  Henceforward any BIND from the host is
sent end-to-end to the 3270 CU.
.LE
.sp 2
Also, SNA responses were supported locally by both SNATIF and SNAHIF. This
fact provided for a good response time. On the other hand, the
processing of the negative responses was limited to the following
two error recovery procedures:
.sp
.BL
.LI
Sent -RSP(data lost) or LUSTAT(data lost) to the host. Most applications will
re-send the last screen and continue the session.
.LI
If the above action was impossible then zapped the circuit and returned to NSM.
.LE
.sp 2
The same error recovery is entered after exiting from NSM or returning
to LU-LU mode from SSCP-LU mode of operation (the former is unlike BSC3270
which saves and restores the application screen after exiting NSM).
These facts add to the
degree of dissimilarity between the native SNA environment and VTI. The
trade-off is a good performance in the network environment.
.sp 2
For native printer, the previous mentioned error recovery process does not
seem enough.  So, this version provides the options of local response or
end-to-end response depending on users needs.
.sp 2
.H 2 "Objectives"
.sp 2
The objectives of this development are as follows:
.sp
.BL
.LI
Enhance the SNAVTI features to provide a full scale high performance
support for the native 3270 CRT connection;
.LI
Develop a high performance support for the native 3270 printer (local response);
.LI
Develop a low performance support for the native 3270 printer (end-to-end response).
.LE
.sp 2
These objectives will be met by the proposed development subject to the
limitations listed below in the corresponding subsection.
.sp 2
.H 2 "System Functions"
.sp 2
This subsection describes the new functionalities which are
implemented in the SNA version 5 to support the native 3270 connection.
The description is divided on the CRT enhancements and printer support.
.sp 2
.H 3 "Enhancements for the CRT support"
.sp 2
The following paragraphs describe the enhancements that are implemented
in version 5 to deal with the problems of the CRT support
listed above.
.sp 2
.H 4 "Automatic SVC"
.sp 2
The automatic SVC function is equivalent to the PVC from the user point of view.
For automatic SVC, the network virtual circuit will automatically be built
whenever the slot has been started or re-started, or the network circuit has been
zapped.
.sp 2
.H 4 "CRM4 logon"
.sp 2
This version of the SNATIF supports the CRM4 in addition to the CRM1, 2, and 3 which
are supported by the previous version.  The CRM4 is used by the source PAD to
request a virtual circuit for a device which is to be associated with an existing
virtual circuit to another device.  It provide the destination PAD with the
necessary information so that both devices can be associated with the same control
unit.
.sp 2
.H 4 "NSM service request"
.sp 2
This function allows users to enter the NSM during the LU-LU session by hitting
a genned PF/PA key.
.sp 2
.H 4 "SNA/DSP protocol"
.sp 2
The SNA/DSP is developed from the standard DSP protocol (see the corresponding appendix).
The SNA/DSP allows the SNA header information (TH & RH) and the SNA control
messages to be sent between the SNATIF and the SNAHIF. Thus,
both the SNATIF and the SNAHIF will have the session (SSCP-LU versus LU-LU)
and the BIND information.
.sp 2
The new SNA/DSP information will be used in the following way:
.sp
.BL
.LI
SSCP-LU SCS messages from the host will not be converted by the SNAHIF
into the 3270 data stream. The header
sent to the SNATIF will indicate SSCP-LU session, the data will remain in SCS
(like for LU.T1 printer) data stream.
.LI
After the virtual circuit is built, the SNATIF will not sent the genned BIND
to the 3270 CU to activate the end-to-end session until the SNA/DSP BIND is
received from the SNAHIF.  In another word, the SNATIF uses the BIND received
from the SNAHIF rather than the genned BIND, which is used in the logon mode
only, to establish the end-to-end session with the 3270 device.
.LI
The SNATIF (in SNA/DSP mode) allows for inbound SSCP-LU messages. These messages
will be scanned for the genned NSM request key word. If encountered, NSM will
be entered. Otherwise, the SSCP-LU message will be sent to the SNAHIF without
any conversion.
.LI
The BID information will not be sent between the SNATIF and the SNAHIF, it is
generated locally (as in VTI). Standard IBM applications should not be affected,
but there is a possibility for a contention scenario different from the
native SNA environment.
.LI
The BIND/UNBIND session activation messages are transferred from the SNAHIF
to the SNATIF in the SNA/DSP mode.
.LI
The additional error recovery will be implemented in the SNATIF and the SNAHIF
to keep them synchronized regarding the current session used (SSCP-LU versus LU-LU).
This may add some degree of dissimilarity with the native 3270 environment
(during frequent and untimely usage of SYS/REQ key).
.LI
For CRM4 logon, the PS layer information of the associated device will be conveyed
to the SNAHIF together with the primary device's DSP information.
.LE
.bp
.H 4 "Sample scenarios for the CRT support"
.H 5 "Initialization and CRT logon"
.ft C
.nf
.sp
Operator   3270          TIF                  HIF            Host
            |             |                    |               |
            |<--ACTPU-----|                    |               | 1
            |-- +RSP ---->|                    |<---ACTPU------| 2
            |<--ACTLU-----|                    |--- +RSP ----->|
            |-- +RSP ---->|                    |<---ACTLU------|
            |<--BIND -----|       <-port avail-|+RSP/poweroff->| 3
            |-- +RSP ---->|                    |               |
            |<-- SDT -----|                    |               |
            |-- +RSP ---->|                    |               |
NSM <-------|<-- NSM -----|                    |               | 4
screen      |             |                    |               |
Logon ----->|     Build VC|                    |               | 5
Selection   |             |----CALL REQUEST--->|               |
            |             |<---CALL ACCEPT ----|               |
            |             |----CIRCUIT INIT--->|Select device  |
Device <----|<-NSM status-|<---CIRCUIT INIT----|               |
connected   |<--UNBIND----|----STATUS -------->|---NOTIFY----->| 6
            |-- +RSP ---->|                    |<-- +RSP ------|
Banner <----|<--SSCP-LU---|<--PIU format data--|<-SSCP-LU data-| 7
            |-- +RSP ---->|                    |--- +RSP ----->|
.fi
.ft P
.sp
The following comments correspond to the numbers on the right side:
.sp
.AL
.LI
The initialization is started locally by the SNATIF and continues independently
from what is happening on the the SNAHIF side (link level is not shown).
.LI
The host initializes the SNAHIF.
.LI
The SNAHIF reports the power off condition for the LUs.
.LI
The SNATIF starts the logon LU-LU session and sends the NSM screen to the 3270
device.  For automatic SVC, the NSM screen is not sent.
.LI
The operator selects the CRT logon option and enters the logon information.
The SNA/DSP connection between the SNATIF and the SNAHIF is established.
.br
For automatic SVC, the host destination and the necessary logon information are
retrived from the genned parameters.
.LI
The logon session is terminated by the SNATIF. Host is notified of the new
connection (simulating power on).
.LI
The host sends the banner message (if there is one) on the SSCP-LU session to the
SNAHIF.  The banner is sent on SNA/DSP connection using PIU data format to the SNATIF
(thus informing the SNATIF that the message came on the SSCP-LU session).
The banner is then displayed on the 327x display through the SSCP-LU session.
The responses are supported locally.
.LE
.bp
.H 5 "End-to-end CRT session"
.sp 2
The following scenario assumes that the Virtual Circuit between the
SNATIF and the SNAHIF has been built. It may follow after the
initialization and logon scenario above.
.ft C
.nf
.sp
Operator   3270          TIF                  HIF            Host
            |             |                    |               |
Appl ------>|---SSCP-LU-->|--PIU format data-->|-SSCP-LU data->| 1
signon      |<-- +RSP ----|                    |<--- +RSP -----|
            |<--- BIND----|<--BIU format data--|<---BIND-------| 2
            |--- +RSP --->|                    |---- +RSP ---->|
            |<--- SDT ----|                    |<--- SDT ------|
            |--- +RSP --->|                    |---- +RSP ---->|
            |<--- BID ----|<--RU format data---|<-appl screen--| 3
            |--- +RSP --->|                    |---- +RSP ---->|
Appl <------|<-LU-LU data-|                    |               |
screen      |--- +RSP --->|                    |               |
Appl ------>|-LU-LU data->|---RU format data-->|--appl input-->| 4
input       |<-- +RSP ----|                    |<--- +RSP -----|
                   .               .                   .
                   .               .                   .
                   .               .                   .
                   .               .                   .
Appl ------>|-LU-LU data->|---RU format data-->|-appl signoff->| 5
signoff     |<-- +RSP ----|                    |<-- +RSP ------|
            |<---UNBIND---|<--BIU format data--|<---UNBIND-----|
            |--- +RSP --->|                    |--- +RSP ----->|
            |<---BIND-----|<---- zap VC -------|               | 6
            | ........... |                    |               |
NSM <-------|<-- NSM -----|                    |               |
screen      |             |                    |               |
.fi
.ft P
.sp 2
The following comments correspond to the numbers on the right side:
.sp
.AL
.LI
The operator enters the application signon (or any other data on SSCP-LU
session). If the data does not contain the keyword to invoke NSM, it is
sent end-to-end (in SNA/DSP PIU format which allows the SNAHIF to distinguish
the SSCP-LU data message from the LU-LU data and send the data to the host
on the SSCP-LU session). SNA responses are handled locally.
.LI
The host sends BIND. BIND parameters are checked by the SNAHIF (according
to the information in Circuit Init) and the BIND message is sent to the SNATIF
which in turn sends it to the external terminal Contol Unit. The SNA responses
are handled locally in both cases as well as SDT message.
.LI
The application data is received from the host on LU-LU session. It is
passed to the SNATIF as RU formatted SNA/DSP data message. If the brackets
are supported by BIND and the session was in between-bracket state at the
moment when this message needs to be transmitted to the 3270 CU, BID is generated
by the SNATIF to open the bracket (to simplify contention processing). The bracket
will be closed by the SNATIF when the message is transmitted. The responses (if
required by BIND) are handled locally.
.LI
The input for the application is transmitted end-to-end as an RU-formatted
SNA/DSP message. The responses (if required by BIND) are handled locally.
.LI
The operator signs off the application. The sign off (LU-LU message)
is not interpreted by the interfaces and is sent to the host. The host
generates UNBIND which is sent end-to-end. The host may zap the circuit
(depending on the UNBIND reason code).
.LI
If the circuit is zapped (because of the UNBIND reason code or for any
other reason) the SNATIF will initiate a new logon session as
described above starting from BIND and ending with the NSM screen. The
interface is now ready for the next logon selection from the operator.
.br
For automatic SVC, the NSM screen is not sent.  The virtual circuit building process
starts automatically at this point.
.LE
.bp
.H 5 "NSM in the middle of the end-to-end CRT session"
.sp 2
The following scenario assumes that the CRT is in the end-to-end
session with the host application. It may happen any moment beween
the points 3 and 5 of the end-to-end scenario above.
.ft C
.nf
Operator   3270          TIF                  HIF            Host
            |             |                    |               |
Invoke ---->|---SSCP-LU-->|<--RU format data---|<-appl screen--| 1
NSM         |<-- +RSP ----|                    |---- +RSP ---->|
            |<---UNBIND---|                    |               | 2
            |--- +RSP --->|                    |               |
            |<---BIND-----|                    |               | 3
            | ........... |                    |               |
NSM <-------|<-- NSM -----|                    |               |
screen      |             |                    |               |
Exit  ----->|---LU-LUmsg->|-STATUS(lost data)->|-LUSTAT(lost)->| 4
NSM         |<---UNBIND---|                    |               |
            |--- +RSP --->|                    |               |
            |<---BIND-----|<--RU format data---|<-appl screen--| 5
            | ........... |                    |               |
Appl <------|<--LU-LUmsg--|                    |               |
screen      |             |                    |               |
.fi
.ft P
.sp 2
The following comments correspond to the numbers on the right side:
.sp
.AL
.LI
The operator requests the service of the NSM screen.  The host might be in the
process of sending application data
at this moment. Depending on the timing, the host data might arrive
right before, during or after the screen is put in the SYSTEM mode.
In any case, the application data will not be displayed or retained
on the screen. The SNATIF does not save the application data for further
retransmission.
.LI
The end-to-end session is terminated. The essential information on the
end-to-end session is saved. This includes the parameters of the end-to-end
BIND. Some other information necessary for the recovery might be saved too.
.LI
The NSM session is initiated. Any host data (if arrived at this moment)
is discarded.
.LI
The operator exits the NSM session and returns to the end-to-end
session. The host is informed that the application screen has been lost.
Similar action occurs when the operator goes into the SYSTEM mode and
back without invoking the NSM in the middle of the end-to-end session.
.LI
The SNATIF tries to recover from the interruption in the end-to-end session.
The host application's error recovery capabilities are essential to provide
the data for the lost application screen.
.bp
.H 3 "Development for the printer support"
.sp
This section consists of three subsections: 1) printer logon, 2) printer logoff,
and 3) end-to-end printer data transfer.  Each of these subjects is discussed
separately below.
.sp 2
.H 4 "Printer logon"
.sp
The printer logon can be accomplished by using  the manual/prestored logon options on
the NSM, the automatic SVC, or the CRM4.
.sp 2
.H 5 "Printer NSM logon"
.sp
The NSM displays the status of all printers attached to the same 3270 CU
and defined as permitted for usage by this CRT (see LU.PRT macro in the
System Generation subsection).
.sp
To log on a printer, the operator uses the printer logon option of the NSM.
This option requires that the operator also selected one of the allowed printers for
the logon.  The selected printer should be in the ready and disconnected status
at this point for the selection to succeed.
.sp
The way to obtain the logon string and the DSP information during the manual/preset
printer logon is no different than the CRT manual/preset logon except that for
printer logon, the user can select its desired mode of operation.
.sp
The mode of operation (see the discussion on the end-to-end printer session
below) can be obtained either via the DSP information screen or by the ERSP
macro.  Since the SNA/DSP is the superset of the DSP, the rest of the
DSP information screen will still be used on the SNA/DSP connection
for the native printer.
.sp
After the successful printer logon, the NSM screen is displayed again.
The printer status lines reflect the new connection. The symbolic LU name of
the host printer LU is displayed too if the corresponding LU on the SNAHIF is
genned with the LU.NAME macro. After the connection has been established the
LU name is passed from the SNAHIF to the SNATIF via the Circuit Init SNA/DSP
message.
.sp 2
.H 5 "Printer automatic SVC logon"
.sp
The native printer automatic SVC logon is set by using the PLG.VC, DLG.VC,
or LG.VC macros.  It is no different than the CRT automatic SVC logon.  The
network circuit is built whenever the slot starts/re-starts executing or the previous
circuit is zapped.  The logon informations are obtained via the sysgenned parameters
instead of via the NSM logon screen.
.sp 2
.H 5 "Printer CRM4 logon"
.sp
All Connection Request Modes (CRM's) will be available for the printer
logon. CRM4 is used if the CRT logon indicates a request for the associated
printer. To request an associated printer, the operator must
give the printer LU address on the NSM action selection line while selecting
the CRT logon option.  Two VC's (for both printer and CRT) are built in this
case (CRM4 is used for the printer logon).
.sp
The destination for the associated printer is the same as for the
CRT. The target attributes for the associated printer are assumed from
the attributes of the source printer selected on the NSM.
The mode of operation for the associated printer is indicated
during the CRT logon using ERSP macros. The macro is
included in the CRT portion of the sysgen, but it
indicates the mode of operation for the associated printer, rather than
the CRT support (see the sysgen subsection).
.sp
It should be noted that associated device logon (very suitable in CMT environment
with ASCII terminals having each its own printer) is not a very logical choice
in case of the native 3270 where the printer is shared typically between
a number of CRTs.
.sp
The limitations for the native printer CRM4 logon are listed as following:
.BL
.LI
Once the virtual circuit is built for the printer any other user on
the same 3270 CU will be able to use it. There is no way to block
the printer jobs coming from the host on the same printer LU session
regardless of who originated the print job.
.LI
The only way to establish the LU name of the printer is to look
at the NSM. There is no way to display this name on the status line
(like in CMT).
.LI
There is no real association between the printer and the CRT which
built VC for this printer. In all cases except for CRM 4 the circuits
for the printer and CRT can be built and zapped independently of each
other.
.LE
.sp 2
Since the printer logon implementation is based on NSM it is therefore
possible to perform it every time that this screen appears on the CRT
(either automatically or manually invoked). One of the implications
of this fact is that there is a possiblity to build the printer VC
while the CRT is in the end-to-end session with a host application.
.sp 2
.H 4 "Printer logoff"
.sp
In the normal situation, a printer's network circuit is zapped by either selecting
the printer logoff option of the NSM or zapping the associated CRT circuit if
the printer's circuit is a CRM4 circuit.

Printer logoff is one of the options of the NSM.  Functionally, it is the same
as the CRT logoff.  Like printer logon, it requires the user to enter the LU address
of the device to logoff.
.sp 2
The VC for any printer whose status is displayed on the NSM can be zapped by
this option regardless of which CRT was used to build the printer
circuit. The only exceptions to this rule is the circuits which
were built using CRM4. CRM4 circuits can be zapped only by the
originating CRT.
.sp 2
The printer circuit will be zapped if CRM4 was used and the associated CRT's VC got
zapped (similar to BSC/CMT handling).
.sp 2
.H 4 "End-to-end printer data transfer"
.sp
There are two modes of operation for the printer support - high performance
non-recoverable (HP) mode and low performance recoverable (LP).
.sp 2
In the HP mode all responses are handled locally (except when end of bracket
is indicated). This provides for a high throughput.
.sp
However, the error recovery may present a problem. Since the SNAHIF assumes that
the chain is to be responded positively (and actually does so in the HP mode
before the response is received from the other side), it is too late to
send -RSP back to the host if it happens.  Reprinting the exact
number of pages becomes impossible too.
.sp 2
Theoretically, the chain information can be held by the SNATIF until the response
is received from the external device (3270 CU). If -RSP has been received
the chain can be re-transmitted. This may be of a limited value,
however, and it is arguable if it has to be implemented. The following
considerations speak against it:
.sp
.BL
.LI
It is very expensive both in the development costs and the memory required
to hold the chain until acknowledged.
.LI
It does not solve the problem of re-printing the exact number of pages.
.LI
-RSP of contention types should not happen while sending data
since the SNATIF will transmit BID to open brackets (similar to VTI). A great
number of -RSP's of other types indicate a real error and cannot be
corrected by a re-transmission.
.LE
.sp 2
It could be reasonable therefore (in case of -RSP) to send the indication
to the host that the data has been lost and leave the recovery to the
host application and the operator.
.sp 2
In the LP mode all responses (except for the pacing response) are sent end-to-end
using the SNA/DSP capabilities. Pacing responses are handled locally. Thus
the error recovery of the native environment is preserved.
.sp 2
The selection of the mode of operation is depending on the users needs.
.sp 2
The rest of the considerations are common for both HP and LP modes.
They are as follows:
.sp
.BL
.LI
The bracket information will be sent from the SNAHIF to the SNATIF using SNA/DSP
capabilities. Thus bracketing will be preserved to enable between
bracket sharing with the local print jobs.
.LI
The SNAHIF will not generate DSP/BSC COPY command on the printer VC to
request the host initiated local copy (like in case of the current
Virtual Printer code). The start printer bit will be preserved instead
in the CRT data stream. The printer will be selected internally by
the 3270 CU.
.LI
No conversion of the data stream will be performed by either of the
interfaces (SNAHIF or SNATIF).
.LI
Some additional research is required to establish whether 3270 data
stream and LU.T3 are always supported  by 3270 CU
(even if SCS and LU.T1 features
are installed). This has some bearing on the level of support required
by the SNATIF regarding the LU type.
.LE
.sp 2
The information on the LU type and operation mode desired is not
of DSP type. This is the example of SNA/DSP information which is
not a part of DSP. This information is exchanged between the SNATIF and the SNAHIF
during the VC building process in the DQ Circuit Init packets
as described in the Appendix on the SNA/DSP.
.sp 2
The LU type is exchanged as a piece of the session level information.
The mode of operation is indicated on the DFC level as the type of
support (local for HP, end-to-end for LP).
.sp 2
.H 4 "Sample printer scenarios"
.sp 2
.H 5 "Printer initialization and logon"
.sp 2
The printer logon scenario is no different from the CRT logon scenario.
For manual/preset logon, the NSM is displayed on the CRT and the CRT operator makes
the selection of the printer and the destination host. The Circuit Init message reflects
the selection of the printer and the specific printer-related parameters.
The banner will not be displayed on the CRT after the printer logon.
.bp
.sp
This subsection discusses the scenario of the native printer CRM4 logon.
.ft C
.nf
.sp
Operator   3270          TIF                  HIF            Host
            |             |                    |               |
            |<--ACTPU-----|                    |               | 1
            |-- +RSP ---->|                    |<---ACTPU------| 2
            |<--ACTLU-----|                    |--- +RSP ----->|
            |-- +RSP ---->|                    |<---ACTLU------|
            |<--BIND -----|       <-port avail-|+RSP/poweroff->| 3
            |-- +RSP ---->|                    |               |
            |<-- SDT -----|                    |               |
            |-- +RSP ---->|                    |               |
NSM <-------|<-- NSM -----|                    |               |
screen      |             |                    |               |
Logon ----->| Build CRT VC|                    |               | 4
Selection   |             |----CALL REQUEST--->|               |
(CRT logon + PRT addr)    |<---CALL ACCEPT ----|               |
            |             |----CIRCUIT INIT--->|Select device  |
Device <----|<-NSM status-|<---CIRCUIT INIT----|               |
connected   |<--UNBIND----|----STATUS -------->|---NOTIFY----->| 5
            |-- +RSP ---->|(start bld prt VC)  |<-- +RSP ------|
Banner <----|<--SSCP-LU---|<--PIU format data--|<-SSCP-LU data-| 6
            |-- +RSP ---->|                    |--- +RSP ----->|
.fi
.ft P
.sp 2
The following comments correspond to the numbers on the right side:
.sp
.AL
.LI
Same as the CRT logon.
.LI
Same as the CRT logon.
.LI
Same as the CRT logon.
.LI
Same as the CRT logon.

.LI
The operator selects the CRT logon option and the PRT LU address then enters the
logon information.  The SNA/DSP connection between the SNATIF and the SNAHIF is
established.
.sp
For automatic SVC, the host destination and the necessary logon information are
retrived from the genned parameters.
.LI
The logon session for the CRT is terminated by the SNATIF. Host is notified of the
new connection (simulating power on).  Meanwhile, the SNATIF start building the VC
for the PRT by sending pseudo needle request to the network.  The PRT VC building
process may continue through the next step.  There would not be any indication of
the completion of the PRT VC building.
.LI
Same as the CRT logon.
.LE
.bp
.H 5 "End-to-end printer session (HP)"
.sp 2
The following scenario assumes that the Virtual Circuit between the
SNATIF and the SNAHIF has been built already.
.ft C
.nf
.sp
Operator   3270          TIF                  HIF            Host
            |             |                    |               |
Print ----->|-LU-LU data->|---RU format data-->|--print req--->| 1
reqst (CRT) |<- +RSP CRT--|      (CRT VC)      |<- +RSP CRT----|
            |<--BIND PRT--|<-BIU format (PRT)--|<--BIND PRT----| 2
            |-- +RSP ---->|                    |--- +RSP ----->|
            |<-- SDT -----|                    |<-- SDT ------ |
            |-- +RSP ---->|                    |--- +RSP ----->|
Print <-----|<-LU-LU data-|<-PIU format data --|<--print job---| 3
job         |-- +RSP ---->|                    |-- +RSP ------>|
                  .                 .                 .
Print <-----|<-LU-LU data-|<-PIU format data --|<--print data--| 4
job data    |-- +RSP ---->|--PIU format data ->|-- +RSP ------>|
            |<-UNBIND PRT-|<-BIU format data --|<-UNBIND PRT---| 5
            |-- +RSP ---->|                    |-- +RSP ------>|
            |             |                    |               |
.fi
.ft P
.sp 2
The following comments correspond to the numbers on the right side:
.sp
.AL
.LI
The operator requests the print job from the host on the CRT session
with the host application.
.LI
The host BIND's the printer session. The BIND is sent end-to-end.
The printer VC is used to transmit the BIND from the SNAHIF to the SNATIF
as an BIU formatted SNA/DSP data message. The responses and the SDT
are generated locally.
.LI
The print job from the host comes as a sequence of LU-LU messages on
the printer session. The data is transmitted as PIU formatted SNA/DSP
data message.  The RH information is retained and therefore the SNATIF
is informed of the bracketing and the usage of FM headers. The responses
are generated locally. They are used for the flow control. The backpressure
on the VC (generated by the SNATIF if its buffers are depleted) will suspend
the local generation of +RSP by the SNAHIF.
.LI
Before the end of the print session the host may indicate
the end of the bracket. The SNAHIF does not generate the local response in this
case. End-to-end response will be used instead. This will somewhat improve
the error recovery capabilities without sacrifying performance too much.
.LI
The host finished with the print job and generates UNBIND on the
printer session. The UNBIND is passed to the SNATIF which passes it to the 3270 CU.
The VC is not  zapped. It could be zapped manually by the operator.
.bp
.H 5 "End-to-end printer session (LP)"
.sp 2
The following scenario assumes that the Virtual Circuit between
SNATIF and SNAHIF has been built already. The only difference from
the end-to-end scenario above is the mode of performance (LP versus HP).
.ft C
.nf
.sp
Operator   3270          TIF                  HIF            Host
            |             |                    |               |
Print ----->|-LU-LU data->|---RU format data-->|--print req--->| 1
reqst (CRT) |<- +RSP CRT--|      (CRT VC)      |<- +RSP CRT----|
            |<--BIND PRT--|<-BIU format (PRT)--|<--BIND PRT----| 2
            |-- +RSP ---->|                    |--- +RSP ----->|
            |<-- SDT -----|                    |<-- SDT ------ |
            |-- +RSP ---->|                    |--- +RSP ----->|
Print <-----|<-LU-LU data-|<-PIU format data --|<--print job---| 3
job         |-- +RSP ---->|--PIU format data ->|-- +RSP ------>|
                  .                 .                 .
Print <-----|<-LU-LU data-|<-PIU format data --|<--print data--| 4
job data    |-- +RSP ---->|--PIU format data ->|-- +RSP ------>|
            |<-UNBIND PRT-|<-BIU format data --|<-UNBIND PRT---| 5
            |-- +RSP ---->|                    |-- +RSP ------>|
            |             |                    |               |
.fi
.ft P
.sp 2
The following comments correspond to the numbers on the right side:
.sp
.AL
.LI
The operator requests the print job from the host on the CRT session
with the host application. Same as HP mode.
.LI
Same as HP mode.
.LI
Same as HP mode except the responses are transmitted now end-to-end.
This does not include the pacing responses which are generated locally.
The responses could still be delayed in the SNAHIF to provide for the effective
flow control.
.LI
Same as HP.
.LI
Same as HP.
.LE
.sp 2
.H 2 "System Generation"
.sp 2
.H 3 "Changes to the macros"
.sp 2
The following additions and modifications to the sysgen are implemented
as a part of this PIR:
.sp
.BL
.LI
All PV level macros will be deleted. New PLG level macros will be
added (see the integration project). This new set of macros will replace
the old set of macros for the CRT LU's. The same new macros will be used
to convey the printer logon information.
.LI
LU.VTI macro default will be changed. It will be assumed that VC operates
in the Virtual Mode unless specified by this macro (LU.VTI(NO) option will
enable the old native mode which will not be removed for the time being).
.LI
The device type (CRT or printer) will be assumed from the LU.TYPE.
LU.TYPE(2) will mean CRT, LU.TYPE(1) and LU.TYPE(3) will mean printer.
.LI
Some additional research is required if LU.T3 is supported when LU.T1
feature is installed on the 3270 CU. If so then LU.TYPE(1) gen will
include the possibility for LU.T3 as well as LU.T1.
.LI
Destination LU type macros (DLG.LTYPE, PLG.LTYPE and LG.LTYPE) will be
changed to allow the value of 1 for the desired LU type. The remark
in the previous paragraph applies to this macro too.
.sp
This macro will not be required for version 5. The destination LU type
will be assumed from the source LU type if this macro is missing.
.LI
A new LU.NAME macro will define LU name for the device.
The format is:
.sp
LU.NAME (luname)
.sp
Notice that (unlike CMT/SNA connection) this macro should be used
for the HIF LU.
.LI
A new LU.PRT macro will define the logical unit number of the printer
permitted for the usage by this CRT. The format is:
.sp
LU.PRT (printer-lu#)
.sp
If a few printers are allowed for usage by the CRT the macro is
used a few times (limited to some reasonable value).
.LI
Three new macros will define the request for the end-to-end response
(LP) operation mode on the printer circuit. The format is
.sp
DLG.ERSP (arg)
.sp
PLG.ERSP (arg)
.sp
and
.sp
LG.ERSP (arg)
.sp
where the valid values for arg are YES and NO. The default is NO (no
end-to-end responses, that is HP mode).
.LE
.sp 2
.H 3 "Sysgen sample for the native 3270 CRT and printer support"
.sp 2
The example below shows one primary line with one PU and 4 LU's (two
CRT's and two printers). One secondary line demonstrates the usage of the
LU.NAME macro.
.ft C
.nf

    LINE(0)
     PRIMARY
     ..................
       PU(0)
        PU.ADDR(40)
        ...............

         LU(0)               :first CRT
          LU.ADDR(02)
          LU.TYPE(2)         :session type indicates CRT
          .............      :LU statements as in earlier versions

           LU.PRT(04)        :two printers are allowed for usage
           LU.PRT(05)        :for this CRT (04 and 05)

           LG.ENTRY(0)       :first destination
             LG.MODE(PRESET)
             LG.PROMPT(to host0)
              .........      :LG statements as in earlier versions


           LG.ENTRY(1)       :second destination
             LG.MODE(PRESET)
             LG.PROMPT(to host1)
             LG.ERSP(YES)    :mode for the asociated printer
                             :(if selected)
              .........      :LG statements as in earlier versions


         LU(1)               :second CRT
          LU.ADDR(03)
          LU.TYPE(2)         :LU type indicates CRT
          .............

           LU.PRT(04)        :only one printer (04) for this CRT

           LG.ENTRY(0)
             LG.MODE(PRESET)
             LG.PROMPT(to host4)
              .........

           LG.ENTRY(1)
             LG.MODE(PRESET)
             LG.PROMPT(to host7)
              .........


         LU(2)                :first printer
          LU.ADDR(04)
          LU.TYPE(1)          :session type indicates the printer
          .............       :LU statements as for CRT's

           LG.ENTRY(0)        :first destination for the printer
             LG.MODE(PRESET)
             LG.PROMPT(to host0)
             LG.ERSP(NO)      :no end-to-end responses (HP mode)
              .........       :other LG staements as for CRT

           LG.ENTRY(1)        :second destination for the printer
             LG.MODE(PRESET)
             LG.PROMPT(to host7)
             LG.ERSP(YES)     :end-to-end response (LP mode)
              .........       :other LG statements (as for CRT)

         LU(3)                :second printer
          LU.ADDR(05)
          LU.TYPE(1)          :LU type indicates printer
          .............       :other LU statements (as for CRT)

           LG.ENTRY(0)        :first destination for this printer
             LG.MODE(PRESET)
             LG.PROMPT(to host0)
              .........       :other LG statements (as for CRT)

           LG.ENTRY(1)        :second destination for the printer
             LG.MODE(PRESET)
             LG.PROMPT(to host1)
              .........       :other LG statements (as for CRT)


    LINE(0)                   :HIF line
     SECONDARY
     ..................
       PU(0)
        PU.ADDR(40)
        ...............

         LU(0)
          LU.ADDR(02)
          LU.TYPE(2)
          LU.NAME(ABCDEFGH)   :usage of LU.NAME macro at HIF
          .............
.ft P
.fi
.sp 2
.H 2 "Alternative solutions"
.sp 2
The following alternatives were considered for the implementation of this PIR:
.sp
.BL
.LI
Provide the printer support on the basis of the current native mode
implementation (rather than VTI). This alternative has been rejected
(due to expected performance problems).
.sp
.LI
Provide only HP or only LP mode of the printer operation. It has been
decided to provide both.
.sp
.LI
Provide support for the DSP connection to BSC3270 host (including the
printer support). This option has been rejected.
.LE
.sp 2
.H 2 "Limitations"
.sp 2
The following is the summary of the limitations. Most of them were
considered in greater details in the corresponding subsections.
.sp 2
.BL
.LI
The printer logon process will follow the current BSC3270 functionality.
No host initiated logon will be implemented as a part of this PIR.
.LI
The error recovery process for CRT may look differently than in the native
3270 environment.
.LI
The recovery process for the high performance printer mode may be limited
and rely on the host software and the operator.
.LI
There is a chance that some applications relying on very specific details
of the native 3270 implementation may have problems and will require
additional effort to make them run.
.LI
No data or session type conversion will be implemented as a part of
this PIR.
.LI
Access to BSC3270 and other HDSP HIF printer support will not be
provided as a part of this PIR.
.LE


.H 1 "SNA/SDLC Full-Duplex"
.sp

The following describes the proposed support of full-duplex mode for the link level of SNA as requested in PIR 2260. 
.sp
The full-duplex mode to be implemented will allow simultaneous send and receive link states to exist within the interface.  Session traffic in one direction will be independent of traffic in the other direction.  The transmission medium may be full-duplex in that the link may be capable of supporting the two way simultaneous traffic but the software implementing the interface itself must support this full-duplex mode also.  This project is concerned with implementing the interface software to support full-duplex.

A station in the half or full duplex state can be in Normal Response Mode(NRM)  or Normal Disconnected Mode(NDM) and the SNA interface also supports other transitory modes. In Normal Response Mode, the secondary station can transmit only with explicit permission of the primary station but may send a response with the last frame indicator set.  ln Normal Disconnected Mode  both primary and secondary stations cannot initiate or receive information frames.

.H 2 "Current Environment"
.sp
The Tymnet SNA/SDLC terminal and host interfaces currently support only the half-duplex mode.  Currently the dispatcher, which will be enhanced to become the link scheduler in version 5, checks each of the stations on the link in round robin order to determine if it is ready to transmit or receive  and jumps to the appropriate protocol handler routine to service whatever Normal response mode or Normal Disconnected Mode state it is in.   Within these routines the different frames are processed.  Some (RR,RNR,REJ) are handled locally and others are passed on to higher SNA layers for handling. Stations that were receiving are then set to transmit and vice versa as required by the protocol.   This is known as half-duplex flip-flop. 
.sp
In order to improve the response time, the full-duplex mode will be implemented.  Full-duplex mode through the network will not improve response time to equal that of a pure IBM environment but should improve it by the same ratio as the half to full-duplex in the pure IBM environment. 
.SK 0
The following  diagram illustrates this full-duplex configuration.
.ft C
.nf
.sp


              ----------              ----------
              |        |              |        |
              |  IBM   |              |  IBM   |
              |   370  |              |   370  |
              |        |              |        |
              ----------              ----------
                   |                       |
                   |                       |
               --------                --------
               |      |                |      |
               | 370X |                | 370X |
               |      |    +++++++     |      |
               --------   +       +    --------       --------
             SNA  |HIF   +         +  SNA  /HIF       | 3276 |
   -------- (fdx) |     +           +(fdx)/           --------
   |      |       ++++++             +++++++         /
   | 3274 |-------+                         +       / --------
   |      | TIF    +                         +--------| 3276 |
   --------(hdx)    +                        +TIF     --------
                     +                       +(hdx)
                      +      TYMNET          +        --------
                      +                     +---------| 3276 |
                      +                  +++ TIF      --------
                      +                 +    (hdx)
                      +                +    
     ------   HIF     +                +
    | 8100 |---------- +              +      
    |______|  (fdx)    +        +++++
                         +      +     
                          ++++++      
                            |         
                       SNA  |TIF     
                      (fdx) |        
                         --------
                         |      |
                         | 3777 |
                         |      |
                         --------
    



.fi
.ft P
.SK 0
.H 2 "Objectives"  
.sp
The  basic full-duplex mode will be supported as described in the ECMA-71 and CCITT X3.66.  Both primary and secondary point-to-point and multipoint unbalanced configurations will be supported.  In addition, all of the following CCITT X3.66 optional commands and responses will be supported.
.sp
.BL
.LI
XID - exchange station identification (cmd/rsp)
.LI
REJ - reject (cmd/rsp)
.LI
UI - unnumbered information (cmd/rsp)
.LI
SIM - set initialization mode (cmd)
.LI
RIM - request initialization mode (rsp)  
.LI
RD - request disconnect (rsp)
.LE
.sp
In the preceeding diagram, full-duplex can only be used in a PU4 to PU4, or PU4 to a full-duplex capable PU2, such as a 3770 RJE device, configuration.  Devices that do not support full-duplex such as 3270's must operate in half-duplex mode. 
.H 2 "System Functions" 
.sp
Full-duplex mode development will be based upon the existing SNA code supporting the half-duplex SDLC protocol.  However, because half-duplex and full-duplex stations can exist on the same link in a multipoint configuration, the Link Scheduler will have to service any full-duplex station in the order specified in the service order table regardless of transmit and receive states (please refer to the section on Service Order Table for a more comprehensive discussion of the Link Scheduler and Service Order Table). If applied to our current code, this means that if the station is full-duplex, either transmit or receive will be  a valid state when a station is due for servicing and we will then jump to appropriate routines created for each  of the following protocol states.  
.H 3 "Protocol States"
.sp 
PRINCIPAL STATES
.BL 
.LI 
NDM: NORMAL DISCONNECT MODE (PRIM/SEC)
.LI
OPA: TRANSMIT I-FRAMES (PRIM/SEC)
.LI
OPB: TRANSMIT S-FRAMES (PRIM/SEC)
.LI
OPC: RECEIVE RSP/CMDS (PRIM/SEC)
.LE
.sp
TRANSITORY STATES
.BL
.LI
XWND: RD RECEIVED (PRIM); DISC RECEIVED (SEC)
.LI
RWND: DISC TRANSMIT (PRIM); RD TRANSMIT (SEC)
.LE
.sp
SPECIAL STATES
.BL
.LI
TOP: RIM RECEIVED (PRIM); RIM SENT (SEC)
.LI
DSP: NDM XID TRANSMIT (PRIM); NDM XID RECEIVED (SEC)
.LI
OPS: NRM XID TRANSMIT (PRIM); NRM XID RECEIVED (SEC)
.LI
WOP: SNRM TRANSMIT (PRIM); SNRM RECEIVED (SEC)
.LI
OPT: UA SENT IGNORE EXTRA SNRMS (SEC)
.LI
FRM: FRMR SENT (SEC)
.LE
.sp
In the NRM(normal response mode) the following previously mentioned  protocol states and their associated routines will be written to reflect the simultaneous transmit and receive states of full-duplex.
.sp
.BL
.LI
OPA
.LI
OPB
.LI
OPC
.LI
OPT 
.LE
.sp
The remaining protocol state routines will remain basically the same with minor modifications.
.H 3 "Frames"
.sp
For both the primary and secondary protocol handler, the protocol state tables must be modified to include the  correct handling of the optional XID, REJ, UI, SIM, RIM, and RD frames, some of which are implemented in the SDLC interface but not in SNA.  In addition, the following currently supported frames will be included.
.sp
.BL
.LI
I - information (cmd/rsp)
.LI
RR - receive ready  (cmd/rsp)
.LI
RNR - receive not ready  (cmd/rsp)
.LI
FRMR - frame reject  (rsp)
.LI
DM - disconnect mode  (rsp)
.LI
UA - unnumbered acknowledgement  (rsp)
.LI
DISC - disconnect  (cmd)
.LI
SNRM - set normal response mode  (cmd)
.LI
TEST - test (cmd/rsp) 
.LE
.sp
RR, RNR, and REJ will be handled by the interface locally, all other frames  will be processed and passed on end-to-end.
.sp
.H 2 "System Generation"

Because half and full-duplex stations can exist on the same link in multipoint configurations, the DATAMODE macro must be extended to include the PU level.  This is so that the data link scheduler and other foreground routines, when servicing a station, can check if it is a full or half-duplex station.  If it is full-duplex, either receive or transmit state is valid.  (Warning: if the line is defined as HDX, then all stations on that line will be HDX) The following is an example of this macro's use.   
.sp  
.nf
.ft C

    LINE(0)                : First line
     HOST(863)             : this line's host number
     PRIMARY               : this is a primary line
     DATAMODE(FULL)        : this is a full-duplex line; if line=half-duplex
			           : then stations will be half-duplex
       PU(0)               : First PU on this line
	    PU.DATAMODE(FULL) : this is a full-duplex station
	 .
	 .
	 .
       PU(1)               : second PU on this line
         PU.DATAMODE(HALF) : this is a half-duplex station
	 .
	 .
	 .
    LINE(1)                : this is the second line
     SECONDARY             : this is a secondary line
     DATAMODE(FULL)        : this is a full-duplex line
     HOST(864)             : this line's host number is 864
       PU(0)               : first PU on this line
        PU.DATAMODE(FULL)  : this is a full-duplex PU  
.ft P
.fi


.sp
.H 2 "Limitations"
Based on CODAN measurements, the full-duplex implementation may provide for a considerable improvement in performance for the link level service as compared with the current SDLC extension cord service.  However, the actual improvement may depend on the usage parameters (like load, message lengths and so on).  


.H 1 "Service Order Table"
.sp 2
This document is written for PIR# 2260 which requests the support of
Service Order Table in both full-duplex and half-duplex environment.
.sp
Service Order Table is a table which contains entries of physical unit (PU) definitions.
It specifies the order that the secondary stations attached to the 
non-switched data link are to be serviced. 
The SDLC Link Scheduler uses
service order table to service each physical unit in both Normal 
Disconnected Mode (NDM) and Normal Response Mode (NRM).
.sp 2
.H 2 "Definitions"
.sp
For the purpose of discussion, the following definitions are provided for
clarification.
.BL
.LI
Primary Link Scheduler - the link scheduler of the SNA terminal interface.
.LI
Secondary Link Scheduler - the link scheduler of the SNA host interface.
.LI
Primary station - the external device that is connected to the SNA host
interface, such as a 37x5 Front End Processor.
.LI
Secondary station - the external device that is connected to the SNA
terminal interface, such as a 3274 Control Unit.
.LE
.sp 2
.H 2 "Current Environment"
.sp
The Tymnet SNA, and SDLC/QLLC terminal interfaces currently use a round-robin
algorithm in determining which station is to be serviced next.
At the initialization time, the SDLC protocol manager lines up all secondary
stations
in a row. It then services the stations one after another.
In the course of servicing the secondary stations, it services the stations
that are in Normal Disconnected Mode as frequently as those in Normal
Response Mode.
It does not prioritize the servicing in this respect.
.sp 2
.H 2 "Objectives"
.sp
As the SDLC Link Scheduler gives the same weight in terms of scheduling and
servicing stations that are either in Normal Disconnected Mode or Normal
Response Mode, the result is that the primary link scheduler polls the inactive
stations as frequently as the active ones. The response time is degraded
if there are more inactive stations on the line.
.sp
There are two-fold
objectives in implementing the concept of service order table.
First of all, the SDLC Link Scheduler may service the 
stations that are in Normal
Response Mode more frequently than those in Normal Disconnected Mode.
Secondly, by repetitively defining some stations in the service order
table, the SDLC link scheduler will service the repetitious stations
more often than others.
In a way, the service order table can be used to prioritize the
servicing of these repetitious stations.
.sp 2
.H 2 "System Functions"
.sp
There is one service order table per each non-switched line. The SDLC Link
Scheduler services each entry in the order as defined by the service
order table.
The physical units must be defined in the service order table
at least once in order to be serviced.
They can be defined in any order.
A physical unit can appear in the service order table more than once.
The ultimate effect of repeating a physical unit definition in a
service order table is to service this physical unit more frequently
than others.
.sp
The SNA terminal interface supports both point-to-point lines and
multipoint lines.
In the case of multidropping stations off the line, it is possible
to intermix half-duplex stations and full-duplex stations on one line.
The SDLC Link Scheduler uses the service order table to schedule alternate
send/receive for the half-duplex stations, and concurrent send/receive
for the full-duplex stations.
.sp 2
.H 3 "SDLC Link Scheduler"
.sp
The SDLC Link Scheduler is to schedule the link-level activities for all
stations on one line. 
The Link Scheduler is executed independently for each SDLC line.
The Primary Link Scheduler services the stations on the SDLC line in
the terminal interface.
On the other hand, the Secondary Link Scheduler services the stations
on the SDLC line in the host interface.
.sp
The major function of the Primary Link Scheduler is to determine
.BL
.LI
which station to be serviced; and
.LI
when to transmit or to poll.
.LE
.sp
The major function of the Secondary Link Scheduler is to determine
.BL
.LI
when to send a poll/final bit on.
.LE
.sp
For instance, an example of the tasks that the Primary Link Scheduler 
performs is as follows. 
After the primary link scheduler is initialized, the SDLC Link Scheduler uses
the service order table to locate a station to be activated,
and then asks the SDLC protocol manager to send a command (such
as SNRM), which is
coming from the higher layer of SNA.
.sp
Primary link scheduler
is divided into two processes:
(1) Normal Servicing Process, and (2) Special Servicing Process.
Normal Servicing process is to service stations in Normal Response
Mode(NRM) which have outbound 
command queued from the higher layer.
And it also polls the stations to start receiving from them.
In other words, the Nomal Servicing
consists of transmitting outbound Information frames and polling
for input.
Special Servicing process is to service stations in a non-NRM
Mode which have outbound 
command queued from the higher layer,
such as transmitting and receiving Un-numbered frames.
.sp
When the Link Scheduler begins execution for an SDLC line, 
normal servicing process is attempted before special servicing process.
However, because normal service cannot occur until an SNRM command
and a UA response are exchanged, the special servicing process takes place
first.
When Special Servicing process is terminated, Normal Servicing process begins.
When Normal Servicing process completes, Special Servicing process occurs.
.sp 2
.H 3 "Special Servicing Process"
.sp
Special Servicing process searches through the service order table
to send one SDLC Un-numbered command to a station, and then it waits
for a corresponding SDLC response.
.sp
To differentiate Normal Servicing from Special Servicing, each Servicing process has a
pointer to remember the service-order-table entry that is currently
being serviced.
Initially, Special Servicing process starts with the first service-order-table entry.
If more than one entry has an Un-numbered command of 
non-NRM Mode queued up, only the first located station with such command is
processed.
This entry then becomes the "last entry serviced" 
and the next queued Un-numbered
command of non-NRM Mode is not processed until the next
Special Servicing cycle is due. 
When the next Special Servicing cycle occurs, it starts with the the next
entry after the "last entry serviced"
and cycles through the entire table once at most.
.sp
Once no Un-numbered command of non-NRM mode is found in 
a complete pass of
the service order table, Special Servicing process is ended. 
If one Un-numbered command is found, only that one command is
processed before returning to Normal Servicing.
.sp
Special Servicing process ends after :
.AL 1
.LI
A complete pass of the service order table without finding a pending
Un-numbered command; or
.LI
A single Un-numbered command has been processed.
.LE
.sp
When Special Servicing process is terminated, Normal Servicing process begins.
.sp 2
.H 3 "Primary Link Scheduler"
.sp
For full duplex link, primary link scheduler schedules both the
Receive cycle and the Transmit cycle. 
To be able to receive and transmit concurrently, the Receive cycle
is independent of the Transmit cycle.
The Receive cycle is started by the transmission of a poll with the 
poll/final bit on, and stops when a poll response is received
with the poll/final bit on. 
On the other hand, Transmit cycle is scheduled continuously after SNRM/UA
exchange. 
Therefore, there are two separate pointers in the service order table
to manage the normal servicing.
Poll pointer represents the entry in the service order table that is
currently being polled and awaiting for a poll response with the poll/final
bit on. 
Transmit pointer points to the entry in the service order table that is
currently transmitting.
The management of Poll pointer is independent of the management of 
Transmit pointer.
These two pointers cycle through the service order table independently.
.sp
The primary link scheduler allows both the Receive cycle and the Transmit
cycle to be scheduled at the same time only when a full-duplex
station is selected from the service order table at that moment.
As a consequence, the concurrent Receive/Transmit may occur.
.sp
However, if the Poll pointer points to the same station as the 
Transmit pointer while that station is in a half-duplex data mode,
the primary link scheduler cannot receive from and transmit to this
station at the same time. The polling will not be performed for this station
until the transmission is done.
.sp 2
.H 3 "Normal Servicing Process"
.sp
Normal Servicing process always begins with the next entry after the 
last entry serviced and loops through the service order table.
Normal Servicing process keeps a pointer to its "last entry transmitted",
and another pointer to its "last entry polled".
On the contrary, Special Servicing process has only one pointer to its
"last entry serviced".
.sp
Normal Servicing process consists of searching :
.AL
.LI
the outbound data queued from the higher layer in the order specified by 
the service order table for
outbound Path Information Units (PIU) to transmit; and 
.LI
stations to poll.
.LE
.sp
The transmit cycle takes care of the transmission of outbound PIUs.
At the end of transmission, if it is a half-duplex station,
the primary link scheduler will indicate whether the 
station needs to be polled or not.
If the secondary station needs to be polled, it will make a note for
the Polling algorithm to poll when the Poll pointer reaches this entry
on the service order table.
When it is polled, the Receive cycle will take place to process the 
received frame.
.sp
In association with the service order table, there is an Entry Limit 
(ENTRYLIM) specified for each line. The Entry Limit (ENTRYLIM) specifies
the maximum number of entries on the service order table that the primary
interface selects for normal servicing of stations on the line before it makes 
a special servicing of the service order table.
.sp
If the ENTRYLIM value is equal to one, the Link Scheduler services only
one entry/station before it returns to the special servicing.
If the ENTRYLIM value is larger than one, the Link Scheduler
services more entries/stations in the normal servicing before it does one
special service for one entry/station.
It implicitly prioritizes the
normal servicing.
.sp
Specifying a low value in ENTRYLIM gives the primary link scheduler 
more opportunities to process SDLC commands than does
specifying a higher value.
Such SDLC Un-numbered commands are processed more frequently, but 
on the other hand, normal service is interrupted very often.
On the contrary, specifying a higher value in ENTRYLIM causes
fewer interruptions to normal servicing, but delays the process of SDLC
Un-numbered commands.
.sp
Upon completing a cycle of Normal Servicing, the primary link scheduler begins the
Special Servicing if one of the following events occurs:
.AL 1
.LI
A complete pass of the ENTRYLIM entries in the 
service order table without finding any
active stations.
.LI
The maximum number of Normal Servicings specified in the ENTRYLIM macro
has been reached.
.LE
.sp
The concept of ENTRYLIM is similar, but somewhat different
than IBM's SERVLIM (=Service Limit).
In an IBM
37x5, the macro SERVLIM specifies the maximum number of normal scans
of the service order table that the NCP makes for normal servicing
of PUs on the link before it makes a special scan of the table.
Each scan is to scan through the table once. 
For instance, if the SERVLIM is set to 1, NCP scans through the table
once for normal servicing before it makes a special scan.
If SERVLIM is set to 2, it cycles through the table twice for normal
servicing before it does a special scan.
.sp
This concept works fine if there are not too many stations on the line. 
Consider the situation where 255 entries are defined in the service
order table and only 10 of them are inactive, the rest of them are
already activated. 
If the SERVLIM is set to more than 1, it may take very long time to
activate one single station.
This is because the link scheduler once it gets into a normal servicing
cycle, has to service 245 (= 255-10) active stations at least
SERVLIM times before it can do a special service.
.sp
There is another concept associated with the service order table, which
is Pass Limit (PASSLIM). The Pass Limit (PASSLIM) specifies the maximum 
number of consecutive Path Information Units (PIU) that the SNA/SDLC 
primary link scheduler sends to the secondary station at one time. When
the Pass Limit is reached, the Transmit cycle will service the next
entry in the service order table. Each secondary station on a 
non-switched data link may specify a different value for Pass Limit (PASSLIM).
.sp
The PASSLIM macro may be coded with a value between 1 and 7.
If PASSLIM number of PIUs are available for transmission, the
number of PASSLIM PIUs are sent before the link scheduler goes to
service the next station in the service order table.
If the PASSLIM number of PIUs are not available, when the last PIU
has been sent, the link scheduler services the next station in the
service order table.
.sp
In terms of output scheduling, WINDOWSIZE defines the maximum number of
SDLC Information (I) frames which may be outstanding to
a station before polling that station for a response.
In other words, WINDOWSIZE defines a maximum of un-acknowledged frames.
The WINDOWSIZE macro may be coded with a value between 1 and 7.
.sp
There are four possible combinations of WINDOWSIZE and PASSLIM.
The action of the link scheduler varies as follows:
.AL 1
.LI
A number of WINDOWSIZE  frames have been sent, PASSLIM limit not
reached and more I frames are queued up to be transmitted.
.sp
If the number of un-acknowledged frames reaches the WINDOWSIZE, and the
PASSLIM has not been reached, the secondary station must be polled to
acknowledge the frames previously received.
Polling may be either Receiver Ready (RR) or Receiver Not Ready (RNR).
Polling will take place when the Poll algorithm services this station
according to the service order table.
When the polling response is received, more I frames can be sent.
.sp
On a full duplex link, if the WINDOWSIZE is reached before PASSLIM in the
course of transmitting I frames, the link degrades to half duplex mode. 
The queued I frames will not be sent until a poll is sent by the Polling
algorithm. 
Therefore, it is reasonable to define the PASSLIM equal to or less than the
WINDOWSIZE.
.sp
.LI
PASSLIM has been reached, WINDOWSIZE not reached, and more I frames are to
be sent.
.sp
If the PASSLIM has been reached, the link scheduler selects the next
entry in the service order table for transmission. 
.sp
.LI
PASSLIM and WINDOWSIZE are reached at the same time.
.sp
When these two counters reach maximum at the
same time, the secondary station is polled as determined
by the Polling algorithm, and the poll is responded 
with a poll/final bit on before the link scheduler selects
the next entry in the service order table.
.sp
.LI
No more I frames are available for transmission.
.sp
The link scheduler selects the next entry in the
service
order table for transmission.
.LE
.sp 2
.H 3 "Secondary Link Scheduler"
.sp
The secondary link scheduler prepares to receive at all time,
and it may only transmit after receipt of a poll with the poll/final bit on,
and until the secondary sends a poll response with the poll/final bit on.
.sp
If I frames are ready to be transmitted when a poll is received, the
secondary link scheduler can send frames up to the WINDOWSIZE or PASSLIM. 
Once WINDOWSIZE or PASSLIM is reached, whichever comes first, 
the secondary link scheduler stops sending any more I frames for that
station by turning on the poll/final bit in the RR or RNR poll response.
.sp
If I frames are not available to transmit after a poll is received,
it is recommended on a point to point link to hold the poll for some time
waiting for frames to arrive. 
The PAUSE macro when used in the host interface defines the 
period of time the secondary link scheduler may defer a response to
polling.
.sp
When the secondary link scheduler receives a poll with the poll/final bit on, if
I frames are available, they are sent to the primary station until all frames
are sent, 
or the PASSLIM of frames are sent, 
or the WINDOWSIZE is reached without an acknowledgement from
the primary station whichever condition is met the first. 
If no I frames are avialable to send, the secondary
interface sets a timer for 
PAUSE value. 
It then waits for the duration of PAUSE timer to see if any more I frames are 
available for transmission. 
If additional I frames arrive for transmission during 
the PAUSE timer,
the I frames are transmitted.
.sp
Otherwise,
the secondary link scheduler sends a poll response 
with the poll/final bit on when:
.AL 1
.LI
No I frames are ready to be sent and the PAUSE timer has expired, or
.LI
The PASSLIM number of I frames has been sent, or
.LI
Secondary interface has sent up to the WINDOWSIZE of I frames without
an acknowledgement from the primary station.
.LE
.sp
Unless either the PASSLIM or the WINDOWSIZE is reached, the secondary 
interface could transmit I frames indefinitely without ending the poll.
.sp
To make sure the primary station receives an end to the outstanding poll, 
the PAUSE value of the host interface must be defined less than
the REPLYTO of the primary station (such as NCP).
If no response to polling is received
before the NCP's REPLYTO is reached, the NCP
will
re-transmit the poll, which results in the secondary link scheduler 
setting up its PAUSE period again. 
Therefore, it is necessary to maintain a smaller PAUSE value in the
host interface than the
REPLYTO of the NCP
to avoid unnecessary retransmission of polling by the
NCP.
.sp
.SK 0
.H 2 "System Generation"
.sp
A number of new macros are introduced for the service order table.
They are listed as below:
.BL
.LI
ORDER(number,........)
.LI
GENTRYLIM(count)
.LI
ENTRYLIM(count)
.LI
GPASSLIM(count)
.LI
PASSLIM(count)
.LI
PU.PASSLIM(count)
.LI
GFRAMESIZE(count)
.LI
FRAMESIZE(count)
.LI
PU.FRAMESIZE(count)
.LI
GPAUSE(time)
.LI
PAUSE(time)
.LI
GNUM.RETRIES(count)
.LI
NUM.RETRIES(count)
.LI
GPAU.RETRIES(time)
.LI
PAU.RETRIES(time)
.LI
GSEQ.RETRIES(count)
.LI
SEQ.RETRIES(count)
.LI
GSNRMPAUSE(time)
.LI
SNRMPAUSE(time)
.LI
GXMTCOMPLETE(time)
.LI
XMTCOMPLETE(time)
.LE
.sp 3
.H 3 "ORDER"
.sp
ORDER(number,.........)
.in +1
.sp
Specifies the order in which the stations on the line are serviced.
.sp
Number is the PU number that is coded in the PU statement associated
with the line for which this service order table is being generated.
The PU numbers must be defined at least once in the ORDER statement,
and they may appear more than once.
.sp
This macro can only be defined in the terminal interface. If defined
in the host interface, a warning message will be generated.
This macro can only be defined for non-switched lines. An error message
will be generated if it is defined in the dial-up line.
.sp
Because the limitation of NAD assembly, we can only specify up to
16 parameters per tymfile macro, so up to 16 PU numbers can appear in
one ORDER statement. 
SNA interface allows ORDER macro definitions to appear up to 16 
times to generate a 256-entry's service order table.
A number of ORDER statements may be defined under one LINE statement if
one ORDER macro is not enough to specify the orders.
.sp
The maximum entries on all ORDER statements under one LINE  statement is
256.
.sp
ORDER is to be defined at the
line level. Defining it at the wrong level will result in an
error message during assembly.
.sp
If you omit the ORDER macro definition in the tymfile, SNA interface
automatically generates the service order table for the stations in
the order as they appear in the PU statements.
In this case, only one entry is reserved for each PU statement.
.sp
If the total number of entries in the service order table 
is less than the total 
number of PUs genned under one line, the PUs that are not genned in
the service order table will never be serviced by the primary link scheduler.
An error message will be generated if PU numbers defined in the ORDER
statement are out of the range of PUs under one LINE statement.
.sp
If you have four PUs defined under one LINE statement, one example of
designing a service order table can be 
.ft C
.nf
.DS
	    ORDER(0,1,0,2,0,3)
.DE
.fi
.ft P
.sp
You may see obviously that PU 0 will be serviced more often than others.
.sp 2
.in
.H 3 "ENTRYLIM"
.sp
GENTRYLIM(count)
.sp
ENTRYLIM(count)
.in +1
.sp
Specifies the maximum number of entries in the service order table that
the primary link scheduler makes for normal servicing of stations on the
link before it makes a special servicing of the table.
The range of the ENTRYLIM count is between 1 and 255.
.sp
This macro can only be defined in the terminal interface. 
If defined in the host interface, a warning message will be
generated during assembly.
.sp
This macro can only be defined for non-switched lines.
An error message will be generated if it is defined in the
dial-up line.
.sp
GENTRYLIM is to be defined globally at the general level, and 
ENTRYLIM at the LINE level. It cannot be defined
at the PU level. If it is defined at the wrong level, an
error message will be gennerated.
.sp
The definitions of ENTRYLIM count and REPLYTO timer of the primary
interface need to be cautiously determined. 
A low ENTRYLIM count ( which causes relatively frequent special
servicing ) and/or a high value for REPLYTO timer ( which results
in long time-out delays) results in serious degradation of message
throughput on the link if SDLC Un-numbered commands are transmitted for
stations whose power is off.
.sp
You can minimize the possibility of throughput degradation by specifying a
high ENTRYLIM count and/or a short REPLYTO timer for the primary
interface.
.sp
If you omit the ENTRYLIM macro definition in the tymfile, the default value
of ENTRYLIM is the total number of PUs defined under the line. 
In other words, the primary link scheduler will
do the normal servicing for all PUs defined under the line
before it does a special servicing.
It will service all the active stations before it service one 
inactive station.
.sp
There is no default value for GENTRYLIM. 
As there are various numbers of PUs under each line, and one
general statement will not be able to satisfy each line's need.
When both GENTRYLIM and the ENTRYLIM are not defined, the primary
link scheduler will default the ENTRYLIM to the number of PUs under
the line.
.sp
An example of using ENTRYLIM could be ENTRYLIM(5). In this case,
normal servicing will be performed for five entries 
in the service order table before making a
special servicing.
.sp 2
.in
.H 3 "PASSLIM"
.sp
GPASSLIM(count)
.sp
PASSLIM(count)
.sp
PU.PASSLIM(count)
.sp
.in +1
Specifies the maximum number of consecutive Path Information Units (PIU)
or PIU segments the primary link scheduler sends at one time to the external 
station.
When the PASSLIM count is reached, 
the link scheduler suspends the transmission of I frames to the current
station in the service order table, and
selects the next
entry in the service order table for the Transmit cycle.
.sp
The range of PASSLIM count is between 1 and 7. An error message will be
generated during assembly if it is defined beyond this range.
.sp
The default value for PASSLIM count is 1.
.sp
This macro can only be defined for the non-switched line.
An error message will be generated if it is defined in the dial-up
line.
GPASSLIM is to be defined globally at the general level, 
and PASSLIM is at line level, whereas 
PU.PASSLIM is at the PU level for each station. 
If it is defined at the wrong level, an error message will be
generated.
.sp
An example of coding PASSLIM(5) in the terminal interface 
is to instruct the link scheduler to pass 
5 PIUs to one station before it selects the next entry in the
service order table.
However, it has a different effect if it is defined in the host
interface. In the host interface, it may send up to 5 PIUs
and then it has to turn on its poll/final bit to stop sending any more
I frames on behalf of the secondary station.
.sp 2
.in
.H 3 "FRAMESIZE"
.sp
GFRAMESIZE(count)
.sp
FRAMESIZE(count)
.sp
PU.FRAMESIZE(count)
.sp
.in +1
Specifies the maximum size in bytes a single frame could be transmitted
or received.
.sp
The range of FRAMESIZE count is between 270 and 6000 bytes in decimal.
An error message will be generated during assembly if it is defined beyond 
this range. The default value for FRAMESIZE is 270 bytes.
.sp
GFRAMESIZE is to be defined globally at the general level,
and FRAMESIZE is at tline level, whereas PU.FRAMESIZE is at PU level for
each station.
If it is defined at the wrong level, an error message will be
generated.
.sp
An example of coding FRAMESIZE(524) in the terminal interface is to
prepare the terminal interface for transmitting or receiving up to
524 bytes per frame.
.sp 2
.in
.H 3 "PAUSE"
.sp
GPAUSE(time)
.sp
PAUSE(t)
.sp
.H 4 "Terminal Interface"
.in +1
.sp
PAUSE specifies the average duration of the polling cycle 
in Normal Response Mode in tenths of a second.
When this macro is used in the terminal interface, it specifies the time
period for the primary link scheduler to poll the same station again.
.sp
The polling cycle extends from the moment the primary link scheduler services
the
first entry in the service order table to the moment polling next begins 
at the same entry.
The polling cycle includes time for polling, receiving and transmitting
to stations on the line.
If the time expended in one complete polling cycle, which is servicing all
active entries in the service order table, equals to or exceeds the time
specified as t, the next polling cycle begins immediately.
.sp
If, on the other hand, the time expended in one complete polling cycle is
less than t, the beginning of the next polling cycle is deferred
until t tenths of a second have elapsed since the beginning of the polling
cycle.
During the PAUSE, the SNA/SDLC link is in POLL-WAIT state. The 
outgoing data ready for transmission to the SDLC secondary stations on the
link is sent during this pause.
.sp
Allowing a pause to elapse when activity on the link is relatively low can
reduce the amount of processing time consumed by un-productive
polling.
.sp 2
.in
.H 4 "Host Interface"
.sp
.in +1
The PAUSE has a slightly different meaning when used in the host 
interface. It is the time the secondary link scheduler can defer
answering a poll from the primary station.
.sp
When the host interface is polled with the poll/final bit on,
the secondary link scheduler
may send I frames if they are available. If there is no I frames available,
it may send a link level response with the poll/final bit off and sets a
timer for PAUSE value. If I frames arrive for transmission during the PAUSE
period, the I frames are transmitted.
.sp
In other words, PAUSE gives the host interface an opportunity to delay
the RR poll response with the poll/final bit on. It gives both
interfaces more opportunity to transmit I frames out of the network.
.sp
The timer value 't' can be from 0 to 2047 tenths of a second.
If this statement is
omitted, the default value of PAUSE is one second.
.sp
GPAUSE is to be defined globally at the general level, and PAUSE
at the LINE level for each line.
.sp
There is an interesting note that needs to be kept in mind when PAUSE timer is
determined.
.sp
.BL
.LI
The PAUSE timer of the host interface must be less than the 
REPLYTO timer of the primary station.
In this case, the host interface will try to send a RR or RNR 
poll response with the poll/final bit on before the primary station's
REPLYTO expires.
The consequence of an expired REPLYTO causes the primary station to
re-transmit the last frame.
Therefore, the PAUSE timer of the host interface needs to be 
less than the REPLYTO of the primary station to avoid the un-necessary
re-transmissions.
.LE
.sp
In QLLC version 2.04 and earlier, there is a number of link level timers
that implement concepts related to the PAUSE function. 
It is TFP.LN and TIR.LN.
.sp
TFP.LN defines the time delay between RR or RNR
polls sent to the same secondary station.
It is only used in the terminal interface when there are no I frames 
available for transmission and the WINDOWSIZE has not been reached yet. 
TFP.LN specifies the interval between 
the last RR poll with the poll/final bit on
and the next RR poll with the poll/final bit on to the same station.
.sp
TIR.LN defines the time delay between the last transmission of I frame and 
the next RR or RNR poll to that same secondary station if it is defined
in the terminal interface.
If it is defined in the host interface, it is the time delay between
the last transmission of I frame and the next poll response with the poll/
final bit on to the primary station.
TIR.LN gives the SNA interface an opportunity to check the 
output data queue coming from the SNA higher layer
and see if there are more I frames to be sent out
of the network.
.sp
If you have 4 PUs defined under one LINE statement in the terminal interface
and your service order table is like
.ft C
.nf
.DS
	      ORDER(0,1,2,3)
.DE
.fi
.ft P
.sp
a PAUSE of one second means that the primary link scheduler is to complete its
polling cycle (starts polling from PU 0 until polling PU 0 again) in one
second.
If the primary link scheduler completes its polling cycle less than one second,
it goes to the "POLL-WAIT" state.
At this moment, the primary link scheduler will fill the PAUSE period by sending
more I frames out of the SNA higher layer if they are available.
In this case, the primary link scheduler PAUSEs before sending a RR poll that 
initiates another polling cycle, and also tries to see if network has
more I frames to be sent. To implement the PAUSE macro in SNA 
version 5, the concept of TFP.LN and TIR.LN will be folded into the PAUSE
macro, and 
there will be no separate macros for TFP.LN and TIR.LN timers.
.sp 2
.in
.H 3 "RETRIES"
.sp
GNUM.RETRIES(m)
.sp
NUM.RETRIES(m)
.sp
GPAU.RETRIES(t)
.sp
PAU.RETRIES(t)
.sp
GSEQ.RETRIES(n)
.sp
SEQ.RETRIES(n)
.sp
.in +1
GNUM.RETRIES is defined at the general level, 
whereas NUM.RETRIES is at the line level.
They both specify the number of retransmissions that the SNA interface
will make to recover from the receive timeouts. The receive timeouts happen
when the interface sends an I frame or a supervisory frame with the poll/final
bit on , or sends an Un-numbered frame to the external station without
receiving a link level response. 
The interface continues to retransmit the frame until (1) the frame is
successfully received, or (2) until the number of retries you specify in the
macro have been attempted, or (3) an abnormal response (for example, a
Disconnected Mode DM) is received from the station.
.sp
The value m gives the number of
retries for each retry sequence.
It defaults to 7 retries. It can be defined within the range of 0 and 127.
.sp
GPAU.RETRIES is defined at the general level, and PAU.RETRIES is at the
line level.
They both specify seconds of pause between each retry sequence.
The timer t defaults to pause 0 second. It can be defined within the range of 0
and 255 seconds.
.sp
GSEQ.RETRIES is defined at the general level, whereas SEQ.RETRIES is at
the line level.
They both specify the number of sequences for the retries.
The value n defaults to 0 sequence. It can be defined within the range of
0 and 127 sequences.
.sp
In QLLC version 2.04 and earlier, there are separate RETRIES macros for
SNRM, DISC, XID, TEST, RNR and RR. However, there is only one generic
RETRIES in SNA all versions up to version 4.00 to perform
retransmission of any frames in both Normal Disconnected Mode and
Normal 
Response Mode. As the goal of SNA version 5 is to minimize the SNA
sysgen tymfile as minimal as possible, we will use SNA's generic
RETRIES to replace all separate RETRIES macros of QLLC interface.
.sp
In SNA version 4.00 and earlier, the values of the parameter m, t, n are
hard-coded in the source code even though they are sysgenned into the
slot tymfile. SNA version 5 will correct this.
.sp 2
.in
.H 3 "SNRMPAUSE"
.sp
GSNRMPAUSE(t)
.sp
SNRMPAUSE(t)
.in +1
.sp
In QLLC version 2.04 and earlier, TRP.LN timer is the SNRM polling pause.
In SNA version 4.00 and earlier, TPO.LN timer serves the same function,
however it is hard-coded in the source code.
In implementing SNA version 5, the SNRMPAUSE macro will replace 
the functionality of both TRP.LN and TPO.LN timers. 
.sp
When the terminal interface sends an SNRM to the secondary station, it will wait
for SNRMPAUSE tenths of a second before declaring a polling receive 
timeout.
If SNRMPAUSE tenths of a second elapses without a UA or DM received from
the secondary station, the terminal interface will check the SNRMPAUSE timer
and retry counters (such as NUM.RETRIES, PAU.RETRIES, and SEQ.RETRIES)
to see when and if another 
SNRM should be sent to the station.
.sp
This macro can only be defined in the terminal interface. Defining it
in the host interface will result in an error message during
assembly.
.sp
GSNRMPAUSE is to be defined at the general level, and SNRMPAUSE at
the line level. 
Defining it at the wrong level will result in an error message during
assembly.
.sp
This timer is usually left at the default value of ten tenths of a second
(equals one second).
To prevent hogging the special servicing process in waiting for SNRM polling 
response too long, never define the SNRMPAUSE timer more than one second,
so that the link scheduler can finish the special servicing as soon as
possible and moves on to the normal servicing.
.sp 2
.in
.H 3 "XMTCOMPLETE"
.sp
GXMTCOMPLETE(t)
.sp
XMTCOMPLETE(t)
.in +1
.sp
The TXR.LN timer of QLLC version 2.04/earlier and the TXC.LN of SNA version
4.00/earlier specify the interval for the interface to complete
transmission in terms of putting the frame in the foreground's Transmit
Rotor List. The only way to generate these timers for these versions of
products is through the LOPTION statement, which is merely a
temporary solution for an un-documented macro. 
In SNA version 5, we will implement the XMTCOMPLETE macro for the 
functionality of completing transmission to the foreground.
.sp
The timer value 't' is in tenths of a second. 
The 'minimum value' of this timer can be derived from the WINDOWSIZE, 
line SPEED, and the FRAMESIZE macros. 
The following formulas should be used in calculating the XMTCOMPLETE timer.
The timer value needs to be rounded to an integer.
The SNA interface will calculate the 'minimum time' during the assembly
phase, only the extra time 't' needs to be defined in the sysgen
tymfile. The default value of one extra second is sufficient for
a link speed of 9600 baud rate.
.sp
.ft C
.nf
.DS
                      ( 8 bits per char )   *   WINDOWSIZE   *   FRAMESIZE 
minimum time   >=   ----------------------------------------------------------
                                line SPEED in bits per second


XMTCOMPLETE(t)  =   t   +   minimum time

.DE
.fi
.ft P
.sp
The timer value 't' is the extra time that is to be added to 
the 'minimum time' for completing transmission.
.sp
.H 2 "Limitations"
.sp
If the definition of the service order table (such as ENTRYLIM) is geared to 
service a lot of active stations while there are still very few 
inactive stations needed to be activated, it may take longer time to
activate the inactive stations.
.SK 0
.H 2 "Sample Tymfile"
.sp
The following is a portion of sysgen definitions for all the macros
related to the service order table.
.sp
Note that in the ORDER statement, PU 0 is serviced more frequently
than other stations. 
By defining an ENTRYLIM of 5, the primary link scheduler will
service 5 entries in the normal servicing before it starts
the special servicing.
If, for instance, the ENTRYLIM is 16 and there are only
8 entries in the service order table, then the primary link scheduler
will loop through the service order table twice for normal
servicing before it does the special servicing.
.sp
The PU.PASSLIM defined for the PU 5 overwrites the PASSLIM
definition on the line level for this specific PU.
Defining a PU.PASSLIM count of 6 for PU 5 makes the link scheduler
transmit 6 PIUs to PU 5 before it selects the next entry
in the service order table.
.sp
The PU.FRAMESIZE defined for the PU 2 overwrites the FRAMESIZE
definition on the line level for this specific PU.
Defining a PU.FRAMESIZE count of 524 for PU 2 allows the interface to
transmit and receive up to 524 bytes per frame to and from this station.
.sp 2
.ft C
.nf
.DS
LINE(0)                            : first line
   PRIMARY                         : this line is primary
   DIAL(NO)                        : this is a non-switched line
   ORDER(0,1,2,0,3,4,0,5)          : the sequence of service order table
   ENTRYLIM(5)                     : normal servicing 5 entries max
   WINDOWSIZE(7)                   : max outstanding frames is 7
   PASSLIM(2)                      : max 2 PIUs are sent for each PU
   FRAMESIZE(270)                  : max frame size is 270 bytes
   SNRMPAUSE(10)                   : wait one second between 2 SNRMs
   PAUSE(10)                       : average polling cycle is one second
   XMTCOMPLETE(2)                  : wait 2 more seconds to finish XMT
   NUM.RETRIES(7)                  : retransmit 7 times
   PAU.RETRIES(1)                  : wait 1 second between retry sequence
   SEQ.RETRIES(2)                  : retransmit 2 sequences
	
   PU(0)                           : first PU
      PU.ADDR(40)                  : PU address

   PU(1)                           : second PU
      PU.ADDR(0C1)                 : PU address

   PU(2)                           : third PU
      PU.ADDR(0C2)                 : PU address
      PU.FRAMESIZE(524)            : max frame size is 524 bytes

   PU(3)                           : fourth PU
      PU.ADDR(0C3)                 : PU address

   PU(4)                           : fifth PU
      PU.ADDR(0C4)                 : PU address

   PU(5)                           : sixth PU
      PU.ADDR(0C5)                 : PU address
      PU.PASSLIM(6)                : max 6 PIUs sent to this PU

.bp
.sp
LINE(1)                            : second line
   SECONDARY                       : this line is secondary
   WINDOWSIZE(7)                   : max outstanding frames is 7
   PASSLIM(2)                      : max 2 PIUs are sent for each PU
   FRAMESIZE(270)                  : max frame size is 270 bytes
   PAUSE(2)                        : wait 0.2 second to answer a poll
   XMTCOMPLETE(2)                  : wait 2 more seconds to finish XMT
   NUM.RETRIES(7)                  : retransmit 7 times
   PAU.RETRIES(1)                  : wait 1 second between retry sequences
   SEQ.RETRIES(2)                  : retransmit 2 sequences

   PU(0)                           : first PU
      PU.ADDR(40)                  : PU address

   PU(1)                           : second PU
      PU.ADDR(0C1)                 : PU address

   PU(2)                           : third PU
      PU.ADDR(0C2)                 : PU address
      PU.FRAMESIZE(524)            : max frame size is 524 bytes

   PU(3)                           : fourth PU
      PU.ADDR(0C3)                 : PU address

   PU(4)                           : fifth PU
      PU.ADDR(0C4)                 : PU address

   PU(5)                           : sixth PU
      PU.ADDR(0C5)                 : PU address
      PU.PASSLIM(6)                : max 6 PIUs sent to this PU

.DE
.fi
.ft P




.H 1 "Structured Fields"
.sp 2
LU-LU session type 1 uses the SNA Character String (SCS) data format as opposed
to the 3270 Data Stream used by LU-LU sesion types 2 and 3. The SCS data maybe
sent as a structured field by appending length bytes, SCS identifier and
a reserved byte of zeroes to the start of the SCS data stream. 
.sp
The following table contains all the different types of structured fields
which maybe used:
.sp 2
Types of Structured Fields
.sp 2
.DS
 ID      Name
 --      -----
 00      Reset Partition
 01      Read Partition
          02 = Query
          6E = Read Modified All
          F2 = Read Buffer
          F6 = Read Modified
 06      Load Programmed Symbols
 09      Set Reply Mode
 0B      Set Window Origin
 0C      Create Partition
 0D      Destroy Partition
 0E      Activate Partition
 40      Outbound 3270DS
*41      SCS Data Structured Field
 80      Inbound 3270DS
 81      Query Reply
           81 Query Reply (Usable Area)
           84 Query Reply (Partitions)
           85 Query Reply (Character Sets)
           86 Query Reply (Color)
           87 Query Reply (Highlight)
           88 Query Reply (Reply Modes)
           8A Query Reply (Field Validation)

* This is the only structured field used by 3270 LU_T1 printers.
  All LU_T1s use SCS data stream not 3270 data stream.
.DE
.sp 2
                    Types of Structured Fields  
.sp 2
The information in this Appendix was gathered from the IBM 3270 Information
Display System Data Stream Programmer's Reference (GA23-0059-0) chapter 7
and the IBM 3274 Control Unit Description and Programmer's Guide (GA23-0061-0)
chapter 1. The Programmer's Reference did not mention ID X'41'; this ID was
derived from the Programmer's Guide. Perhaps the Programmer's Guide is more
current than the Programmer's Reference. For more information on structured
field refer to these two IBM documents.
.SK 0
.H 1 "Function Management Header Type 1"
   FMH-1
      Function Management Header Type 1
.sp 2
This appendix describes the meaning of each indicator in the FMH-1 accepted
by the 3274.
.sp
.DS
FMH-1 Format for 3274 Controller: X'0601000B6000'

Byte        Bit       Content      Meaning
----        ---       -------      -------

 0                    X'06'        Length of header including length 
                                   byte.
 1           0        B'0'         No FMH follows this FMH-1.
            1-7       B'0000001'   FMH-1 identifier

 2          0-3       X'0'         Console is desired medium for data
            4-7       X'0'         Logical subaddress

 3           0        B'0'         Stack to be used is senders send 
                                   stack.
             1        B'0'         Rcvr may direct data to alternate 
                                   medium.
            2-3       B'00'        Reserved
            4-7       X'B'         Structured Field DSP

 4          0-2       B'011'       Begin/end destination selection
             3        B'0'         Transmission exchange format
             4        B'0'         Reserved
             5        B'0'         No compression
             6        B'0'         No compaction
             7        B'0'         Reserved
 5                    X'00'        Reserved for console medium
.DE
.sp 2
                          FMH-1 Description  
.sp 2
This information was gathered from the SNA Sessions Between Logical Units
Part 2 Chapter 4.
.TC
@ 