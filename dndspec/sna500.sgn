.nr O 1.2i
.nr W 6.5i

.so /usr/calvin3/rodney/doc/lib/tmac

\&
.S 28
.ls 2
.ce 2
.B
.sp
SNA INTERFACE Version 5.02
.S 20
.ce 2
.B
SYSTEM GENERATION MANUAL
.ls 1
.R
.sp .5i
.S 16
.ls 2
.ce 2
.sp .75i
.ce 1
\*(DT
.sp 1.25i
.S 11 13
.ls 1
.TS
center linesize(36) box;
aw(5.5i).
T{
TYMNET's proprietary rights are included in the information disclosed herein.
The recipient, by receiving this document, agrees that neither this document nor
the information disclosed herein nor any part thereof shall be reproduced or
transferred to other documents or used or disclosed to others for manufacturing
or for any other purpose except as specifically authorized in writing by TYMNET.
T}
.sp .10i
.TE
.ds HP 12 12 12 12  
.ds HF 3 3 2 2
.PH "'SYSTEM GENERATION''\\\\*(DT'"
.PF "'SNA/SDLC System Generation Manual'\\\\*(a]'Page \\\\n(H1-\\\\nP'"
.H 1 "SYSTEM GENERATION" 
.sp 2
.VL 35
TYMFILE
.LE
.sp 2
Configuration of an SNA/SDLC interface requires a TYMFILE. 
Basically, a TYMFILE
is a file which contains all the configuration-related
statements necessary for the generation
of a Slot code for a particular configuration.
All these configuration-related statements are represented by the
System-defined macro statements, which are further divided into four
categories.  They are control-directives, network and ISIS statements,
line statements, PU statements, LU statements and logon statements.
.sp 2
.SK 0
.H 2 "CONFIGURATION MACROS" 
.sp 2
.H 3 "HIERARCHY OF SNA/SDLC MACROS STATEMENTS" 
.sp
An SNA/SDLC interface may be viewed as a logical arrangement of elements, each
kind of elements occupying a different hierarchical level within the
category of macros called SNA/SDLC configuration aggregate-macros.
.sp
The highest element is the protocol group, either a primary or a secondary
group.  Each group in an SNA/SDLC interface is represented by a GROUP 
aggregate-macro.
.sp
The next element is the communication line (or link). Each line in  an 
SNA/SDLC interface is represented by a LINE aggregate-macro, whether the line
is non-switched multipoint, non-switched point-to-point, or switched 
point-to-point.
.sp
The next element in the hierarchical levels is PU. Each
SNA/SDLC station is represented by a PU aggregate-macro, which
represents the physical unit within the SNA/SDLC station.
.sp
The next element in the hierarchical level is LU. Each.LE user
is represented by a LU aggregate-macro,whcih represents
the logical unit within the PU.
.sp
The next element in the hierarchical level is NS. The Network
Service Screen manual and Netowrk Keyword are represented
by NS aggregate-macros.
.sp
The last element in the hierarchical level is LG. The Network
service logon string is represented by a LG aggregate-macro,whcih
represents the user logon strings within that LU.
.sp 2
.H 3 "ITEM MACROS" 
.sp
To supply further detailed configuration information  for an aggregate-macro,
several item-macros are defined. Each individual item-macro clearly
specifies a particular characteristic, property or function pertinent to an
SDLC station, SNA/SDLC link, or SNA/SDLC general macros.
.sp 2
.H 3 "ADVANTAGE OF HIERARCHY" 
.sp
The principal advantage of macro hierarchy is that it provides a logical
structure. In addition, it saves coding effort. For example, each of five
characteristics common to all of fifteen SNA/SDLC stations on a link can be
specified once, in the LINE aggregate-macro, rather than in 
each of the fifteen individual PU aggregate-macros.
.sp
The characteristic need not to be identical for all of the elements at a level
to specify it at a higher level. You may code the exceptions at the lower
level; any characteristic you code at the lower level automatically overrides
the characteristic specified at the previous higher level. If, for example,
only
ten of the fifteen stations mentioned previously have the same characteristics
in common, you could still specify that characteristic in the LINE 
level-macro, then you would specify the differing characteristics in the
PU level-macros for the five exceptional stations.
.sp 2
.SK 0
.H 2 "CONTROL DIRECTIVES"
.sp 2
This section describes those statements which primary function is the
controlling of the print-out of the configuration parameter listing.
A configuration parameter listing is the listing of all the resulting
functions and characteristics of an SNA/SDLC interface in a summary and
easily-readable form on the user's ASCII terminal.
.sp 2
.H 3 "PRINT/NOPRINT" 
.sp
Syntax:  PRINT
  
         NOPRINT
.sp
.VL 5
.LI Default:
PRINT
.LI Description: 
Turn on/off the configuration
parameter listing switch.  The user can insert these
statements any places in a Tymfile.
If none of these two statements is coded before any other
configuration statements, the configuration parameter listing for those
statements are listed on the terminal.
.sp
.LI Notes:
No affects on the regular assembly listing.
.br
No affects on the BEGINTYM and ENDTYM statements.
.sp
.LE
.SK 0
.H 3 "BEGINTYM" 
.sp
Syntax:  BEGINTYM
.sp
.VL 5
.LI Default:
None
.LI Description:
This statement denotes the begining of a Tymfile, and prints
the title of the configuration parameter listing with the version number and
the revision level.
If this statement is omitted, then no configuration
parameter listing
title is printed.
.sp
.LI Notes:
It is strongly recommended that this statement be coded 
as the 'FIRST' statement in an SNA/SDLC interface Tymfile.
.sp
.LE
.sp 2
.H 3 "ENDTYM"
.sp
Syntax:  ENDTYM
.sp
.VL 5
.LI Default:
None
.LI Description:
This statement denotes the end of a Tymfile, and triggers the
checking procedures for a consistent system configuration for this SNA/SDLC
interface. A final section of the configuration parameter listing which
contains consistency checking messages will be printed, if any in-consistency
existed in the SNA/SDLC interface Tymfile.
If this statement is omitted, then the consistency checking
procedures are bypassed. 
.sp
.LI Notes:
It is strongly recommended that this statement be coded as the last
statement in an SNA/SDLC interface Tymfile.
.sp
.LE
.SK 0
.H 2 "NETWORK AND ISIS STATEMENTS" 
.sp 2
This section describes those statements which primary purpose is to
specify the internal constraints and characteristics of an SNA/SDLC interface.
These internal constraints and characteristics are pertinent to the network
technology employed inside the TYMNET or the system rules related to the ISIS
system. Here, ISIS (which stands for the Internally Switched Interface System)
is a system which contains a set of rules as to how the different interfaces
are to be constructed, and how they are to communicate with each other. For
more detailed information about ISIS, please see ISIS-II Internally
Switched Interface System REFERENCE MANUAL. Also, please
be noted that the SNA/SDLC interfaces are only compatible with  the
ISIS-II system.
.sp 2

.H 3 "PVCTIMER"

.VL 5

.LI
Syntax: PVCTIMER(tvalue)

.VL 5
.LI
tvalue = waiting time in seconds
.LI
radix: decimal
.LI
range: 30 -3600 seconds
.LI
defaults: 60 seconds
.LE
.LI
Level: This statement must be defined on the system level.
.LI
Description: This statement specifies the waiting time
required before a zapped circuit can be re-built.
.LI
Dependencies: This statement should be used only for
DLC support. For PS support using automatic SVCs, a 
pre-set timer is used and this macro would have no effect
on that.

.LE




.H 3 "SIOVER" 
.sp
Syntax: SIOVER(arg)
  
.VL 5
arg = 'A','B','C','D','E','F'..etc. 
.LE
.sp
.VL 5
.LI Default:
The default value is 0 (NO new sio micro code version)
.LI Description:
This statement specifies sio micro code version.
.sp
.LE
.sp 2
.H 3 "FREEZE" 
.sp
Syntax: FREEZE(arg)
  
.VL 5
arg = YES, or NO 
.LE
.sp
.VL 5
.LI Default:
If none of FREEZE statements is specified, then the
SNA/SDLC interface
restarts immediately, should a crash happen.
.LI Description:
This statement specifies whether the SNA/SDLC interface should
stop, should a crash occur.
.LI Notes:
A 'crash' is a mechanism implemented in the 
SNA/SDLC interface to trap either the hardware or software problems. After a
'crash' occurred and the SNA/SDLC interface frozen, the frozen SNA/SDLC
interface code could be dumped into a disk file or directly 'looked' into by a
qualified network analyst or network developper to analyze and debug the
trapped problem.
.sp
.LE
.SK 0
.H 3 "TIMEZONE" 
.sp
Syntax: TIMEZONE(t)
  
.VL 5
t = -23d to 23d 
.LE
.sp
.VL 5
.LI Default:
If this statement is omitted, then the default
time-zone is Pacific Standard Time(-8d).
.LI Description:
This statement specifies the necessary correction
value which
should be the time-zone correction factor from coordinated universal time.
For example, the time-zone correction value for PACIFIC STANDARD TIME is -8d.
.sp
.LE
.sp 2
.H 3 "ISIRING" 
.sp
Syntax: ISIRING(n)
  
.VL 5
n = is IRSIZE
.LE
.sp
.VL 5
.LI Default:
The default values for IRSIZE is 4092d.
.LI Description:
IRSIZE is the size of input ring for the
internal ISIS dispatcher logic respectively. This value should be a 
multiple of four. The recommended ring size is the total number of input
characters that may be expected to be received from 
the network in any one second period.
.sp
.LE
.sp 2
.H 3 "BUFSIZE" 
.sp
Syntax: BUFSIZE(n)
  
.VL 5
n = is a value in bytes and must be greater that 8d
.LE
.sp
.VL 5
.LI Default:
If this statement is omitted, then the default size is 80d bytes.
.LI Description:
This statement defines the buffer size for internal
buffers.
The size of the buffer should be selected to best utilize the available
memory spaces.
.sp
.LE
.SK 0
.H 3 "ACTHST" 
.sp
Syntax: ACTHST(n)
  
.VL 5
n = is an accounting host # between 1 and 99999d.
.LE
.sp
.VL 5
.LI Default:
There is no default.
.LI Description:
This statement specifies the accounting host # for the
SNA/SDLC interface (required only when the interface contains outgoing
circuits).
.sp
.LE
.sp 2
.H 3 "ISORING" 
.sp
Syntax: ISORING(n)
  
.VL 5
n = is ORSIZE
.LE
.sp
.VL 5
.LI Default:
The default value for and ORSIZE is 4092d.
.LI Description:
ORSIZE is the size of 
output ring for the
internal ISIS dispatcher logic respectively. This value should be a 
multiple of four. The recommended ring size is the total number of
output characters that may be expected to be transmitted
to the network in any one second period.
.sp
.LE
.sp 2
.H 3 "SNAFEATURE" 
.sp
Syntax: SNAFEATURE(string)
  
.VL 5
string = is HDSP.
.LE
.sp
.VL 5
.LI Default:
If this statement is omitted, then the default is None.
.LI Description:
This statement specifies SNA features which the interface must
support. HDSP specifies virtual DSP host and TDSP specifies virtual DSP
terminal.
The size of the buffer should be selected to best utilize the available
memory spaces.
.sp
.LE
.H 3 "OPTION" 
.sp
Syntax: OPTION(string1,string2)
  
.VL 5
string1 = is one of the currently implemented options,
and string2 is YES or NO.
.LE
.sp
.VL 5
.LI Default:
Default is NO for BNDNTF and FCNGRP options.
.br
Default is YES for KBRTSW option.
.br 
Default is NO for RSHTSW opption.
.br
Default is YES for UNBNDNS option.
.LI Description:
This statement specifies some of the available processing
options for SNA interface.
.sp 2
BNDNTF YES option directs the interface to reject BIND with -845 if
there is no Virtual Circuit for this LU and then issue NOTIFY when
the circuit is built. It is recom.LEed to use this option in
conjuction with "long" ACTLU response (the string for PACTLU macro
100D010100850000000C06010001000000).
.sp
BNDNTF NO option directs the interface to reject BIND with -80A.
.sp 2
FCNGRP option is applicable to LU type 3 (printer) only.
.sp
FCNGRP YES option directs the interface to apply Flow Control with
negative RSP.
.sp
FCNGRP NO option directs the interface to apply no RSP/+RSP Flow
Control.
.sp 2
KBRTSW YES option specifies the need to check the keyboard restore bit
in the 3270 WCC before changing direction. This function is required
for VHR and VTI options.
.sp
KBRTSW NO option will ignore the keyboard restore bit.
.sp
RSHTSW YES option directs the HIF to send RSHUT to the host when an abnormal 
disconnect has occurred during an LU-to-LU session.
.sp
RSHTSW NO option directs the HIF to send TERMSELF to the host when an
abormal disconnect has occuurred during an LU-SSCP session.
.sp
UNBDNS YES option causes the HIF to disconnect the network circuit after an 
UNBIND request is received from the host; the LU-to-LU session is 
disconnected. If the user needs to access another application inthe host 
after disconnection, the user must log in. Functions in conjunction with the
RETAIN macro.
.sp
UNBDNS NO option causes the HIF not to clear the network circuit after the 
UNBIND request is received from the host.
.sp
.LE
.H 4 "OPTION(ONTIME,t)" 
.sp
Syntax: OPTION(ONTIME,t)
  
.VL 5
ONTIME = is a keyword and t can be any positive
decimal value 1 to  255 with second as unit.
.LE
.sp
.VL 5
.LI Default:
2 seconds
.LI Description:
Specifies the period of time DSR must be raised before the SNA
TIF considers DSR to be active. Applies to all dial-up lines in a slot.
.sp
.LE
.SK 0
.H 2 "GENERAL STATEMENTS" 
.sp 2
This section describes all the statements that
belong to the same category, namedgroup, which
is the first level in the SNA/SDLC interface configuration macro hierarchy.
.sp 2
.H 3 "GENERAL" 
.sp
Syntax: GENERAL
.sp
.VL 5  
.LI Default: 
The user may choose the option to define all the lines separately.
.LI Description:
This statement denotes the beginning of an aggregate of
item-macros which may be common to all the lines under this group.
.sp
.LE
.sp 2
.H 3 "GPRIMARY" 
.sp
Syntax: GPRIMARY
.sp
.VL 5  
.LI Default: 
If not overrided at link level, default for this slot is primary.
.LI Description:
This statement specifies that the link protocol for this slot is primary.
.sp
.LE
.sp 2
.H 3 "GSECONDARY" 
.sp
Syntax: GSECONDARY
.sp
.VL 5  
.LI Default: 
None.
.LI Description:
This statement specifies that the link protocol for this slot is
secondary.
.sp
.LE
.SK 0
.H 3 "GHOST" 
.sp
Syntax: GHOST(HOST#,MAXCRT,MAXPRT)
.sp
Argument(s):
.VL 5
.LI
                HOST# = Tymnet host #
                  radix: decimal
                  range: 1 to 5 digits
                  default: none
.LI
.sp
                MAXCRT = # of concurrent display stations for this host
                  radix: decimal
                  range: 0<=MAXCRT<=# of LUs genned for this host<=256
                  default: none
.LI
.sp
                MAXPRT = # of concurrent printer devices for this host
                  radix: decimal
                  range: 0<=MAXRPT<=# of LUs genned for this host<=256
                  default: none
.sp
.LI Level(s):
Define on group level only. Do not define on Line, PU,
or LU levels.
.sp
.LI Description:
GHOST is a group level macro specifying the SNA host for 
all the SECONDARY lines within the group as well as defining the number
of concurrent LUs that are available to this group at any given time.
MAXCRT and MAXPRT are used to break down the LU allocation within a given
host# by setting quotas for concurrent display stations and printers.
These quotas will then be used by the SNA HIF during the circuit building 
procedure to determine if a logon request could be permitted or not.
.sp
If this statement is omitted in the group level, a HOST definition must
be present at the LINE level for each SECONDARY line.
.sp
.LE
Message(s):
.DS
     *** ERROR 00 ***  ;If any one of the arguments is not decimal
     *** ERROR 02 ***  ;If any one of the arguments is out of range
     *** ERROR 05 ***  ;If any one of the arguments is missing
     *** ERROR 07 ***  ;If GHOST is not defined on the group level
.DE
.SK 0
.H 3 "GSPEED" 
.sp
Syntax: GSPEED(n)
  
.VL 5
n = 2400,4800,8000,9600,19.2k,56k 
.LE
.sp
.VL 5
.LI Default:
If this statement is omitted, the default line speed is
9600d.
.LI Description:
This statement specifies the line transmission
speed for
all the lines within this group. This value is used internally to calculate
certain hardware time-out characteristics. For a specified line speed, it
still may be connected to lines with higher line speeds; however, it must not
be connected to lines with lower line speeds.
.sp
.LE
.sp 2
.H 3 "GDATAMODE" 
.sp
Syntax: GDATAMODE(arg)
  
.VL 5
arg = HALF, HALFDUPLEX, FULL, or FULLDUPLEX 
.LE
.sp
.VL 5
.LI Default:
The default mode is
half-duplex.
.LI Description:
This statements specify the data transmission mode
is either
full-duplex or half-duplex mode. Here the mode is the mode of 
data transmission
(SDLC protocol) ; it is not the mode of the transmission facility.
.sp
.LE
.SK 0
.H 3 "GDIAL" 
.sp
Syntax: GDIAL(option)
  
.VL 5
.LI
option = can be YES or NO.
.VL 5
.LI 
YES = dialup support enabled: the interface raises DTR to signal host when
call arrives.
.LI 
NO = dialup support disabled
.LE
.LE
.VL 5
.sp
.LI Default:
The default value is 'NO'.
.LI Description:
The GDIAL macro specifies whether the line(s)
is (are) going to support dialup. If "YES" is specified, the disconnection
logici is enabled for link level inactivity timeout and link retries.
This macro applies only to terminal lines.
.sp
.LE
.sp 2
.H 4 "GLDSCTM" 
.sp
Syntax: GLDSCTM(t)
.sp  
.VL 5
.LI
t = can be from 1 to 255 with second as unit.
.LE
.sp
.VL 5
.LI Default:
5 seconds
.LI Description:
Sets the number of seconds DTR is dropped after DSR 
is dropped by the modem.
.sp
.LE
.sp 2
.H 4 "GINACTM" 
.sp
Syntax: GINACTM(t)
  
.VL 5
.LI
t = can be from 1 to 32767 with minute as unit.
.LE
.sp
.VL 5  
.LI Default:
0.
.LI Description:
If no SDLC information frames are exchanged for the time duration
specified, the link is disconnected.
.LI Notes:
This macro applies to DIAL line only.
.sp
.LE
.spH 3 "GDTRDSR (or GSWITCHED)" 
.sp
Syntax: GDTRDSR(option) or  GSWITCHED(option)
  
.VL 5
.LI 
option = can be YES or NO.
.VL 5
.LI 
YES = DTR/DSR signalling required.
.LI 
NO = DTR/DSR signalling not required.
.LE
.sp
.LE
.VL 5
.LI Default:
If this statement is omitted, the default is DTR/DSR
signal handshaking required.
.LI Description:
Macro GSWITCHED is re-named to GDTRDSR from SNA 01.05 on.
This macro specifies whether it is necessary to periodcally check a line's DSP.
.LI Notes:
This statement for a line cannot be specified to "NO" if its DIAL 
option is "YES".
This macro applies to both terminal and host lines.
.sp
.LE
.sp 2
.H 3 "GRUCHAIN" 
.sp
Syntax: GRUCHAIN(option)
  
.VL 5
.LI
option = can be YES or NO.
.VL 5
.LI 
YES = Single RU chain only, Multiple RU chains disallowed
.LI 
NO = Multiple RU chains allowed
.LE
.LE
.VL 5
.sp
.LI Default:
If this statement is omitted, the default is multiple RU chains
allowed.
.LI Description:
This macro specifies whether the single RU chain is requested
by the interface.
.sp
.LE
.sp 2
.H 3 "GRSPCLEAR" 
.sp
Syntax: GRSPCLEAR(option)
  
.VL 5
.LI
option = can be YES or NO.
.VL 5
.LI
YES = CLEAR response required by the host
.LI
NO = CLEAR response not required by the host
.LE
.LE
.VL 5
.sp
.LI Default:
Default is Yes.
.LI Description:
This macro specifies whether the CLEAR response is required by
the host.
.sp
.LE
.SK 0
.H 3 "GRTSCTS" 
.sp
Syntax: GRTSCTS(arg)
  
.VL 5
arg = YES or NO 
.LE
.sp
.VL 5
.LI Default:
Default is YES.
.LI Description:
This statement specifies whether the
RTS/CTS handshaking sequences should be performed whenever a group of
contiguous frames are transmitting to external system.
.LI Notes:
Please refer to
RS-232-C document for a  description of these two electrical
signals.
.sp
.LE
.sp 2
.H 3 "GREPLYTO" 
.sp
Syntax: GREPLYTO(t)
  
.VL 5
t = time, in seconds 
.LE
.sp
.VL 5
.LI Default:
If this statement is omitted, the default value
is 3 seconds.
.LI Description:
This statement specifies the reply timeout
value, in seconds, for the lines in this line group. If at the
expiration of this interval the SNA/SDLC interface has not received from
the external system a response to polling, or to message text, it makes no
further attempt to  communicate with the external system. Instead, it
indicates that a timeout error has occurred.
.sp
.LE
.sp 2
.H 3 "GFRAMESIZE" 
.sp
Syntax: GFRAMESIZE(n)
  
.VL 5
n = size in bytes 
.LE
.sp
.VL 5
.LI Default:
If this statement is omitted, the default value
is 270d bytes.
.LI Description:
This statement specifies the maximum size
in bytes a single frame could be transmitted or received within 
the links of this line group.
.sp
.LE
.SK 0
.H 3 "GWINDOWSIZE" 
.sp
Syntax: GWINDOWSIZE(n)
  
.VL 5
n = 1, 2, 3, 4, 5, 6, 7 frames 
.LE
.sp
.VL 5
.LI Default:
If this statement is omitted, the default value
is 7 frames.
.LI Description:
This statement specifies the maximum number
of un-acknowledged frames that could be outstanding at any instance.
.sp
.LE
.sp 2
.H 3 "GISTATUS" 
.sp
Syntax: GISTATUS(string)
  
.VL 5
string = ACTIVE or INACTIVE 
.LE
.sp
.VL 5
.LI Default:
This statement may be omitted, then the default is active.
.LI Description:
This statement specifies whether the station(s)
in this slot should be active or inactive when this
SNA/SDLC interface is initially loaded into the ENGINE.
.sp
.LE
.sp 2
.H 3 "GRCVSIOFR" 
.sp
Syntax: GRCVSIOFR(srfrn)
  
.VL 5
srfrn = number of frames 
.LE
.sp
.VL 5
.LI Default:
The default value is 8 frames allocated for each station.
.LI Description:
This statement is used to specify the SIO buffer
room in number of frames allocated for each SNA/SDLC station in
receiving direction.
.sp
.LE
.sp 2 
.H 3 "GPUS.QACTPU" 
.sp
Syntax: GPUS.QACTPU(args)
  
.VL 5
args = data for request ACTPU in hex format 
.LE
.sp
.VL 5
.LI Default:
No default.
.LI Description:
To define the canned data for request ACTPU.
.sp
.LE
.SK 0
.H 3 "GPU.ETYPE" 
.sp
Syntax: GPU.ETYPE(n)
  
.VL 5
n = PU type 1,2 or 4 
.LE
.sp
.VL 5
.LI Default:
2.
.LI Description:
To specify the PU's external type for the specified
GPU.
.sp
.LE
.sp 2
.H 3 "GPU.QDACTPU" 
.sp
Syntax: GPU.QDACTPU(args)
  
.VL 5
args = data for DACTPU in hex format 
.LE
.sp
.VL 5
.LI Default:
No default.
.LI Description:
To define the canned data for request DACTPU.
.sp
.LE
.sp 2
.H 3 "GDSIOTP"

Syntax: GDSIOTP(arg)

.VL 5
.LI where
arg = D.TYP0, D.TYP1
.br
For SIO daughter card version A to G, spedify D.TYP0
For SIO daughter card version H and later, specify D.TYP1
.sp
.LI Default:
Default is D.TYP0
.LI Description:
To specify the SIO daughter card type.
.sp
.LE
.SK 0
.H 3 "GPU.ITYPE" 
.sp
Syntax: GPU.ITYPE(n)
  
.VL 5
n = PU type 1,2 or 4 
.LE
.sp
.VL 5
.LI Default:
2.
.LI Description:
To specify the PU's internal type for the specified
GPU.
.sp
.LE
.sp 2
.H 3 "GPU.PACTPU" 
.sp
Syntax: GPU.PACTPU(args)
  
.VL 5
args = data for response ACTPU in hex format 
.LE
.sp
.VL 5
.LI Default:
No default.
.LI Description:
To define the canned data for response ACTPU.
.sp
.LE
.sp 2
.SK 0
.H 3 "GPU.PLABEL"
.sp
Note: this macro is available starting from release 1.02.
.sp
Syntax: GPU.PLABEL(labl)
  
.VL 5
labl = one byte of HEXADECIMAL number 
.LE
.sp
.VL 5
.LI Default:
There is no default value for a label.
.LI Description:
This statement specifies the default label for
SNA/SDLC stations. If this or any other LABEL macro is specified
then labels rather than pollining addresses are used to match
CU and device information for a specific CRM.
Currently, this is the only way to have specific CRM's from BSC or
CMT connections.
Note that labels (both PU and LU) do not have to be unique.
If they are the same for a few PU's and/or LU's, this group of LU's
is treated as a pool for CRM purposes.
.sp
.LI
The label must be coded
in hexadecimal value. For example, if the label is '40' in hexadecimal
the statement should be GPU.PLABEL(40),
and if the label is 'C1' in
hexadecimal the statement should be GPU.PLABEL(0C1).
Please pay attention to the leading zero in the last example.
.sp
.LE
.sp 2
.H 3 "GLU.SRQ"
.sp
Syntax: GLU.SRQ(args)
  
.VL 5
args = YES or NO 
.LE
.sp
.VL 5
.LI Default:
The default is NO
.LI Description:
To specify default SYS/RQ function.
.sp
.LE
.sp 2
.H 3 "GLU.QACTLU"
.sp
Syntax: GLU.QACTLU(args)
  
.VL 5
args = data for request ACTLU in hex format 
.LE
.sp
.VL 5
.LI Default:
No default.
.LI Description:
To define the canned data for request ACTLU.
.sp
.LE
.SK 0
.H 3 "GLU.TYPE"
.sp
Syntax: GLU.TYPE(n)
  
.VL 5
n = LU type (LU type 2 or 3) 
.LE
.sp
.VL 5
.LI Default:
2o.
.LI Description:
To specify the LU type for the specified LU.
.sp
.LE
.sp 2
.H 3 "GLU.QDACTLU"
.sp
Syntax: GLU.QDACTLU(args)
  
.VL 5
args = data for DACTLU in hex format 
.LE
.sp
.VL 5
.LI Default:
No default.
.LI Description:
To define the canned data for request DACTLU.
.sp
.LE
.sp 2
.SK 0
.H 3 "GLU.VHR"
.sp
Syntax: GLU.VHR(args)
  
.VL 5
args = YES or NO 
.LE
.sp
.VL 5
.LI Default:
The default is NO.
.LI Description:
To define the default for LU.VHR parameter.
.sp
.LE
.sp 2
.H 3 "GLU.VTI"
.sp
Syntax: GLU.VTI(args)
  
.VL 5
args = YES or NO 
.LE
.sp
.VL 5
.LI Default:
The default is NO.
.LI Description:
To define the default for LU.VTI parameter.
.sp
.LE
.sp 2
.H 3 "GLU.PACTLU"
.sp
Syntax: GLU.PACTLU(args)
  
.VL 5
args = data for response ACTLU in hex format 
.LE
.sp
.VL 5
.LI Default:
No default.
.LI Description:
To define the canned data for response ACTLU.
.sp
.LE
.SK 0
.sp 2
.H 3 "GLU.LLABEL"
.sp
Note: this macro is available starting from release 1.02.
.sp
Syntax: GLU.LLABEL(labl)
  
.VL 5
labl = one byte of HEXADECIMAL number 
.LE
.sp
.VL 5
.LI Default:
There is no default value for a label.
.LI Description:
This statement specifies the default label for
SNA/SDLC logical units. If this or any other LABEL macro is specified
then labels rather than pollining addresses are used to match
CU and device information for a specific CRM.
Currently, this is the only way to have specific CRM's from BSC or
CMT connections.
Note that labels (both PU and LU) do not have to be unique.
If they are the same for a few PU's and/or LU's, this group of LU's
is treated as a pool for CRM purposes.
.sp
.LI
The labels must be coded
in hexadecimal value. For example, if the label is '40' in hexadecimal
the statement should be GLU.LLABEL(40),
and if the label is 'C1' in
hexadecimal the statement should be GLU.LLABEL(0C1).
Please pay attention to the leading zero in the last example.
.sp
.LE
.SK 0
.H 3 "GLU.COLOR"
.sp
Syntax: GLU.COLOR(args)
  
.VL 5
args = YES or NO 
.LE
.sp
.VL 5
.LI Default:
Default is 'NO' (for SNA/SDLC)
.LI Description:
To specify the color attribute for the specified LU.
.sp
.LE
.sp 2
.H 3 "GLU.SIZE"
.sp
Syntax: GLU.SIZE(n)
  
.VL 5
n = screen size in decimal value 
.LE
.sp
.VL 5
.LI Default:
Default is 1920 decimal (80 columns,24 rows)
.LI Description:
To specify the screen size for the specified LU.
.sp
.LE
.sp 2
.H 3 "GLU.BIND"
.sp
Syntax: GLU.BIND(args)
  
.VL 5
args = data for request BIND in hex format 
.LE
.sp
.VL 5
.LI Default:
No default.
.LI Description:
To define the canned data for request BIND.
.sp
.LE
.SK 0
.H 3 "GLU.UNBIND"
.sp
Syntax: GLU.UNBIND(args)
  
.VL 5
args = data for request UNBIND in hex format 
.LE
.sp
.VL 5
.LI Default:
No default.
.LI Description:
To define the canned data for request UNBIND.
.sp
.LE
.sp 2
.H 3 "GLU.ITIMOUT"
.sp
Syntax: GLU.ITIMOUT(n)
  
.VL 5
n = is from 0 to 60 minutes.
.LE
.sp
.VL 5
.LI Default:
If this statement is omitted, then the default is 0 (no inactivity
timeout).
.LI Description:
This statement defines the value of inactivty timeout.
The range is 0 thru 60 minutes.
.sp
.LE
.sp 2
.H 3 "GLU.ATIMOUT"
.sp
Syntax: GLU.ATIMOUT(n)
  
.VL 5
n = is from 0 to 60 seconds.
.LE
.sp
.VL 5
.LI Default:
If this statement is omitted, then the default is 0 (disconnect
immediately if DACTLU was received).
.LI Description:
This statement defines the timeout before the application is
disconnected.
.sp
.LE
.SK 0
.H 3 "GLU.TRAILER"

Syntax: GLU.TRAILER(arg)

.VL 5
arg = "AP.ETX", "AP.ETB" or "AP.ITB" 
.LE
.sp
.VL 5
.LI Default:
Default is ETX
.LI Description:
To specify the LU DSP trailer for the LU's for the slot.
.sp
.LE
.sp 2
.sp
Syntax: DNS.KEY(gkey)
  
.VL 5
gkey = pf keys or pa keys 
.LE
.sp
.VL 5
.LI Default:
There is no default value for LU device. 
.LI Description:
This statement specifies the function key or program
key used to enter the network service mode for the specified LU.
.sp
.LE
.sp 2
.H 4 "DNS.MENU" 
.sp
Syntax: DNS.MENU(string1,string2)
.sp
 
.VL 5
string2 = can be either EBCDIC or ASCII.
.LE
.br
For 
string1, please see DNS.MENU statement described in earlier section.
.sp
.VL 5
.LI Default: 
If string2 is omitted, string1 must be coded in ASCII.
.LI Description:
This statement specifies that the code set used to
code string1 is  EBCDIC or ASCII.
.sp
This statement is a 'GENERAL LEVEL' macro statement and is used
in defining network service screen.
.sp
.LE
.sp 2
.H 4 "DNS.WORD" 
.sp
Syntax: DNS.WORD(string1,string2)
.sp
 
.VL 5
string2 = can be either EBCDIC or ASCII.
.LE
.br
For 
string1, please see DNS.WORD statement described in earlier section.
.sp
.VL 5
.LI Default: 
If string2 is omitted, string1 must be coded in ASCII.
.LI Description: 
This statement specifies that the code set used to
code string1 is  EBCDIC or ASCII.
.br
This statement is a 'GENERAL LEVEL' macro statement and is used
in defining network service screen key word.
.sp
.LE
.SK 0
.sp 2
.H 3 "DLG.CALL"
.VL 5
.LI
Syntax: DLG.CALL(arg)
.VL 5
.LI
arg = direction of SVC and/or PVC
.LI
range: "IN" or "OUT"
.LI
default: If the line is  secondary the default is "IN" and if primary the default is 
"OUT".

.LE
.LI
Level: Define on the general logon level.
.LI
Corresponding macro: PLG.CALL 
.LI
Description: This statement defines whether logon entries
are outgoing or incoming. The outgoing side is the circuit builder.
The incoming side is the circuit receptor.
.LI
Dependencies: This statement should only be defined for SNA/DSP and X25
dialects with DLC level of support. SVCs using the DSP dialect will ignore this statement if it
is defined. For DSP, the primary is always the outgoing side and
the secondary is always the incoming side. For logon entries with PS support, the
primary is always outgoing and the secondary is always incoming.
.LI
Suggested Setting: It is suggested to define the primary logon entries as the circuit builders,
i.e. outgoing, and the secondary logon entries as circuit receptors or incoming. 
This is consistent with older SNA versions.
.sp
For logon entries with PS level of support, this macro is ignored.
.sp
.LE
.H 3 "DLG.CGROUP"

.VL 5

.LI
Syntax: DLG.CGROUP(group,group ...)

.VL 5
.LI
group = cug group number 
.LI
radix: decimal
.LI
range: 0 through 15
.LI
default: none
.LE
.LI
Level:  Define on the general logon level.
.LI
Corresponding macro: PLG.CGROUP
.LI
Description: Define the Closed User Groups (CUGs) that this logon subscribes to.
The GCUGROUP macro defines all of the different groups and their codes for
the entire interface. The DLG.CGROUP macro specifies which ones this particular
DLG.ENTRY is a member of. More than one CUG  group may be subscribed to. In this
case, each CUG subscribed to will be defined by this macro in preferential order.
The first CUG in the list is the one used for an outgoing call.

.LI
Dependencies: CUG subscription is currently only for SVC logon entries using the
X.25 dialect. GCUGROUP macro should already have been defined. 
.LI
Suggested Setting: All CUG groups that the SVC is a member of should be defined
with this macro. 

.LE


.H 3 "DLG.COLOR"

.VL 5

.LI
Syntax: DLG.COLOR(arg)
.VL 5
.LI
arg = color capability on the destination device
.LI
range : yes or no
.LI
default: no
.LE
.LI
Level: Define on the general logon level.
.LI
Corresponding Macros: PLG.COLOR , LG.COLOR
.LI
Description: This statement defines the desired color capability on the destination
device.
.sp
Dependencies: This macro should only be defined for PS connections.
.LI
Suggested Setting: If the destination of this logon entry is a device
with color capability, then set this macro to "YES". Otherwise set this macro
to "NO".
.sp

.LE

.H 3 "DLG.CRM"

.VL 5

.LI
Syntax: DLG.CRM(arg)
.VL 5
.LI
arg = logon crm mode
.LI
radix : decimal
.LI
range : 1 through 4
.LI
default: 1
.LE
.LI
Level: Define on the general logon level.
.LI
Corresponding Macros: PLG.CRM , LG.CRM
.LI
Description: This statement defines the desired crm mode for the current logon entry.
.sp
Dependencies: This macro should only be defined for PS connections.
.LI
Suggested Setting:
.sp

.LE

.H 3 "DLG.CUG"

.VL 5

.LI
Syntax: DLG.CUG(arg1,arg2)

.VL 5
.LI
arg = 
arg1 is INC (for incoming access) or blank (for no incoming access),
arg2 is OUT (for outgoing access) or blank (for no outgoing access).
.sp
Default: no CUG subscription
.LE
.VL 5
.LI
Example: DLG.CUG(INC,OUT) - subscriber with incoming and
outgoing access.
.sp
DLG.CUG(OUT) - subscriber with just outgoing access.
.sp
DLG.CUG(INC) - subscriber with just incoming access.
.LE
.LI
Level:  Define on the general logon level.
.LI
Corresponding macro: PLG.CUG
.LI
Description: This statement is used to define this logon entry's closed
user group access and subscription. If this statement is defined,
then the valid CUG codes are as defined by DLG.CGROUP and GCUGROUP macros.
.LI
Dependencies: CUG subscription is currently only for SVC logon entries using X.25
dialect.
.LI
Suggested Setting: Set to be compatible with remote sides CUG capabilities.
.LE

.H 3 "DLG.DEFAULT"

.VL 5

.LI
Syntax: DLG.DEFAULT

.LI
Level:  Define on the general logon level.
.LI
Corresponding macro: PLG.DEFAULT
.LI
Description: This statement identifies a group of DLG level macros
as the default logon entry for the interface. 
There can only be one default logon entry, on the general level,
per interface. Other DLG.ENTRY macros can defined after the definitions 
for the DLG.DEFAULT.
.sp
Any PU which requires a logon entry definition (PLG.ENTRY), and does not have
one defined, will default to this entry. Any LU which does not not have an
entry defined (LG.ENTRY), and belongs to a PU which does not have a default
entry defined (PLG.DEFAULT), will also default to this default entry.
.sp
.LI
Dependencies: This macro does NOT follow a DLG.ENTRY macro. Instead,
the DLG.DEFAULT macro will take the place of the DLG.ENTRY macro
before other DLG definitions within this same entry. Other DLG.ENTRY
macro definitions can then follow.
.LI
Suggested Setting: If there will be LUs and PUs which will use
the exact same logon entry parameters, then the DLG.DEFAULT macros
should define this set of logon parameters once. Any LU or PU 
using this default entry will NOT have a logon entry defined.
.sp
The current SNA HIF logon entry implementation works this same way.
.LI
Example:
.sp
.nf
.ft C
  DLG.DEFAULT                 : default logon definitions
     DLG.LAYER(PS)
     DLG.DIALECT(SNADSP,DSP)  : over write DSP default
     ........                 : other DLG macros

  DLG.ENTRY(0)                : entry 0 logon definitions
  ...........                 : other DLG macros

   PU(0)                      : this PU uses default entry
   .....                      : PU level macros (no PLG.ENTRY)

     LU(0)                    : this LU uses default entry
     .....                    : LU level macros (no LG.ENTRY)

     LU(1)                    : this LU uses the default entry
     .....                    : LU level macros (no LG.ENTRY)

   PU(1)             
    PLG.ENTRY(0)               : this PU will use entry 0
.fi
.ft P
.sp

.LE
.H 3 "DLG.DIALECT"

.VL 5

.LI
Syntax: DLG.DIALECT(type,type...)

.VL 5
.LI
type = dialect type
.LI
range: "DSP", "SNADSP" and/or "X25"
.LI
default: If PS support then DSP dialect is the default. If
DLC support then X.25 dialect is the default.
.LE
.LI
Level: This statement must be defined on the general logon level.
.LI
Corresponding Macro(s): PLG.DIALECT, LG.DIALECT
.LI
Description: This macro defines which dialects, in preferential order,
will be supported by this DLG.ENTRY. When this macro is defined, this entry will support
SNA/DSP dialect (SNADSP), the DSP dialect (DSP) and/or the X.25 dialect (X25).
If this macro is not defined and this entry has PS support, then the 
default dialect is DSP using SVCs. If this macro is not defined and this entry
has DLC support, then the default dialect is X.25.
.sp
An interface which has received an incoming circuit request, a NEEDLE, will
respond with a list of dialects which the incoming side can support. Each different dialect
supported in the interface is sent in this list. The outgoing side will
choose which dialect from this list to speak over this virtual circuit 
connection. The list of dialects is defined in preferential order
by this DLG.DIALECT macro. The first dialect defined in the outgoing sides
DLG.DIALECT macro which matches one of the dialects mentioned in
the list from the incoming side, will
be chosen. This one chosen dialect will be sent back to the incoming side as the
dialect response.
.sp
.LI
Dependencies: The X.25 dialect can only
be set for connections with DLC level of support. The DSP dialect can only be set for connections
with PS level of support, AND for SVCs.
.LI
Suggested Setting: This macro should be set to all the possible dialects which
might be used by this virtual circuit. If the destination is an X.25 interface, then
the X25 dialect should be defined. If the destination is an SNA interface which
supports SNA/DSP then this dialect should be also defined. If the destination
is an SNA interface which will not support SNA/DSP then DSP should be defined.
.sp
.LI
Example:
.nf
.ft C
.sp
DLG.ENTRY(0)
 DLG.LAYER(PS)
 DLG.DIALECT(SNADSP,DSP)  :SNA/DSP dialect is the first choice,
                          :DSP dialect is the second choice.
 .........                : other DLG macros
DLG.ENTRY(1)
 DLG.LAYER(DLC)
 DLG.DIALECT(X25,SNADSP)  :X.25 dialect is the first choice,
                          :SNA/DSP is the second choice.
 .....                    : other DLG macros
.ft P
.fi
.sp

.LE


.H 3 "DLG.DNIC"

.VL 5

.LI
Syntax: DLG.DNIC(id)

.VL 5
.LI
id = destination  data network identification code
.LI
radix: decimal
.LI
no. digits: 4 digits
.LI
default: 3106 (TYMNET DNIC)
.LE
.LI
Level: Define on the general logon level.
.LI
Corresponding Macros: PLG.DNIC
.LI
Description: This statement defines the data network identification code
for the destination network. This code is used
in the called address message sent for outgoing SVCs using the X.25 dialect.
For incoming SVCs this macro is ignored if defined.
.LI
Dependencies: This statement is only required for outgoing SVCs using X.25 dialect.
.LI
Suggested Setting: Set this macro to the identification code for the 
destination network.

.LE
.H 3 "DLG.ENTRY"

.VL 5

.LI
Syntax: DLG.ENTRY(entry)
.VL 5
.LI
entry = logon entry number
.LI
radix: decimal
.LI
range: 0 through 10
.LI
default: none
.LE
.LI
Level: Define on the general logon level.
.LI
Corresponding Macros: PLG.ENTRY, LG.ENTRY
.LI
Description: This statement defines the entry number of the following logon
selection. This macro is used to define what logon entry selections are
available on the general level. This macro defines new logon entries which may be 
selected (using the PLG.ENTRY macro) by lower levels.
.sp
If the PU level selects this general logon selection, the PLG.ENTRY macro
with the same entry number (identifier), then this entry will be defined on the PU level.
If an LU would like to select this general level logon entry, then the PU
which the LU is attached to, must have the PLG.ENTRY defined and then the LU
must have the LU.ENTRY defined with the same identifier.
.LI
Example: In the following example, there is one general level entry defined
, DLG.ENTRY(0). On the PU level, this entry has been chosen with the username
modification. Also on the PU level one new entry was added, PLG.ENTRY(1).
.sp
.nf
DLG.ENTRY(0)
  DLG.PROMPT(ACCESS GATEWAY)
  DLG.MODE(PRESET)
  DLG.LOGON(0,C)
  DLG.LOGON(1,BUBBC)
  DLG.LOGON(2,SMITH"BA855"BBABRACADABRA)
  DLG.CRM(2)
  DLG.DIALECT(SNADSP,DSP)
    PU(0)
      PLG.ENTRY(0)
        PLG.LOGON(0,newuser)
      PLG.ENTRY(1)
        PLG.LOGON(0,C)
.fi
  

.LE


.H 3 "DLG.ERSP"

.VL 5

.LI
Syntax: DLG.ERSP(arg)

.VL 5
.LI
.VL 5
arg = is YES (for end-to-end responses) or NO (for local
.LE
responses).
.LE
.VL 5
.LI
Example: DLG.ERSP(YES) - VC supports end-to-end SNA responses on the
printer circuit.
.LE
.LI
Level:  Define on the general logon default level.
.LI
Corresponding Macros: PLG.ERSP and LG.ERSP
.LI
Description: This statement is used to define a general logon level default
for the mode of the native 3270 printer operation.
Two modes of operation for the
native printer are possible - HP (High Performance/limited error recovery) and
LP (Low Performance/full error recovery). The modes of operation differ in
their handling of the SNA responses. HP mode supports the local handling,
LP mode sends SNA responses end to end. This macro is new for version 5.
.LI
Dependencies: this macro affects only the native 3270 printer feature
(PS support). When used for the CRT logon entry it affects the mode
of operation of the printer associated with this CRT (if requested
by the operator).
.LI
Suggested Setting: Set to YES only if HP mode error recovery is not
sufficient.
.LI
Message(s): DLG.ERSP macro is defined at the wrong level.
.VL 5
.LI

.LE
.LE

.H 3 "DLG.LAYER"

.VL 5

.LI
Syntax: DLG.LAYER(layer)

.VL 5
.LI
layer = general layer of support 
.LI
range: "DLC" or "PS"
.LI
default: "PS"
.LE
.LI
Level: General logon level macro.
.LI
Corresponding Macros: PLG.LAYER
.LI
Description: This statement defines the layer of support which will be provided
by this DLG.ENTRY. If DLC (SNA data link control layer)
is defined, then link layer support will be supplied.
If PS (SNA presentation services layer) is defined, then support for all
SNA layers from DLC and upt to and including PS layer will be provided. Only one DLG.LAYER macro may be defined for each
DLG.ENTRY macro. 
.LI
Dependencies: Only one DLG.LAYER definition
per entry. Layer of support negotiation is currently not supported.
.LI
Suggested Setting: If service similar to the current SDLC/QLLC
extension cord service is desired, then this macro
should be set to DLC. If service similar to the current SNA interface
capabilities is desired, this macro should be set to PS.

.LE

.H 3 "DLG.LINE"

.VL 5

.LI
Syntax: DLG.LINE(line#)
.VL 5
.LI
line# = destination line number
.LI
radix: decimal
.LI
range: 0 through 15
.LI
default: none
.LE
.LI
Level: Define on the general logon level.
.LI
Corresponding Macros: PLG.LINE and LG.LINE
.LI
Description: This statement defines the destination line number for this 
logon entry. PVC logons use
this number in  PVC requests and responses. For outgoing SVC logon entries, the
destination line number is sent as part of the called address message. The destination
line number is not needed for incoming SVCs. This macro can only be
defined for logon entries set-up as preset. The destination line number is used 
slightly differently depending on which dialect is in use.
.sp
Dependencies: If the chosen dialect on the SVC connection is X.25 dialect, 
then it is  not currently necessary to define the destination line number. The 
X.25 interface, for incomig calls, uses the host number received from the outgoing side 
to attach the call to the first available SVC channel with the requested
host number. 
.sp
If the chosen dialect on the SVC connection is SNA/DSP dialect, then the
destination line number is only required for SVC outgoing DLC support logon entries.
For PS level logon entries which are SVC outgoing, the destination line
number is optional. 
.sp
If the chosen dialect on the SVC connection is DSP dialect, then the destination
line number is not required.
.LI
Suggested Setting: If an automatic logon is desired, the destination line number
along with all other required destination logon information, should be defined
for a logon entry defined as preset. 
.sp

.LE

.H 3 "DLG.LOGON"

.VL 5

.LI
Syntax: DLG.LOGON(level,username"bahost#"bbpassword)
.VL 5
.LI
level = logon level
.VL 5
.LI
radix: decimal
.LI
range: 0 through 4
.LI
default: level 0
.LE
.LI
username = valid network username
.VL 5
.LI
range: upto 32 characters long
.LI
default: none
.LE
.LI
"ba = ascii representation of ":"
.LI
host# = destination host number
.VL 5
.LI
radix: decimal
.LI
no. digits: 1 to 5
.LI
default: none
.LE
.LI
"bb = ascii representation of ";"
.LI
password = password for specified username
.VL 5
.LI
range: TYMNET valid password
.LI
default: none
.LE
.LE
.LI
Level: Define on the general logon level.
.LI
Corresponding Macros: PLG.LOGON, LG.LOGON
.LI
Description: This statement defines the logon string which should be
used during the preset logon attempt. The LEVEL parameter defines the
logon level of this logon entry. A logon level of
0 indicates this logon string is not going through a gateway. Higher levels
on the other hand, indicate that gateways are present.
.sp
USERNAME defines the username used during circuit building for outgoing
logon entries. For outgoing logon entries, this is the username used
when the circuit is built.
.sp
HOST# defines the destination host number used for this logon entry during
circuit building.
.sp
And, finally, PASSWORD defines the password used during circuit building
for outgoing logon entries.
.LI
Dependencies: This statement should be defined for logon entries defined
as outgoing SVCs and for those defined as incoming and outgoing PVCs.
If the macro is not defined at this level it could still be defined at 
lower levels. If this macro is not detected at the lower levels, however,
a warning message will be issued during assembly time to warn the users.
This warning should be ignored if the entry is defined as incoming SVC.
.LI
Example: In the following example there are 3 logon levels. Levels
0 and 1 go through intermediate gateways, and level 2 is the
final destination.
.sp
.nf
DLG.ENTRY(0)
  DLG.PRMPT(ACCESS GATEWAY)
  DLG.MODE(PRESET)
  DLG.LOGON(0,C)
  DLG.LOGON(1,BUBBC)
  DLG.LOGON(2,SMITH"BA855"BBABRACADABRA)
.fi

.LE

.H 3 "DLG.LTYPE"

.VL 5

.LI
Syntax: DLG.LTYPE(lutype)
.VL 5
.LI
lutype = destination lu type
.LI
radix : decimal
.LI
range : 1 through 3
.LI
default: 2
.LE
.LI
Level: Define on the general logon level.
.LI
Corresponding Macros: PLG.LTYPE , LG.LTYPE
.LI
Description: This statement defines the desired lu type on the destination
device.
.sp
Dependencies: This macro should only be defined for PS connections.
.LI
Suggested Setting: Set this macro to the same value as the destination
LU's LU.TYPE.
.sp

.LE

.H 3 "DLG.LUADDR"

.VL 5

.LI
Syntax: DLG.LUADDR(addr)

.VL 5
.LI
addr = destination LU address or label
.LI
radix: hexadecimal
.LI
no. digits: 2
.LI
range: -1 <= addr <= ff
.LI
default: -1
.LE
.LI
Level: Define on the general logon level.
.LI
Corresponding macros: PLG.LUADDR and LG.LUADDR
.LI
Description: This macro defines the destination LU label or LU address.
If the destination LU has a label defined, then this macro should specify
that label in hex. If there is no label defined for the destination LU,
then the lu address should be specified in this macro. However, since
the LU address is a decimal value, the hex equivalent of that address 
should be used here.
.sp
Since the DLC level of support is on a per station (PU) basis, a destination
LU address should not be defined for logon entries with DLC support.
.LI
Dependencies: Define for logon entries with PS level of support only.
.LI
Suggested Setting: Set this macro to the destination's LU label (see LU.LABEL
macro) if defined, otherwise set to the LU address
(but must convert the address to HEX before using ; see LU macro). 
.LE

.H 3 "DLG.MODE"

.VL 5

.LI
Syntax: DLG.MODE(arg)
.VL 5
.LI
arg : logon mode
.LI
range : "manual" or "preset"
.LI
default: manaul
.LE
.LI
Level: Define on the general logon level.
.LI
Corresponding Macros: PLG.MODE , LG.MODE
.LI
Description: This statement defines the logon mode for this logon entry.
If the mode is manual, all other logon definitions will be ignored for
this entry except for PROMPT macro.
.sp
Dependencies: Manual mode can only be used for entries with PS support. DLC
connections cannot be defined as manual since the circuit establishment is
always automatic.
.LI
Suggested Setting: Always define as PRESET for DLC connections. For PS
entries can define a mixture of manual and preset to allow maximum
capability during logon.
.sp

.LE

.H 3 "DLG.PUADDR"

.VL 5

.LI
Syntax: DLG.PUADDR(addr)
.VL 5
.LI
addr = destination PU address
.LI
radix: hexadecimal
.LI
no. digits: 2
.LI
default: none
.LE
.LI
Level: Define on the general logon level.
.LI
Corresponding Macros: PLG.PUADDR and LG.PUADDR
.LI
Description: This statement defines the destination PU label or PU address
for this logon entry.
.sp
For logon entries defined with DLC support, this address is included in the QLLC response
packets sent on the network. 
.LI
Dependencies: Define for logon entries with PS level of support only.
.LI
Suggested Setting: Set the destination PU address to the address defined by
either NPSI (for X.25 connections) or to the remote side's PU.LABEL macro
(if defined) otherwise to the PU.ADDR macro
(for SNA/DSP or DSP connections).

.LE

.H 3 "DLG.RVCHARGE"

.VL 5

.LI
Syntax: DLG.RVCHARGE(arg)
.VL 5
.LI
arg = reverse charge subscription status
.LI
range: "yes", "no" or "both"
.LI
default: non subscriber to reverse charge
.LE
.LI
Level: Define on the general logon level.
.LI
Corresponding macro: PLG.RVCHARGE
.LI
Description: This statement specifies whether a reverse charge request will
be accepted or not for this logon entry. If set to yes, then only  reverse charge requests are 
accepted (incoming SVCs) or sent (outgoing SVCs).
If set to no, then only SVCs without reverse charge requests are accepted 
(incoming SVCs) or sent (outgoing SVCs).
If the argument is set to both, then either type of request will be
accepted (incoming SVCs) but only reverse charge requests will 
be sent (outgoing SVCs).
.LI
Dependencies: This macro can currently only be defined for logon
entries using X.25 dialect.
.LI
Suggested Setting: Only define this macro if reverse charge is
subscribed to by both sides, incoming and outgoing. For incoming SVC logon
entries set this value to the type of requests expected from the remote side.
For outgoing SVC logon entries, set this macro to the type of request this SVC will make.

.LE

.H 3 "DLG.SIZE"

.VL 5

.LI
Syntax: DLG.SIZE(size)
.VL 5
.LI
size = destination screen size
.LI
radix : decimal
.LI
range : 480 or 1920 
.LI
default: 1920 (80 columns , 24 rows)
.LE
.LI
Level: Define on the general logon level.
.LI
Corresponding Macros: PLG.SIZE , LG.SIZE
.LI
Description: This statement defines the desired screen size on the destination
device.
This macro is only required if the destination is LU.T2.
.sp
Dependencies: This macro should only be defined for PS logon entries.
.LI
Suggested Setting: Set to screen size of destination display device.
.sp

.LE

.H 3 "DLG.TCLASS"

.VL 5

.LI
Syntax: DLG.TCLASS(xmt,rcv)
.VL 5
.LI
xmt = transmit throughput class
.LI
rcv = receive throughput class

.LI
radix: decimal
.LI
no. digits: up to 5
.LI
range: 75, 150, 300, 600, 1200, 2400, 4800, 9600, 19200, or 48000 baud
.LI
default: none
.LE
.LI
Level: Define on the general logon level.
.LI
Corresponding macros: PLG.TCLASS and LG.TCLASS
.LI
Description: This statement defines the receive and transmit throughput
classes for this SVC or PVC logon entry. For SVC logon entries,
these values are used for throughput
negotiations. By the time an SVC has the agreed upon throughput speeds, the
circuit has already been gauged. Therefore these negotiations are just
a formality to be consistent with the X.25 interface.
.sp
For PVC logon entries, these valuse are sent in the PVC request and response
as the throughput values to be used for the PVC. The receive throughput speed 
is the value used to determine what gauge character to gauge the circuit with. 
Because a PVC knows what the throughput speeds are before the NEEDLE is sent,
PVCs can use the receive throughput  to gauge the circuit. 

.LI
Dependencies: This macro can currently only be defined for PVC logon entries
or for SVC logon entries with X.25 dialect.
.LI
Suggested Setting: For PVC logon entries the transmit throughput for this side, must be equal
to the remote side's receive throughput. In addtition, this sides receive
throughput must be equal to the remote sides transmit throughput.
.sp
For SVC logon entries, xmt and rcv should be set to values equal to or lower than the line speed.

.LE

.H 3 "DLG.VC"

.VL 5

.LI
Syntax: DLG.VC(type,mode)

.VL 5
.LI
type =  circuit type
.LI
range: "PVC" or "SVC"
.LI
default: "SVC"
.LI
mode = mode of this circuit
.LI
range: "manual" or "auto"
.LI
default: "manual"
.LE
.LI

Level: This statement must be defined on the general logon level.
.LI
Corresponding macro(s): PLG.VC, LG.VC
.LI
Description: This macro defines what circuit type will be
used for this logon entry. If this macro is set to PVC, then this
entry will support permanent virtual circuits. If this macro is
set to SVC, then it will support switched virtual calls. The mode
indicates whether or not an automatic circuit initiatiation is desired.
If there is only one logon entry defined for an LU, setting the mode
to "auto" will cause the circuit to be built automatically without any
user intervention. 
.sp
.LI
Dependencies:  More than one
circuit type may not be defined per logon entry. Dialect negotiation
is not currently supported. This macro cannot be set to PVC when DSP
dialect is defined. Mode will default to manual if there is more than one
logon entry defined.
.LI
Suggested Setting: If most connections using this logon entry will
be permanent virtual circuits, then set this macro to PVC. If most of the
connections will be switched virtual calls, then set this
macro to SVC.


.LE

.H 3 "DLG.X25CHANNEL"

.VL 5

.LI
Syntax: DLG.X25CHANNEL(CH#)
.VL 5
.LI
CH# = destination channel number
.LI
radix: hexadecimal
.LI
default: none
.LE
.LI
Level: Define on the general logon level.
.LI
Corresponding Macros: PLG.X25CHANNEL
.LI
Description: This statement defines the destination X.25 channel number for this 
logon entry. PVC logons using X.25 dialect send
this number in  PVC requests and responses. 
.sp
Dependencies: This macro should only be defined for PVC logon entries with
X.25 dialect support.
.LI
Suggested Setting: Set this macro to the PCNL X.25 macro setting at the X.25
interface TYMFILE.
.sp

.LE

.H 3 "DNIC"

.VL 5

.LI
Syntax: DNIC(id)

.VL 5
.LI
id = this network's data network identification
.LI
radix: decimal
.LI
no. digits: 4 digits
.LI
default: 3106 (TYMNET DNIC)
.LE
.LI
Level: Define on the general level.
.LI
Description: This statement defines the data network identification code
for this network. TYMNET uses 3106. This code is used to check the destination
DNIC received in the called address message for incoming SVCs using SNA/DSP 
or X.25 dialects.
.LI
Dependencies: This code is not used for PVC logons.
.LI
Suggested Setting: Set this macro to the identification code for the network
the interface will reside in. Only define this macro if interface will contain
SVC with SNA/DSP or X.25 dialect type logon entries.

.LE
.H 3 "RETAIN"
.sp
Syntax: RETAIN(rcode)
  
.VL 5
rcode = reason code enclosed in the UNBIND request 
.LE
.sp
.VL 5
.LI Default:
Turned Off.
.LI Description:
To specify the UNBIND reason codes that retain the
network circuit.  All unspecified UNBIND reason codes cause the
network circuit to be disconnected.
.sp
.LE
.SK 0
.H 3 "SYS.SWITCH"

Syntax: SYS.SWITCH(swname, swval)

.VL 5
.LI where
swname = switch name
.br
swval = switch value
.sp
.LI Default:
No default.
.LI Description:
This macro can be used to set a value for a switch.
.sp
.LE
.sp 2
.H 3 "PTCHSZ"

Syntax: PTCHSZ(argh, arg0,arg1)

.VL 5
.LI where
argh = size of patch history area
arg0 = size of segment 0 patch area
arg1 = size of segment 1 patch area
.sp
.LI Default: 
No default.
.LI Description:
This macro specifies in hexadecimal bytes the patch
area sizes for the patch history area, the segment 0
patch area, and the segment 1 patch area.

.LE


.H 3 "GCUGROUP"

.VL 5

.LI
Syntax: GCUGROUP(group,dnic,code)

.VL 5
.LI
group = cug group number
.VL 5
.LI
radix: decimal
.LI
range: 0 through 15
.LI
default: none
.LE
.LI
dnic = data network identification code 
.VL 5
.LI
radix: decimal
.LI
no. of digits: 4
.LI
default: none
.LE
.LI
code = interlock code
.VL 5
.LI 
radix: hexadecimal
.LI
no. of digits: 8
.LI
default: none
.LE
.LE
.LI
Level:  Define on the general level.
.LI
Corresponding macro: none
.LI
Description: Define the Closed User Groups (CUGs) for the entire interface. The group argument 
specifies which group this CUG code will be apart of. The DNIC and interlock code
are codes which are sent by an outgoing SVC during circuit building. The incoming
SVC matches this code against the codes in it's cug group. Some CUG subscribers
have incoming only, outgoing only or both incoming and outgoing access.

.LI
Dependencies: CUG subscription is only for SVCs using X.25 dialect. The most significant
digit of the interlock code cannot be greater than 9, meaning, 9fffffff is the largest
possible interlock code.
.LI
Suggested Setting: All CUG groups and their codes that logon entries in this interface 
are members of must be defined using this macro.
.LE


.H 3 "GENTRYLIM"
.VL 5
.LI
Syntax: GENTRYLIM(count)
.VL 5
.LI
count = the number of Entry Limit
.LI
radix: decimal
.LI
range: 1 through 255
.LI
default: none
.LE
.LI
Level: Define on the general level.
.LI
Description: This statement defines the maximum number of entries of
the service order table that the primary interface makes for normal servicing
of stations on the line before it makes a special scan of the table.  
.LI
Dependencies: This statement should only be defined for the primary interfaces. This statement can only be defined for the non-switched lines.
.LI
Suggested Setting: Use your experience to define this statement.
Specifying a small GENTRYLIM count gives the primary interface more
frequent opportunities to do special servicing at the cost of
frequent interruptions to normal servicing.
.LI
Message(s):
.BL
.LI
GENTRYLIM statement has no arguement defined.
.LI
GENTRYLIM statement is defined at the wrong level.  
.LI
GENTRYLIM statement is not allowed in the secondary interface.
.LI
GENTRYLIM statement cannot be defined for the dial-up line.
.LI
GENTRYLIM count is greater than 255.
.LE
.sp

.H 3 "GFRMQA"

.VL 5

.LI
Syntax: GFRMQA(rcv,xmt)

.VL 5
.LI
rcv = receive frame quota
.LI
xmt = transmit frame quota
.LI
radix: decimal
.LI
range: 1 thru 7
.LI
default: windowsize
.LE
.LI
Level: Define on the general interface level.
.LI
Corresponding macro: FRMQA
.LI
Description: This statement specifies the buffer space in number of frames
allocated for the transmit direction for each station on all the links in
this interface.
.LI
Dependencies: This statement should be defined for the interface if
the DLC layer of support is requested for any PU. If not
defined, the default quota will be used.

.LE


.H 3 "GNUM.RETRIES"
.VL 5
.LI
Syntax: GNUM.RETRIES(m)
.VL 5
.LI
m = the number of retries
.LI
radix: decimal
.LI
range: 0 through 127
.LI
default: 7 retries
.LE
.LI
Level: 
Define on the general level.
.LI
Description: This statement defines the number of attemps, via 
retransmission, to recover from errors in any types of SDLC frames transmitted over
a link. 
The errors are Receive-Timeouts, or receiving an un-expected response to
the previously transmitted frame.
This statement is to specify the number of retries for each sequence.
.LI
Dependencies: 
.LI
Suggested Setting: Set the number of retries to provide for recovery of 
a temporary error, but with a value that does not prevent recognition 
of a permanent error.
.LI
Message(s):
.BL
.LI
GNUM.RETRIES statement is defined at the wrong level.  
.LI
GNUM.RETRIES count is greater than 127.
.LE
.sp


.H 3 "GPASSLIM"
.VL 5
.LI
Syntax: GPASSLIM(count)
.VL 5
.LI
count = the number of Pass Limit
.LI
radix: decimal
.LI
range: 1 through 7
.LI
default: 1
.LE
.LI
Level: Define on the general level.
.LI
Description: If defined in the primary interface,
this statement defines the maximum number of 
consecutive Path Information Units (PIU) or PIU segments the primary
interface sends at any one time to the secondary station. 
When the GPASSLIM count is reached, the link scheduler stops sending I frames
to the current station in the service order table, and selects the next
entry in the service order table.
.sp
If defined in the secondary interface, 
this statement defines the maximum number of consecutive Path Information
Units (PIU) or PIU segments the secondary interface sends at any time to the 
primary station.
When the GPASSLIM count is reached, the link scheduler stops sending I frames
and prepares to send a RR or RNR with the poll/final bit on.
.LI
Dependencies: This statement can only be defined for the non-switched lines.
.LI
Suggested Setting: Start with a GPASSLIM count of 1, and increase the count
as necessary. On a full duplex link, if the WINDOWSIZE is reached before
GPASSLIM in terms of transmitting I frames, the link degrades to half duplex
mode. The output scheduler stays idle until a poll can be sent.
Therefore, GPASSLIM should be defined equal to or less than the 
WINDOWSIZE.
.LI
Message(s):
.BL
.LI
GPASSLIM statement is defined at the wrong level.  
.LI
GPASSLIM statement cannot be defined for the dial-up line.
.LI
GPASSLIM count is greater than 7. 
.LE
.sp


.H 3 "GPAUS.RETRIES"
.VL 5
.LI
Syntax: GPAUS.RETRIES(t)
.VL 5
.LI
t =  time in second
.LI
radix: decimal
.LI
range: 0 through 255 seconds
.LI
default: 0 second
.LE
.LI
Level: 
Define on the general level.
.LI
Description: This statement defines the number of attemps, via 
retransmission, to recover from errors in any types of SDLC frames transmitted over
a link. 
The errors are Receive-Timeouts, or receiving an un-expected response to
the previously transmitted frame.
This statement is to specify seconds of pause between each retry
sequence.
.LI
Dependencies: 
.LI
Suggested Setting: Set the pause between retry sequences 
to provide for recovery of 
a temporary error, but with a value that does not prevent recognition 
of a permanent error.
.LI
Message(s):
.BL
.LI
GPAUS.RETRIES statement is defined at the wrong level.  
.LI
GPAUS.RETRIES timer is greater than 255.
.LE
.sp


.H 3 "GPAUSE"
.VL 5
.LI
Syntax: GPAUSE(time)
.VL 5
.LI
time = the number of tenths of a second
.LI
radix: decimal
.LI
range: 0 through 2047
.LI
default: 10 tenths of a second
.LE
.LI
Level: 
Define on the general level.
.LI
Description: This statement defines the average duration of the polling cycle
in Nomal response Mode in tenths of a second.
When this macro is used in the primary interface, it specifies the time
period for the primary interface to poll that same station again.
.sp
The polling cycle extends from the moment the primary interface services the 
first entry in the service order table to the moment polling next begins 
at the same entry. The polling cycle includes time for polling, receiving,
and transmitting to stations on the line.
If the time extended in one complete polling cycle, which is
servicing all active entries in the service order table, equals to or exceeds 
the time specified as 't' time, the next polling cycle begins immediately.
.sp
If, on the other hand, the time expended in one complete polling cycle is
less than time, the beginning of the next polling cycle is deferred 
until 'time' tenths of a second have elapsed since
the beginning of the polling
cycle. During the GPAUSE, the SDLC link is in POLL-WAIT state.
Any outgoing data ready for transmission to the secondary stations on the link
is sent during the pause.
.sp
When the GPAUSE is defined in the secondary interface, it is the time the
secondary interface can defer answering a poll from the primary station.
.LI
Dependencies: 
.LI
Suggested Setting:
The GPAUSE timer of the secondary interface must be less than the 
REPLYTO timer of the primary station. 
.LI
Message(s):
.BL
.LI
GPAUSE statement is defined at the wrong level.
.LI
GPAUSE timer is greater than 2047.
.LE
.sp

.H 3 "GQXID"

.VL 5

.LI
Syntax: GQXID(msg)

.VL 5
.LI
msg = canned QXID response information field
.LI
radix: hexadecimal
.LI
no. digits: -1 < length < 81
.LI
default: none
.LE
.LI
Level: Define on the general level.
.LI
Corresponding macro: PU.QXID
.LI
Description: This macro defines the QXID response which will be sent in response to a
received QXID command. Only  PUs configured as primary within the interface,
will use this canned message.
When this macro is defined, a QXID command received on the network side
from an X.25 HIF will not be sent to the SDLC secondary station on the link.
Instead, the canned QXID response defined by this macro is sent back to
the X.25 interface.
.LI
Dependencies: Only primary X.25 dialect PUs with DLC support will
use this macro.
.LI
Suggested Setting: When one side is NPSI this macro should be set to
the value expected by NPSI.


.LE


.H 3 "GSEQ.RETRIES"
.VL 5
.LI
Syntax: GSEQ.RETRIES(n)
.VL 5
.LI
n = the number of retry sequence 
.LI
radix: decimal
.LI
range: 0 through 127 sequences
.LI
default: 0 sequence
.LE
.LI
Level: 
Define on the general level.
.LI
Description: This statement defines the number of attemps, via 
retransmission, to recover from errors in any types of SDLC frames transmitted over
a link. 
The errors ar Receive-Timeouts, or receiving an un-expected response to the 
previously transmitted frame.
This statement is to specify the number of retry equences for the retries.
.LI
Dependencies: 
.LI
Suggested Setting: Set the number of retry sequences between retries
to provide for recovery of 
a temporary error, but with a value that does not prevent recognition 
of a permanent error.
.LI
Message(s):
.BL
.LI
GSEQ.RETRIES statement is defined at the wrong level.  
.LI
GSEQ.RETRIES count is greater than 127.
.LE
.sp


.H 3 "GSNRMPAUSE"
.VL 5
.LI
Syntax: GSNRMPAUSE(t)
.VL 5
.LI
t = the number of tenths of a second
.LI
radix: decimal
.LI
range: 0 through 255 tenths of a second
.LI
default: 10 tenths of a second
.LE
.LI
Level: 
Define on the general level.
.LI
Description: This statement defines the 
interval between each SNRM that is sent to a secondary station.
When the primary interface sends an SNRM to the secondary station,
it will wait for GSNRMPAUSE tenths of a second before declaring a polling
receive timeout.
If GSNRMPAUSE tenths of a second elapses without a UA or DM received from the
secondary station, the primary interface will check the GSNRMPAUSE timer
and retry counters (such as GNUM.RETRIES, GPAUS.RETRIES, and 
GSEQ.RETRIES) to see when and if another SNRM
should be sent to the station.
.LI
Dependencies: This statement can only be defined in the primary interface.
.LI
Suggested Setting: Set the GSNRMPAUSE to be less or equal to 10 tenths of 
a second to prevent long wait for SNRM polling response.
.LI
Message(s):
.BL
.LI
GSNRMPAUSE statement is defined at the wrong level.
.LI
GSNRMPAUSE statement is not allowed in the secondary interface.
.LI
GSNRMPAUSE timer is greater than 255. 
.LE
.sp


.H 3 "GXMTCOMPLETE"
.VL 5
.LI
Syntax: GXMTCOMPLETE(t)
.VL 5
.LI
t = the number of tenths of a second
.LI
radix: decimal
.LI
range: 0 through 2047 tenths of a second
.LI
default: 10 tenths of a second
.LE
.LI
Level: 
Define on the general level.
.LI
Description: This statement defines 
the interval for the interface to complete transmission in terms of
putting the frame in the foreground's transmit Rotor List.
.sp
The minimum value of this timer can be derived from the WINDOWSIZE, line
SPEED, and the FRAMESIZE macros.
The following formulas should be used in calculating the GXMTCOMPLETE timer.
The timer value needs to be rounded to an interger.
.sp
.ft C
.nf
.DS
                      (8 bits per char)   *   WINDOWSIZE   *   FRAMESIZE
minimum time  >=   ----------------------------------------------------------
                               line SPEED in bits per second

GXMTCOMPLETE(t)  =   t   +   minimum time

.DE
.fi
.ft P
.sp
The timer value 't' is the extra time that is to be added to 
the 'minimum time' for completing transmission.
The SNA interface will calculate the 'minimum time' during the assembly
time, only the extra time 't' needs to be defined in the sysgen tymfile.
.sp
.LI
Dependencies: This statement can only be defined in the primary interface.
.LI
Suggested Setting: One extra second is sufficient for a link speed of 9600 baud
rate.
For other link speed, use the formulas to calculate this timer value.
.LI
Message(s):
.BL
.LI
GXMTCOMPLETE statement is defined at the wrong level.
.LI
GXMTCOMPLETE statement is not allowed in the secondary interface.
.LI
GXMTCOMPLETE timer is greater than 2047 tenths of a second.
.LE
.sp

.H 3 "LOPTION"
.VL 5
.LI
Syntax: LOPTION(label, YES|NO)
.LI
Default:
.VL 5
BNDNTF NO
.LI
UNBDNS YES
.LI
FCNGRP NO
.LI
RSHTSW NO
.LI
KBRTSW YES 
.LE
.LI
Description: This statement specifies some of the available processing 
options for SNA interface.
.VL 5
.LI
BNDNTF YES option directs the interface to reject BIND with -845 if
there is no Virtual Circuit for this LU and then issue NOTIFY when
the circuit is built. It is recom.LEed to use this option in
conjuction with "long" ACTLU response (the string for PACTLU macro
100D010100850000000C06010001000000).
.LI
BNDNTF NO option directs the interface to reject BIND with -80A.
.LI
FCNGRP YES option directs the interface to apply Flow Control with
negative RSP.
FCNGRP option is applicable to LU type 3 (printer) only.
.LI
FCNGRP NO option directs the interface to apply no RSP/+RSP Flow
Control.
.LI
KBRTSW YES option specifies the need to check the keyboard restore bit
in the 3270 WCC before changing direction. This function is required
for VHR and VTI options.
.LI
KBRTSW NO option will ignore the keyboard restore bit.
.LI
RSHTSW YES option directs the HIF to send RSHUT to the host when an abnormal 
disconnect has occurred during an LU-to-LU session.
.LI
RSHTSW NO option directs the HIF to send TERMSELF to the host when an
abormal disconnect has occuurred during an LU-SSCP session.
.LI
UNBDNS YES option causes the HIF to disconnect the network circuit after an 
UNBIND request is received from the host; the LU-to-LU session is 
disconnected. If the user needs to access another application inthe host 
after disconnection, the user must log in. Functions in conjunction with the
RETAIN macro.
.LI
UNBDNS NO option causes the HIF not to clear the network circuit after the 
UNBIND request is received from the host.
.LI
.LE
.SK 0
.H 2 "LINE STATEMENTS"
.sp 2
This section describes all the statements belonging to the same category,
which is the second category in the macro hierarchy, named LINE.
.sp
The characteristics which are specified again in this level of macro
hierarchy may override the same characteristics which may have been defined
by an item-macro under GROUP level.
.sp 2
.H 3 "LINE"
.sp
Syntax: LINE(n)
.sp
Argument(s):
.VL 5
.LI 
n = line number
.br
radix : decimal
.br
range : 0 <= n < 16
.br
default : none
.sp
.LE
Level(s): Should be defined after the General statements.
.sp
.VL 5
.LI Description:
This statement specifies a link with its logical 
line (SIO logical unit) number be set to  line#. This statement also denotes
the  begining of a group of characteristics which may be applied to
the next level PU macros.
There is no default for this statement.
For each of the SIO channels (i.e. lines), there must be one LINE statement
associated with it.
.LE
.sp
Suggested setting: Lines must be defined sequentially, starting from line(0).
.sp
Message(s):
.DS
     *** ERROR 00 ***     ;If there is a radix error.
     *** ERROR 02 ***     ;If line # is out of range.
     *** ERROR 05 ***     ;If no line # defined.
     *** ERROR 08 ***     ;If line # is not in sequence.
     *** ERROR 10 ***     ;If this line has been defined.
.DE
.SK 0
.H 3 "PRIMARY"
.sp
Syntax: PRIMARY
.sp
.VL 5
.LI Default: 
If both PRIMARY and SECONDARY statements are omitted at the line level
, the default for this line is the value defined in general level.
.LI Description:
This statement specifies the SNA/SDLC line is a primary
protocol line (terminal).
.sp
.LE
.sp 2
.H 3 "PRI.MAXLU"
.sp
Syntax: PRI.MAXLU(MAXCRT,MAXPRT)
.sp
Argument(s):
.DS
                MAXCRT = # of concurrent display stations for this LINE
                  radix: decimal
                  range: 0<=MAXCRT<=# of LUs genned for this LINE<=256
                  default: none
.sp
                MAXPRT = # of concurrent printer devices for this LINE
                  radix: decimal
                  range: 0<=MAXPRT<=# of LUs genned for this LINE<=256
                  default: none
.DE
.sp
.VL 5
.LI Level(s):
Define on line level only. Do not define on Group, PU,
or LU levels.
.sp
.LI Description:
PRI.MAXLU sets quotas for the number of concurrent LUs for a
given PRIMARY line. The arguments should be set according to the needs and 
usage of this specific line only. These quotas are used during circuit 
building by the SNA TIF to determine if a logon request should be
permitted or not.
.sp
.LE
Message(s):
.DS
     *** ERROR 00 ***  ;If any one of the arguments is not a decimal 
     *** ERROR 02 ***  ;If any one of the arguments is out of range
     *** ERROR 05 ***  ;If any one of the arguments is missing
     *** ERROR 07 ***  ;If PRI.MAXLU is not defined on the Line level
     *** ERROR 08 ***  ;If a LINE macro has not been defined
     *** ERROR 08 ***  ;If LINE macro definition had an error
.DE
.SK 0
.H 3 "SECONDARY"
.sp
Syntax: SECONDARY
.sp
.VL 5
.LI Default: 
If both PRIMARY and SECONDARY statements are omitted at the line level
, the default for this line is the value defined in general level.
.LI Description:
This statement specifies the SNA/SDLC line is a secondary
protocol line (host).
.sp
.LE
.SK 0
.H 3 "HOST"
.sp
Syntax: HOST(HOST#,MAXCRT,MAXPRT)
.sp
Argument(s):
.DS
                HOST# = Tymnet host #
                  radix: decimal
                  range: 1 to 5 digits
                  default: none
.sp
                MAXCRT = # of concurrent display stations for this host
                  radix: decimal
                  range: 0<=MAXCRT<=# of LUs genned for this host<=256
                  default: none
.sp
                MAXPRT = # of concurrent printer devices for this host
                  radix: decimal
                  range: 0<=MAXPRT<=# of LUs genned for this host<=256
                  default: none
.DE 
.sp
.VL 5
.LI Level(s):
Define on line level only. Do not define on Group, PU,
or LU levels.
.sp
.LI Description:
HOST would be defined with the same type of arguments as the
GHOST, given a new host# is introduced. This statement will specify the SNA
host number for a incoming line and define quotas for concurrent display
stations and printers for this line only. These quotas will be used  during
circuit building by the SNA HIF to determine if a logon request could be
permitted or not.
.sp
.br
For a SECONDARY line, this statement should not be omitted, unless a GHOST
definition is present on the GROUP level.
.sp
.LE
Message(s):
.DS
     *** ERROR 00 ***  ;If any one of the arguments is not a decimal 
     *** ERROR 02 ***  ;If any one of the arguments is out of range
     *** ERROR 05 ***  ;If any one of the arguments is missing
     *** ERROR 07 ***  ;If HOST is not defined on the Line level
     *** ERROR 08 ***  ;If a LINE macro has not been defined
     *** ERROR 08 ***  ;If LINE macro definition had an error
.DE
.SK 0
.H 3 "SPEED"
.sp
Syntax: SPEED(n)
  
.VL 5
n = 2400, 4800, 9600, 8000, 19.2k, 56k 
.LE
.sp
.VL 5
.LI Default:
If this statement is omitted, and is not defined
in the upper GROUP level, then the default line speed is 9600d.
.LI Description:
This statement specifies the transmission speed
of this line. Please see 2.4.5 for more information.
.sp
.LE
.sp 2
.H 3 "DATAMODE"
.sp
Syntax: DATAMODE(arg)
  
.VL 5
arg = HALF, HALFDUPLEX, FULL, FULLDUPLEX 
.LE
.sp
.VL 5
.LI Default:
The default is half-duplex data mode.
.LI Description:
This statement specifies the data transmission mode (i.e.protocol).
'Half Duplex' mode is one way alternative transmission; 'Full Duplex'
mode is two way simultaneous transmission.
.sp
.LE
.sp 2
.H 3 "DIAL"
.sp
Syntax: DIAL(option)
  
.VL 5
option = can be YES or NO.
.LE

.VL 5
.LI where
YES = dialup support enabled
.br
NO = dialup support disabled
.sp
.LI Default:
The default value is 'NO'.
.LI Description:
The DIAL macro specifies whether the line is going to
support dial-up. If "YES" is specified, the disconnection logic is
enabled for link level inactivity timeout and link level retries.
this macro applies only to terminal lines.
.sp
.LE
.SK 0
.H 3 "LDSCTM"
.sp
Syntax: LDSCTM(t)
  
.VL 5
t = can be any positive decimal value from
1 to 255 with second as unit.
.LE
.VL 5
.sp
.LI Default:
5 seconds
.LI Description:
Sets the number of seconds DTR is dropped after DSR is 
dropped by the modem.
.sp
.LE
.sp 2
.H 3 "INACTM"
.sp
Syntax: INACTM(t)
  
.VL 5
t = can be any positive decimal value from
1 to  32767 with minute as unit.
.LE
.sp
.VL 5
.LI Default:
5 minutes
.LI Description:
If no SDLC information frames are exchanged for the time duration
specified, the link is disconnected. This macro applies to DIAL line only.
.sp
.LE
.sp 2
.H 3 "SWITCHED"
.sp
Syntax: DTRDSR(option) or SWITCHED(option)
  
.VL 5
option = can be YES or NO.
.LE
.VL 5
.LI YES =
DTR/DSR = signalling required
.sp
.LI NO =
DTR/DSR signalling not required
.sp
.LI Default:
The default is 'YES'.
.LI Description:
This statement specifies whether it is necessary to
periodically check a line's DSR. This statement cannot be specified to "NO"
if the DIAL option is "YES". This macro applies to both terminal and host lines.
(DTRDSR and SWITCHED are equivalent after SNA 1.05).
.sp
.LE
.SK 0
.H 3 "RUCHAIN"
.sp
Syntax: RUCHAIN(option)
  
.VL 5
.LI where
option = YES, or NO

.LI YES =
Single RU chain only, multiple RU chains disallowed
.LI NO =
Multiple RU chains allowed
.sp
.LI Default:
The default is 'NO'
.LI Description:
This macro specifies if single RU chain is required by
this line.
.sp
.LE
.sp 2
.H 3 "RSPCLEAR"
.VL 5
.sp
Syntax: RSPCLEAR(option)
  
.VL 5
.LI
option = can be YES or NO.
.VL 5
.LI 
YES = CLEAR response is required by the host
.LI 
NO = CLEAR response is not required by the host
.sp
.LE
.LE

.LI Default:
The default is 'NO'.
.LI Description:
This macro specifies if the CLEAR response is required by the
host of this line.
.sp
.LE
.sp 2
.H 3 "RTSCTS"
.sp
Syntax: RTSCTS(arg)
  
.VL 5
arg = YES, or NO 
.LE
.sp
.VL 5
.LI Default:
The default is 'YES'.
.LI Description:
This statement specifies whether the RTS/CTS
handshaking sequences should be performed during the transmissions of link
frames. For
more information, please see 2.4.9.
.sp
.LE
.H 3 "REPLYTO"
.sp
Syntax: REPLYTO(t)
  
.VL 5
t = time in seconds 
.LE
.sp
.VL 5
.LI Default:
3 seconds
.LI Description:
This statement specifies the reply timeout value,
in seconds, for this link. For more information , please
see 2.4.10.
.sp
.LE
.sp 2
.H 3 "FRAMESIZE"
.sp
Syntax: FRAMESIZE(n)
  
.VL 5
n = size in bytes 
.LE
.sp
.VL 5
.LI Default:
The default size is 270d bytes.
.LI Description:
This statement specifies the maximum frame size in bytes a single  
frame could be transmitted or received.
For the description of this statement, please
see 2.4.11.
.sp
.LE
.H 3 "ENTRYLIM"
.VL 5
.LI
Syntax: ENTRYLIM(count)
.VL 5
.LI
count = the number of Entry Limit
.LI
radix: decimal
.LI
range: 1 through 255
.LI
default: the total number of PUs defined under the LINE
.LE
.LI
Level: Define on the line level.
.LI
Description: This statement defines the maximum number of entries of
the service order table that the primary interface makes for normal servicing
of stations on the line before it makes a special scan of the table.  
.LI
Dependencies: This statement should only be defined for the primary interfaces. This statement can only be defined for the non-switched lines.
.LI
Suggested Setting: Use your experience to define this statement.
Specifying a small ENTRYLIM count gives the primary interface more
frequent opportunities to do special servicing at the cost of
frequent interruptions to normal servicing.
.LI
Message(s):
.BL
.LI
ENTRYLIM statement is defined at the wrong level.  
.LI
ENTRYLIM statement is not allowed in the secondary interface.
.LI
ENTRYLIM statement cannot be defined for the dial-up line.
.LI
ENTRYLIM count is greater than 255.
.LE
.sp

.H 3 "FRMQA"

.VL 5

.LI
Syntax: FRMQA(rcv,xmt)

.VL 5
.LI
rcv = receive frame quota
.LI
xmt = transmit frame quota
.LI
radix: decimal
.LI
range: 1 thru 7
.LI
default: windowsize
.LE
.LI
Level: Define on the line level
.LI
Corresponding macro: GFRMQA
.LI
Description: This statement specifies the buffer space in number of frames allocated
for the transmit and receive direction for this line. 
Refer to GFRMQA description.
.LI
Dependencies: This statement should be defined for a given line if
the DLC layer of support is requested for a PU on that line. If not
defined, the general level quota will be used.
.LE


.H 3 "ORDER"
.VL 5
.LI
Syntax: ORDER(number, number, ......)
.VL 5
.LI
number = PU number
.LI
radix: decimal
.LI
range: 0 through 31
.LI
default: The order is the sequence of the PUs that
appear in the PU statements.
.LE
.LI
Level: Define on the line level.
.LI
Description: This statement defines the order in which the PUs on the
line are serviced.
.LI
Dependencies: This statement should only be defined for the primary
interfaces. This statement can only be defined for the non-switched
lines.
.sp
Up to 16 PU numbers can appear in one ORDER statement. A number
of ORDER statements may be generated under one LINE statement if one
ORDER statement is not enough to specify the order. A maximum of 256
entries can be generated in one service order table.
.LI
Suggested Setting: The PU numbers must be defined at least once in
order to be serviced. They may be defined more than once to be
serviced more frequently in the Normal response Mode.
.sp
.LI
Message(s):
.BL
.LI
ORDER statement is defined at the wrong level.
.LI
ORDER statement is not allowed in the secondary interface.
.LI
ORDER statement cannot be defined for the dial-up line.
.LI
You may not define more than 16 ORDER statements under one line.
.LI
PU numbers of the ORDER statement are out of the range of PUs under the line.
.LI
ORDER statement has a PU number greater than 31.
.LE
.sp


.H 3 "PASSLIM"
.VL 5
.LI
Syntax: PASSLIM(count)
.VL 5
.LI
count = the number of Pass Limit
.LI
radix: decimal
.LI
range: 1 through 7
.LI
default: 1
.LE
.LI
Level: Define on the line level.
.LI
Description: If defined in the primary interface,
this statement defines the maximum number of 
consecutive Path Information Units (PIU) or PIU segments the primary
interface sends at any one time to the secondary station. 
When the PASSLIM count is reached, the link scheduler stops sending I frames
to the current station in the service order table, and selects the next
entry in the service order table.
.sp
If defined in the secondary interface, 
this statement defines the maximum number of consecutive Path Information
Units (PIU) or PIU segments the secondary interface sends at any time to the 
primary station.
When the PASSLIM count is reached, the link scheduler stops sending I frames
and prepares to send a RR or RNR with the poll/final bit on.
.LI
Dependencies: 
This macro can only be defined for the non-switched lines.
.LI
Suggested Setting: Start with a PASSLIM count of 1, and increase the count
as necessary. On a full duplex link, if the WINDOWSIZE is reached before
PASSLIM in terms of transmitting I frames, the link degrades to half duplex
mode. The output scheduler stays idle until a poll can be sent.
Therefore, PASSLIM should be defined equal to or less than the 
WINDOWSIZE.
.LI
Message(s):
.BL
.LI
PASSLIM statement is defined at the wrong level.  
.LI
PASSLIM statement cannot be defined for the dial-up line.
.LI
PASSLIM count is greater than 7.
.LE
.sp



.H 3 "SNRMPAUSE"
.VL 5
.LI
Syntax: SNRMPAUSE(t)
.VL 5
.LI
t = the number of tenths of a second
.LI
radix: decimal
.LI
range: 0 through 255 tenths of a second
.LI
default: 10 tenths of a second
.LE
.LI
Level: 
Define on the line level.
.LI
Description: This statement defines the 
interval between each SNRM that is sent to a secondary station.
When the primary interface sends an SNRM to the secondary station,
it will wait for SNRMPAUSE tenths of a second before declaring a polling
receive timeout.
If SNRMPAUSE tenths of a second elapses without a UA or DM received from the
secondary station, the primary interface will check the SNRMPAUSE timer
and retry counters (such as NUM.RETRIES, PAUS.RETRIES and SEQ.RETRIES)
to see when and if another SNRM
should be sent to the station.
.LI
Dependencies: This statement can only be defined in the primary interface.
.LI
Suggested Setting: Set the SNRMPAUSE to be less or equal to 10 tenths of 
a second to prevent long wait for SNRM polling response.
.LI
Message(s):
.BL
.LI
SNRMPAUSE statement is defined at the wrong level.
.LI
SNRMPAUSE statement is not allowed in the secondary interface.
.LI
SNRMPAUSE timer is greater than 255. 
.LE
.sp


.H 3 "XMTCOMPLETE"
.VL 5
.LI
Syntax: XMTCOMPLETE(t)
.VL 5
.LI
t = the number of tenths of a second
.LI
radix: decimal
.LI
range: 0 through 2047 tenths of a second
.LI
default: 10 tenths of a second
.LE
.LI
Level: 
Define on the line level.
.LI
Description: This statement defines 
the interval for the interface to complete transmission in terms of
putting the frame in the foreground's transmit Rotor List.
.sp
The minimum value of this timer can be derived from the WINDOWSIZE, line
SPEED, and the FRAMESIZE macros.
The following formulas should be used in calculating the XMTCOMPLETE timer.
The timer value needs to be rounded to an interger.
.sp
.ft C
.nf
.DS
                      (8 bits per char)   *   WINDOWSIZE   *   FRAMESIZE
minimum time  >=   ----------------------------------------------------------
                                line SPEED in bits per second


XMTCOMPLETE(t)  =   t   +   minimum time

.DE
.fi
.ft P
.sp
The timer value 't' is the extra time that is to be added to
the 'minimum time' for completing transmission.
The SNA interface will calculate the 'minimum time' during the assembly
time, only the extra time 't' needs to be defined in the sysgen tymfile.
.sp
.LI
Dependencies: This statement can only be defined in the primary interface.
.LI
Suggested Setting: One extra second is sufficient for a link speed of 9600 baud
rate.
For other link speed, use the formulas to calculate this timer value.
.LI
Message(s):
.BL
.LI
XMTCOMPLETE statement is defined at the wrong level.
.LI
XMTCOMPLETE statement is not allowed in the secondary interface.
.LI
XMTCOMPLETE timer is greater than 2047 tenths of a second.
.LE

.sp
.H 3 MSIOTP
.VL 5
.LI
Syntax: MSIOTP(M.TYP0|M.TYP1)
.VL 5
.LI
Default: M.TYP0
.LE
.LI
This optional, specific macro specifies the type of SIO motherboard 
installed in the TYMNET node that contains the HIF. The parameters are
as follows:
.VL 5
.LI M.TYP0:
Specifies Motherboard revision level A through D.
.LI M.TYP1:
Specifies Motherboard revision level E and higher.
.LE
.LI
The revision level is printed on the card.
.LE
.sp


.H 3 "WINDOWSIZE"
.sp
Syntax: WINDOWSIZE(n)
  
.VL 5
n = 1, 2, 3, 4, 5, 6, or 7 frames 
.LE
.sp
.VL 5
.LI Default:
The default window size is seven frames.
.LI Description:
This statement specifies the maximum number of
outstanding frames.
For the description of this statement, please
see 2.4.12.
.sp
.LE
.H 3 "SEQ.RETRIES"
.VL 5
.LI
Syntax: SEQ.RETRIES(n)
.VL 5
.LI
n = the number of retry sequence 
.LI
radix: decimal
.LI
range: 0 through 127 sequences
.LI
default: 0 sequence
.LE
.LI
Level: 
Define on the general level.
.LI
Description: This statement defines the number of attemps, via 
retransmission, to recover from errors in any types of SDLC frames transmitted over
a link. 
The errors are Receive-Timeouts, or receiving an un-expected response to
the previously transmitted frame.
This statement is to specify the number of retry equences for the retries.
.LI
Dependencies: 
.LI
Suggested Setting: Set the number of retry sequences between retries
to provide for recovery of 
a temporary error, but with a value that does not prevent recognition 
of a permanent error.
.LI
Message(s):
.BL
.LI
SEQ.RETRIES statement is defined at the wrong level.  
.LI
SEQ.RETRIES count is greater than 127.
.LE
.sp
.H 3 "PAUS.RETRIES"
.VL 5
.LI
Syntax: PAUS.RETRIES(t)
.VL 5
.LI
t =  time in second
.LI
radix: decimal
.LI
range: 0 through 255 seconds
.LI
default: 0 second
.LE
.LI
Level: 
Define on the line level.
.LI
Description: This statement defines the number of attemps, via 
retransmission, to recover from errors in any types of SDLC frames transmitted over
a link. 
The errors are Receive-Timeouts, or receiving an un-expected response
to the previously transmitted frame.
This statement is to specify seconds of pause between each retry
sequence.
.LI
Dependencies: 
.LI
Suggested Setting: Set the pause between retry sequences 
to provide for recovery of 
a temporary error, but with a value that does not prevent recognition 
of a permanent error.
.LI
Message(s):
.BL
.LI
PAUS.RETRIES statement is defined at the wrong level.  
.LI
PAUS.RETRIES count is greater than 255.
.LE
.sp


.H 3 "PAUSE"
.VL 5
.LI
Syntax: PAUSE(time)
.VL 5
.LI
time = the number of tenths of a second
.LI
radix: decimal
.LI
range: 0 through 2047
.LI
default: 10 tenths of a second
.LE
.LI
Level: 
Define on the line level.
.LI
Description: This statement defines the average duration of the polling cycle
in Nomal response Mode in tenths of a second.
When this macro is used in the primary interface, it specifies the time
period for the primary interface to poll that same station again.
.sp
The polling cycle extends from the moment the primary interface services the 
first entry in the service order table to the moment polling next begins 
at the same entry. The polling cycle includes time for polling, receiving,
and transmitting to stations on the line.
If the time extended in one complete polling cycle, which is
servicing all active entries in the service order table, equals to or exceeds 
the time specified as 't' time, the next polling cycle begins immediately.
.sp
If, on the other hand, the time expended in one complete polling cycle is
less than time, the beginning of the next polling cycle is deferred 
until 'time' tenths of a second have elapsed since
the beginning of the polling
cycle. During the PAUSE, the SDLC link is in POLL-WAIT state.
Any outgoing data ready for transmission to the secondary stations on the link
is sent during the pause.
.sp
When the PAUSE is defined in the secondary interface, it is the time the
secondary interface can defer answering a poll from the primary station.
.LI
Dependencies: 
.LI
Suggested Setting:
The PAUSE timer of the secondary interface must be less than the 
REPLYTO timer of the primary station. 
.LI
Message(s):
.BL
.LI
PAUSE statement is defined at the wrong level.
.LI
PAUSE timer is greater than 2047.
.LE
.sp 2
.H 3 "NUM.RETRIES"
.VL 5
.LI
Syntax: NUM.RETRIES(m)
.VL 5
.LI
m = the number of retries
.LI
radix: decimal
.LI
range: 0 through 127
.LI
default: 7 retries
.LE
.LI
Level: 
Define on the line level.
.LI
Description: This statement defines the number of attemps, via 
retransmission, to recover from errors in any types of SDLC frames transmitted over
a link. 
The errors are Receive-Timeouts, or receiving an un-expected response to
the previously transmitted frame.
This statement is to specify the number of retries for each sequence.
.LI
Dependencies: 
.LI
Suggested Setting: Set the number of retries to provide for recovery of 
a temporary error, but with a value that does not prevent recognition 
of a permanent error.
.LI
Message(s):
.BL
.LI
NUM.RETRIES statement is defined at the wrong level.  
.LI
NUM.RETRIES count is greater than 127.
.LE
.sp

.H 3 "RCVSIOFR"
.sp
Syntax: RCVSIOFR(srfrn)
  
.VL 5
.LI
srfrn = number of frames 
.LE
.sp
.VL 5
.LI Default:
The default value is 8 frames allocated for each station.
.LI Description:
This statement is used to specify the SIO buffer
room in number of frames allocated for each SNA/SDLC station in
receiving direction.
.sp
.LE
.sp 2
.H 3 "DSIOTP"

Syntax: DSIOTP(arg)

.VL 5
.LI where
arg = D.TYP0, D.TYP1
.br
For SIO daughter card version A to G, spedify D.TYP0
For SIO daughter card version H and later, specify D.TYP1
.sp
.LI Default:
Default is D.TYP0
.LI Description:
To specify the SIO daughter card type.
.sp
.LE

.H 2 "PU STATEMENTS"
.sp 2
This section describes all the statements defined under the level of
PU, which is the bottom level in the SNA/SDLC configuration macro hierarchy.
Characteristics defined in this level will override what has been defined in
upper levels.

.H 3 "PU"
.sp
Syntax: PU(n)
.sp
Argument(s):
.DS
                    n = PU offset
                    radix: decimal
                    range: 0 =< n < 8
                    default: none
.DE
.sp
.VL 5
.LI Level(s):
Must be defined after a Line macro (Line level).
.sp
.LI Dependencies:
PU numbers must be sequential.
.sp
.LI Description:
This statement denotes the begining of a group of
characteristics which may be specified for an SNA/SDLC station.
For each SNA/SDLC station , there must be one PU statement associated
with it.
.sp
.LI 
Suggested setting:
For each station on a line, define a PU statement. Number
them sequentially.
.sp
.LE
Message(s):
.DS
    *** ERROR 00 ***     ;If there is a radix error.
    *** ERROR 02 ***     ;If PU number is out of range.
    *** ERROR 05 ***     ;If PU number is not defined.
    *** ERROR 08 ***     ;If PU not defined on line level,
                         ;If Line macro contained an error,
                         ;If PU is not defined consecutively.
.DE

.H 3 "PU.ADDR"
.sp
Syntax: PU.ADDR(addr)
  
.VL 5
addr = one byte of HEXADECIMAL number 
.LE
.sp
.VL 5
.LI Default:
There is no default value for a polling address.
.LI Description:
This statement specifies the polling address for
the associated SNA/SDLC station. The polling address must be coded
in hexadecimal value. For examples, if the polling address 
is '40' in hexadecimal
the statement should be PU.ADDR(40), and if the polling address is 'C1' in
hexadecimal the statement should be PU.ADDR(0C1). Please pay attention to the
leading zero in the last example.
The address must be unique within a link.
.sp
.LE
.sp 2
.H 3 "PU.QACTPU"
.sp
Syntax: PU.QACTPU(args)
  
.VL 5
args = data for request ACTPU in hex format 
.LE
.sp
.VL 5
.LI Default:
No default.
.LI Description:
To define the canned data for request ACTPU.
.sp
.LE
.sp 2
.H 3 "PU.ETYPE"
.sp
Syntax: PU.ETYPE(n)
  
.VL 5
n = PU type 1,2 or 4 
.LE
.sp
.VL 5
.LI Default: 
No default.
.LI Description:
To specify the PU's external type for the specified
PU.
.sp
.LE

.H 3 "PU.QDACTPU"
.sp
Syntax: PU.QDACTPU(args)
  
.VL 5
args = data for DACTPU in hex format 
.LE
.sp
.VL 5
.LI Default:
No default.
.LI Description:
To define the canned data for request DACTPU.
.sp
.LE
.sp 2
.H 3 "PU.ITYPE"
.sp
Syntax: PU.ITYPE(n)
  
.VL 5
n = PU type 1,2 or 4 
.LE
.sp
.VL 5
.LI Default:
No default
.LI Description: 
To specify the PU's internal type for the specified
PU.
.sp
.LE
.sp 2
.H 3 "PU.PACTPU"
.sp
Syntax: PU.PACTPU(args)
  
.VL 5
args = data for response ACTPU in hex format 
.LE
.sp
.VL 5
.LI Default: 
No default.
.LI Description:
To define the canned data for response ACTPU.
.sp
.LE

.H 3 "PU.LABEL"
.sp
Note: this macro is available starting from release 1.02.
.sp
Syntax: PU.LABEL(labl)
  
.VL 5
labl = one byte of HEXADECIMAL number 
.LE
.sp
.VL 5
.LI Default:
There is no default value for a label.
.LI Description:
This statement specifies the label for
SNA/SDLC stations. If this or any other LABEL macro is specified
then labels rather than pollining addresses are used to match
CU and device information for a specific CRM.
Currently, this is the only way to have specific CRM's from BSC or
CMT connections.
Note that labels (both PU and LU) do not have to be unique.
If they are the same for a few PU's and/or LU's, this group of LU's
is treated as a pool for CRM purposes.
.sp
The labels must be coded
in hexadecimal value. For example, if the label is '40' in hexadecimal
the statement should be PU.LABEL(40),
and if the label is 'C1' in
hexadecimal the statement should be PU.LABEL(0C1).
Please pay attention to the leading zero in the last example.
.sp
.LE

.H 3 "PU.ISTATUS"
.sp
Syntax: PU.ISTATUS(arg)
  
.VL 5
string = ACTIVE or INACTIVE 
.LE
.sp
.VL 5
.LI Default:
If this statement is omitted, then the default is active.
.LI Description:
This statement specifies whether the station(s)
in this PU should be active or inactive when this
SNA/SDLC interface is initially loaded into the ENGINE.
An inactive station or line could be activated later by the SNA/SDLC
Interface monitor.
.sp
.LE

.H 3 "PU.DATAMODE"

.VL 5
.LI
Syntax:  PU.DATAMODE(mode)
.VL 5
.LI
mode = HALF, HALFDUPLEX, FULL, FULLDUPLEX
.LI
default:  halfduplex
.LE
.LI
Level:  Define on the PU level
.LI
Description:  This statement specifies the data transmission mode.  'HALFDUPLEX' is one way alternate transmission; 'FULLDUPLEX' is two way simultaneous transmission.  Because half and full-duplex stations can exist on the same link in multipoint configurations, the datamode macro must be extended to include the PU level.  This is so that the data link server and other foreground routines will be able to determine if the station it is servicing is a full or half-duplex station.  If it is full-duplex, then either receive or transmit state is valid.
.LE

.H 3 "PU.PASSLIM"
.VL 5
.LI
Syntax: PU.PASSLIM(count)
.VL 5
.LI
count = the number of Pass Limit
.LI
radix: decimal
.LI
range: 1 through 7
.LI
default: 1
.LE
.LI
Level: Define on the PU level.
.LI
Description: If defined in the primary interface,
this statement defines the maximum number of 
consecutive Path Information Units (PIU) or PIU segments the primary
interface sends at any one time to the secondary station. 
When the PU.PASSLIM count is reached, the link scheduler stops sending I frames
to the current station in the service order table, and selects the next
entry in the service order table.
.sp
If defined in the secondary interface, 
this statement defines the maximum number of consecutive Path Information
Units (PIU) or PIU segments the secondary interface sends at any time to the 
primary station.
When the PU.PASSLIM count is reached, the link scheduler stops sending I frames
and prepares to send a RR or RNR with the poll/final bit on.
.LI
Dependencies: 
This macro can only be defined for the non-switched lines.
.LI
Suggested Setting: Start with a PU.PASSLIM count of 1, and increase the count
as necessary. On a full duplex link, if the WINDOWSIZE is reached before
PU.PASSLIM in terms of transmitting I frames, the link degrades to half duplex
mode. The output scheduler stays idle until a poll can be sent.
Therefore, PU.PASSLIM should be defined equal to or less than the 
WINDOWSIZE.
.LI
Message(s):
.BL
.LI
PU.PASSLIM statement is defined at the wrong level.  
.LI
PU.PASSLIM statement cannot be defined for the dial-up line.
.LI
PU.PASSLIM count is greater than 7.
.LE
.sp
.H 3 "PU.FRAMESIZE"
.VL 5
.LI
Syntax: PU FRAMESIZE(count)
.VL 5
.LI
count = the number of bytes
.LI
radix: decimal
.LI
range: 270 through 6000
.LI
default: 270
.LE
.LI
Level: Define on the PU level
.LI
Description: This statement specifies the maximum size in bytes a single
frame could be transmitted or received to and from the station.
.LI
Suggested Settings: Add two bytes to the maximum frame size of the
external device, and round it up to an even number. These two extra
bytes are for the interface to make room for storing the address byte
and the control byte for the incoming/outgoing frame.
.LI
Message(s):
.BL
.LI
PU.FRAMESIZE statement is defined at the wrong level.
.LI
PU.FRAMESIZE count is greater than 6000.
.LE
.sp

.H 3 "PU.QXID"

.VL 5

.LI
Syntax: PU.QXID(msg)

.VL 5
.LI
msg = canned QXID response information field
.LI
radix: hexadecimal
.LI
no. digits: -1 < length < 81
.LI
default: none
.LE
.LI
Level: Define on the PU level.
.LI
Corresponding macro: GQXID
.LI
Description: This macro defines the QXID response which will be sent in response to a
received QXID command. Refer to GQXID description.

.LE


.H 2 "LU STATEMENTS"
.sp 2
This section describes all the statements defined under the level of
LU, which is the bottom level in the SNA/SDLC configuration macro hierarchy,
Characteristics defined in this level will override what has been defined in
upper levels.
.sp 2
.H 3 "LU"
.sp
Syntax: LU(n)
.sp
Argument(s):
.DS
                    n = relative number of LU on the same PU
                    radix: decimal
                    range: 0 =< n < 256
                    default: none
.DE
.sp
.VL 5
.LI Level(s):
Must be defined after a PU macro (PU level).
.sp
.LI Dependencies:
LU number must be sequential.
.sp
.LI Description:
This statement denotes the begining of a group of
characteristics which may be specified for an SNA/SDLC LU(device).
For each PU, there are 1 to 256 LU statements associated
with it.
.sp
.LE
Suggested setting: 
.sp
Message(s):
.DS
   *** ERROR 00 ***     ;If there is a radix error.
   *** ERROR 02 ***     ;If LU number is out of range.
   *** ERROR 05 ***     ;If LU number is not defined.
   *** ERROR 08 ***     ;If LU not defined on PU level,
                        ;If PU macro contained an error,
                        ;If LU is not defined consecutively.
.DE

.H 3 "LU.ADDR"
.sp
Syntax: LU.ADDR(addr)
  
.VL 5
addr = HEXADECIMAL value (from 1 to 0FE) 
.LE
.sp
.VL 5
.LI Default:
There is no default value for LU device. 
.LI Description:
This statement specifies the logical unit address for
the specified SNA/SDLC device. The arguments (addr) must be coded
in decimal value of as.LEing order.
.sp
.LE
.sp 2
.H 3 "LU.QACTLU"
.sp
Syntax: LU.QACTLU(args)
  
.VL 5
args = data for request ACTLU in hex format 
.LE
.sp
.VL 5
.LI Default:
No default.
.LI Description:
To define the canned data for request ACTLU.
.sp
.LE
.sp 2
.H 3 "LU.TYPE"
.sp
Syntax: LU.TYPE(n)
  
.VL 5
n = LU type (LU type 2 or 3) 
.LE
.sp
.VL 5
.LI Default:
No default.
.LI Description:
To specify the LU type for the specified LU.
.sp
.LE

.H 3 "LU.QDACTLU"
.sp
Syntax: LU.QDACTLU(args)
  
.VL 5
args = data for DACTLU in hex format 
.LE
.sp
.VL 5
.LI Default:
No default.
.LI Description:
To define the canned data for request DACTLU.
.sp
.LE
.sp 2
.H 3 "LU.VHR"
.sp
Syntax: LU.VHR(args)
  
.VL 5
args = YES or NO 
.LE
.sp
.VL 5
.LI Default:
The default is NO unless specified differently in GLU.VHR
statement.
.LI Description:
To define that this LU serves as VHR LU.
.sp
.LE

.H 3 "LU.VTI"
.sp
Syntax: LU.VTI(args)
  
.VL 5
args = YES or NO 
.LE
.sp
.VL 5
.LI Default: 
The default is NO unless specified differently in GLU.VTI
statement.
.LI Description:
To define that this LU serves as VTI LU.
.sp
.LE
.sp 2
.H 3 "LU.SRQ"
.sp
Syntax: LU.SRQ(args)
  
.VL 5
args = YES or NO 
.LE
.sp
.VL 5
.LI Default:
The default is NO unless specified differently in GLU.SRQ
statement.
.LI Description:
To define that this LU serves as SYS/RQ supported LU.
.sp
.LE
.sp 2
.H 3 "LU.PACTLU"
.sp
Syntax: LU.PACTLU(args)
  
.VL 5
args = data for response ACTLU in hex format 
.LE
.sp
.VL 5
.LI Default: 
No default.
.LI Description:
To define the canned data for response ACTLU.
.sp
.LE

.sp 2
.H 3 "LU.LABEL"
.sp
Note: this macro is available starting from release 1.02.
.sp
Syntax: LU.LABEL(labl)
  
.VL 5
labl = one byte of HEXADECIMAL number 
.LE
.sp
.VL 5
.LI Default:
There is no default value for a label.
.LI Description:
This statement specifies the label for
SNA/SDLC logical units. If this or any other LABEL macro is specified
then labels rather than pollining addresses are used to match
CU and device information for a specific CRM.
Currently, this is the only way to have specific CRM's from BSC or
CMT connections.
Note that labels (both PU and LU) do not have to be unique.
If they are the same for a few PU's and/or LU's, this group of LU's
is treated as a pool for CRM purposes.
.sp
.LI 
The labels must be coded
in hexadecimal value. For example, if the label is '40' in hexadecimal
the statement should be LU.LABEL(40),
and if the label is 'C1' in
hexadecimal the statement should be LU.LABEL(0C1).
Please pay attention to the leading zero in the last example.
.sp
.LE
.sp 2
.H 3 "LU.ISTATUS"
.sp
Syntax: LU.ISTATUS(arg)
  
.VL 5
string = ACTIVE or INACTIVE 
.LE
.sp
.VL 5
.LI Default:
This statement may be omitted, then the default is active.
.LI Description:
This statement specifies whether the station(s)
in this LU should be active or inactive when this
SNA/SDLC interface is initially loaded into the ENGINE.
An inactive station or line could be activated later by the SNA/SDLC
Interface monitor.
.sp
.LE

.H 3 "LU.COLOR"
.sp
Syntax: LU.COLOR(args)
  
.VL 5
args = YES or NO 
.LE
.sp
.VL 5
.LI Default:
Default is 'NO' (for SNA/SDLC)
.LI Description:
To specify the color attribute for the specified LU.
.sp
.LE
.sp 2
.H 3 "LU.SIZE"
.sp
Syntax: LU.SIZE(n)
  
.VL 5
n = screen size in decimal value 
.LE
.sp
.VL 5
.LI Default:
Default is 1920 decimal (80 columns,24 rows)
.LI Description:
To specify the screen size for the specified LU.
.sp
.LE
.sp 2
.H 3 "LU.BIND"
.sp
Syntax: LU.BIND(args)
  
.VL 5
args = data for request BIND in hex format 
.LE
.sp
.VL 5
.LI Default: 
No default.
.LI Description: 
To define the canned data for request BIND.
.sp
.LE

.H 3 "LU.UNBIND"
.sp
Syntax: LU.UNBIND(args)
  
.VL 5
args = data for request UNBIND in hex format 
.LE
.sp
.VL 5
.LI Default: 
No default.
.LI Description: 
To define the canned data for request UNBIND.
.sp
.LE
.sp 2
.H 3 "LU.ITIMOUT"
.sp
Syntax: LU.ITIMOUT(n)
  
.VL 5
n = is value in minutes for inactivity timeout before disconnect.
.LE
.sp
.VL 5
.LI Default:
If this statement is omitted, then the default is 60 (no inactivity
timeout).
.LI Description:
This statement defines the value of inctivty timeout.
The range is 0 thru 60 minutes.
.sp
.LE
.sp 2
.H 3 "LU.ATIMOUT"
.sp
Syntax: LU.ATIMOUT(n)
  
.VL 5
n = is value in seconds to wait for ACTLU after DACTLU before disconnect.
.LE
.sp
.VL 5
.LI Default: 
If this statement is omitted, then the default is 0 (disconnect
immediately if DACTLU was received).
.LI Description:
This statement defines the timeout before application is
disconnected. The range is 0 thru 60 seconds.
.sp
.LE

.H 3 "LU.TRAILER"

Syntax: LU.TRAILER(arg)

.VL 5
arg = "AP.ETX", "AP.ETB" or "AP.ITB" 
.LE
.sp
.VL 5
.LI Default:
Default is ETX
.LI Description:
To specify the LU DSP trailer for the LU's for the slot.
.sp
.LE

.H 3 "LU.NAME"

.VL 5

.LI
Syntax: LU.NAME(name)

.VL 5
.LI
name = is the symbolic name of an LU (1-8 characters, left
justified).
.LE
.VL 5
.LI
Example: LU.NAME(ABCDEFGH) - the symbolic name of the LU is ABCDEFGH.
.LE
.LI
Level:  Define on the LU level.
.LI
Description: This statement appears among the macros defining an
LU with the PS support in the SNA HIF. It is highly recomended that
this name is synchronized with the host sysgened LU name.
This macro is new for version 5.
.LI
Dependencies:
.LI
Suggested Setting: Use for PS support in SNA HIF.
.LI
Message(s): LU.NAME macro is defined at the wrong level.
.VL 5
.LI

.LE
.LE
.H 3 "LU.PRT"

.VL 5

.LI
Syntax: LU.PRT(addr)
.VL 5

.LI
addr = is the address of the 3270 printer LU which is allowed
for usage on the CRT corresponding to the statements where this macro
is included.
.LE
.VL 5
.LI
Example: LU.PRT(07) - the printer with the address of 07 is allowed
for usage on the CRT defined by the statements among which this
macro appears.
.LE
.LI
Level:  Define on the LU level.
.LI
Description: This statement appears among the macros defining a 3270
CRT LU with the PS support in the SNA TIF.
It is used to list the printers which are attached to the same external
3270 CU as this CRT and allowed for logon/logoff on this CRT.
Each statement defines one printer. If necessary, more than one
such statement could be included in the description of the CRT.
This macro is new for version 5.
.LI
Dependencies: this macro affects only the native 3270 printer feature
(PS support).
It is allowed only for usage with the other LU type 2 macros.
.LI
Suggested Setting: Use as many times for each CRT as there printers
to be displayed on the NSM printer status lines.
.LI
Message(s): LU.PRT macro is defined at the wrong level.
.LI
LU.PRT macro is defined for the wrong LU type,
.VL 5
.LI

.LE

.H 2 "NS STATEMENTS"
.sp 2
This section describes all the statements defined under the level of
NETWORK SERVICE, which supports the network service logon information.
Macros defined in this level will override what has been defined in
upper levels.
.sp 2
.H 3 "NS.MENU"
.sp
Syntax: NS.MENU(args)
.sp
.VL 5
args = character strings for heading line of network service 
menu.
.LE
.sp
.VL 5
.LI Default: 
No default.
.LI Description:
This statement specifies the heading line of the 
network service manu for the specified LU.
.sp
.LE
.sp 2
.H 3 "NS.KEY"
.sp
Syntax: NS.KEY(gkey)
  
.VL 5
gkey = pf keys or pa keys 
.LE
.sp
.VL 5
.LI Default:
There is no default value for LU device. 
.LI Description:
This statement specifies the function key or program
key used to enter the network service mode for the specified LU.
.sp
.LE
.sp 2
.H 3 "NS.WORD"
.sp
Syntax: NS.WORD(gword)
  
.VL 5
gword = keyword for that LU to enter network service mode 
.LE
.sp
.VL 5
.LI Default: 
No default.
.LI Description:
To specify the keyword for entering the network 
service mode for the specified LU.
.sp
.LE
.sp 2


.H 3 "LG.COLOR"

.VL 5

.LI
Syntax: LG.COLOR(arg)
.VL 5
.LI
arg = color capability on the destination device
.LI
range : yes or no
.LI
default: no
.LE
.LI
Level: Define on the LU logon level.
.LI
Corresponding Macros: DLG.COLOR , PLG.COLOR
.LI
Description: This statement defines the desired color capability on the destination
device.
.sp
Dependencies: This macro should only be defined for PS connections.
.LI
Suggested Setting: If the destination of this logon entry is a device
with color capability, then set this macro to "YES". Otherwise set this macro
to "NO".
.sp

.LE

.H 3 "LG.CRM"

.VL 5

.LI
Syntax: LG.CRM(arg)
.VL 5
.LI
arg = logon crm mode
.LI
radix : decimal
.LI
range : 1 through 4
.LI
default: 1
.LE
.LI
Level: Define on the LU logon level.
.LI
Corresponding Macros: DLG.CRM , PLG.CRM
.LI
Description: This statement defines the desired crm mode for the current logon entry.
.sp
Dependencies: This macro should only be defined for PS connections.
.LI
Suggested Setting:
.sp

.LE

.H 3 "LG.DIALECT"

.VL 5

.LI
Syntax: LG.DIALECT(type,...)

.VL 5
.LI
type = dialect type
.LI
range: "DSP" and/or "SNADSP"
.LI
default: DSP dialect using SVCs is the default.
.LE
.LI
Level: This statement must be defined on the LU logon level.
.LI
Corresponding Macro(s): DLG.DIALECT, PLG.DIALECT
.LI
Description: This macro defines which dialects, in preferential order,
will be supported by this LG.ENTRY. When this macro is defined, this entry will support
SNA/DSP dialect (SNADSP) and/or the DSP dialect (DSP).
If this macro is not defined the default dialect is DSP using SVCs.
.sp
An interface which has received an incoming circuit request, a NEEDLE, will
respond with a list of dialects which the incoming side can support. Each different dialect
supported in the interface is sent in this list. The outgoing side will
chose which dialect from this list to speak over this virtual circuit 
connection. The list of dialects is defined in preferential order
by this LG.DIALECT macro. The first dialect defined in the outgoing sides
LG.DIALECT macro which matches one of the dialects mentioned in
the list from the incoming side, will
be chosen. This one chosen dialect will be sent back to the incoming side as the
dialect response.
.sp
.LI
Dependencies: The X.25 dialect can only
be set for connections with DLC level of support; this means LG.DIALECT can
NOT be defined for X.25 dialect. The DSP dialect can only be set for connections
with PS level of support, AND for SVCs.
.LI
Suggested Setting: This macro should be set to all the possible dialects which
might be used by this virtual circuit. If the destination is an SNA interface which
supports SNA/DSP then this dialect should be also defined. If the destination
is an SNA interface which will not support SNA/DSP then DSP should be defined.
.sp
.LI
Example:
.nf
.ft C
.sp
LG.ENTRY(0)
 LG.LAYER(PS)
 LG.DIALECT(SNADSP,DSP)   :SNA/DSP dialect is the first choice,
                          :DSP dialect is the second choice.
 .........                : other LG macros
LG.ENTRY(1)
 LG.LAYER(PS)
 LG.DIALECT(DSP,SNADSP)   :DSP dialect is the first choice,
                          :SNA/DSP is the second choice.
 .....                    : other LG macros
.ft P
.fi
.sp

.LE


.H 3 "LG.ENTRY"

.VL 5

.LI
Syntax: LG.ENTRY(entry)
.VL 5
.LI
entry = logon entry number
.LI
radix: decimal
.LI
range: 0 through 10, or ALL
.LI
default: none
.LE
.LI
Level: Define on the LU logon level, but after all LU definitions.
.LI
Corresponding Macros: DLG.ENTRY, PLG.ENTRY
.LI
Description: This statement defines the entry number of the following logon
selection. This macro is used to define what logon entry selections are
available to this LU. Either an entry already defined on the higher level
is chosen, ALL of the higher level PLG.ENTRY logons are chosen,
or a new entry is defined. 
.sp
If the entry number is already defined on the PU level by PLG.ENTRY,
then this LU will be able to use that selection as defined by the higher level.
This LG.ENTRY may define some logon information, on the LG level, to
override what the higher level has defined.
.sp
If the "ALL" argument is used for this macro, then all of the PLG.ENTRY logons
are available to this LU. If this argument is set, there
should be NO further LG logon macros defined under this one. Other LG.ENTRY
sets can then be defined as long as the total number of entries does not
exceed 10 and there are no duplicate identifiers.
.sp
If the entry number is NOT already defined on the PU level, then this 
is a new entry. The number of this entry does NOT need to be in sequetial
order. The number is simply an identifier.

.LI
Dependencies: Must define after the LU macro. 
.LI
Example: In the following example, there is one general level entry defined
, DLG.ENTRY(0). On the PU level, this entry has been chosen with the username
modification. Also on the PU level one new entry was added, PLG.ENTRY(1).
On the LU level two entries have been selected. The first one is already defined on the PU level
and the second one is new.
.sp
.nf
DLG.ENTRY(0)
  DLG.PROMPT(ACCESS GATEWAY)
  DLG.MODE(PRESET)
  DLG.LOGON(0,C)
  DLG.LOGON(1,BUBBC)
  DLG.LOGON(2,SMITH"BA855"BBABRACADABRA)
  DLG.CRM(2)
  DLG.DIALECT(SNADSP,DSP)
    PU(0)
      PLG.ENTRY(0)
        PLG.LOGON(0,newuser)
      PLG.ENTRY(1)
        PLG.LOGON(0,C)
      LU(0)
        LG.ENTRY(0)        :this LU selects  PLG.ENTRY(00)
        LG.ENTRY(4)        : this LU defines a new entry 4
.fi
  

.LE



.H 3 "LG.ERSP"

.VL 5

.LI
Syntax: LG.ERSP(arg)

.VL 5
.LI
arg = is YES (for end-to-end responses) or NO (for local
responses).
.LE
.VL 5
.LI
Example: LG.ERSP(YES) - VC supports end-to-end SNA responses on the
printer circuit.
.LE
.LI
Level:  Define on the LU logon level.
.LI
Description: This statement is used to define a LU logon level
mode of the native 3270 printer operation. Two modes of operation for the
native printer are possible - HP (High Performance/limited error recovery) and
LP (Low Performance/full error recovery). The modes of operation differ in
their handling of the SNA responses. HP mode supports the local handling,
LP mode sends SNA responses end to end. This macro is new for version 5.
.LI
Dependencies: this macro affects only the native 3270 printer feature
(PS support). When used for the CRT logon entry it affects the mode
of operation of the printer associated with this CRT (if requested
by the operator).
.LI
Suggested Setting: Set to YES only if the HP mode error recovery is not
sufficient.
.LI
Message(s): LG.ERSP macro is defined at the wrong level.
.VL 5
.LI

.LE
.LE

.H 3 "LG.LINE"

.VL 5

.LI
Syntax: LG.LINE(line#)

.VL 5
.LI
line# = destination line number
.LI
radix: decimal
.LI
range: 0 through 15
.LI
default: none
.LE
.LI
Level: This statement must be defined on the LU logon level.
.LI
Description: This statement defines the destination line number for this
preset logon entry. Refer to the DLG.LINE macro for more details.
.LI
Corresponding macros: DLG.LINE and PLG.LINE
.LI
Dependencies: On the LU logon level, only logon entries with PS support may define
this macro. Refer to DLG.LINE dependencies for more details.
.LI
Suggested Setting: Refer to DLG.LINE suggested setting.

.LE

.H 3 "LG.LOGON"

.VL 5

.LI
Syntax: LG.LOGON(level,username"bahost#"bbpassword)
.VL 5
.LI
level = logon level
.VL 5
.LI
radix: decimal
.LI
range: 0 through 4
.LI
default: level 0
.LE
.LI
username = valid network username
.VL 5
.LI
range: upto 32 characters long
.LI
default: none
.LE
.LI
"ba = ascii representation of ":"
.LI
host# = destination host number
.VL 5
.LI
radix: decimal
.LI
no. digits: 1 to 5
.LI
default: none
.LE
.LI
"bb = ascii representation of ";"
.LI
password = password for specified username
.VL 5
.LI
range: TYMNET valid password
.LI
default: none
.LE
.LE
.LI
Level: Define on the LU logon level.
.LI
Corresponding Macros: DLG.LOGON, PLG.LOGON
.LI
Description: This statement defines the logon string which should be
used during the preset logon attempt. The LEVEL parameter defines the
logon level of this logon entry. A logon level of
0 indicates this logon string is not going through a gateway. Higher levels
on the other hand, indicate that gateways are present.
.sp
USERNAME defines the username used during circuit building for outgoing
logon entries. For outgoing logon entries, this is the username used
when the circuit is built.
.sp
HOST# defines the destination host number used for this logon entry during
circuit building.
.sp
And, finally, PASSWORD defines the password used during circuit building
for outgoing logon entries.
.LI
Dependencies: This statement should be defined for logon entries defined
as outgoing SVCs and for those defined as incoming and outgoing PVCs.
If the macro is not defined at this level and it is not defined at the
appropriate higher levels,
a warning message will be issued during assembly time to warn the users.
This warning should be ignored if the entry is defined as incoming SVC.
.LI
Example: In the following example there are 3 logon levels. Levels
0 and 1 go through intermediate gateways, and level 2 is the
final destination.
.sp
.nf
LG.ENTRY(0)
  LG.PRMPT(ACCESS GATEWAY)
  LG.MODE(PRESET)
  LG.LOGON(0,C)
  LG.LOGON(1,BUBBC)
  LG.LOGON(2,SMITH"BA855"BBABRACADABRA)
.fi

.LE

.H 3 "LG.LTYPE"

.VL 5

.LI
Syntax: LG.LTYPE(lutype)
.VL 5
.LI
lutype = destination lu type
.LI
radix : decimal
.LI
range : 1 through 3
.LI
default: 2
.LE
.LI
Level: Define on the LU logon level.
.LI
Corresponding Macros: DLG.LTYPE , PLG.LTYPE
.LI
Description: This statement defines the desired lu type on the destination
device.
.sp
Dependencies: This macro should only be defined for PS connections.
.LI
Suggested Setting: Set this macro to the same value as the destination
LU's LU.TYPE.
.sp

.LE

.H 3 "LG.LUADDR"

.VL 5

.LI
Syntax: LG.LUADDR(addr)

.VL 5
.LI
addr = destination LU address or label
.LI
radix: hexadecimal
.LI
no. digits: 2
.LI
range: -1 <= addr <= ff
.LI
default: -1
.LE
.LI
Level: Define on the LU logon level.
.LI
Corresponding macros: PLG.LUADDR and DLG.LUADDR
.LI
Description: This macro defines the destination LU label or address
for logon entries with
the PS level of support. Refer to DLG.LUADDR description.
.LE
.sp
.H 3 "LG.MODE"

.VL 5

.LI
Syntax: LG.MODE(arg)
.VL 5
.LI
arg : logon mode
.LI
range : "manual" or "preset"
.LI
default: manaul
.LE
.LI
Level: Define on the LU logon level.
.LI
Corresponding Macros: DLG.MODE , PLG.MODE
.LI
Description: This statement defines the logon mode for this logon entry.
If the mode is manual, all other logon definitions will be ignored for
this entry except for PROMPT macro.
.sp
Dependencies: Manual mode can only be used for entries with PS support. DLC
connections cannot be defined as manual since the circuit establishment is
always automatic.
.LI
Suggested Setting: For PS entries can define a mixture of manual 
and preset to allow maximum capability during logon.
.sp

.LE


.H 3 "LG.PUADDR"

.VL 5

.LI
Syntax: LG.PUADDR(addr)

.VL 5
.LI
addr = destination address
.LI
radix: hexadecimal
.LI
no. digits: 2
.LI
default: none
.LE
.LI
Level: Define on the LU logon level.
.LI
Description: This statement defines the destination address for
this logon entry. Refer to DLG.PUADDR for more details.
.LE


.H 3 "LG.SIZE"

.VL 5

.LI
Syntax: LG.SIZE(size)
.VL 5
.LI
size = destination screen size
.LI
radix : decimal
.LI
range : 480 or 1920 
.LI
default: 1920 (80 columns , 24 rows)
.LE
.LI
Level: Define on the LU logon level.
.LI
Corresponding Macros: DLG.SIZE , PLG.SIZE
.LI
Description: This statement defines the desired screen size on the destination
device.
This macro is only required if the destination is LU.T2.
.sp
Dependencies: This macro should only be defined for PS logon entries.
.LI
Suggested Setting: Set to screen size of destination display device.
.sp

.LE

.H 3 "LG.TCLASS"

.VL 5

.LI
Syntax: LG.TCLASS(xmt,rcv)
.VL 5
.LI
xmt = transmit throughput class
.LI
rcv = receive throughput class

.LI
radix: decimal
.LI
no. digits: up to 5
.LI
range: 75, 150, 300, 600, 1200, 2400, 4800, 9600, 19200, or 48000 baud
.LI
default: none
.LE
.LI
Level: Define on the general logon level.
.LI
Corresponding macros: DLG.TCLASS and PLG.TCLASS
.LI
Description: This statement defines the receive and transmit throughput
classes for this logon entry. Refer to DLG.TCLASS for more details.
.LE

.H 3 "LG.VC"

.VL 5

.LI
Syntax: LG.VC(type,mode)

.VL 5
.LI
type =  circuit type
.LI
range: "PVC" or "SVC"
.LI
default: "SVC"
.LI
mode = mode of this circuit
.LI
range: "manual" or "auto"
.LI
default: "manual"
.LE
.LI

Level: This statement must be defined on the LU logon level.
.LI
Corresponding macro(s): DLG.VC, PLG.VC
.LI
Description: This macro defines what circuit type will be
used for this LG.ENTRY. Refer to DLG.VC for more details.
.LE



.H 2 "PLG Statements"

.H 3 "PLG.CALL"
.VL 5
.LI
Syntax: PLG.CALL(arg)
.VL 5
.LI
arg = direction of SVC and/or PVC
.LI
range: "IN" or "OUT"
.LI
default: If the line is  secondary the default is "IN" and if primary the default is 
"OUT".
.LE
.LI
Level: This macro must be defined on the PU logon level.
.LI
Corresponding macro: DLG.CALL
.LI
Description: This statement defines whether this logon entry is
outgoing, "OUT", or incoming,"IN". Refer to DLG.CALL for more details.

.LE

.H 3 "PLG.CGROUP"

.VL 5

.LI
Syntax: PLG.CGROUP(group,group ...)

.VL 5
.LI
group = cug group number 
.LI
radix: decimal
.LI
range: 0 through 15
.LI
default: none
.LE
.LI
Level:  Define on the PU logon level.
.LI
Corresponding macro: DLG.CGROUP
.LI
Description: Define the Closed User Groups (CUGs) that this logon subscribes to.
Refer to DLG.CGROUP description for more details.

.LE
.H 3 "PLG.CHRSET"
.VL 5
.LI
Syntax: PLG.CHRSET(arg)
.VL 5
.LI
arg = character set
.LI
range: "ENGLISH", "KATAKANA" or "KANJI"
.LI
default: "ENGLISH"
.LE
.LI
Level: This macro must be defined on the PU logon level.
.LI
Corresponding macros: DLG.CHRSET and LG.CHRSET
.LI
Description: This macro defines the character set to be used by the
destination device for this logon entry. Refer to the DLG.CHRSET and LG.CHRSET macro descriptions
in the SNA System Generation Manual.
.LI
Dependencies: Only define for logon entries with PS level of support.
.LI
Suggested Setting: Leave at the default value unless using the XNA feature.

.LE
.H 3 "PLG.COLOR"
.VL 5
.LI
Syntax: PLG.COLOR(arg)
.VL 5
.LI
arg = clor capability
.LI
radix: "keyword"
.LI
range: "YES" or "NO"
.LI
default: "NO"
.LE
.LI
Level: This macro must be defined on the PU logon level.
.LI
Corresponding macros: DLG.COLOR and LG.COLOR
.LI
Description: This macro defines the color capability of the destination 
device for this logon entry.
.LI
Dependencies: This macro should only be defined for logon entries
with PS level of support.
.LI
Suggested Setting: If the destination of this logon entry is a device
with color capability, then set this macro to "YES". Otherwise set this macro
to "NO".

.LE
.H 3 "PLG.CRM"
.VL 5
.LI
Syntax: PLG.CRM(arg)
.VL 5
.LI
arg = connection request type
.LI
radix: decimal
.LI
range: 1, 2, 3, or 4
.LI
default: 3
.LE
.LI
Level: This macro must be defined on the PU logon level.
.LI
Corresponding macros: DLG.CRM and LG.CRM
.LI
Description: This macro is used to specify the connection request type to be
used, by this logon entry, to logon to the destination device. 

.LE

.H 3 "PLG.CUG"

.VL 5

.LI
Syntax: PLG.CUG(arg1,arg2)

.VL 5
.LI
arg = 
arg1 is INC (for incoming access) or blank (for no incoming access),
arg2 is OUT (for outgoing access) or blank (for no outgoing access).
.LE
.VL 5
.LI
Example: PLG.CUG(INC,OUT) - subscriber with incoming and
outgoing access.
.sp
PLG.CUG(OUT) - subscriber with just outgoing access.
.sp
PLG.CUG(INC) - subscriber with just incoming access.
.LE
.LI
Level:  Define on the PU logon level.
.LI
Corresponding macro: DLG.CGROUP
.LI
Description: This statement is used to define this logon entry's closed
user group access and subscription. Refer to the DLG.CUG description
for more details.

.LE
.H 3 "PLG.DEFAULT"

.VL 5

.LI
Syntax: PLG.DEFAULT

.LI
Level:  Define on the PU logon level, but after all PU macro definitions.
.LI
Corresponding macro: DLG.DEFAULT
.LI
Description: This statement identifies a group of PLG level macros
as the default logon entry for LUs attached to this PU. Any LU(s)
which do not have a  LG.ENTRY defined, will default to this default entry.
There can only be one default logon entry per PU.
.LI
Dependencies: This macro does NOT follow a PLG.ENTRY macro. Instead,
the PLG.DEFAULT macro will take the place of the PLG.ENTRY macro
before other PLG definitions within this same entry. Other PLG.ENTRY
macros can then follow these definitions.
.LI
Suggested Setting: If there will be LUs which will use
the exact same logon entry parameters, then the PLG.DEFAULT macro
should define this set of logon parameters once. Any LU 
using this default entry will NOT have a logon entry defined.
.sp
The current SNA HIF logon entry implementation works this way.
.LI
Example:
.sp
.nf
.ft C
  DLG.DEFAULT                 : default logon definitions
     DLG.LAYER(PS)
     DLG.DIALECT(SNADSP,DSP)  : over write DSP default
     ........                 : other DLG macros

  DLG.ENTRY(0)                : entry 0 logon definitions
  ...........                 : other DLG macros

   PU(0)                      : 
    PLG.DEFAULT               : define PU default logon entry
     PLG.LAYER(PS)          
     PLG.DIALECT(SNADSP)      : only SNA/DSP supported
    PLG.ENTRY(5)              : entry 5 logon definition
    ............              : other PLG macros

     LU(0)                    : this LU uses the PU default entry
     .....                    : LU level macros (no LG.ENTRY)

     LU(1)                    : this LU uses the PU default entry
     .....                    : LU level macros (no LG.ENTRY)

   PU(1)             
                              : this PU will use general default entry
.fi
.ft P

.LE
.H 3 "PLG.DIALECT"

.VL 5

.LI
Syntax: PLG.DIALECT(type,...)

.VL 5
.LI
type = dialect type
.LI
radix: "keyword"
.LI
range: "DSP", "SNADSP" and/or "X25"
.LI
default: If PS support then DSP dialect using SVCs  is the default. If
DLC support then X.25 dialect is the default.
.LE
.LI
Level: This statement must be defined on the PU logon level.
.LI
Corresponding Macro(s): DLG.DIALECT, LG.DIALECT
.LI
Description: This macro defines which dialects, in preferential order,
will be supported by this PLG.ENTRY. When this macro is defined, this entry will support
SNA/DSP dialect (SNADSP), the DSP dialect (DSP) and/or the X.25 dialect (X25).
If this macro is not defined the default dialect is DSP using SVCs, if the
entry is defined for PS support. If this entry is defined for DLC support, then
the default is the X.25 dialect.
.sp
An interface which has received an incoming circuit request, a NEEDLE, will
respond with a list of dialects which the incoming side can support. Each different dialect
supported in the interface is sent in this list. The outgoing side will
chose which dialect from this list to speak over this virtual circuit 
connection. The list of dialects is defined in preferential order
by this PLG.DIALECT macro. The first dialect defined in the outgoing sides
PLG.DIALECT macro which matches one of the dialects mentioned in
the list from the incoming side, will
be chosen. This one chosen dialect will be sent back to the incoming side as the
dialect response.
.sp
.LI
Dependencies: The X.25 dialect can only
be set for connections with DLC level of support. The DSP dialect can only be set for connections
with PS level of support, AND for SVCs.
.LI
Suggested Setting: This macro should be set to all the possible dialects which
might be used by this virtual circuit. If the destination is an X.25 interface, then
the X25 dialect should be defined. If the destination is an SNA interface which
supports SNA/DSP then this dialect should be also defined. If the destination
is an SNA interface which will not support SNA/DSP then DSP should be defined.
.sp
.LI
Example:
.nf
.ft C
.sp
PLG.ENTRY(0)
 PLG.LAYER(PS)
 PLG.DIALECT(SNADSP,DSP)  :SNA/DSP dialect is the first choice,
                          :DSP dialect is the second choice.
 .........                : other PLG macros
PLG.ENTRY(1)
 PLG.LAYER(DLC)
 PLG.DIALECT(X25,SNADSP)  :X.25 dialect is the first choice,
                          :SNA/DSP is the second choice.
 .....                    : other PLG macros
.ft P
.fi
.sp

.LE


.H 3 "PLG.DNIC"

.VL 5

.LI
Syntax: PLG.DNIC(id)

.VL 5
.LI
id = destination  data network identification code
.LI
radix: decimal
.LI
no. digits: 4 digits
.LI
default: 3106 (TYMNET DNIC)
.LE
.LI
Level: Define on the PU logon level.
.LI
Corresponding macros: DLG.DNIC
.LI
Description: This statement defines the data network identification code
for the destination network. Refer to the DLG.DNIC description.

.LE
.H 3 "PLG.ENTRY"

.VL 5

.LI
Syntax: PLG.ENTRY(entry)
.VL 5
.LI
entry = logon entry number
.LI
radix: decimal
.LI
range: 0 through 10, or ALL
.LI
default: none
.LE
.LI
Level: Define on the PU logon level.
.LI
Corresponding Macros: DLG.ENTRY, LG.ENTRY
.LI
Description: This statement defines the entry number of the following logon
selection. This macro is used to define what logon entry selections are
available to this PU. Either an entry already defined on the higher level
is chosen, ALL of the higher level DLG.ENTRY logons are chosen,
or a new entry is defined. 
.sp
If the entry number is already defined on the general level by DLG.ENTRY,
then this PU will be able to use that selection as defined by the higher level.
This PLG.ENTRY may define some logon information, on the PLG level, to
override what the higher level has defined.
.sp
If the "ALL" argument is used for this macro, then all of the DLG.ENTRY logons
are available to this PU. If this argument is set, there
should be NO further PLG logon macros defined under this one. Other PLG.ENTRY
sets can be defined as long as the total number of entries does not exceed
10 and there are no duplicate identifiers.
.sp
If the entry number is NOT already defined on the general level, then this 
is a new entry. The number of this entry does not need to be in sequential order.

.LI
Dependencies: Must define after PU macro definitions. 
.LI
Example: In the following example, there is one general level entry defined
, DLG.ENTRY(0). On the PU level, this entry has been chosen with the username
modification. Also on the PU level one new entry was added, PLG.ENTRY(1).
.sp
.nf
DLG.ENTRY(0)
  DLG.PROMPT(ACCESS GATEWAY)
  DLG.MODE(PRESET)
  DLG.LOGON(0,C)
  DLG.LOGON(1,BUBBC)
  DLG.LOGON(2,SMITH"BA855"BBABRACADABRA)
  DLG.CRM(2)
  DLG.DIALECT(SNADSP,DSP)
    PU(0)
      PLG.ENTRY(0)
        PLG.LOGON(0,newuser)
      PLG.ENTRY(1)
        PLG.LOGON(0,C)
.fi
  

.LE


.H 3 "PLG.ERSP"

.VL 5

.LI
Syntax: PLG.ERSP(arg)

.VL 5
.LI
.VL 5
arg = is YES (for end-to-end responses) or NO (for local
.LE
responses).
.LE
.VL 5
.LI
Example: PLG.ERSP(YES) - VC supports end-to-end SNA responses on the
printer circuit.
.LE
.LI
Level:  Define on the PU logon level.
.LI
Corresponding Macros: DLG.ERSP, LG.ERSP
.LI
Description: This statement is used to define a PU logon level default
for the mode of the native 3270 printer operation.
Two modes of operation for the
native printer are possible - HP (High Performance/limited error recovery) and
LP (Low Performance/full error recovery). The modes of operation differ in
their handling of the SNA responses. HP mode supports the local handling,
LP mode sends SNA responses end to end. This macro is new for version 5.
.LI
Dependencies: this macro affects only the native 3270 printer feature
(PS support). When used for the CRT logon entry it affects the mode
of operation of the printer associated with this CRT (if requested
by the operator).
.LI
Suggested Setting: Set to YES only if the HP mode error recovery is not
sufficient.
.LI
Message(s): PLG.ERSP macro is defined at the wrong level.
.VL 5
.LI

.LE
.LE

.H 3 "PLG.LAYER"

.VL 5

.LI
Syntax: PLG.LAYER(layer)
.VL 5
.LI
layer = PU SNA layer of support
.LI
range: "DLC" or "PS"
.LI
default: "PS"
.LE
.LI
Level: Define on PU logon level.
.LI
Corresponding Macros: DLG.LAYER
.LI
Description: This statement describes the SNA layer of support provided
by this PU PLG entry. Refer to the DLG.LAYER description.
.LE

.H 3 "PLG.LINE"

.VL 5

.LI
Syntax: PLG.LINE(line#)

.VL 5
.LI
line# = destination line number
.LI
radix: decimal
.LI
range: 0 through 15
.LI
default: none
.LE
.LI
Level: Define on PU logon level.
.LI
Corresponding macros: DLG.LINE and LG.LINE
.LI
Description: This statement defines the destination line number for this
logon entry. Refer to the DLG.LINE macro description for more details.
.LE
.H 3 "PLG.LOGON"

.VL 5

.LI
Syntax: PLG.LOGON(level,username"bahost#"bbpassword)
.VL 5
.LI
level = logon level
.VL 5
.LI
radix: decimal
.LI
range: 0 through 4
.LI
default: level 0
.LE
.LI
username = valid network username
.VL 5
.LI
range: upto 32 characters long
.LI
default: none
.LE
.LI
"ba = ascii representation of ":"
.LI
host# = destination host number
.VL 5
.LI
radix: decimal
.LI
no. digits: 1 to 5
.LI
default: none
.LE
.LI
"bb = ascii representation of ";"
.LI
password = password for specified username
.VL 5
.LI
range: TYMNET valid password
.LI
default: none
.LE
.LE
.LI
Level: Define on the general logon level.
.LI
Corresponding Macros: DLG.LOGON, LG.LOGON
.LI
Description: This statement defines the logon string which should be
used during the preset logon attempt. The LEVEL parameter defines the
logon level of this logon entry. A logon level of
0 indicates this logon string is not going through a gateway. Higher levels
on the other hand, indicate that gateways are present.
.sp
USERNAME defines the username used during circuit building for outgoing
logon entries. For outgoing logon entries, this is the username used
when the circuit is built.
.sp
HOST# defines the destination host number used for this logon entry during
circuit building.
.sp
And, finally, PASSWORD defines the password used during circuit building
for outgoing logon entries.
.LI
Dependencies: This statement should be defined for logon entries defined
as outgoing SVCs and for those defined as incoming and outgoing PVCs.
If the macro is not defined at this level it could still be defined at 
lower levels. If this macro is not detected at the lower levels, however,
a warning message will be issued during assembly time to warn the users.
This warning should be ignored if the entry is defined as incoming SVC.
.LI
Example: In the following example there are 3 logon levels. Levels
0 and 1 go through intermediate gateways, and level 2 is the
final destination.
.sp
.nf
PLG.ENTRY(0)
  PLG.PRMPT(ACCESS GATEWAY)
  PLG.MODE(PRESET)
  PLG.LOGON(0,C)
  PLG.LOGON(1,BUBBC)
  PLG.LOGON(2,SMITH"BA855"BBABRACADABRA)
.fi

.LE

.H 3 "PLG.LTYPE"
.VL 5
.LI
Syntax: PLG.LTYPE(arg)
.VL 5
.LI
arg = destination LU type
.LI
radix: decimal
.LI
range: 1, 2, or 3
.LI
default: 2.
.LE
.LI
Level: This macro must be defined on the PU logon level.
.LI
Corresponding macros: DLG.LTYPE and LG.LTYPE
.LI
Description: This macro defines the LU type of the destination LU.
.LI
Dependencies: Only define this macro for logon entries with
PS level of support.
.LI
Suggested Setting: Set this macro to the same value as the destination
LU's LU.TYPE.

.LE
.H 3 "PLG.LUADDR"

.VL 5

.LI
Syntax: PLG.LUADDR(addr)

.VL 5
.LI
addr = destination LU address or label
.LI
radix: hexadecimal
.LI
no. digits: 2
.LI
range: -1 <= addr <= ff
.LI
default: -1
.LE
.LI
Level: Define on the PU logon level.
.LI
Corresponding macros: DLG.LUADDR and LG.LUADDR
.LI
Description: This macro defines the destination LU label or address
for logon entries with
the PS level of support. Refer to DLG.LUADDR description.
.LE
.sp

.H 3 "PLG.MODE"
.VL 5
.LI
Syntax: PLG.MODE(arg)
.VL 5
.LI
arg = logon mode type
.LI
radix: "keyword"
.LI
range: "MANUAL" or "PRESET"
.LI
default: manual
.LE
.LI
Level: This macro must be defined on the PU logon level.
.LI
Corresponding macros: DLG.MODE and LG.MODE
.LI
Description: This macro specifies whether this logon will be manual
or preset. The logon mode setting will function differently
depending on what level of support the logon entry provides.
.sp
If the mode is manual, all other logon definitions will be ignored for
this entry except for PROMPT macro.
.sp
For logon entries with the DLC level of support, this macro cannot be
set to manual, it must be set to preset. When preset is used for DLC support,
the logon procedure does not require any end user intervention. 
.sp
For logon entries with PS level of support, this macro may be set
to either manual or preset. When set to manual, the end user is 
prompted for destination logon information. If the macro is set to preset
then once the end user has selected this logon entry, no more end user
itervention is required. All logon information should already have been
defined.
.LI
Dependencies: Only set to manual for PS support. 

.LE
.H 3 "PLG.PROMPT"
.VL 5
.LI
Syntax: PLG.PROMPT(arg)
.VL 5
.LI
arg = prompt text
.LI
radix: ASCII or HEX
.LI
default: ascii
.LE
.LI
Level: This macro must be defined on the PU logon level.
.LI
Corresponding macros: DLG.PROMPT and LG.PROMPT
.LI
Description: This macro specifies the prompt message displayed on the
logon selection menu for this logon entry.
.LI
Dependencies: Only define one of these macros per logon entry.

.LE

.H 3 "PLG.PUADDR"

.VL 5

.LI
Syntax: PLG.PUADDR(addr)
.VL 5
.LI
addr = destination PU address
.LI
radix: hexadecimal
.LI
no. digits: 2
.LI
default: none
.LE
.LI
Level: Define on the PU logon level.
.LI
Corresponding macros: DLG.PUADDR and LG.PUADDR
.LI
Description: This statement defines the destination address for this
logon entry. Refer to the DLG.PUADDR description for more details.
.LE



.H 3 "PLG.RVCHARGE"

.VL 5

.LI
Syntax: PLG.RVCHARGE(arg)
.VL 5
.LI
arg = reverse charge subscription status

.LI
range: "yes", "no" or "both"
.LI
default: non subscriber to reverse charge
.LE
.LI
Level: Define on the PU logon level.
.LI
Corresponding macro: DLG.RVCHARGE
.LI
Description: This statement specifies whether a reverse charge request will
be accepted or not by this logon entry. Refer to the DLG.RVCHARGE
description for more details.

.LE
.H 3 "PLG.SELECTION"

.VL 5

.LI
Syntax: PLG.SELECTION(text,type)
.VL 5
.LI
text = selection menu heading
.LI
radix: ascii or hex characters
.LI
default: none
.LI
type = type of text
.LI
radix: ASCII or HEX
.LI
default: ascii
.LE
.LI
Level: Define on the PU logon level.
.LI
Corresponding Macros: DLG.SELECTION , LG.SELECTION
.LI
Description: This statement specifies the heading line for the logon 
selection menu.
.sp
Dependencies: Should not be defined for DLC support since there will be
no menus displayed for these entries.
Define for logon entries with PS level of support only.
.LI
Suggested Setting: Define the text to specify the usage of this menu.
.sp

.LE

.H 3 "PLG.SIZE"
.VL 5
.LI
Syntax: PLG.SIZE(arg)
.VL 5
.LI
arg = destination device screen size
.LI
radix: decimal
.LI
range: 480 or 1920
.LI
default: 1920
.LE
.LI
Level: This macro must be defined on the PU logon level.
.LI
Description: This macro defines the size of the destination device
screen for this logon entry. 
.LI
Dependencies: This macro is only required for preset logon entries.
This macro is only required if the destination is LU.T2.
.LI
Suggested Setting: Set to screen size of destination display device.
.LE

.H 3 "PLG.TCLASS"

.VL 5

.LI
Syntax: PLG.TCLASS(xmt,rcv)
.VL 5
.LI
xmt = transmit throughput class
.LI
rcv = receive throughput class

.LI
radix: decimal
.LI
no. digits: up to 5
.LI
range: 75, 150, 300, 600, 1200, 2400, 4800, 9600, 19200, or 48000 baud
.LI
default: value defined in SPEED macro for both rcv and xmt
.LE
.LI
Level: Define on the PU logon level.
.LI
Corresponding macro: DLG.TCLASS, LG.TCLASS
.LI
Description: This statement defines the receive and transmit throughput
classes for this logon entry. Refer to the DLG.TCLASS description.

.LE

.H 3 "PLG.VC"

.VL 5

.LI
Syntax: PLG.VC(type,mode)

.VL 5
.LI
type =  circuit type
.LI
range: "PVC" or "SVC"
.LI
default: "SVC"
.LI
mode = mode of this circuit
.LI
range: "manual" or "auto"
.LI
default: "manual"
.LE
.LI
Level: This statement must be defined on the PU logon level.
.LI
Corresponding macro(s): DLG.VC, LG.VC
.LI
Description: This macro defines what circuit type will be
used for this PLG.ENTRY. Refer to DLG.VC macro description.

.LE

.H 3 "PLG.X25CHANNEL"

.VL 5

.LI
Syntax: PLG.X25CHANNEL(CH#)
.VL 5
.LI
CH# = destination channel number
.LI
radix: hexadecimal
.LI
default: none
.LE
.LI
Level: Define on the PU logon level.
.LI
Corresponding Macros: DLG.X25CHANNEL
.LI
Description: This statement defines the destination X.25 channel number for this 
logon entry. 

.LE

.sp 2

.H 1 "XNA Supports" 
.sp 2
This appendix describes those macro statements required to define and
specify environments, paramaters and characteristics for SNA/FNA/HNA
that use Japanese language.
.sp 4
.H 2 "Macros for XNA Native and Virtual Host modes" 
.sp 2
This section lists and describes those macro statements which apply
not only to XNA Native Mode but also to XNA Virtual Host Mode.

.H 3 "Network and ISIS Statement" 
.sp 2
.H 4 "OPTION(JAPANESE,string1) statement" 
.sp
Syntax: OPTION(JAPANESE,string1)

.VL 5
string1 = can be YES or NO.
.LE
.sp
.VL 5
.LI Default:
Default is NO.
.LI Description:
JAPANESE YES option directs the interface to assemble in routines for
handling Japanese Katakana and Kanji character sets.

This option statement is required explicitly only if there is none of
xxxxx.CHRSET(KATAKANA) or XXXX.CHRSET(KANJI) statement coded in
TYMFILE.
.sp
.LE

.H 3 "General Statements" 
.sp
.H 4 "GPU.ESYS" 
.sp
Syntax: GPU.ESYS(string)

.VL 5
string = can be IBM, FUJITSU, or HITACHI.
.LE
.sp
.VL 5
.LI Default: 
Default is IBM.
.LI Description:
This statement specifies the system type (= manufacturer) of
external system that is connected to the interface.
.sp
.LE
.sp 2
.H 4 "GPU.CHRSET"

Syntax: GPU.CHRSET(arg)

.VL 5
arg = ENGLISH, KATAKANA, AND KANJI. 
.LE
.sp
.VL 5
.LI Default:
Default is ENGLISH.
.LI Description:
To specify the character set supported by the PU.
.sp
.LE



.H 3 "LINE Statements" 
.sp
.H 4 "EXT.SY" 
.sp
Syntax: EXT.SY(string)

.VL 5
string = can be IBM, FUJITSU, or HITACHI.
.LE
.sp
.VL 5
.LI Default:
Default is IBM.
.LI Description: 
This statement specifies the system type (= manufacturer) of
external system that is connected to the interface.
.sp
.LE

.H 3 "PU Statements" 
.sp
.H 4 "PU.ESYS" 
.sp
Syntax: PU.ESYS(string)

.VL 5
string = can be IBM, FUJITSU, or HITACHI.
.LE
.sp
.VL 5
.LI Default: 
Default is IBM.
.LI Description: 
This statement specifies the system type (= manufacturer) of
external system that is connected to the interface.
.sp
.LE
.sp
.H 4 "PU.CHRSET" 
.sp
Syntax: PU.CHRSET(string)

.VL 5
string = can be ENGLISH, KATAKANA, or KANJI.
.LE
.sp
.VL 5
.LI Default:
Default is ENGLISH.
.LI Description: 
This statement specifies the character set supported by 
the PU.
.sp
.LI Note:
When KATAKANA or KANJI is specified, option JAPANESE is also
automatically selected.
.sp
.LE

.H 2 "Macros for XNA Native Mode" 
.sp
This section lists and describes those macro statements which apply
only to XNA Native Mode. These macro statements are used to either
specify the desired character set at the destination (i.e. Host Interface)
or specify that a message to be put up on the Network Service Screen or
logon on selection screen is defined by EBCDIC or ASCII code set.
.sp
.H 3 "Macros for Character Set Selection" 
.sp
All macro statements listed in this section are added (i.e. NEW) to
support XNA KATAKANA/KANJI feature.
.sp

.H 3 "DLG.CHRSET"

.VL 5

.LI
Syntax: DLG.CHRSET(chrset)
.VL 5
.LI
chrset = desired character set on the destination device
.LI
range : english , katakana , or kanji
.LI
default: english
.LE
.LI
Level: Define on the general logon level.
.LI
Corresponding Macros: PLG.CHRSET , LG.CHRSET
.LI
Description: This statement defines the desired character set on the destination
device.
.sp
Dependencies: This macro should only be defined for PS connections.
.LI
Suggested Setting: Leave at the default value unless using the XNA feature.
.sp

.LE
.sp 2
.H 3 "LG.CHRSET"

.VL 5

.LI
Syntax: LG.CHRSET(chrset)
.VL 5
.LI
chrset = desired character set on the destination device
.LI
range : english , katakana , or kanji
.LI
default: english
.LE
.LI
Level: Define on the lu logon level.
.LI
Corresponding Macros: DLG.CHRSET , PLG.CHRSET
.LI
Description: This statement defines the desired character set on the destination
device.
.sp
Dependencies: This macro should only be defined for PS connections.
.LI
Suggested Setting: Leave at the default value unless using the XNA feature.
.sp

.LE

.H 3 "Macros for Defining SCREENs" 
.sp
All macro statements in this secction are slightly modified with one more
parameter (= argument) from existing macro statements. For detailed
description of each of them, please see earlier sections.
.sp 2
.H 4 "DNS.MENU" 
.sp
Syntax: DNS.MENU(string1,string2)
.sp
 
.VL 5
string2 = can be either EBCDIC or ASCII.
.LE
.br
For 
string1, please see DNS.MENU statement described in earlier section.
.sp
.VL 5
.LI Default: 
If string2 is omitted, string1 must be coded in ASCII.
.LI Description:
This statement specifies that the code set used to
code string1 is  EBCDIC or ASCII.
.sp
This statement is a 'GENERAL LEVEL' macro statement and is used
in defining network service screen.
.sp
.LE
.sp 2
.H 4 "DNS.WORD" 
.sp
Syntax: DNS.WORD(string1,string2)
.sp
 
.VL 5
string2 = can be either EBCDIC or ASCII.
.LE
.br
For 
string1, please see DNS.WORD statement described in earlier section.
.sp
.VL 5
.LI Default: 
If string2 is omitted, string1 must be coded in ASCII.
.LI Description: 
This statement specifies that the code set used to
code string1 is  EBCDIC or ASCII.
.br
This statement is a 'GENERAL LEVEL' macro statement and is used
in defining network service screen key word.
.sp
.LE

.H 3 "DLG.SELECTION"

.VL 5

.LI
Syntax: DLG.SELECTION(text,type)
.VL 5
.LI
text = selection menu heading
.LI
radix: ascii or hex characters
.LI
default: none
.LI
type = type of text
.LI
radix: ASCII or HEX
.LI
default: ascii
.LE
.LI
Level: Define on the general logon level.
.LI
Corresponding Macros: PLG.SELECTION , LG.SELECTION
.LI
Description: This statement specifies the heading line for the logon 
selection menu.
.sp
Dependencies: Should not be defined for DLC support since there will be
no menus displayed for these entries.
Define for logon entries with PS level of support only.
.LI
Suggested Setting: Define the text to specify the usage of this menu.
.sp

.LE

.sp
.H 3 "DLG.PROMPT"

.VL 5

.LI
Syntax: DLG.PROMPT(text,type)
.VL 5
.LI
text = prompt message
.LI
radix: ascii or hex characters
.LI
default: "GENERIC PROMPT"
.LI
type = type of text
.LI
radix: ASCII or HEX
.LI
default: ascii
.LE
.LI
Level: Define on the general logon level.
.LI
Corresponding Macros: PLG.PROMPT , LG.PROMPT
.LI
Description: This statement specifies the prompt message that is to be
displayed on the logon selection menu for this entry. If this macro is
missing the default will be displayed.
.sp
Dependencies: Should not be defined for DLC support since there will be
no menus displayed for these entries.
Define for logon entries with PS level of support only.
.LI
Suggested Setting: Define the text to specify the usage of this entry.
If this is a manual logon then this message should specify that fact.
For preset logons, specify the destination host or gateways.
.sp

.LE


.H 4 "NS.MENU" 
.sp
Syntax: NS.MENU(string1,string2)
.sp
 
.VL 5
string2 = can be either EBCDIC or ASCII.
.LE
.br
For string1, please see NS.MENU statement described in earlier section.
.sp
.VL 5
.LI Default:
If string2 is omitted, string1 must be coded in ASCII.
.LI Description:
This statement specifies that the code set used to
code string1 is  EBCDIC or ASCII.

This statement is a 'LU LEVEL' macro statement and is used
in defining network service screen.
.sp
.LE
.sp 2
.H 4 "NS.WORD" 
.sp
Syntax: NS.WORD(string1,string2)
.sp
 
.VL 5
string2 = can be either EBCDIC or ASCII.
.LE
.br
For string1, please see NS.WORD statement described in earlier section.
.sp
.VL 5
.LI Default: 
If string2 is omitted, string1 must be coded in ASCII.
.LI Description: 
This statement specifies that the code set used to
code string1 is  EBCDIC or ASCII.
.br
This statement is a 'LU LEVEL' macro statement and is used
in defining network service screen key word.
.sp
.LE

.H 3 "LG.SELECTION"

.VL 5

.LI
Syntax: LG.SELECTION(text,type)
.VL 5
.LI
text = selection menu heading
.LI
radix: ascii or hex characters
.LI
default: none
.LI
type = type of text
.LI
radix: ASCII or HEX
.LI
default: ascii
.LE
.LI
Level: Define on the LU logon level.
.LI
Corresponding Macros: DLG.SELECTION , PLG.SELECTION
.LI
Description: This statement specifies the heading line for the logon 
selection menu.
.sp
Dependencies: Should not be defined for DLC support since there will be
no menus displayed for these entries.
Define for logon entries with PS level of support only.
.LI
Suggested Setting: Define the text to specify the usage of this menu.
.sp

.LE
.sp 2
.H 3 "LG.PROMPT"

.VL 5

.LI
Syntax: LG.PROMPT(text,type)
.VL 5
.LI
text = prompt message
.LI
radix: ascii or hex characters
.LI
default: "GENERIC PROMPT"
.LI
type = type of text
.LI
radix: ASCII or HEX
.LI
default: ascii
.LE
.LI
Level: Define on the LU logon level.
.LI
Corresponding Macros: DLG.PROMPT , PLG.PROMPT
.LI
Description: This statement specifies the prompt message that is to be
displayed on the logon selection menu for this entry. If this macro is
missing the default will be displayed.
.sp
Dependencies: Should not be defined for DLC support since there will be
no menus displayed for these entries.
Define for logon entries with PS level of support only.
.LI
Suggested Setting: Define the text to specify the usage of this entry.
If this is a manual logon then this message should specify that fact.
For preset logons, specify the destination host or gateways.
.sp
.LE

.H 2 "Macros for XNA Virtual Host Mode" 
.sp 2 
This section lists and describes those macro statements which apply
only to XNA Virtual Host Mode.
.sp 4
.H 3 "Network and ISIS Statement" 
.sp 2
.H 4 "OPTION(WSFQRP,string) statement" 
.sp
Syntax: OPTION(WSFQRP,string)
 
.VL 5
string = can be YES or NO.
.LE
.sp
.VL 5
.LI Default: 
Default is NO.
.LI Description:
WSFQRP YES option directs the interface to assemble in routines for
locally handling WSF Query Replay command from XNA host.
.sp

If WSFQRP is NO, the WSF Query Replay command will be transparent to
XNA/VH and passed to remote interface and remote controller/device.
.sp
.LE
.H 1 "Sample Tymfiles"

.H 2 "Asynch to 3270 Connections"
.sp
.nf

:***************************************************************************
:
:     hif for sna testing version 5.00
:***************************************************************************
:
:
	msiotp(m.typ1)
	option(bndntf,1)
        option(opmon,1)              :turns on xddt commands
 print
 begintym
:	define system parameters
    freeze(yes)
    timezone(-8)
    isiring(4092)
    isoring(4092)
    bufsize(90)
    snafeature(hdsp)

:	define general defaults statements
      general
:	general statements - link level
      gsecondary
      ghost(1626,16,14)
      gspeed(9600)
      gdatamode(halfduplex)
      gdial(no)
      gpasslim(3)
      gswitched(yes)
      grtscts(no)
      greplyto(3)
      gnum.retries(7)
      gpaus.retries(3)
      gseq.retries(7)
      gpause(1)
      gframesize(526)
      gwindowsize(7)
      grcvsiofr(8)
      gistatus(active)     
:	general statements - pu level
      gpu.itype(2)
      gpu.etype(4)
      gpu.pactpu(141112404040404040404000000701000000000000)
:	general statements - lu level
      glu.pactlu(100d010100850000000c06010001000000)
      glu.color(no)
      glu.size(1920)

:	define specific features

    line(0)
       pu(0)
	pu.addr(40)
	pu.label(40)
	lu(0)                       
	  lu.addr(2)    
	  lu.label(40)
	  lu.type(2)
	lu(1)                     
	  lu.addr(3)    
  	  lu.label(0c1)
	  lu.type(2)
	lu(2)
	  lu.addr(4)    
	  lu.label(0c2)
	  lu.type(2)
	lu(3)			
	  lu.addr(5)    
	  lu.label(0c3)
	  lu.type(2)
	lu(4)
	  lu.addr(6)
	  lu.label(0c4)
	  lu.type(2)
	lu(5)
	  lu.addr(7)
	  lu.label(0c5)
	  lu.type(2)
	lu(6)
	  lu.addr(8)
	  lu.label(0c6)
	  lu.type(1)
	lu(7)
	  lu.addr(9)
	  lu.label(0c7)
	  lu.type(3)
        lu(8)
          lu.addr(10)
          lu.label(0c8)
          lu.type(1)
        lu(9)
          lu.addr(11)
          lu.label(0c9)
          lu.type(3)
  
      pu(1)    
	pu.addr(0c1)
	pu.label(0c1)
        lu(0)
          lu.addr(2)  
	  lu.label(40)
	  lu.type(2)
	lu(1)                        
	  lu.addr(3)
  	  lu.label(0c1)
	  lu.type(1)
	lu(2)
	  lu.addr(4)
	  lu.label(0c2)
	  lu.type(2)
	lu(3)			
	  lu.addr(5)
	  lu.label(0c3)
	  lu.type(1)
	lu(4)
	  lu.addr(6)
	  lu.label(0c4)
	  lu.type(2)
	lu(5)
	  lu.addr(7)
	  lu.label(0c5)
	  lu.type(1)
	lu(6)
	  lu.addr(8)	 
          lu.label(0c6)
	  lu.type(2)
	lu(7)
	  lu.addr(9)
	  lu.label(0c7)
	  lu.type(1)
        lu(8)
          lu.addr(10)
          lu.label(0c8)
          lu.type(2)
        lu(9)
          lu.addr(11)
          lu.label(0c9)
          lu.type(1)
        lu(10)
          lu.addr(12)
          lu.label(4a)
          lu.type(2)
        lu(11)
          lu.addr(13)
          lu.label(4b)
          lu.type(1)
        lu(12)                          :for crm4
          lu.addr(14)
          lu.label(4c)
          lu.type(2)
        lu(13)                          :for crm4
          lu.addr(15)
          lu.label(4c)
          lu.type(1)
        lu(14)                          :for crm4
          lu.addr(16)
          lu.label(4d)
          lu.type(2)        
        lu(15)                         :for crm4
          lu.addr(17)
          lu.label(4d)
          lu.type(1)
        lu(16)                        :for crm4
          lu.addr(18)
          lu.label(4e)
          lu.type(2)
        lu(17)                         :for crm4
          lu.addr(19)
          lu.label(4e)
          lu.type(3)
        lu(18)                      :for crm4
          lu.addr(20)
          lu.label(4f)
          lu.type(2)
        lu(19)                    :for crm4
          lu.addr(21)
          lu.label(4f)
          lu.type(3)

 endtym
.bp
.H 2 "Native Printer"
.nf

.sp
:Hif and Tif tymfile for native printer
:
	SUBTTL	(SNA-TI) INTERFACE TYM FILE - SNAT00.T00
:	OPTION(FCNGRP,1)
	MSIOTP(M.TYP0)
	OPTION(BNDNTF,1)
 NOPRINT
  BEGINTYM
:	DEFINE SYSTEM PARAMETERS
:   SIONVR(E)
:    SYS.SW(PHTIMO,YES)
      FREEZE(YES)
      TIMEZONE(-8)
      ISIRING(4092)
      ISORING(4092)
      BUFSIZE(90)
      ACTHST(1532)
      SNAFEATURE(HDSP)
:     MUPD.INTERVAL(1)
:     MLOG.TBL(50)
:
:	DEFINE GENERAL DEFAULTS STATEMENTS
    GENERAL
      GSECONDARY
      GHOST(1533,2,1)
      GCUGROUP(0,3210,11C20000)
      GCUGROUP(1,9999,0FFFF000)
      GCUGROUP(2,9999,0FFFF000)
      GCUGROUP(3,1999,0FFFF000)
      GSPEED(9600)
      GDATAMODE(HALFDUPLEX)
      GDIAL(NO)
      GSWITCHED(YES)
      GRTSCTS(NO)
      GREPLYTO(3)
      GNUM.RETRIES(7)
      GPAUS.RETRIES(3)
      GSEQ.RETRIES(7)
      GPAUSE(1)
      GFRAMESIZE(267)
      GWINDOWSIZE(7)
      GRCVSIOFR(8)
      GISTATUS(ACTIVE)
:
:	GENERAL STATEMENTS - PU LEVEL
:
      GPU.ITYPE(4)
      GPU.ETYPE(2)
      GPU.PLABEL(40)
      GPU.QACTPU(09110201050000000000)
      GPU.PACTPU(141112404040404040404000000701000000000000)
      GPU.QDACTPU(021201)
:      GPU.PDACTPU(030D0201)
:
:	GENERAL STATEMENTS - LU LEVEL
:
      GLU.TYPE(2)
      GLU.LLABEL(40)
      GLU.itimout(60)
      GLU.QACTLU(030D0201)
      GLU.PACTLU(100D010100850000000C06010001000000)
      GLU.QDACTLU(010E)
:      GLU.PDACLU(010E)
      GLU.BIND(1F31010303B1903080000087F80000020000000000185000007E000003E3E2D6)
      GLU.UNBIND(033202B4)
      GLU.COLOR(NO)
      GLU.SIZE(1920)
:	GLU.IT(2)
:	GLU.AT(20)
:
:	GENERAL STATEMENTS - LU.PVC LEVEL
:
:	DEFINE THE GENERAL NETWORK SERVICE MENU STATEMENTS
      DNS.MENU(TYMNET SNA NETWORK INTERFACE)
	DNS.KEY(PF1)
	DNS.WORD(NETSCN)
:
:	DEFINE LOGON SELECTION MENU STATEMENTS
:
      DLG.SELECTION(LOGON SELECTION MENU)
	DLG.ENTRY(0)
	  DLG.PRMPT(MANUAL LOGON)
	  DLG.MODE(MANUAL)
	DLG.ENTRY(1)
	  DLG.PRMPT(ACCESS BUBBNET 2112-1 HIF CRT)
	  DLG.MODE(PRESET)
:for auto svc
	dlg.vc(svc,1)
	dlg.call(out)
	dlg.layer(ps)
	dlg.dialect(snadsp)
	  DLG.LOGON(0,isistech"BA1533"BBmulti=ple)
	  DLG.LINE(1)
	  DLG.PUADDR(40)
	  DLG.COLOR(NO)
	  DLG.SIZE(1920)
	  DLG.LTYPE(2)
	  DLG.CRM(3)
	DLG.ENTRY(2)
	  DLG.PRMPT(ACCESS BUBBNET 2112-1 HIF PRT)
	  DLG.MODE(PRESET)
	dlg.vc(svc)
	dlg.call(out)
	dlg.layer(ps)
	dlg.dialect(snadsp)
	  DLG.LOGON(0,isistech"BA1533"BBmulti=ple)
	  DLG.LINE(1)
	  DLG.PUADDR(40)
	  DLG.LTYPE(1)
	  DLG.COLOR(NO)
	  DLG.SIZE(1920)
	  DLG.CRM(3)

:	DEFINE SPECIFIC FEATURES

    LINE(0)
      SWITCHED(NO)
      PRIMARY
      PRI.MAXLU(1,1)
      SPEED(9600)
      FRAMESIZE(267)
      DIAL(NO)
      REPLYTO(5)
      PAUS.RETRIES(5)
      PAUSE(2)
      PU(0)
	PU.QACTPU(09110201050000000000)
	PU.QDACTPU(021201)
	PU.ADDR(40)
	PU.LABEL(40)		:LUNAME CHANGE
	PU.ETYPE(2)
	plg.entry(all)
	LU(0)
:	  LU.VTI(no)
	  LU.ADDR(2)
	  LU.LABEL(0C1)
	  LU.QACTLU(030D0201)
	  LU.QDACTLU(010E)
  LU.BIND(1F31010303B1903080000087F80000020000000000185000007E000003E3E2D6)
	  LU.TYPE(2)
:	  LU.PVC(NO)
	  NS.KEY(PF1)
	  LU.PRT(03)
	  LU.PRT(05)
	  lg.entry(1)

	LU(1)
:	LU.VTI(no)
	  LU.ADDR(3)
	  LU.LABEL(0C2)
	  LU.QACTLU(030D0201)
	  LU.QDACTLU(010E)
  LU.BIND(2331010303B190308000018587000001000000E1000000000000000007C4E2D7D9C9D5E3)
	  LU.TYPE(1)
	  lg.entry(2)

	LU(2)
:	  LU.VTI(no)
	  LU.ADDR(4)
	  LU.LABEL(0C1)
	  LU.QACTLU(030D0201)
	  LU.QDACTLU(010E)
  LU.BIND(1F31010303B1903080000087F80000020000000000185000007E000003E3E2D6)
	  LU.TYPE(2)
:	  LU.PVC(NO)
	  NS.KEY(PF1)
	  LU.PRT(03)
	  LU.PRT(05)
	  lg.entry(2)

	LU(3)
:	LU.VTI(no)
	  LU.ADDR(5)
	  LU.LABEL(0C1)
	  LU.QACTLU(030D0201)
	  LU.QDACTLU(010E)
  LU.BIND(2331010303B190308000018587000001000000E1000000000000000007C4E2D7D9C9D5E3)
	  LU.TYPE(1)
	  lg.entry(1)

:
:	line (1)
:
:    LINE(1)
:      SWITCHED(NO)
:      PRIMARY
:      PRI.MAXLU(1,0)
:      SPEED(9600)
:      FRAMESIZE(267)
:      DIAL(NO)
:      REPLYTO(5)
:      PAUS.RETRIES(5)
:      PAUSE(2)
:      PU(0)
:	PLG.SELECTION(PLG SELECTION MENU)
:	PLG.ENTRY(3)
:	  PLG.PROMPT(PLG ENTRY 3)
:	  PLG.MODE(MANUAL)
:	PLG.ENTRY(8)
:	PLG.ENTRY(0)
:	PLG.ENTRY(1)
:	  PLG.PROMPT(PLG ENTRY 1)
:	  PLG.MODE(PRESET)
:	  PLG.LINE(1)
:	  PLG.PUADDR(40)
:	  PLG.LUADDR(0C2)
:	  PLG.LTYPE(2)
:	  PLG.LOGON(0,C)
:	  PLG.LOGON(1,ISISTECH"BA864"BBBUG-SPRAY)
:	  PLG.COLOR(NO)
:	  PLG.SIZE(1920)
:	  PLG.CRM(3)
:	  PLG.CALL(OUT)
:	  PLG.CGROUP(0,0,1)
:	  PLG.CUG(INC)
:	  PLG.RVCHARGE(YES)
:	PLG.ENTRY(2)
:	PLG.ENTRY(4)
:	PU.QACTPU(09110201050000000000)
:	PU.QDACTPU(021201)
:	PU.ADDR(40)
:	PU.LABEL(40)		:LUNAME CHANGE
:	PU.ETYPE(2)
:	LU(0)
:	  LU.VTI(YES)
:	  LU.ADDR(2)
:	  LU.LABEL(0C1)
:	  LU.QACTLU(030D0201)
:	  LU.QDACTLU(010E)
:  LU.BIND(1F31010303B1903080000087F80000020000000000185000007E000003E3E2D6)
:	  LU.TYPE(2)
::	  LU.PVC(NO)
:	  NS.KEY(PF1)
:	  LG.SELECTION(LG SELECTION MENU,0)
:	  LG.ENTRY(8)
:	  LG.ENTRY(3)
:	  LG.ENTRY(1)
:	    LG.PROMPT(LG ENTRY 1)
:	    LG.MODE(PRESET)
:	    LG.LINE(1)
:	    LG.PUADDR(0C2)
:	    LG.CRM(3)

:
:	line(1)
:
    LINE(1)
      SWITCHED(NO)
      SECONDARY
:      HOST(1533,10,0)
      RTSCTS(NO)
      NUM.RETRIES(5)
      SEQ.RETRIES(5)
      FRAMESIZE(270)
      WINDOWSIZE(7)
      RCVSIOFR(8)
      PU(0)
	PU.ADDR(40)
	PU.LABEL(40)
	PU.ITYPE(2)
	PU.ETYPE(4)
	LU(0)
	  LU.ADDR(2)
	  LU.LABEL(0c1)
	  LU.TYPE(2)

	LU(1)
	  LU.ADDR(4)
	  LU.LABEL(0c1)
	  LU.TYPE(2)

	LU(2)
	  LU.ADDR(5)
  	  LU.LABEL(0c1)
	  LU.TYPE(1)
	  LU.SIZE(1920)
	  lu.name(SM4A0034)
ENDTYM
.bp
.H 2 "SDLC-SDLC"
.nf
.sp

:***************************************************************************
:
:     hif for sdlc -> sdlc testing
:
:***************************************************************************
	subttl	(sna-ti) interface tym file - snat00.t00

	msiotp(m.typ0)
        option(opmon,1)

  print
  begintym
:
:     define system parameters
:
    freeze(yes)
    timezone(-8)
    isiring(4092)
    isoring(4092)
    bufsize(90)
    dnic(3106)
    snafeature(hdsp)
:
:     define general defaults statements
:
    general
:
:     general statements - link level
:
      gsecondary
      ghost(1632,2,0)
      gspeed(9600)
      gdatamode(halfduplex)
      gdial(no)
      gpasslim(3)
      gswitched(no)
      grtscts(no)
      greplyto(3)
      gnum.retries(7)
      gpaus.retries(3)
      gseq.retries(7)
      gpause(1)
      gframesize(267)
      gwindowsize(7)
      grcvsiofr(8)
      gistatus(active)
:
:     general statements - pu level
:
      gpu.itype(2)
      gpu.etype(4)

:
:     general statements - lu level
:

:--->>>     there are none as this is `dlc'

:
:     define logon selection menu statements
:
      dlg.selection(logon selection menu)
	dlg.entry(0)
          dlg.mode(preset)
          dlg.vc(svc)
          dlg.call(in)
          dlg.layer(dlc)
	  dlg.logon(0,sna50s"ba1680"bbsna-tst)
	  dlg.line(0)
          dlg.puaddr(40)
	  dlg.dialect(x25)
:
:     define specific features for line 0
:
    line(0)
:
:     define specific features for pu 0
:
:
      pu(0)
	pu.addr(40)
	pu.label(040)
	plg.entry(all)

lupirp	eq	1
:
endtym
.bp

:***************************************************************************
:
:     tif for sdlc -> sdlc testing
:
:***************************************************************************
	subttl	(sna-ti) interface tym file - snat00.t00

	msiotp(m.typ0)
        option(opmon,1)

  print
  begintym
:
:     define system parameters
:
    freeze(yes)
    timezone(-8)
    isiring(4092)
    isoring(4092)
    bufsize(90)
    acthst(1680)
    dnic(3106)
    snafeature(hdsp)
:
:     define general defaults statements
:
    general
:
:     general statements - link level
:
      gprimary
      gspeed(9600)
      gdatamode(halfduplex)
      gdial(no)
      gentrylim(1)
      gpasslim(3)
      gsnrmpause(10)
      gswitched(no)
      grtscts(no)
      greplyto(3)
      gnum.retries(7)
      gpaus.retries(3)
      gseq.retries(7)
      gpause(1)
      gframesize(267)
      gwindowsize(7)
      grcvsiofr(8)
      gistatus(active)
      gxmtcomplete(20)
:
:     general statements - pu level
:
      gpu.itype(4)
      gpu.etype(2)
:
:     general statements - lu level
:

:--->>>    there are none as this is `dlc'

:
:     define logon selection menu statements
:
        dlg.entry(0)
          dlg.mode(preset)
          dlg.vc(svc)
          dlg.call(out)
          dlg.layer(dlc)
          dlg.logon(0,sna50s"ba1632"bbsna-tst)
          dlg.line(0)
          dlg.puaddr(40)
          dlg.dialect(x25)
:
:     define specific features for line 0
:
    line(0)
      switched(no)
      pri.maxlu(2,0)
:
:     define specific features for pu 0
:
      pu(0)
	pu.addr(40)
	pu.label(40)
	plg.entry(all)

 endtym
.bp

:***************************************************************************
:
:     hif for sdlc -> sdlc (pvc)
:
:***************************************************************************
	subttl	(sna-ti) interface tym file - snat00.t00

	msiotp(m.typ0)
        option(opmon,1)

  print
  begintym
:
:     define system parameters
:
    freeze(yes)
    timezone(-8)
    isiring(4092)
    isoring(4092)
    bufsize(90)
    dnic(3106)
    snafeature(hdsp)
:
:     define general defaults statements
:
    general
:
:     general statements - link level
:
      gsecondary
      ghost(1632,2,0)
      gspeed(9600)
      gdatamode(full)
      gdial(no)
      gpasslim(3)
      gswitched(no)
      grtscts(no)
      greplyto(3)
      gnum.retries(7)
      gpaus.retries(3)
      gseq.retries(7)
      gpause(1)
      gframesize(267)
      gwindowsize(7)
      grcvsiofr(8)
      gistatus(active)
:
:     general statements - pu level
:
      gpu.itype(2)
      gpu.etype(4)

:
:     general statements - lu level
:

:--->>>     there are none as this is `dlc'

:
:     define logon selection menu statements
:
      dlg.selection(logon selection menu)
	dlg.entry(0)
          dlg.mode(preset)
          dlg.vc(pvc)
          dlg.call(in)
          dlg.layer(dlc)
	  dlg.line(0)
	  dlg.dialect(x25)
	  dlg.tclass(7,7)
:
:     define specific features for line 0
:
    line(0)
:
:     define specific features for pu 0
:
:
      pu(0)
	pu.addr(40)
	  pu.datamode(half)
	plg.entry(0)
	  plg.x25channel(40)

      pu(1)
	pu.addr(0c1)
	  pu.datamode(half)
	plg.entry(0)
	  plg.x25channel(0c1)

      pu(2)
	pu.addr(01)
	  pu.datamode(full)
	plg.entry(0)
	  plg.x25channel(1)

      pu(3)
	pu.addr(02)
	  pu.datamode(full)
	plg.entry(0)
	  plg.x25channel(2)

:
endtym

.bp
:***************************************************************************
:
:     tif for sdlc -> sdlc (pvc)
:
:***************************************************************************
	subttl	(sna-ti) interface tym file - snat00.t00

	msiotp(m.typ0)
        option(opmon,1)

  print
  begintym
:
:     define system parameters
:
    freeze(yes)
    timezone(-8)
    isiring(4092)
    isoring(4092)
    bufsize(90)
    acthst(1680)
    dnic(3106)
    snafeature(hdsp)
:
:     define general defaults statements
:
    general
:
:     general statements - link level
:
      gprimary
      gspeed(9600)
      gdatamode(full)
      gdial(no)
      gentrylim(1)
      gpasslim(3)
      gsnrmpause(10)
      gswitched(no)
      grtscts(no)
      greplyto(3)
      gnum.retries(7)
      gpaus.retries(3)
      gseq.retries(7)
      gpause(1)
      gframesize(267)
      gwindowsize(7)
      grcvsiofr(8)
      gistatus(active)
      gxmtcomplete(20)
:
:     general statements - pu level
:
      gpu.itype(4)
      gpu.etype(2)
:
:     general statements - lu level
:

:--->>>    there are none as this is `dlc'

:
:     define logon selection menu statements
:
        dlg.entry(0)
          dlg.mode(preset)
          dlg.vc(pvc)
          dlg.call(out)
          dlg.layer(dlc)
          dlg.logon(0,sna50s"ba1632"bbsna-tst)
          dlg.line(0)
          dlg.dialect(x25)
	  dlg.tclass(7,7)
:
:     define specific features for line 0
:
    line(0)
      switched(no)
      pri.maxlu(2,0)
:
:     define specific features for pu 0
:
      pu(0)
	pu.addr(40)
	  pu.datamode(half)
	plg.entry(0)
	  plg.puaddr(40)
	  plg.x25channel(40)

      pu(1)
	pu.addr(0c1)
	pu.datamode(half)
	plg.entry(0)
	  plg.puaddr(0c1)
	  plg.x25channel(0c1)

      pu(2)
	pu.addr(01)
	  pu.datamode(full)
	plg.entry(0)
	  plg.puaddr(01)
	  plg.x25channel(1)

      pu(3)
	pu.addr(02)
	  pu.datamode(full)
	plg.entry(0)
	  plg.puaddr(02)
	  plg.x25channel(2)

 endtym
.bp
.H 2 "QLLC-X.25"
.nf

:***************************************************************************
:
:	TIF Tymfile for team4 X.25 to SDLC connection
:
:***************************************************************************
	subttl	(sna-ti) interface tym file - snat00.t00

	msiotp(m.typ0)
        option(opmon,1)

  print
  begintym
:
:     define system parameters
:
    freeze(yes)
    timezone(-8)
    isiring(4092)
    isoring(4092)
    bufsize(90)
    acthst(1683)
    dnic(3106)
    snafeature(hdsp)
:
:     define general defaults statements
:
    general
:
:     general statements - link level
:
      gprimary
      gspeed(9600)
      gdatamode(full)
      gdial(no)
      gentrylim(1)
      gpasslim(3)
      gsnrmpause(10)
      gswitched(no)
      grtscts(no)
      greplyto(3)
      gnum.retries(7)
      gpaus.retries(3)
      gseq.retries(7)
      gpause(1)
      gframesize(267)
      gwindowsize(7)
      grcvsiofr(8)
      gistatus(active)
      gxmtcomplete(20)
:
:     general statements - pu level
:
      gpu.itype(4)
      gpu.etype(2)
:
:     general statements - lu level
:

:--->>>    there are none as this is `dlc'

:
:     define logon selection menu statements
:
        dlg.entry(0)
          dlg.mode(preset)
          dlg.vc(svc)
          dlg.call(out)
          dlg.layer(dlc)
          dlg.logon(0,sna50q"ba1682"bbsna-tst)
          dlg.line(0)
          dlg.dialect(x25)
:	  dlg.tclass(7,7)
:
:     define specific features for line 0
:
    line(0)
      switched(no)
      pri.maxlu(2,0)
:
:     define specific features for pu 0
:
      pu(0)
	pu.addr(40)
	  pu.datamode(half)
	plg.entry(0)
	  plg.puaddr(40)
	  plg.x25channel(40)

:      pu(1)
:	pu.addr(0c1)
:	pu.datamode(half)
:	plg.entry(0)
:	  plg.puaddr(0c1)
:	  plg.x25channel(0c1)

:      pu(2)
:	pu.addr(01)
:	  pu.datamode(full)
:	plg.entry(0)
:	  plg.puaddr(01)
:	  plg.x25channel(1)

:      pu(3)
:	pu.addr(02)
:	  pu.datamode(full)
:	plg.entry(0)
:	  plg.puaddr(02)
:	  plg.x25channel(2)

.bp
.sp
:  Hif Tymfile 
:   X.25 HOST TO X.25 HOST (FILE TRANSFER USING
:   OSI FTAM EMPLOYING TP4 AND DEFENSE PROTOCOL ARCHITECTURE FTP 
:   EMPLOYING TCP/IP).






CRSTOP EQ 0
             SEECONFIGURATION(1)
             PROTOCOL(X.25,HDLC,LAPB)
                DPORTS(8)
             HOSTLINKS(1682,0)
             LINKHOSTNUMBER(0,1682)

                LINK(0)
                TCNL(1,32)
                CLDADL(0)
                N2(7)
                PSIZE(256,256,-NEGOTIATION)
                ILRRC(60)
                PSADR(03,01)                 :EMULATING DCE
                CHKCLG()
                TCLASS(12,12,-NEGOTIATION)
                CHARGE(+RCNS)
                CLDADR(3106001682)
                PADIDLETIMER(10,10)
                PADFORWARD(2,2)
                PKTOPT(+iprnr,+tksup,+TKDSP)
                MTEXT(455,VALTD: CALL CONNECTED"8D"8A)
                MTEXT(0000,)
                CUDSTRING()
                PADBREAK(21)
                XOMUSERNAME(XRTECH)

 endtym
.bp
.H 2 "PU4-PU4"
.nf
.sp

:***************************************************************************
: half-duplex hif (PU4_PU4)

	subttl	(sna-ti) interface tym file - snat00.t00

	msiotp(m.typ1)
	option(opmon,1)

  print
  begintym
:
:     define system parameters
:
    freeze(yes)
    timezone(-8)
    isiring(4092)
    isoring(4092)
    bufsize(90)
    dnic(3106)
    snafeature(hdsp)
:
:     define general defaults statements
:
    general
:
:     general statements - link level
:
      gsecondary

      ghost(1685,0,0)
      gspeed(9600)
      gdatamode(halfduplex)
      gdial(no)
      gpasslim(3)
      gswitched(no)
      grtscts(no)
      greplyto(3)
      gnum.retries(7)
      gpaus.retries(3)
      gseq.retries(7)
      gpause(1)			:pause timer for pu4-pu4
      gframesize(4650)		:fid 4 needs more room for TH header
      gwindowsize(7)
      grcvsiofr(3)
      gxmtcomplete(50)		:need longer time for hdx pu4-pu4
      gistatus(active)
:
:     general statements - pu level
:
      gpu.itype(2)
      gpu.etype(4)

:     gpu.pactpu(141112404040404040404000000701000000000000)
:
:     general statements - lu level
:

:--->>>     there are none as this is `dlc'

:
:     define logon selection menu statements

:
      dlg.selection(logon selection menu)
	dlg.entry(0)
          dlg.mode(preset)
          dlg.vc(svc)
          dlg.call(in)
          dlg.layer(dlc)
	  dlg.line(0)
	  dlg.puaddr(07)
	  dlg.dialect(x25)
:
:     define specific features for line 0
:
    line(0)
:
:     define specific features for pu 0
:
:
      dsiotp(d.typ1)
      pu(0)
	pu.addr(0ff)
	pu.label(040)
	plg.entry(0)

endtym
	loption(0,trr.,0)		:no rr-idle timer for pu4-pu4

.bp

:***************************************************************************
:	Tif tymfile (pu4-pu4)

	subttl	(sna-ti) interface tym file - snat00.t00

	msiotp(m.typ1)
        option(opmon,1)

  print
  begintym
:
:     define system parameters
:
    freeze(yes)
    timezone(-8)
    isiring(4092)
    isoring(4092)
    bufsize(90)
    acthst(1686)
    dnic(3106)
    snafeature(hdsp)
:
:     define general defaults statements
:
    general
:
:     general statements - link level
:
      gprimary
      gspeed(9600)
      gdatamode(halfduplex)
      gdial(no)
      gentrylim(1)
      gpasslim(3)
      gsnrmpause(10)
      gswitched(no)
      grtscts(no)
      greplyto(3)
      gnum.retries(7)
      gpaus.retries(3)
      gseq.retries(7)
      gpause(1)			:pause timer for pu4-pu4
      gframesize(4650)		:fid 4 needs more room for TH header
      gwindowsize(7)
      grcvsiofr(3)
      gistatus(active)
      gxmtcomplete(20)
:
:     general statements - pu level
:
      gpu.itype(4)
      gpu.etype(2)
:
:     general statements - lu level
:

:--->>>    there are none as this is `dlc'

:
:     define logon selection menu statements
:
        dlg.entry(0)
          dlg.mode(preset)
          dlg.vc(svc)
          dlg.call(out)
          dlg.layer(dlc)
          dlg.logon(0,sna50f"ba1685"bbsna-tst)
          dlg.line(0)
          dlg.puaddr(0ff)
          dlg.dialect(x25)
:
:     define specific features for line 0
:
    line(0)
      dsiotp(d.typ1)
      switched(no)
      pri.maxlu(0,0)
:
:     define specific features for pu 0
:
      pu(0)
	pu.addr(0ff)
	pu.label(40)
	plg.entry(0)

 endtym
	loption(0,trr.,0)		:no rr-idle timer for pu4-pu4
	loption(0,t1.,8)		:8 seconds for RCV timeout

.bp

:***************************************************************************
:	hif tymfile (pu4-pu4)

	subttl	(sna-ti) interface tym file - snat00.t00

	msiotp(m.typ1)
	option(opmon,1)

  print
  begintym
:
:     define system parameters
:
    freeze(yes)
    timezone(-8)
    isiring(4092)
    isoring(4092)
    bufsize(90)
    dnic(3106)
    snafeature(hdsp)
:
:     define general defaults statements
:
    general
:
:     general statements - link level
:
      gsecondary

      ghost(1685,0,0)
      gspeed(9600)
      gdatamode(fullduplex)
      gdial(no)
      gpasslim(3)
      gswitched(no)
      grtscts(no)
      greplyto(3)
      gnum.retries(7)
      gpaus.retries(3)
      gseq.retries(7)
      gpause(1)			:pause timer for pu4-pu4
      gframesize(4650)		:fid 4 needs more room for TH header
      gwindowsize(7)
      grcvsiofr(3)
      gistatus(active)
:
:     general statements - pu level
:
      gpu.itype(2)
      gpu.etype(4)
:
:     general statements - lu level
:
:--->>>     there are none as this is `dlc'
:
:     define logon selection menu statements

:
      dlg.selection(logon selection menu)
	dlg.entry(0)
          dlg.mode(preset)
          dlg.vc(svc)
          dlg.call(in)
          dlg.layer(dlc)
	  dlg.line(0)
	  dlg.puaddr(07)
	  dlg.dialect(x25)
:
:     define specific features for line 0
:
    line(0)
      dsiotp(d.typ1)
:
:     define specific features for pu 0
:
:
      pu(0)
	pu.addr(0ff)
	pu.label(040)
	plg.entry(0)

endtym
	loption(0,trr.,0)		:no rr-idle timer for pu4-pu4

.bp
:***************************************************************************
:	full-duplex tif (PU4-PU4)

	subttl	(sna-ti) interface tym file - snat00.t00

	msiotp(m.typ1)
        option(opmon,1)

  print
  begintym
:
:     define system parameters
:
    freeze(yes)
    timezone(-8)
    isiring(4092)
    isoring(4092)
    bufsize(90)
    acthst(1686)
    dnic(3106)
    snafeature(hdsp)
:
:     define general defaults statements
:
    general
:
:     general statements - link level
:
      gprimary
      gspeed(9600)
      gdatamode(fullduplex)
      gdial(no)
      gentrylim(1)
      gpasslim(3)
      gsnrmpause(10)
      gswitched(no)
      grtscts(no)
      greplyto(3)
      gnum.retries(7)
      gpaus.retries(3)
      gseq.retries(7)
      gpause(1)			:pause timer for pu4-pu4
      gframesize(4650)		:fid 4 needs more room for TH header
      gwindowsize(7)
      grcvsiofr(3)
      gistatus(active)
      gxmtcomplete(20)
:
:     general statements - pu level
:
      gpu.itype(4)
      gpu.etype(2)
:
:     general statements - lu level
:

:--->>>    there are none as this is `dlc'

:
:     define logon selection menu statements
:
        dlg.entry(0)
          dlg.mode(preset)
          dlg.vc(svc)
          dlg.call(out)
          dlg.layer(dlc)
          dlg.logon(0,sna50f"ba1685"bbsna-tst)
          dlg.line(0)
          dlg.puaddr(0ff)
          dlg.dialect(x25)
:
:     define specific features for line 0
:
    line(0)
      dsiotp(d.typ1)
      switched(no)
      pri.maxlu(0,0)
:
:     define specific features for pu 0
:
      pu(0)
	pu.addr(0ff)
	pu.label(40)
	plg.entry(0)

 endtym
	loption(0,trr.,0)		:no rr-idle timer for pu4-pu4
	loption(0,t1.,8)		:8 seconds for RCV timeout
.fi
.TC 1 1 4 0
   @r