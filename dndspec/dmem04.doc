                                                                August 31, 1990















                        MEMORY DIAGNOSTIC USER'S GUIDE


                                 VERSION 4.60








                                    TYMNET
                        NETWORK TECHNOLOGY DEVELOPMENT
                                August 31, 1990










     ====================================================================
     |       THIS DOCUMENT IS THE SOLE PROPERTY AND CONFIDENTIAL        |
     |       INFORMATION OF TYMNET, INC., AND MAY  NOT BE COPIED        |
     |       IN  WHOLE OR IN PART  OR  DISCLOSED  TO  ANY  THIRD        |
     |       PARTY WITHOUT THE PRIOR WRITTEN CONSENT OF TYMNET.         |
     ====================================================================



   Copyright 1990 by Tymnet -- The McDonnell Douglas Network Systems Company






                            Memory Diagnostic User's Guide               DMEM04
                                                                August 31, 1990







                                   TABLE OF CONTENTS

        Section                                                            Page



        1.   OVERVIEW                                                         1


        2.   APPLICABLE DOCUMENTS                                             3


        3.   EQUIPMENT                                                        4


        4.   CONFIGURATION CONSTRAINTS                                        5


        5.   LOADING PROCEDURE                                                6


        6.   OPERATING PROCEDURES                                             7
          6.1   Default Tests with Engine Console and Terminal                8
          6.2   Nondefault Tests with Engine Console and Terminal            11
          6.3   Testing Procedure with Engine Console Only                   12
          6.4   Testing Procedure with Terminal Only                         13
          6.5   RESTARTING THE DIAGNOSTIC                                    14


        7.   CONSOLE DISPLAY                                                 15


        8.   WATCHDOG TIMER                                                  16


        9.   MEMORY TEST RANGE SELECTION                                     17
          9.1   FUNCTIONAL BLOCKS AND TEST BLOCKS                            17
          9.2   INITIAL MEMORY IDENTIFICATION AND SELECTION                  18
          9.3   MEMORY RECONFIGURATION                                       19
          9.4   SELECTING AND DESELECTING TEST BLOCKS                        19


        10.  COMMANDS                                                        20
          10.1  OPERATING COMMANDS                                           21
             10.1.1   ADDT - Add tests and sections                          22
             10.1.2   BOOT - Load engine bootstrap                           23
             10.1.3   BRKP - Set breakpoint                                  23
             10.1.4   CKSM - Diagnostic code checksum                        24

                            Memory Diagnostic User's Guide               DMEM04
                                                                August 31, 1990


             10.1.5   DELT - Delete tests and sections                       24
             10.1.6   DESR - Deselect memory test range                      26
             10.1.7   <ESC> - Escape from current test                       27
             10.1.8   EXA - Examine memory                                   27
             10.1.9   GO - Execute from address                              28
             10.1.10  LOOP - Set loop count                                  28
             10.1.11  MOD - Modify memory                                    29
             10.1.12  NOCK - No diagnostic code checksum                     29
             10.1.13  RUN - Begin test execution                             30
             10.1.14  SELR - Select memory test range                        31

          10.2  RECONFIGURING SYSTEM MEMORY COMMANDS                         32
             10.2.1   CNFG - Reconfigure system memory                       32
                10.2.1.1    ? Command                                        32
                10.2.1.2    CO - Use initial/saved configuration             33
                10.2.1.3    DI - Display memory configuration                33
                10.2.1.4    EX - Exit reconfiguration section                34
                10.2.1.5    RN - Change upper memory boundary                35
                10.2.1.6    ST - Save current memory configuration           36
                10.2.1.7    Change block configuration                       36

          10.3  DISPLAY COMMANDS                                             37
             10.3.1   DMEM - Display memory map                              37
             10.3.2   DOC - Display user guide source                        37
             10.3.3   HELP - Display list of commands                        37
             10.3.4   NAME - Display test names                              38
             10.3.5   OPTN - Display the diagnostic options                  38
             10.3.6   STAT - Last error message                              38

          10.4  ERROR AND MESSAGE CONTROL COMMANDS                           39
             10.4.1   BELL - Set bell ring on error                          39
             10.4.2   ECON - Error control                                   40
             10.4.3   MESG - Message control                                 43
             10.4.4   NOBE - No bell ring on error                           44
             10.4.5   NOSP - Do not suppress error messages                  44
             10.4.6   SPRS - Suppress error messages                         44

          10.5  EDITING COMMANDS                                             45
             10.5.1   Cancel command entry                                   45
             10.5.2   Delete single character                                45
             10.5.3   Delete whole word                                      46


        11.  TEST DESCRIPTIONS                                               47
          11.1  DEFAULT TEST SET                                             47
             11.1.1   TEST 1 - BASIC DATA/ECC PATH TEST                      49
                11.1.1.1    SECTION 1 - ALL ZEROS TEST                       49
                11.1.1.2    SECTION 2 - ALL ONES TEST                        49
                11.1.1.3    SECTION 3 - DATA LINE BIT UNIQUENESS TEST        51
                11.1.1.4    SECTION 4 - ECC LINE BIT POSITION UNIQUENESS TEST52

             11.1.2   TEST 2 - CORE MILPAT TEST                              53
             11.1.3   TEST 4 - REFRESH/DATA RETENTION MOS TEST               55

                            Memory Diagnostic User's Guide               DMEM04
                                                                August 31, 1990


             11.1.4   TEST 5 - BASIC ADDRESS TEST                            57
             11.1.5   TEST 6 - ALGORITHM A: Addressing Uniqueness Test       58

          11.2  OPTIONAL TEST SET                                            61
             11.2.1   TEST 3 - MOS MILPAT TEST                               62
             11.2.2   TEST 7 - ALGORITHM B: MOS Integrity Test               64
             11.2.3   TEST 8 - LOW MEMORY TEST                               67
             11.2.4   TEST 9 - MOVING INVERSIONS TEST                        70
             11.2.5   TEST 10 - MEMORY SCOPE LOOP                            72
                11.2.5.1    SCOPE LOOP COMMANDS                              74

             11.2.6   TEST 11 - BATTERY BACKUP TEST                          77
             11.2.7   TEST 12 - MOVE INVERSIONS WITH ALGORITHM A IMBEDDED    78
             11.2.8   TEST 13 - algorithm A, BYTE ACCESSES                   81


        12.  ERROR DESCRIPTIONS                                              82
          12.1  Unexpected System Errors                                     85
          12.2  TEST ERRORS                                                  86
             12.2.1   ECC ERROR LOG ERROR MESSAGES                           87
             12.2.2   TEST 1 - BASIC DATA/ECC PATH TEST                      87
             12.2.3   TEST 2 - CORE MILPAT TEST                              88
             12.2.4   TEST 3 - MOS MILPAT TEST                               88
             12.2.5   TEST 4 - REFRESH/DATA RETENTION MOS TEST               89
             12.2.6   TEST 5 - BASIC ADDRESS TEST                            89
             12.2.7   TEST 6 - algorithm A                                   89
             12.2.8   TEST 7 - algorithm B                                   90
             12.2.9   TEST 8 - LOW MEMORY TEST                               90
             12.2.10  TEST 9 - MOVING INVERSIONS TEST                        90
             12.2.11  TEST 10 - MEMORY SCOPE LOOP TEST                       90
             12.2.12  TEST 11 - BATTERY BACKUP TEST                          91
             12.2.13  TEST 12 - MOVE INVERSIONS imbedded algorithm A         91
             12.2.14  TEST 13 - algorithm A, byte accesses                   91


        13.  DATA PATTERNS                                                   92
          13.1  TEST 1 - BASIC DATA/ECC PATH TESTS                           92
          13.2  TEST 2 - CORE MILPAT TEST                                    92
          13.3  TEST 3 - MOS MILPAT TEST                                     93
          13.4  TEST 4 - REFRESH/DATA RETENTION TEST                         93
          13.5  TEST 5 - BASIC ADDRESS TEST                                  93
          13.6  TEST 6 - algorithm A                                         93
          13.7  TEST 7 - algorithm B                                         93
          13.8  TEST 8 - LOW MEMORY TEST                                     94
          13.9  TEST 9 - MOVING INVERSIONS TEST                              94
          13.10 TEST 10 - MEMORY SCOPE LOOP TEST                             94
          13.11 TEST 11 - BATTERY BACKUP TEST                                94
          13.12 TEST 12 - MOVE INVERSIONS imbedded algorithm A               94
          13.13 TEST 13 - algorithm A, byte accesses                         95


                                     APPENDICES
                                     ==========

                            Memory Diagnostic User's Guide               DMEM04
                                                                August 31, 1990


        I.   COMMAND SUMMARY                                                 97


        II.  DEDICATED MEMORY ALLOCATION                                     99


















































                            Memory Diagnostic User's Guide               DMEM04
        OVERVIEW                                                August 31, 1990






                                     1 -  OVERVIEW


             This  diagnostic  examines  the operation  of  the  Engine primary
        storage.  This includes  the  AMPEX and  DATARAM CORE  boards,  the one
        Megabyte dynamic semiconductor board, MAC III with one  Megabyte static
        RAM and MAC V with  two Megabyte static RAM.  Functions that  relate to
        DMA transfers are not tested.


             Table 1-1 lists all tests performed by this diagnostic.  Each test
        and/or test section can be selected and run individually.  Tests  1, 2,
        4, 5 and 6 comprise  the default test group, which performs  a complete
        verification of all  memory boards without operator  intervention. Test
        3, and tests 7 to 13  are optional tests which must be selected  by the
        operator. Note that the default test set is determined by the  types of
        memory installed in the system under test.


             The recommended  operating procedure requires  the use of  both an
        engine display console and a terminal.  If a terminal is not used, only
        the  default tests  can be  performed.  If  a terminal  is  used alone,
        without a display console, operating flexibility is limited.


             Throughout the document the term "virtual memory  location" refers
        to a memory address  before relocation by the MAC.  The term "relocated
        address"  refers to  an actual  physical address  in memory.   The term
        "initial  state" refers  to conditions  in effect  when the  program is
        first started after loading or restarted from the engine  console.  The
        term "default  action" refers  to the effect  produced by  not entering
        optional parameters.


             This  diagnostic  does  not require  that  the  watchdog  timer be
        disabled.














        1                   Memory Diagnostic User's Guide               DMEM04
        OVERVIEW                                                August 31, 1990


                Table 1-1.   Individual Diagnostic Tests


               Test #                 Test name

                 1           Basic data/ECC path test:

                             Section 1 - All zeros test

                             Section 2 - All ones test

                             Section 3 - Data line bit position uniqueness test

                             Section 4 - ECC line bit position uniqueness test

                 2           CORE MILPAT test

                 3           MOS MILPAT test

                 4           Refresh/Data Retention MOS test

                 5           Basic Address test

                 6           algorithm A: Addressing uniqueness test

                 7           algorithm B: MOS integrity test

                 8           Low Memory test

                 9           Moving Inversions test

                 10          Memory Scope Loop test

                 11          Battery Backup test

                 12          Moving Inversions with Imbedded algorithm A

                 13          algorithm A: (byte accesses)
















        2                   Memory Diagnostic User's Guide               DMEM04
        APPLICABLE DOCUMENTS                                    August 31, 1990






                               2 -  APPLICABLE DOCUMENTS


             The user may  find it useful to  refer to the  following documents
        when running this diagnostic.

                 Diagnostics User's Guide   - Introduction

                 Tymnet Engine Maintenance  - Functional Description,
                                              Semiconductor Memory Board
                                              CORE Memory Board Installation

                 CFB Number 56              - (System 54, NTS Mentry
                                              Database System, CFB program)
                                              This Communications Field
                                              Bulletin refers to Semicon-
                                              ductor board installation.

































        3                   Memory Diagnostic User's Guide               DMEM04
        EQUIPMENT                                               August 31, 1990






                                    3 -  EQUIPMENT


             The Memory Diagnostic requires the following equipment:

           o  Either an  Engine display console  or a terminal  for controlling
              the diagnostic.  (A hard-copy terminal is recommended.)

           o  256K bytes of memory (minimum).









































        4                   Memory Diagnostic User's Guide               DMEM04
        CONFIGURATION CONSTRAINTS                               August 31, 1990






                            4 -  CONFIGURATION CONSTRAINTS


        Except for  the memory circuitry  under test, the  hardware must  be in
        known working order.  If there is any doubt regarding the  condition of
        the hardware, run the CPU and MAC diagnostics first.


        If a terminal is used,  it must be connected to the  terminal interface
        port on the multifunction board of an engine or mini-engine, or  to the
        multifunction  port (labeled  multifn) on  the rear  panel of  a Micro-
        Engine or a PXL Engine.   The setting of the baud-rate  selector switch
        for the terminal interface must correspond to the terminal baud rate.

                                   CAUTION

               The minimum amount of memory required to run this
               diagnostic is 256K bytes.

               The terminal Baud Rate should be set to 1200 BAUD or less
               because there have been terminal overruns when a higher BAUD
               terminal with auxiliary printer has been used with the
               terminal enabled.



























        5                   Memory Diagnostic User's Guide               DMEM04
        LOADING PROCEDURE                                       August 31, 1990






                                5 -  LOADING PROCEDURE


        The Memory  Diagnostic can be  loaded by any  one of the  four standard
        loading procedures described in Diagnostics Introduction.


                                     NOTE

             Only a synchronous load (LOADII, ELF or BITS) will automatically
             start the diagnostic at memory lon A00.
             Therefore, when testing a Mini-Engine or a Micro-Engine
             without a console, use only a synchronous load.
             Note also that if the watchdog timer is enabled, the diagnostic
             must begin execution automatically, (in other words use only
             LOADII, ELF, or BITS). If it does not, the system will go into
             boot. See Section 6.4, Testing Procedure with Terminal Only.

































        6                   Memory Diagnostic User's Guide               DMEM04
        OPERATING PROCEDURES                                    August 31, 1990






                               6 -  OPERATING PROCEDURES


        The  Memory  Diagnostic can  be  run  using any  one  of  the following
        equipment options:

           o  Engine display console and terminal (recommended)

           o  Engine display console only

           o  Terminal only

        If an Engine display console is used alone, only the default  tests can
        be run.  If  a terminal is  used alone, the  program must be  loaded by
        either LOADII, ELF  or BITS. If a  Micro-Engine is tested using  only a
        terminal, the program cannot be restarted after halting on an error.


        A  separate  portion  of  the  program  called  the  Diagnostic Monitor
        controls how the program executes. The monitor allows the user to enter
        commands on a terminal change command parameters, and  run individually
        selected tests or  test sections. After a  command, test, or  series of
        tests is executed, the  monitor displays the diagnostic prompt  (*) and
        is ready to accept further commands.

                                    NOTE

              While the diagnostic is running, the console display should
              change continually between the status and error display
              every two seconds. If it does not, the Diagnostic has halted.
              See Section 7.0, Console Display.



















        7                   Memory Diagnostic User's Guide               DMEM04
        OPERATING PROCEDURES                                    August 31, 1990


                  6.1  Default Tests with Engine Console and Terminal


        The recommended  testing procedure requires  an Engine  display console
        and  a terminal  that is  connected to  the terminal  interface  of the
        machine under test.  The  procedure described in this  section executes
        the default test group, with all commands set to their  default values.
        Each of the following tests is executed once in numerical order.

             Test #                 Test Name

               1         Basic data/ECC path test (all sections)

               2         CORE MILPAT test

               4         Refresh/data retention MOS test

               5         Basic address test

               6         Algorithm A



        Depending on the memory in  the system, some tests  (or  sections) will
        be added to, or removed from the default set of tests. When  the system
        contains CORE, the MOS MILPAT test, Refresh/data retention MOS test and
        the ECC  line bit  section will be  excluded. The  CORE MILPAT  test is
        excluded when the system contains MOS.


        The total  execution time  for one pass  of the  default tests  for MOS
        alone (without messages) is 2 minutes, for a 128KB block, while for MAC
        III it is 1  minute 20 seconds, while for  CORE it is 43  seconds. This
        difference is due  to the different default  tests run for  each memory
        type.



















        8                   Memory Diagnostic User's Guide               DMEM04
        OPERATING PROCEDURES                                    August 31, 1990


        Before running the program, perform the following preliminary steps:

           1. Connect a terminal to the terminal interface of the machine under
              test.  Set  the baud-rate  selector switch  (SWT-9 on  the Engine
              multifunction board or S-2 on the Micro-Engine I/O board  or s-10
              or s-11 on the HDLC Micro-Engine I/O board) to correspond  to the
              terminal baud rate.

           2. Load the diagnostic by  one of the standard methods  described in
              Diagnostics Introduction.

           3. Start the diagnostic by pressing the following keys on the Engine
              console:

                 DTA, A, 0, 0, ADR, RUN

           If a downline load was performed using LOADII or BITS, the
           diagnostic will initialize itself automatically after loading,
           and Step 3 can be ignored.

           If LOADII, ELF or BITS is not used, the watchdog timer must be
           disables before loading, in order to prevent this system going
           into boot once the load is finished.

        When the diagnostic program  initializes, it checks several  aspects of
        the machine  under test.  It  then displays a  message on  the terminal
        consisting of the diagnostic title, Engine type determined, type of MAC
        board found, addresses of  available memory, and the  diagnostic prompt
        (*).   The prompt  indicates that  the diagnostic  monitor is  ready to
        accept commands.

        Example:

             MEMORY DIAGNOSTIC - VERSION 4.60 (09-01-90)

             SYSTEM TYPE FOUND = NORMAL ENGINE

             MAC III FOUND

             SIO BOARD X'80' FOUND

             MEMORY FOUND
             000000 - 0FFFFF

             BLOCK NUMBER     MEMORY ADDRESS      MEMORY TYPE   SELECTED
              00 -            000000 -  0FFFFE    MAC 3
              00 -  0F        000000 -  0FFFFE    MAC 3           *

             *
                                  NOTE

             Most of the Engine and HDLC Micro-Engines have the SIO board
             X'80'. Some of the Engines have SIO boards X'81', X'82' and X'83'.

        9                   Memory Diagnostic User's Guide               DMEM04
        OPERATING PROCEDURES                                    August 31, 1990


             The regular Micro-Engine does not have the SIO board.

        To run the default tests, enter this command on the terminal:

             RUN<CR>

        The monitor then executes the default tests in numerical  order.  While
        the program is  running, the test  number, section number,  and end-of-
        test messages (including error  counts) are displayed on  the terminal.
        When all  default tests  have been  completed, a  pass count  and error
        count are displayed, followed by the diagnostic prompt (*).

        To execute multiple iterations of the default tests, enter the Set Loop
        Count command (LOOP n) before entering the RUN command.


        To execute  the default  tests with  breakpoints, see  Section 10.1.3.,
        Breakpoint.


        Total Execution Time for Default Tests (One Pass) is determined  by the
        type and amount of memory selected.



                                        NOTE


             The monitor checks three  hardware items to determine  what system
             type the program is running on:  the type of MAC, the  presence of
             the SIO X'80'  and the number  of synchronous lines.   Four system
             types are distinguished:  NORMAL  ENGINE (a full-size Engine  or a
             Mini-Engine), MICRO ENGINE,  HDLC MICRO-ENGINE  and UNKNOWN.  If a
             hardware malfunction produces incompatible indications that result
             in  the message  SYSTEM TYPE  FOUND =  UNKNOWN,  CHECK HARDWARE!!!
             displayed on the  terminal and system  error code F1  displayed on
             the front panel and the program will halt.

















        10                  Memory Diagnostic User's Guide               DMEM04
        OPERATING PROCEDURES                                    August 31, 1990


                6.2  Nondefault Tests with Engine Console and Terminal


        The procedure  for selecting and  running individual test  sections, or
        tests  other than  the  default test  group, involves  entering  on the
        terminal the Delete Tests command (DELT), the Add Tests command (ADDT),
        and the  RUN command.  The  default tests remain  in effect  unless the
        DELT or ADDT command is used to select other tests.

        For example, if only Sections  2 and 4 of Test  1 and Test 7 are  to be
        run, and the default tests are in effect, the procedure is as follows:

          1. At the prompt, enter:

                    DELT 1,2,4,5,6<CR>

             This deletes all sections of Tests 1, 2, 4, 5 and 6.

          2. At the prompt, enter:

                    ADDT 102,104,7<CR>

             This selects sections 2 and 4 of Test 1 and Test 7.

          3. At the prompt, enter:

                    RUN<CR>

             The monitor then executes sections 2 and 4 of Test 1.
             and Test 7.


        If additional tests or sections are to be run, repeat steps 1, 2, and 3
        by entering the necessary test and/or section numbers.




















        11                  Memory Diagnostic User's Guide               DMEM04
        OPERATING PROCEDURES                                    August 31, 1990


                    6.3  Testing Procedure with Engine Console Only


        When the diagnostic is run using a display console without  a terminal,
        only the default test group  can be executed.


        The operating procedure is as follows:

           1. Load the diagnostic by one of the standard loading methods
              described in the Diagnostics Instruction.

           2. Start and run the diagnostic by pressing these keys on the
              display console:

                   DTA, A, 0, 4, ADR, RUN


        The  diagnostic  will  initialize and  execute  the  default  tests  in
        numerical order.  The test sequence repeats continually until  one pass
        has been completed, until  an error is encountered, or  halted manually
        by pressing the PSW key.  (Note that if the watchdog timer  is enabled,
        and PSW  is pressed,  the machine  will go  into boot).  Therefore, the
        watchdog timer should be disabled before pressing the PSW key.


        After the  one pass  has been completed  without error,  the diagnostic
        halts and displays the last  Test number and the Section number  on the
        console. The user can restart the program by pressing "RUN" key  on the
        console.


        If an  error is encountered,  the error count  is incremented,  and the
        error display on the front console is updated. If the  diagnostic finds
        an error,  it will  halt and the  leftmost digit  on the  front console
        error display will be F (See Section 8.0 Console Display). The user can
        continue  executing the  next Section  following the  error  Section by
        pressing "RUN" key on the console. When an unexpected  system interrupt
        occurs, the user can restart  the Diagnostic by pressing the  "RUN" key
        on the console.


        Total execution time (one pass)  is determined by the amount  of memory
        type in the system.

                                        NOTE

                   The maximum value for both the pass count and error count is
              4,294,967,295  (2  to  the  32nd  power,  minus  1).    Only  the
              least-significant  digits  are  displayed,  two  digits  for  the
              pass count  and two  digits for the       error count.   When the
              maximum value  has been reached  for      either count,  the next
              event resets that count to zero,      and the count starts over.

        12                  Memory Diagnostic User's Guide               DMEM04
        OPERATING PROCEDURES                                    August 31, 1990


                       6.4  Testing Procedure with Terminal Only


        Running the MAC Diagnostic on  a Mini-Engine or a Micro-Engine  using a
        terminal alone (that is,  without an Engine console) has  the following
        disadvantage:


           o  There  is no  indication as  to whether  the diagnostic  is still
              running (Normally displayed of the front console).


        The  procedure for  loading  and running  the diagnostic  using  only a
        terminal is essentially  the same as when  both a console  and terminal
        are used, except for the following:

          o  When the machine under test is booted, there is no indication that
             the  bootstrap  program is  running,  other than  the  report from
             LOADII, ELF or BITS that the object code is loading.

          o  Only a synchronous  load (LOADII, ELF or BITS)  will automatically
             start  the  program at  memory  location A00  (the  terminal start
             address).  Therefore, use a synchronous load.

          o  If  the program  halts on  an error  while testing  a Mini-Engine,
             depressing  the SYSCLR  switch on  the CPU  board gives  a MACHINE
             MALFUNCTION INTERRUPT message and a prompt.



























        13                  Memory Diagnostic User's Guide               DMEM04
        OPERATING PROCEDURES                                    August 31, 1990


                            6.5  RESTARTING THE DIAGNOSTIC


        The diagnostic  can be  restarted by  using the  GO command.  (Enter GO
        A00).

        The diagnostic can also be restarted manually by pressing the following
        keys on the console:

               DTA, F, 0, SET, A, 0, 0, ADR, RUN


        Note however that if the watchdog timer is enabled, the  above sequence
        should  be completed  as quickly  as possible,  in order  to  avoid the
        watchdog  timer loading  the boot.  (In about  1 second).  Instead, the
        operator should disable  the watchdog timer, or  use the GO  command to
        restart the diagnostic. (See Section 11.1.9)

        Restarting sets all  the commands to  their initial values,  except for
        those in the Scope Loop test. (Test 10)


































        14                  Memory Diagnostic User's Guide               DMEM04
        CONSOLE DISPLAY                                         August 31, 1990






                                 7 -  CONSOLE DISPLAY


        The engine front console will alternate between a status display and an
        error display. The status display has the following format:

                      1.ttss.bbpp

        Where 1 (one) indicates that this is the Memory Diagnostic, and  TT and
        SS  refer  to the  Test  and  Section number  currently  being  run. BB
        indicates the first 64KB block of the current test block  being tested,
        in  increments  of one,  from  0, for  each  64KB block.  (So  bb  of 2
        indicates that the block  starting at address 20000X is  being tested).
        PP is the number of passes completed so far.


        Each display  is updated  every half second,  and alternates  after two
        seconds.  When no tests are being run, TT, SS and BB are zero,  and the
        status display is 1.0000.00pp


        The  status display  will alternate  with the  error display  every two
        seconds. The error display has this format:

                      s.eecc.0000


        where  S indicates  whether no  errors have  occurred (S  is 0),  or if
        errors have  been found  (S is E),  or the  diagnostic has  halted when
        errors occur (S is F).  EE  refers to the error code of the  last error
        found. When combined with TT and  SS, these six digits are the  same as
        the error code displayed on a terminal and correspond to errors  in the
        error descriptions section.   CC refers  to the last two digits  of the
        error count.  When CC is  incrementing, errors are  being found.  If CC
        remains the same, it  is the error count  at  the  time the  last error
        was  found. Note  that  when CC  is  stationary, and  another  test has
        started, EE can no longer be combined with TT and SS, as these  will no
        longer point to the test  in which the error occurred.  When  no errors
        have been found, the error display will be zeros.


        The HANDHELD front console or the PXL Engine front console displays ten
        digits.  The  left most  digit  is always  zero  during  the diagnostic
        execution.






        15                  Memory Diagnostic User's Guide               DMEM04
        WATCHDOG TIMER                                          August 31, 1990






                                  8 -  WATCHDOG TIMER


        This diagnostic will  run with the  watchdog timer enabled.  Because of
        this, it is not possible  to halt the diagnostic's execution  (with the
        PSW switch on the front console) for longer than one second.  When this
        happens, the engine will load and run the boot program. If the operator
        wants to use the engine front console, and thereby cause the program to
        be halted, the watchdog timer should be disabled.

        ( For detailed information -  how to disable the watchdog  timer. refer
        to   Engine  Maintenance   Manual,  Tymnet   publication   number  282,
        Multifunction Board section for Engine or Mini-Engine.  refer to Micro-
        Engine Maintenance Manual  with Diagnostics, Tymnet  Publication number
        651,  Multifunction Logic  section for  regular Micro-Engine.  For HDLC
        Micro-Engine,  turn off  switch  10, position  4  to the  I/O  board to
        disable the watchdog timer. )


        Because the watchdog timer  must be toggled frequently,  the diagnostic
        never  actually  halts.  All options  or  commands  which  specify that
        execution cease (for example, ECON), will cause the diagnostic  to loop
        in one  position.  This allows  the watchdog timer  to be toggled  by a
        routine which interrupts this loop  in order to toggle the  timer. When
        this happens, the front console error display will have an F as a first
        digit.  The  operator can resume  diagnostic execution by  pressing the
        INC followed by the RUN key on the front console.























        16                  Memory Diagnostic User's Guide               DMEM04
        MEMORY TEST RANGE SELECTION                             August 31, 1990






                           9 -  MEMORY TEST RANGE SELECTION


        Memory  is  identified  by the  diagnostic  in  64KB  block increments,
        starting from  block 0.  For example,  an Engine  with one  Megabyte of
        memory would have blocks 0 to F. Input is expected in the  same format,
        or using addresses (on 64KB boundaries), for test range selection.






                        9.1  FUNCTIONAL BLOCKS AND TEST BLOCKS


        The diagnostic  deals with two  divisions of the  memory to  be tested:
        TEST  blocks and  FUNCTIONAL blocks.  The combination  of  these blocks
        comprise the MEMORY MAP, which is a set of bit arrays used  to identify
        the different memory types in the system, and to identify which part of
        memory has been selected for the diagnostic testing.

        A functional block  is the basic test  element for each type  of memory
        supported.  The  block size  differs  depending on  hardware  type, and
        useful diagnosis of a particular memory type must take this  block size
        into account. This diagnostic tests  one functional block at a  time. A
        CORE  board,  or  MOS  chip row  makes  up  one  functional  block. The
        following are the sizes for the supported memory types:

                   o   64KB DATARAM CORE board      64KB
                   o   128KB AMPEX CORE board       128KB
                   o   1MB Dynamic RAM              128KB
                   o   1MB Static RAM               128KB
                   o   4MB Dynamic RAM              512KB
                   o   1MB Static RAM, (MAC III)    128KB
                   o   2MB Static RAM, (MAC V)      512KB


        A test block is a subset of a functional block, or one  full functional
        block, that has  been selected to be  tested. The selection is  made by
        the diagnostic initially. The  default is to test all  available memory
        after the first 64KB boundary above the diagnostic code.  (Currently at
        address 10000x).   The operator can also select or deselect a  range of
        memory, by using  the SELR or DESR  commands. These test blocks  can be
        selected in a basic size of 64KB. The diagnostic performs its  tests on
        the selected blocks, and will test all contiguous selected  64KB blocks
        in a  functional block at  once, before going  on to other  test blocks
        within this, or the next,  functional  block.


        17                  Memory Diagnostic User's Guide               DMEM04
        MEMORY TEST RANGE SELECTION                             August 31, 1990


                   9.2  INITIAL MEMORY IDENTIFICATION AND SELECTION


        During initialization, the diagnostic tests the available memory in the
        system, and attempts to identify which type of memory, and how  much of
        it,  is  installed.  Every  32KB  boundary  is  tested.  The diagnostic
        supports the following types of primary storage:

                   o   64KB DATARAM CORE board
                   o   128KB AMPEX CORE board
                   o   1MB Dynamic RAM
                   o   1MB Static RAM
                   o   4MB Dynamic RAM
                   o   1MB Static RAM, on a MAC III board
                   o   2MB Static RAM, on a MAC V board


        Because  the  memory access  speeds  are identical  (controlled  by MAC
        timing) memory is identified by whether a MAC I is present  (could only
        be AMPEX/DATARAM),  or whether there  is an error  log (can only  be  1
        Megabyte  dynamic ram).  If an  error log  is detected,  the diagnostic
        assumes that all memory is  MOS. It is not possible for  the diagnostic
        to  distinguish  between the  one  Meg dynamic  RAM,  DATARAM  or AMPEX
        speeds. In the case of a RAM board with a faulty error log,  the memory
        is configured as  AMPEX. In the  case of a  MAC I, the  diagnostic will
        always specify AMPEX instead of DATARAM.


        Because  of the  above hardware  constraints, the  diagnostic  will not
        always  identify memory  in the  system correctly.   Therefore,  if the
        system  contains  mixed  memory  types,  the  operator  must   use  the
        reconfiguration  section  to  correctly  identify  the  system's memory
        configuration.  By  using the  reconfiguration section's  commands, the
        operator can then reconfigure the  MEMORY MAP (a map of what  memory is
        installed in the system).


         Note :  It is imperative  that these corrections be made. If  not, the
        effectiveness of  the diagnostic  will be  impaired.  For  this reason,
        after memory has been  identified, it is validated for  consistency. If
        there  are  any  errors (invalid  functional  block  size, unidentified
        blocks, a gap in memory), the reconfiguration section is  entered. This
        section  can  only  be  exited  once  the  operator  has  corrected all
        inconsistencies.  (See sections 9.3 and 10.1.5)

        After memory has been identified and validated, all memory  is selected
        to be tested. This excludes the diagnostic code area, in the first 64KB
        of the system's memory.






        18                  Memory Diagnostic User's Guide               DMEM04
        MEMORY TEST RANGE SELECTION                             August 31, 1990


                              9.3  MEMORY RECONFIGURATION


        The MEMORY MAP can  be reconfigured when incorrectly  identified during
        initialization.  Changes  are  made  by  using  the  commands   in  the
        reconfiguration section.

        This section can be entered  with the CNFG command.  However,  when the
        initialization code  detects an inconsistency  in the memory  arrays it
        sets up, it will enter this section automatically.  The reconfiguration
        section has the following prompt: ">".

        Reconfiguration commands  are used  to change  the arrays,  and thereby
        update the system memory configuration. The section can only  be exited
        when all functional blocks have been correctly set up. If  the operator
        attempts to  exit while  the arrays  are in  error, the  starting block
        number of the functional block in error is displayed. The operator must
        then  correct the  block's memory  type, and  thereby  functional block
        size, before he can exit. Note that in some cases the  prior functional
        block is not correctly identified, and must be reconfigured too.






                      9.4  SELECTING AND DESELECTING TEST BLOCKS


        All memory blocks (excluding the diagnostic code) are selected when the
        diagnostic is initialized (by  starting from address A00 or  A04).  The
        operator  can use  the SELR  or  DESR commands  to add  or  remove test
        blocks.  The diagnostic will only check blocks that have been selected.

        This is useful when a  particular area of memory is suspected  of being
        bad.  In  this case,  all functional blocks  excluding the  suspect one
        should be deselected.

        Note that the smallest selectable  portion of memory is 64KB.  All test
        blocks begin on 64KB boundaries.














        19                  Memory Diagnostic User's Guide               DMEM04
        COMMANDS                                                August 31, 1990






                                    10 -  COMMANDS


        Operator control of  this diagnostic is  provided by means  of commands
        entered on  the terminal.  These  commands are described  in subsequent
        sections according to the following categories:

            o  operating commands
            o  reconfiguring system memory commands
            o  display commands
            o  error and message control commands
            o  editing commands


        A  special  portion  of the  program,  called  the  diagnostic monitor,
        interprets operator input from  the terminal and passes  valid commands
        to  the  program for  execution.   When the  diagnostic  prompt  (*) is
        displayed on  the terminal, the  monitor is ready  to accept  a command
        (which may be entered in  either upper or lower case).  If  the monitor
        receives  an  error in  command  syntax, it  responds  with  an invalid
        command or invalid parameter  message and another prompt (*).   See the
        Diagnostics Introduction   for a general  discussion of  command format
        and syntax.

        In the following command descriptions, "syntax" shows the  command word
        and correct format; "initial state" shows the condition in  effect when
        the program is first started; "default action" shows the effect  of not
        entering optional  parameters; and "values"  shows the value  range for
        parameters.   The commands  are listed  alphabetically by  "SYNTAX". If
        "initial  state",  "default  action"  and/or  "values"  have  not  been
        specified for a command, then the command does not use them.

        Note that each command line  must end with a carriage return  <cr>, and
        only one command can be entered  per line. (This does not apply  to the
        reconfiguration section's commands).  There  must be a space  between a
        command  word  and  its  parameters. There  must  be  spaces  or commas
        between  parameters  themselves.   Parameter  shown  in   brackets  are
        optional. (For example, [YY] in the ADDT command). All other parameters
        are mandatory. (For example, XX  in the ADDT command).  Any one  of the
        following will  cancel a command  line if entered  before the  <cr>:  a
        control-q, or an escape <esc>.

                                   NOTE

            A summary of commands for all tests is presented in Appendix A.





        20                  Memory Diagnostic User's Guide               DMEM04
        COMMANDS                                                August 31, 1990


                               10.1  OPERATING COMMANDS


        The  operating  commands  initiate testing  (RUN),  add  tests  or test
        sections  (ADDT),  delete  tests or  test  sections  (DELT),  cause the
        program to loop (LOOP), and allow up to 16 breakpoints to be set in the
        program (BRKP). In addition, they select (SELR) and deselect (DESR) the
        memory range the  tests check. Also, they  will cause the system  to go
        into boot  (BOOT), perform  periodic checksums  on the  diagnostic code
        portion (not  the data  portion) of memory  (CKSM), examine  and modify
        memory  (EXA and  MOD), and  begin execution  from a  specific location
        (GO).










































        21                  Memory Diagnostic User's Guide               DMEM04
        COMMANDS                                                August 31, 1990


                    10.1.1  ADDT - Add tests and sections

        SYNTAX:  ADDT xx[yy],...

        INITIAL STATE:  Tests 1, 4, 5 and 6 for MOS, and tests
                        1 (excluding section 4), 2, 5, and 6 for CORE.

        DEFAULT ACTION:  yy (all sections of test xx are added)

        VALUES:  xx = 01 to 13
                 yy = 01 to 04


        This command selects the tests and sections to be executed, where xx is
        the test number (in decimal) and yy is the section number (in decimal).
        When a  test number only  is specified, all  sections of that  test are
        selected.  If both a test and a section number are specified,  only the
        specified section of that test is selected.  Any number of tests and/or
        sections may  be specified on  the same command  line, but  the command
        line must not exceed 80 characters.

        The test number  (xx) can be  entered as either  a one- or  a two-digit
        number, but  the section  number (yy)  must be  entered as  a two-digit
        number, with one leading zero.

        Example:

                  *ADDT 103<cr>

                  *ADDT 0104<cr>


        Note :  If any parameter  in a command  string is invalid,  the monitor
        ignores  the invalid  parameter and  any subsequent  parameters  in the
        string.   Only the  valid parameter(s)  preceding the  invalid  one are
        added to the selected test(s) or section(s).


















        22                  Memory Diagnostic User's Guide               DMEM04
        COMMANDS                                                August 31, 1990


                    10.1.2  BOOT - Load engine bootstrap

        SYNTAX:  BOOT


        BOOT  will halt  the diagnostic  execution, causing  an engine  with an
        enabled watchdog timer to load the boot from its proms. If the watchdog
        timer  is  disabled, the  diagnostic  will halt.  (The  program  can be
        restarted using the RUN switch on the front console). This command will
        have more significance in a latter implementation of this diagnostic.





                    10.1.3  BRKP - Set breakpoint

        SYNTAX:  BRKP [xx,yyyyy],...

        DEFAULT ACTION:  Displays current breakpoints.

        VALUES:     xx = 01 to 16 (in decimal)
                    yyyyy = any memory location in the program

        This  command  lists the  breakpoint  settings currently  in  effect if
        entered without parameters.  When  entered with parameters, it  sets up
        one  or  more new  breakpoints,  where xx  is  the number  of  each new
        breakpoint  to be  set  (from 1  to 16  in  decimal) and  yyyyy  is the
        physical address corresponding to each breakpoint.

        When  a  breakpoint is  reached  during execution,  the  program halts,
        restores  the  original  instruction  for  that  memory  location,  and
        displays the following message:

             breakpoint # xx found at yyyyy

             Enter an escape to halt testing, or a c/r to continue.


            If a carriage return <cr>  is entered, that breakpoint is  reset to
        0000, and the program continues executing.  If the user  presses escape
        <esc> , the program returns  to the monitor, resets that  breakpoint to
        0000, and displays the diagnostic prompt; all unencountered breakpoints
        remain set.  To reset an undesired breakpoint, use location 0000.

        Example:

              *BRKP 01,29D2,02,2E78,03,EFD2<cr>

              *BRKP 02,0,03,0<cr>

        Note  : These  breakpoint addresses are  for sample purposes,  they are
        not consistent with the current program listing.

        23                  Memory Diagnostic User's Guide               DMEM04
        COMMANDS                                                August 31, 1990


        Use  of  this  command requires  a  program  listing  (see  Diagnostics
        Introduction  for the procedure  to create a listing).  Note  also that
        each breakpoint is  reset to 0000 as  it is encountered  during program
        execution, so that new breakpoints must be set after each pass.





                    10.1.4  CKSM - Diagnostic code checksum

        SYNTAX:  CKSM

        INITIAL STATE: No periodic checksum is performed.

        Used to cause a periodic  checksum of the diagnostic code  section (not
        the data section) in memory.   The checksum is performed once  every 30
        seconds, and takes  approximately 0.15 of  a second. (Slows  testing by
        0.5% ).   This command  will ensure  that the  diagnostic has  not been
        damaged, and will print an error message if it has been. This option is
        switched off by entering the NCKS (for no checksum) command.





                    10.1.5  DELT - Delete tests and sections

        SYNTAX:  DELT xx[yy],...

        INITIAL STATE: Tests 1, 4, 5 and 6 for MOS, and tests
                       1 (excluding section 4), 2, 5, and 6 for CORE

        DEFAULT ACTION:  yy (all sections of test xx are deleted)

        VALUES:  xx = 01 to 13
                 yy = 01 to 04

            This command deletes tests and sections from execution, where xx is
        the test number (in decimal) and yy is the section number (in decimal).
        When a  test number only  is specified, all  sections of that  test are
        deleted.  If both a test  and a section number are specified,  only the
        specified section of that test is deleted.  Any number of  tests and/or
        sections may  be specified on  the same command  line, but  the command
        line must not exceed 80 characters.

        The test number (xx)  can be entered as either  a one- or a  two- digit
        number, but  the section  number (yy)  must be  entered as  a two-digit
        number, with one leading zero.

        Example:

               *DELT 103<cr>

        24                  Memory Diagnostic User's Guide               DMEM04
        COMMANDS                                                August 31, 1990


               *DELT 0104<cr>

        note :  If any parameter  in a command  string is invalid,  the monitor
        ignores  the invalid  parameter and  any subsequent  parameters  in the
        string.   Only the  valid parameter(s)  preceding the  invalid  one are
        deleted from the selected test(s) or section(s).

        If all tests are deleted  and the RUN command is entered  without tests
        being  added  by the  ADDT  command,  the message  no  test  or section
        selected to be run is displayed.












































        25                  Memory Diagnostic User's Guide               DMEM04
        COMMANDS                                                August 31, 1990


                    10.1.6  DESR - Deselect memory test range

        SYNTAX:  DESR  [b],[a],[b1 - b2],[a1 - a2]

        INITIAL STATE:  All memory, except the diagnostic code
                        (first 64KB) is selected.

        VALUES:  [B] is a test block number, [A] an address. All
                 memory addresses in the system are valid
                 (excluding those in the diagnostic code area)

        DESR  will deselect  an area  of memory  from the  current  memory test
        range.  Valid parameters  for this command are  a test block  number or
        address, or  a range of  block numbers or  addresses. Also valid  is *,
        which deselects the whole memory range.  Multiple parameters, separated
        by spaces or commas can be input on this command line.  Any number less
        than 200 hex is interpreted  as a test block number in  64k increments.
        Numbers greater  than 200 are  interpreted as addresses.  Addresses are
        rounded down to 64KB boundary.

        If a single test block number or address is input, the remaining memory
        making up  this functional  block is deselected.  For example,  a 128KB
        functional block of MOS starts at test block 8 and continues to the end
        of test block 9, (addresses 80000 to 9FFFE). If  DESR 9 is  typed,  the
        area from  90000 to  9FFFE will be  deselected. However,  if DESR  8 is
        entered, the full 128KB will be deselected.

        A range is  entered by separating two  test blocks or addresses  with a
        dash  "-". Note  that  the dash    must   be separated  from  the block
        numbers/addresses by spaces. The use of a range allows the  operator to
        deselect  any  memory  range,  regardless of  the  start  or  end  of a
        functional block.  This deselection is in 64KB increments.

        The test blocks  or addresses must be  positive, and cannot  exceed the
        memory available in the system.



















        26                  Memory Diagnostic User's Guide               DMEM04
        COMMANDS                                                August 31, 1990


                    10.1.7  <ESC> - Escape from current test

        SYNTAX:  <ESC>

        Will interrupt current  test and return  to the '*'  prompt (diagnostic
        monitor level).  There are two exceptions:

        The Scope  Loop test does  not exit  to the monitor  after an  <ESC> is
        input. Control returns  to the Scope Loop  command input. EXIT  must be
        entered in order to return to the monitor.

        When <ESC> is entered during  the Low Memory test, the  diagnostic code
        is first moved back to low memory, and only after this is complete does
        control  return  to   the  diagnostic  monitor.  This   normally  takes
        approximately five seconds.

        This  command  should not  be  used while  running  the reconfiguration
        section, (except for terminating command input).

        Enter the Escape key  and the CR key  to abort the current  test, while
        the diagnostic is running on the Micro Engine or the HDLC Micro Engine.





                    10.1.8  EXA - Examine memory

        SYNTAX:  EXA A,C

        VALUES:  A  is any memory address, C  is the number of
                 halfwords to display. (Both A and C must be hexadecimal.)

        Reads and displays  C  number of halfwords starting at the  location  A
        in memory.



















        27                  Memory Diagnostic User's Guide               DMEM04
        COMMANDS                                                August 31, 1990


                    10.1.9  GO - Execute from address

        SYNTAX:  GO a

        VALUES:  A must be a valid instruction address.


            The  CPU  will begin  to  execute from  the  address  specified. Be
        cautioned  that  an  invalid  address  will  simply  cause  an  illegal
        instruction interrupt, and return to the monitor command level.





                    10.1.10  LOOP - Set loop count

        SYNTAX:  LOOP [N]

        INITIAL STATE: 1

        DEFAULT ACTION:  Displays current loop value.

        VALUES:  0 to 32,768 (in decimal)


            This command specifies the  number of times the selected  tests and
        test sections are to be  executed, where n is the number  of iterations
        (in decimal) ranging from 0 to 32,768.  All selected test  sections are
        executed  in numerical  order  (by the  RUN command),  before  the next
        iteration starts.

        If  a  loop  value  of  zero  is  entered,  the  selected  sections run
        continually until halted manually, by a hardware malfunction, or  by an
        error  (See Section  11.3.2, Error  Control).  If  the LOOP  command is
        entered without a parameter, the monitor outputs the current loop value
        (n).

        If a loop value greater than 32,768 is entered, the monitor divides the
        entered value by 32,768 and uses the remainder as the value of  n.  For
        example, if the decimal number 65,537 were entered as parameter  n, the
        monitor would convert that number to a loop value of 1.












        28                  Memory Diagnostic User's Guide               DMEM04
        COMMANDS                                                August 31, 1990


                    10.1.11  MOD - Modify memory

        SYNTAX:  MOD A,C,D

        VALUES:  A  is any memory address, C  is a count of the
                 halfwords to store, and  D  is  C  number of halfwords.
                 Note that all parameters A, C, and D must be hex.


        This command stores the specified number of halfwords at  the requested
        location.  The  data  is  stored  halfword  at  a  time.  Any  halfword
        containing  a  non   hexadecimal  character  will  abort   all  further
        modifications specified on that line. Each halfword should be separated
        from the preceding halfword by a comma or space.

        For example,  MOD 9000 1 2200   will write 2200 at memory address 9000.





                    10.1.12  NOCK - No diagnostic code checksum

        SYNTAX:  NOCK

        INITIAL STATE: No periodic checksum is performed


        Used  to  switch  off  the periodic  checksum  of  the  diagnostic code
        section.  See CKSM command.
























        29                  Memory Diagnostic User's Guide               DMEM04
        COMMANDS                                                August 31, 1990


                    10.1.13  RUN - Begin test execution

        SYNTAX:  RUN

        INITIAL STATE: Tests 1, 4, 5 and 6 for MOS, and tests 1
                       (excluding section 4), 2, 5 and 6 for CORE.


            This command starts execution of the default tests and sections, or
        those  tests and  sections  previously selected  by the  add  tests and
        sections  command  (ADDT) and  the  delete tests  and  sections command
        (DELT).  When  the diagnostic  is first started  or restarted,  the RUN
        command executes  the default tests.   The selected tests  and sections
        are executed in numerical order as many times as specified by  the LOOP
        command.

            If the RUN command is  entered, but no tests or sections  have been
        selected,  the message  NO TEST  OR SECTION  IS SELECTED  TO BE  RUN is
        displayed on the terminal.



































        30                  Memory Diagnostic User's Guide               DMEM04
        COMMANDS                                                August 31, 1990


                    10.1.14  SELR - Select memory test range

        SYNTAX:  SELR [b],[a],[b1 - b2],[a1 - a2]

        INITIAL STATE: All memory (except the diagnostic code)
                       is tested.

        VALUES:  [B] is a block number, [A] an address. All memory
                 addresses In the system are valid
                 (excluding those in the diagnostic code area)


        SELR  will add  an area  of memory  to the  current memory  test range.
        Valid parameters for this command are  a test block number  or address,
        or  a  range  of  blocks  numbers  or  addresses.  Multiple parameters,
        separated by spaces or commas  can be input on this command  line.  Any
        number less than 200 hex is  interpreted as a test block number  in 64k
        increments.  Numbers greater  than  200 are  interpreted  as addresses.
        Addresses are rounded down to 64KB boundaries.

        If a single test block number or address is input, the remaining memory
        making  up this  functional  block is  selected. For  example,  a 128KB
        functional block of MOS starts at test block 8 and continues to the end
        of test block 9, (addresses 80000 to 9FFFE). If  SELR 9 is  typed,  the
        area  from 90000  to 9FFFE  will  be selected.  However, if  SELR  8 is
        entered, the full 128KB will be selected.

        A range is  entered by separating two  test blocks or addresses  with a
        dash  "-".  Note that  the  dash   must  be  separated  from  the block
        numbers/addresses by spaces. The use of a range allows the  operator to
        select any memory range, regardless of the start or end of a functional
        block.  This selection is in 64KB increments.

        The blocks or addresses must be positive, and cannot exceed  the memory
        available  in  the system.  The  block containing  the  diagnostic code
        (block zero) cannot be selected for testing.


















        31                  Memory Diagnostic User's Guide               DMEM04
        COMMANDS                                                August 31, 1990


                      10.2  RECONFIGURING SYSTEM MEMORY COMMANDS


        This section lists all the commands used to reconfigure the  MEMORY MAP
        (CNFG).





                    10.2.1  CNFG - Reconfigure system memory

        SYNTAX:  CNFG

        INITIAL STATE: All available memory is selected


        CNFG  is  used  whenever  the  operator  wants  to  change  the  memory
        configuration for a particular engine. It should only be used  when the
        diagnostic does not initialize its memory arrays (used to determine the
        different types of memory in the system) correctly. CNFG is not used to
        select or deselect test blocks. (Use SELR or DESR).

        This command will put  the operator in the reconfiguration  section. In
        this section the operator can use the following commands to reconfigure
        the memory. (see reconfiguration section). The prompt for  this section
        is ">".

        Valid commands for this section are ?, CO, DI, EX, ST and X,Y , where X
        is a block number and Y is a memory type. Only the first two letters of
        a  command  are  used in  the  reconfiguration  section.   Note:  These
        commands are only valid  for the reconfiguration section.   Also, <ESC>
        can not be used to exit this section. (EX must be used to return to the
        monitor, since this command will validate the MEMORY MAP.



        10.2.1.1  ? Command

        This command  will list  all valid  commands and  memory types  for the
        reconfiguration section.   Note:  This  command is  only valid  for the
        reconfiguration section.












        32                  Memory Diagnostic User's Guide               DMEM04
        COMMANDS                                                August 31, 1990


        10.2.1.2  CO - Use initial/saved configuration

        SYNTAX:  CO

        INITIAL STATE: Initial system configuration


            The initial (diagnostic startup) or last saved memory configuration
        (see ST below) becomes the current configuration (and thereby indicates
        the current memory in the system).

        If the upper memory range has  been changed by the RN command,  CO will
        only restore the memory configuration to the current upper range.

        Note:  This command is only valid for the reconfiguration section.



        10.2.1.3  DI - Display memory configuration

        SYNTAX:  DI

        INITIAL STATE: Initial system configuration


        DI displays the  system memory by type  and selection. (The  display is
        the same one  generated after inputting  the DMEM command.  See Section
        11.2.1).   Note:   This command is  only valid for  the reconfiguration
        section.

























        33                  Memory Diagnostic User's Guide               DMEM04
        COMMANDS                                                August 31, 1990


        10.2.1.4  EX - Exit reconfiguration section

        SYNTAX:  EX


        This  command is  used  to return  to the  standard  diagnostic monitor
        prompt (indicated by an " * " prompt, instead of the " > " used  in the
        reconfiguration section).  Note that  the memory arrays are  checked to
        ensure that the functional block size matches the block type,  and also
        to ensure that there are no undefined blocks. If errors are  found, the
        reconfiguration routine  will not  be exited.  Instead, a  block number
        believed  to  be   wrongly  configured  is  displayed.   Sometimes  the
        functional block before and after the displayed block will also need to
        be  reconfigured.    Note:   This   command  is  only  valid   for  the
        reconfiguration section.







































        34                  Memory Diagnostic User's Guide               DMEM04
        COMMANDS                                                August 31, 1990


        10.2.1.5  RN - Change upper memory boundary

        SYNTAX:  RN x

        INITIAL STATE: Depends on memory found when program is loaded

        VALUES:  X  is an integer value ,in increments of 1, starting
                 at 0, for each 64KB block. (Up to 3F).


            RN will cause the upper memory boundary to be changed to  the value
        input.   This  will  allow  greater  input  range  for   selecting  and
        deselecting (and testing) the  memory range.  If the upper  boundary is
        increased,  the user must  configure the additional memory. If the user
        does not,  all incorrectly  configured blocks  are displayed   when the
        user enters 'EX' in order to  exit the reconfiguration section.

        For  example:  RN  20   would change  the  upper memory  boundary  to 2
        megabytes.

        Note:  This command is only valid for the reconfiguration section.

































        35                  Memory Diagnostic User's Guide               DMEM04
        COMMANDS                                                August 31, 1990


        10.2.1.6  ST - Save current memory configuration

        SYNTAX:  ST


        ST is used to save  the last reconfiguration of the memory  types. This
        will  destroy the  previously  saved or  initial  configuration arrays.
        Note:  This command is only valid for the reconfiguration section.



        10.2.1.7  Change block configuration

        SYNTAX:  X,Y

        VALUES:  X  is an integer value ,in increments of 1, starting
                 at 0, for each 64KB block. Y  is a valid memory type

                 1 = DATARAM CORE
                 2 = AMPEX CORE
                 3 = 1 Megabyte dynamic RAM
                 4 = 1 Megabyte static RAM  *
                 5 = 4 Megabyte dynamic RAM  *
                 6 = MAC III, with 1 Megabyte static RAM
                 7 = MAC V, with 1 or 2 Megabyte static RAM


        * -- parameter 4 and 5 will not supported by the Diagnostic group
             since the hardware has not been released.

        This command  is used  to reconfigure  block number  X, (in  64KB block
        increments starting from 0), to memory type Y. The block number, and as
        many subsequent 64KB blocks  that make up that particular  memory type,
        are configured  as memory  type Y.  For example,  if Y  is 3,  two 64KB
        blocks  (one  functional  block)  will  be  reconfigured.   Note:  This
        command is only valid for the reconfiguration section.


















        36                  Memory Diagnostic User's Guide               DMEM04
        COMMANDS                                                August 31, 1990


                                10.3  DISPLAY COMMANDS


        These commands are informational commands, provided to aid the operator
        determine the overall status of the diagnostic. The HELP  command lists
        all commands  for the  diagnostic, while OPTN  displays the  setting of
        current diagnostic  options. The  memory map is  displayed by  the DMEM
        command.  Test titles  are listed  using the  NAME command.   STAT will
        display the  last error  that occurred. DOC  displays the  current user
        guide source.





                    10.3.1  DMEM - Display memory map

        SYNTAX:  DMEM


            The map of memory is  displayed. The map is divided by  memory type
        and test selection.





                    10.3.2  DOC - Display user guide source

        SYNTAX:  DOC


            The   on-line  source   of  the   current  user   guide   for  this
        diagnostic is displayed.





                    10.3.3  HELP - Display list of commands

        SYNTAX: HELP


            All  the commands,  plus a  brief explanation  of each  command are
        displayed.








        37                  Memory Diagnostic User's Guide               DMEM04
        COMMANDS                                                August 31, 1990


                    10.3.4  NAME - Display test names

        SYNTAX:  NAME


        The number and title of each test is displayed.





                    10.3.5  OPTN - Display the diagnostic options

        SYNTAX:  OPTN


            The  following diagnostic  options are  displayed: default  and non
        default test and section numbers,  and whether they are selected  to be
        run (indicated  by an '*'),  the loop option  value, error  and message
        controls, and whether the checksum, bell and error  suppression options
        have been selected.





                    10.3.6  STAT - Last error message

        SYNTAX:  STAT


            This command  causes the  last error  encountered to  be displayed.
        Note  that  the error  will  be  displayed even  if  error  control and
        suppression prevented its being printed at the time the error occurred.




















        38                  Memory Diagnostic User's Guide               DMEM04
        COMMANDS                                                August 31, 1990


                       10.4  ERROR AND MESSAGE CONTROL COMMANDS


        Two commands are provided that together determine what the monitor will
        do when an error is encountered (ECON) and how much information will be
        displayed on the terminal (MESG). In addition, a bell can be sounded or
        suppressed  on  error  (BELL   or  NOBE),  and  message   displays  for
        consecutive  errors  occurring  in the  same  functional  block  can be
        suppressed or not, after 5 errors (SPRS and NSPR).





                    10.4.1  BELL - Set bell ring on error

        SYNTAX:  BELL

        INITIAL STATE: No bell will ring on error.


        This command has no parameters. It will cause a bell to  sound whenever
        an error is found (regardless of whether the error is printed  or not).
        This option is reversed by entering NOBE , the no bell command.






























        39                  Memory Diagnostic User's Guide               DMEM04
        COMMANDS                                                August 31, 1990


                    10.4.2  ECON - Error control

        SYNTAX:  ECON [x],[y],[n]

        INITIAL STATE: x = 0 (continue after an error)
                       n = 0 (parameter y is ignored)

        DEFAULT ACTION:  Resets x and n to default condition.

        VALUES:  x = 0 to 5
                 y = 0 to 7
                 n = 0 to 2,147,483,647 (in decimal)


        This  command  controls error  handling  by the  monitor  in  two ways.
        First, it sets up what  action the monitor will take (parameter  x) for
        the first N errors encountered.  Second, it permits a  different action
        (parameter  y)  to be  selected  for subsequent  errors.   When entered
        without parameters, the default condition of continuing after  an error
        (x equal to zero) is selected.

        Each time the RUN command is entered, the error count is reset to zero.
        As  errors  are  encountered  during  execution,  the  error  count  is
        incremented  and compared  to n.   (Note that  unexpected  system error
        messages are not affected by this command.)

        Parameter n is  a positive number ranging  from 0 to  2,147,483,647 (in
        decimal).  If the value for n is greater than 2,147,483,647 the monitor
        divides the entered number by 2,147,483,647, and uses the  remainder as
        the  value of  n.  Note  that if  zero is  entered as  the value  of n,
        parameter y is ignored.

        Any  one of  the three  parameters can  be omitted,  provided  that all
        appropriate commas are entered  before the last parameter.   Any commas
        after the last parameter are  ignored.  If parameter n is  not entered,
        parameter y is ignored.


















        40                  Memory Diagnostic User's Guide               DMEM04
        COMMANDS                                                August 31, 1990


        The values and their meanings for parameters x and y are as follows:


          0  continues the diagnostic after encountering an error (will not re-
             enable error messages when used with parameter y).

          1  Halts the diagnostic after encountering an error and  printing the
             error  message.   The program  may  be restarted  by  pressing the
             increment (INC) followed immediately  by the run (RUN) key  on the
             console. To return  control to the Monitor  when in a  halt, press
             <ESC>.

          2  Returns  control to  the monitor after  encountering an  error and
             printing the error message [see message control command (MESG)].

          3  Continues the diagnostic after displaying the first error message,
             but  does  not  display  error  messages  if  further  errors  are
             encountered.

          4   Loops  on  the  section where  the  error  was  encountered.  The
             operator may stop  the diagnostic by pressing  the PSW key  on the
             console (will not re-enable error messages when used  in parameter
             y). If the PSW key is used, the watchdog timer must be disabled.

          5  Loops on the section where the error was encountered, but does not
             display further error messages;   the first error message  will be
             displayed, if enabled by the MESG command.  (The diagnostic can be
             halted by  pressing the PSW  key, but the  watchdog timer  must be
             disabled).

          6  Continues  the diagnostic after  an error is  encountered; further
             error messages are displayed  if any errors are  encountered (when
             enabled by the MESG command).   Use this value for parameter  y to
             re-enable  error  messages when  values  3 or  5  are  entered for
             parameter x.

          7  Loops on the section where the error was encountered  and displays
             error messages (when  enabled by the  MESG command) if  any errors
             are  encountered.  Use  this value  for parameter  y  to re-enable
             error messages when values 3 or 5 are entered for parameter x.














        41                  Memory Diagnostic User's Guide               DMEM04
        COMMANDS                                                August 31, 1990


                                     Note


             Values of 6 and  7 are valid only  for parameter y.  If  either of
             these  values is  entered for  parameter x,  an  invalid parameter
             message will be displayed.   If any entered parameter  is invalid,
             the entire command is ignored.

             The MESG command also enables and disables error messages.  if the
             ECON  and MESG  commands have  selected different  message display
             options, error messages will not  be displayed.

             When the message suppression  of consecutive errors (for  the same
             block) is in effect, ECON parameters are ignored.

             If a loop on section option is selected, the program will  loop on
             the section  encountering the  error, but  the header  and trailer
             messages will not be displayed in subsequent passes.




































        42                  Memory Diagnostic User's Guide               DMEM04
        COMMANDS                                                August 31, 1990


                    10.4.3  MESG - Message control

        SYNTAX:  MESG x

        INITIAL STATE: 1

        VALUES:  1 to 6


        This command controls which types of diagnostic messages  are displayed
        on the  terminal.  Values for  parameter x  can range from  1 to  6 (in
        decimal) with the following meanings:

        1  displays all messages

        2  displays only error messages

        3  displays no messages

        4  displays only periodic error and pass counts

        5  displays only error messages and periodic error and
           pass counts

        6  displays all messages except error messages (test
           and section headings, and test and section ending
           messages are displayed with error and pass counts)


        Periodic error and pass  counts are messages displayed  during multiple
        passes of  selected tests.   These messages  are displayed  after every
        pass (for passes 1 to 10),  after every tenth pass (passes 11  to 100),
        after  every  hundredth pass  (passes  101 to  1001),  and  after every
        thousandth  pass (for  passes 1001  and up).   Options 4  and  5, which
        control periodic messages, must be used in conjunction with appropriate
        values of the LOOP command.  Each time the RUN command is  entered, the
        pass count  is reset to  zero, and the  process of  displaying periodic
        messages starts over.


                                      NOTE


             The MESG command controls the display of diagnostic messages only,
             and not those of the  monitor.  The ECON command also  enables and
             disables  the display  of error  messages.  If  the ECON  and MESG
             commands have selected different error message options, then error
             messages will not  be displayed.






        43                  Memory Diagnostic User's Guide               DMEM04
        COMMANDS                                                August 31, 1990


                    10.4.4  NOBE - No bell ring on error

        SYNTAX:  NOBE

        INITIAL STATE: No bell will ring on error.


            This command will ensure that  no bell rings when an  error occurs.
        It is used to switch off the BELL command.





                    10.4.5  NOSP - Do not suppress error messages

        SYNTAX:  NOSP

        INITIAL STATE:  Will suppress error messages for the
                        same memory block.

            All errors occurring in the same test block will be handled  in the
        manner specified by the ECON command.





                    10.4.6  SPRS - Suppress error messages

        SYNTAX:  SPRS

        INITIAL STATE:  Error messages are suppressed after 5 similar errors.


        This disgnostic suppresses error messages after five  consecutive error
        messages referring  to the same  test block and  having the  same error
        code  have  been printed.   At  that time  the  "Error  suppression now
        beginning, after displaying 5 errors." message will be displayed on the
        terminal.  Subsequent messages will be suppressed, but the  error count
        will  continue  to  increment.   If  the  test  block  changes, message
        suppression for  the new block  will take effect  after it too  has had
        five consecutive errors.











        44                  Memory Diagnostic User's Guide               DMEM04
        COMMANDS                                                August 31, 1990


                                10.5  EDITING COMMANDS


        Editing commands provide the operator with a means of  correcting input
        errors on the terminal before  they have been entered, that  is, before
        they  have  been passed  to  the monitor.   These  commands  cancel the
        command  line  (control-q,  or <esc>),  delete  the  previous character
        (control-a), and delete the previous word (control-w).





                    10.5.1  Cancel command entry

        SYNTAX:  CONTROL-Q,  or <ESC>


            A  control-q, or  an  escape <ESC>  entered in  the  command string
        cancels the command being entered and causes the monitor to display a ?
        and another prompt.  Each form of this command has the same  effect and
        may  be entered  anywhere  in the  command string  before  the carriage
        return <cr>.  Once a <cr>  has been entered, however, a  command cannot
        be cancelled.





                    10.5.2  Delete single character

        SYNTAX:  CONTROL-A


            This  command deletes  the immediately  preceding character  in the
        command line.  If entered more than once, the next  preceding character
        will be deleted for each control-a entered.  The command can be entered
        anywhere  in the  command line  before the  carriage return  <cr>.  The
        deleted character(s) are displayed on the terminal  between backslashes
        (      ).  If all characters in a command line are deleted, a line feed
        and carriage return result, and the monitor prompts for a new command.













        45                  Memory Diagnostic User's Guide               DMEM04
        COMMANDS                                                August 31, 1990


                    10.5.3  Delete whole word

        SYNTAX:  CONTROL-W


            This command deletes the immediately preceding word in  the command
        line (a word being any  series of characters preceded by a  space).  it
        can be entered anywhere in the command line before the  carriage return
        <cr>.  If more than one  control-w is entered, the next  preceding word
        will be deleted for each entry of the command.  The deleted word(s) are
        displayed on the terminal between backslashes ().   if all  words  in a
        command line are deleted, a  line feed and carriage return  result, and
        the monitor prompts for a new command.









































        46                  Memory Diagnostic User's Guide               DMEM04
        TEST DESCRIPTIONS                                       August 31, 1990






                                11 -  TEST DESCRIPTIONS


        All  accesses  to the  memory  test  range are  done  by  halfword, not
        fullword access.   This restriction  is needed  to avoid  the confusing
        situation where a fullword access causes a single parity error  even if
        both halfwords are  bad.  This restriction  applies to all  tests, with
        the exception of Test 13: it accesses memory by bytes.

        Note  that when  dynamic  semiconductor RAM  with error  logs  is being
        tested,  the error  logs are  scanned after  each test  block  has been
        tested.  The single  and double  bit error  LEDs on  the RAM  board may
        flicker each time the error log is scanned, especially when  the faster
        tests are executed.

        The test times referred to are the time taken to complete one pass of a
        128KB dynamic RAM test block (with no errors found). These times do not
        include the time needed to display the test/section starting  or ending
        messages.   This  takes an  additional  5 seconds.   The  operator must
        therefore calculate  the time  required for a  test by  considering the
        number of test blocks he has chosen, and also add in the 5  seconds for
        the starting and ending messages if these are printed.

        The individual tests and the functions that they check are discussed in
        the following sections.






                                11.1  DEFAULT TEST SET


        All tests in the default  set test available memory in the  memory test
        range from 64KB to 4 Megabytes. Relocation will be used to test above 1
        Megabyte.  The user  can specify  the subtraction  or addition  of 64KB
        blocks of memory from or to the 64KB-4MB memory test range.

        Most tests perform all  their sequences on one functional  block before
        going on to the next functional block.  The functional blocks  are 64KB
        for DATARAM CORE  boards, 128KB (or 512  KB) for AMPEX CORE  boards and
        MOS chip rows.

        Unless added by the operator, the ECC LINE BIT POSITION UNIQUENESS test
        section and the MOS REFRESH/DATA RETENTION Test will not be run  if the
        Engine under test contains CORE.  The CORE MILPAT Test will not  be run
        if the Engine under test contains  dynamic RAM boards.


        47                  Memory Diagnostic User's Guide               DMEM04
        TEST DESCRIPTIONS                                       August 31, 1990


        The test times referred to are the times taken to execute each  test on
        a 128KB block.




















































        48                  Memory Diagnostic User's Guide               DMEM04
        TEST DESCRIPTIONS                                       August 31, 1990


                    11.1.1  TEST 1 - BASIC DATA/ECC PATH TEST

        Test  1  consists  of  four sections.   The  first  three  sections are
        designed for both CORE and MOS.

        NOTE: All sections will  do ECC log checking  if run on MOS.  This test
        does not assume the integrity of the refresh circuitry (if MOS).






        11.1.1.1  SECTION 1 - ALL ZEROS TEST

        PURPOSE

        To  detect gross  data path  and "stuck-on-1"  errors  quickly, without
        assuming the integrity  of the refresh  circuitry (if MOS).   Since the
        all zeros data pattern will create an all ones pattern for the  six ECC
        chips, this test  will also check gross  ECC path and  "stuck-on-0" ECC
        chip bits.

        DESCRIPTION

        Beginning  with the  lowest  halfword in  the lowest  block  within the
        memory test  range, write a  pattern of all  0's, and  immediately read
        that halfword back for verification. Continue this write-immediate-read
        sequence in ascending address order throughout all the halfwords in the
        block.  Next, perform the above procedures for the next higher block in
        the memory test range.   Continue this process until the  highest block
        in the memory test range has been tested.

        TEST DURATION:

        MAC I,II :  7 seconds  ( 1 MB )

        MAC III : 5 seconds

        MAC V : 6 seconds  ( 2 MB )

        INITIAL PATTERN:

        None - Memory in any state.



        11.1.1.2  SECTION 2 - ALL ONES TEST

        PURPOSE

        To  detect gross  data path  and "stuck-on-0"  errors  quickly, without


        49                  Memory Diagnostic User's Guide               DMEM04
        TEST DESCRIPTIONS                                       August 31, 1990


        assuming the integrity  of the refresh  circuitry (if MOS).   Since the
        all ones data pattern will create an all zeros pattern for the  six ECC
        chips, this test  will also check gross  ECC path and  "stuck-on-1" ECC
        chip bits.

        DESCRIPTION

        Same as the All Zeros Test except uses a pattern of all 1's  in writing
        and immediately reading the halfwords of data.

        TEST DURATION:

        MAC I, II or (HDLC) Micro-Engine : 6 seconds  ( 1 MB )

        MAC III : 4 seconds

        MAC V : 6 seconds  ( 2 MB )

        INITIAL PATTERN:

        None - Memory in any state.

































        50                  Memory Diagnostic User's Guide               DMEM04
        TEST DESCRIPTIONS                                       August 31, 1990


        11.1.1.3  SECTION 3 - DATA LINE BIT UNIQUENESS TEST

        PURPOSE:

        To prove the uniqueness of every data line involved in any given access
        in the memory subsystem down to  the DATAIN line of each chip.   If run
        with the Addressing Uniqueness  Test, which verifies the  uniqueness of
        every halfword address in the memory test range, this test verifies the
        uniqueness of every data bit in the memory test range.  This test  is a
        partial simulation of the ROT Test in Manufacturing's Memory Tester.
        DESCRIPTION:


        This test walks a "1" and then walks a "0" across the 16 data  lines to
        detect coupling between the data bit lines going to any row of  16 data
        chips in memory.

        TEST DURATION:

        1 second for all systems.

        INITIAL PATTERN:

        None - Memory in any state.

        PROCEDURE:

        1. Fill a 16 bit halfword with one "1" at the high order
           (leftmost) bit position in a field of zeros.

        2. Write the 1-in-a-field-of zeros halfword into the first
           location of the memory test range.

        3. Immediately read and verify that halfword from the first
           location in the memory test range.

        4. Repeat the above steps with the "1" bit shifted one bit
           position to the right.

        5. Continue the above procedure until the bit has reached the
           rightmost bit position in the 16 bit halfword field.

        6. Repeat all of the above with ones and zeros reversed.

        7. Repeat the above steps on the next halfword.

        8. Repeat steps 1 to 7 throughout the test range, testing
           two consecutive halfwords on each 64KB boundary.






        51                  Memory Diagnostic User's Guide               DMEM04
        TEST DESCRIPTIONS                                       August 31, 1990


        11.1.1.4  SECTION 4 - ECC LINE BIT POSITION UNIQUENESS TEST

            This test is the same as the Data Line Bit Uniqueness Test Section,
        except that it uses 16 bit data patterns that walk a single 1  across a
        field of zeros or a single 0  across a field of ones in the  ECC chips.
        Thus, for any  given access one  of the six  ECC chips will  be written
        with a value (0  or 1) that is different  than the values (1's  or 0's)
        written  into the  other five  ECC chips.  (See section  14.1  for data
        patterns).
        TEST DURATION:

        1 second for all systems.










































        52                  Memory Diagnostic User's Guide               DMEM04
        TEST DESCRIPTIONS                                       August 31, 1990


                    11.1.2  TEST 2 - CORE MILPAT TEST
        PURPOSE:

        To test the 64KB DATARAM and 128KB AMPEX CORE memory boards.  This test
        is similar  to the  AMPEX/DATARAM CORE  version of  the MILPAT  Test in
        Manufacturing's Memory Tester.

        DESCRIPTION:

        This CORE test writes either  the DATARAM or the AMPEX worst  case data
        pattern through  the memory boards  in the memory  test range  and goes
        through  an access  sequence designed  to provoke  CORE  Problems.  The
        worst case pattern is the  EXCLUSIVE OR of addresses MA07 and  MA08 for
        AMPEX boards and addresses MA03 and MA14 for DATARAM boards.  The worst
        case pattern is  used to form the  worst case data patterns  by writing
        the halfwords where the EXCLUSIVE OR of the two address bits equals one
        with the opposite data of those halfwords where the EXCLUSIVE OR equals
        zero.

        TEST DURATION:

        MAC I, II or (HDLC) Micro-Engine :  3 minutes 35 seconds  ( 1 MB )

        MAC III : 2 minutes

        MAC V : 2 minutes 43 seconds  ( 2 MB )

        INITIAL PATTERN:

        Will establish its own initial worst case data pattern.

        PROCEDURE:

          1. Write the first block in  the memory test range with a  worst case
             data  pattern  consisting  of  all  ones  at  halfwords  where the
             EXCLUSIVE OR of  the worst case address  bits equals one  and with
             zeros where it doesn't.

          2. Read and verify the first halfword.

          3. Complement the data in the first halfword.

          4. Read and verify the new data five times.

          5. Restore the first halfword to its initial (Step 1) state.

          6. Repeat Steps 2-5 for all halfwords in the memory block.

          7. Repeat Steps 2-6 two more times.

          8. Repeat all of the above with ones and zeros reversed.



        53                  Memory Diagnostic User's Guide               DMEM04
        TEST DESCRIPTIONS                                       August 31, 1990


          9. Perform  the above  procedures for  the next  higher block  in the
             memory test range.

          10. Continue this process until the highest block in the  memory test
             range has been tested.

















































        54                  Memory Diagnostic User's Guide               DMEM04
        TEST DESCRIPTIONS                                       August 31, 1990


                    11.1.3  TEST 4 - REFRESH/DATA RETENTION MOS TEST

        PURPOSE:

        To partially test the MOS boards' refresh circuitry and the  MOS chips'
        data retention.  A  more complete test  would require control  over the
        refresh circuitry.  Since the 16 bit data patterns used will  be either
        all ones or all zeros, all  6 syndrome (ECC) bits will always  have the
        opposite  value  of the  data  bits.  Thus,  all  6 ECC  chips  will be
        exercised.

        DESCRIPTION:

        This test uses a special test pattern, several waits to allow data time
        to deteriorate, and continual accesses of cells to  disturb surrounding
        cells.

        The test pattern  consists of writing ones  into every ninth cell  in a
        chip  filled  with zeros.   Since  rows and  columns  always  have even
        numbers of cells, this test  pattern will ensure that the one  bits are
        mostly surrounding by zero  bits.  To apply the test  pattern uniformly
        throughout each chip, the series  of one bits at every ninth  cell will
        be shifted one cell position until every cell is tested with a one bit,
        and the  test pattern  will be reversed  to test  zeros in  every ninth
        cell.

        The  waits are  4  millisecond waits  to  ensure a  full  2 millisecond
        refresh cycle no matter when the wait is started.  The waits will allow
        voltage and current  leakage into weak  cells which are  not adequately
        refreshed.

        Each cell will be accessed  ten times to provoke noise  for surrounding
        cells.

        TEST DURATION:

        MAC I, II or (HDLC) Micro-Engine : 12 minutes 56 seconds  ( 1 MB )

        MAC III : 6 minutes 57 seconds

        MAC V : 9 minutes 35 seconds ( 2 MB )













        55                  Memory Diagnostic User's Guide               DMEM04
        TEST DESCRIPTIONS                                       August 31, 1990


        INITIAL PATTERN:

        Will establish its own initial test pattern of all zeros,
        except every ninth cell which will be set to one.

        PROCEDURE:

          1. Write each  ninth halfword with all  ones and all  other halfwords
             with all zeros  to initialize the first  block in the  memory test
             range.

          2. Wait 4 milliseconds to allow time for weak cells to deteriorate.

          3. Read and verify the contents of the first halfword ten times.

          4. Repeat Steps 3 for all halfwords in the memory block.

          5. Read and verify  all halfwords in the  memory block to see  if any
             halfwords  were disturbed  by  accesses of  halfwords  with higher
             addresses.

          6. Repeat Steps 1-5 eight times with the series of one bits  at every
             ninth cell shifted one cell position each time.  (This is  done by
             incrementing by 1 the halfword addresses written with all ones.)

          7. Repeat all of the above with ones and zeros reversed.

          8. Perform  the above  procedures for  the next  higher block  in the
             memory test range.

          9. Continue this process until  the highest block in the  memory test
             range has been tested.






















        56                  Memory Diagnostic User's Guide               DMEM04
        TEST DESCRIPTIONS                                       August 31, 1990


                    11.1.4  TEST 5 - BASIC ADDRESS TEST

        PURPOSE:

        To perform a minimal memory addressing test to quickly detect any gross
        addressing fault  within a memory  board and to  serve as an  ECC Logic
        Exerciser if run on MOS.  Can be run on both MOS and CORE.

        DESCRIPTION:

        This  traditional addressing  test which  simply  writes/reads halfword
        addresses throughout the memory test range is easy to  understand while
        troubleshooting.  The incrementing address pattern used  also exercises
        the ECC Logic by forcing the writing and reading of all possible values
        (from 0 to 63) in the 6 ECC chips.

        The halfword address pattern recycles every 128KB.  The  first halfword
        in the 128KB block is written with 0000, the second halfword is written
        with 0001, the third  with 0002, and so  on until the last  halfword is
        written with FFFF.  64KB DATARAM blocks will be written with a halfword
        address pattern from 0000 to 7FFF only.

        TEST DURATION:

        MAC I, II or (HDLC) Micro-Engine : 8 seconds  ( 1 MB )

        MAC III :  4 seconds

        MAC V :  6 seconds ( 2 MB )

        INITIAL PATTERN:

        None - Memory in any state.

        PROCEDURE:

          1. Write each 16 bit halfword  in the first block of the  memory test
             range with its 16 bit halfword address (writing in ascending order
             throughout the block).

          2.  Read  and  verify  the  halfword  addresses  in  ascending  order
             throughout all halfwords in the block.

          3. Perform  the above  procedures for  the next  higher block  in the
             memory test range.

          4. Continue this process until  the highest block in the  memory test
             range has been tested.






        57                  Memory Diagnostic User's Guide               DMEM04
        TEST DESCRIPTIONS                                       August 31, 1990


                    11.1.5  TEST 6 - ALGORITHM A: Addressing Uniqueness Test

        PURPOSE:

        To prove the  uniqueness of all halfword  addresses in the  memory test
        range.   In  conjunction with  the  Data Bit  Position  Uniqueness Test
        Section, this  test verifies the  uniqueness of every  data bit  in the
        memory test range.  Since the 16 bit data patterns used will  be either
        all ones or all zeros, all  6 syndrome (ECC) bits will always  have the
        opposite  value  of the  data  bits.  Thus,  all  6 ECC  chips  will be
        exercised.  This test may be run on both CORE and MOS.

        DESCRIPTION:

        This test is similar to, but more extensive than, the MARCH Test in the
        Tester.   This test  detects eight  (8) different  cases  of addressing
        uniqueness failure by  performing sixteen (16) different  memory access
        sequences.  (See Procedure below.)

        The  first  eight  (8)  sequences are  used  to  detect  the  eight (8)
        addressing  uniqueness   failure  cases,  which   are  formed   by  the
        combination of the following 3 pairs of conditions:

          1. Illegally  accessed bit with  either a higher  or a  lower address
             than the bit that was accessed.

          2. A transition to either "1" or "0" in the bit being accessed.

          3.  An  initial state  of  either "1"  or  "0" in  the  bit  that was
             illegally accessed.

        The  second eight  (8) sequences  are used  to handle  a  transition to
        either "1" or "0" in  another bit that restores the  illegally accessed
        bit back  to its initial  state.  This transition  would have  to occur
        between the  first access  and the checking  of the  illegally accessed
        bit.

        To prove  addressing uniqueness  between any two  blocks, each  step in
        this test will  be performed on the  entire test range before  the next
        step is started.  This method  differs from the method used in  most of
        the other tests where all steps are done on each block before  the next
        block is tested.  The user will still be allowed to define block(s) out
        of the test range.

        Algorithm  A  is   presented  in  "Efficient  Algorithms   for  Testing
        Semiconductor Random-Access Memories" in IEEE TRANSACTIONS ON COMPUTERS
        JUNE 1978.

        TEST DURATION:

        MAC I, II or (HDLC) Micro-Engine : 1 minute 46 seconds  ( 1 MB )

        MAC III : 43 seconds

        58                  Memory Diagnostic User's Guide               DMEM04
        TEST DESCRIPTIONS                                       August 31, 1990


        MAC V : 57 seconds ( 2 MB )

        INITIAL PATTERN:

        Will establish its own initial memory test range state of all zeros.

        PROCEDURE:

        After the initial memory test range state has been achieved by clearing
        the memory test  range with zeros,  perform the following  sixteen (16)
        access sequences:

          1. Read the lowest halfword in the memory test range, verify  that it
             contains  all zeros,  and  write it  with all  ones.   Repeat this
             process for every halfword  in the memory test range  in ascending
             order. (At  the end of  this step, the  memory test range  will be
             full of ones.)

          2.  Read  and verify  every  halfword  in the  memory  test  range in
             descending order.

          3. Read the lowest halfword in the memory test range, verify  that it
             contains  all ones,  and  write it  with all  zeros.   Repeat this
             process for every halfword  in the memory test range  in ascending
             order.  (At the  end of this step,  the memory test range  will be
             full of zeros.)

          4.  Read  and verify  every  halfword  in the  memory  test  range in
             descending order.

          5. Read the highest halfword in the memory test range, verify that it
             contains  all zeros,  and  write it  with all  ones.   Repeat this
             process for every halfword in the memory test range  in descending
             order. (At  the end of  this step, the  memory test range  will be
             full of ones.)

          6.  Read  and verify  every  halfword  in the  memory  test  range in
             ascending order.

          7. Read the highest halfword in the memory test range, verify that it
             contains  all ones,  and  write it  with all  zeros.   Repeat this
             process for every halfword in the memory test range  in descending
             order.  (At the  end of this step,  the memory test range  will be
             full of zeros.)

          8.  Read  and verify  every  halfword  in the  memory  test  range in
             ascending order.

          9. Read the lowest halfword in the memory test range, verify  that it
             contains all zeros,  write it with all  ones, and rewrite  it with
             all zeros.  Repeat this  process for every halfword in  the memory
             test  range in  ascending order.  (At the  end of  this  step, the
             memory test range will be full of zeros.)

        59                  Memory Diagnostic User's Guide               DMEM04
        TEST DESCRIPTIONS                                       August 31, 1990


          10.  Read and  verify  every halfword  in  the memory  test  range in
             descending order.

          11. Read the highest halfword  in the memory test range,  verify that
             it contains all zeros, write it with all ones, and rewrite it with
             all zeros.  Repeat this  process for every halfword in  the memory
             test range  in descending  order. (At  the end  of this  step, the
             memory test range will be full of zeros.)

          12.  Read and  verify  every halfword  in  the memory  test  range in
             ascending order.

          XX. Set the memory test range to ones for use in the following steps.

          13. Read the lowest halfword in the memory test range, verify that it
             contains all ones,  write it with all  zeros, and rewrite  it with
             all ones.  Repeat  this process for  every halfword in  the memory
             test  range in  ascending order.  (At the  end of  this  step, the
             memory test range will be full of ones.)

          14.  Read and  verify  every halfword  in  the memory  test  range in
             descending order.

          15. Read the highest halfword  in the memory test range,  verify that
             it contains all ones, write it with all zeros, and rewrite it with
             all ones.  Repeat  this process for  every halfword in  the memory
             test range  in descending  order. (At  the end  of this  step, the
             memory test range will be full of ones.)

          16.  Read and  verify  every halfword  in  the memory  test  range in
             ascending order.























        60                  Memory Diagnostic User's Guide               DMEM04
        TEST DESCRIPTIONS                                       August 31, 1990


                                11.2  OPTIONAL TEST SET


            All tests  in the Optional  Test Set test  available memory  in the
        Memory Test Range from 64KB to 4 Megabytes.  Relocation will be used to
        test  above  1  Megabyte.   The user  can  specify  the  subtraction or
        addition of 64KB test blocks  of memory from or to the  64KB-4MB Memory
        Test  Range.  The  diagnostic will  usually test  memory  by functional
        block. (This is default).   (Most tests perform all their  sequences on
        one functional block before going on to the next functional block.) The
        functional blocks are  64KB for DATARAM CORE  boards and 128KB  (or 512
        KB) for AMPEX CORE boards and semiconductor boards.










































        61                  Memory Diagnostic User's Guide               DMEM04
        TEST DESCRIPTIONS                                       August 31, 1990


                    11.2.1  TEST 3 - MOS MILPAT TEST

        PURPOSE:

        To test the dynamic  semiconductor memory board.  This test  is similar
        to the MOS Memory version of the MILPAT Test in  Manufacturing's Memory
        Tester.  Since the 16 bit data patterns used will be either all ones or
        all zeros,  all 6  syndrome (ECC)  bits will  always have  the opposite
        value of the data bits.  Thus, all 6 ECC chips will be exercised.

        DESCRIPTION:

        This test continually accesses each cell in memory 128 times to  see if
        other cells in the same  chip are disturbed.  After each test  cell has
        been accessed 128 time and before  going on to the next cell,  the cell
        with the address complement of the test cell is accessed once to detect
        any address switching problem caused by the continual accessing  of one
        location.  (The address complement  is formed by inverting  the address
        bits that select cells within a chip.)

        TEST DURATION:

        MAC I, II or (HDLC) Micro-Engine : 25 minutes 26 seconds  ( 1 MB )

        MAC III : 13 minutes 24 seconds

        MAC V : 1 minutes 13 seconds  ( 128 KB )

        INITIAL PATTERN:

        Will establish its own initial data pattern of all zeros.

        PROCEDURE:

        1. Write the first block in the memory test range with an
           initial data pattern of all zeros.

        2. Read and verify the first halfword in the block for all zeros.

        3. Write all ones into the first halfword in the block.

        4. Read and verify the first halfword in the block 128 times for
           all ones.

        5. Read and verify the halfword with the complementary
           intra-chip address for all zeros.

        6. Restore the first halfword to all zeros.

        7. Repeat Steps 2-6 for all halfwords in the memory block.

        8. Repeat all of the above with ones and zeros reversed.


        62                  Memory Diagnostic User's Guide               DMEM04
        TEST DESCRIPTIONS                                       August 31, 1990


        9. Perform the above procedures for the next higher block
           in the memory test range.

        10. Continue this process until the highest block in the
            memory test range has been tested.

















































        63                  Memory Diagnostic User's Guide               DMEM04
        TEST DESCRIPTIONS                                       August 31, 1990


                    11.2.2  TEST 7 - ALGORITHM B: MOS Integrity Test

        As this test may take a relatively long period of time to  execute, the
        diagnostic will calculate  the approximate time needed  for completion.
        This time is displayed at the  start of the first pass through  test 7.
        , and the user is  asked whether he still wants to run the test.  A 'Y'
        or 'N' answer is  required.

        PURPOSE:

        To test for  faulty device address  decoders, write drivers,  and sense
        amplifiers, and  to detect capacitive  coupling among all  cell triples
        within the memory cell array.  (This 3-coupling occurs when a  write to
        cell I disturbs cell  K only if cell J  is in a specific  state.) Since
        the 16 bit data patterns used will be either all ones or all zeros, all
        6 syndrome (ECC) bits will  always have the opposite value of  the data
        bits.  Thus, all 6 ECC chips will be exercised.  This test  is designed
        for MOS but may also be useful for CORE.

        DESCRIPTION:

        This test is similar to, but more extensive than, the Moving Inversions
        Test and  the RING  PAT Test  in the  Tester.  This  test is  much more
        exhaustive than Algorithm A, which can not detect 3-coupling problems.

        This test proceeds by successively partitioning memory into  two halves
        and performing a  set of memory access  sequences on the two  halves of
        memory. The  halves for  any set of  sequences can  be determined  by a
        specific  bit  position  in  the  memory  address.   Thus,  at  the Ith
        iteration, if the Ith bit position  of the address of a halfword  is 0,
        then that  halfword belongs to  the "top half"  of the memory  for that
        sequence set; if 1, to the "bottom half".

        Algorithm  B  is   presented  in  "Efficient  Algorithms   for  Testing
        Semiconductor Random-Access Memories" in IEEE TRANSACTIONS ON COMPUTERS
        JUNE 1978.

        TEST DURATION:

        Will take approximately 60 minutes to complete for the selected
        memory.

        Before the test start to run, the message "Algorithm B will take
        approximately xxx minutes to complete for the selected memory."
        (While xxx are three decimal digits.) will be displayed.

        INITIAL PATTERN:

        Will establish its own initial memory test range state of
        all zeros.

        PROCEDURE:


        64                  Memory Diagnostic User's Guide               DMEM04
        TEST DESCRIPTIONS                                       August 31, 1990


        After the initial memory test range state has been achieved by clearing
        the memory test range with zeros, perform the following steps:

          1. Define memory in the first 128KB chip row into two  "halves".  The
             "top half"  consists of  all halfwords where  MA140 equals  0; The
             "bottom  half" consists  of all  halfwords where  MA140  equals 1.
             (The "top half" consist of all halfwords in the chip row with even
             numbered halfword  addresses.  The "bottom  half" consists  of all
             halfwords with odd numbered halfword addresses.)

          2. Perform the following eight (8) memory access sequences:

             A. Read the  lowest halfword in the  "top half" of the  128KB chip
                row, verify that it contains  all zeros, and write it  with all
                ones.  Repeat this process for every halfword in the "top half"
                of the chip row in  ascending order. Then, read and  verify the
                "top half" in ascending order for all ones.  Finally,  read and
                verify the "bottom half" in ascending order for all zeros.

             B.  Read the  lowest halfword  in the  top half  of the  chip row,
                verify that it contains all ones, and write it with  all zeros.
                Repeat this process for every  halfword in the top half  of the
                chip row in ascending order. Then, read and verify the top half
                in ascending order for all zeros.  Finally, read and verify the
                bottom half in ascending order for all zeros.

             C. Read the  lowest halfword in the  bottom half of the  chip row,
                verify that it contains all zeros, and write it with  all ones.
                Repeat this process  for every halfword  in the bottom  half of
                the chip row in ascending order. Then, read and verify  the top
                half  in  ascending order  for  all zeros.   Finally,  read and
                verify the bottom half in ascending order for all ones.

             D.  Read the  lowest halfword  in the  top half  of the  chip row,
                verify that it contains all zeros, and write it with  all ones.
                Repeat this process for every  halfword in the top half  of the
                chip row in ascending order. Then, read and verify the top half
                in ascending order for all ones.  Finally, read and  verify the
                bottom half in ascending order for all ones.

             E. Read the  lowest halfword in the  bottom half of the  chip row,
                verify that it contains all ones, and write it with  all zeros.
                Repeat this process  for every halfword  in the bottom  half of
                the chip row in ascending order. Then, read and verify  the top
                half in ascending order for all ones.  Finally, read and verify
                the bottom half in ascending order for all zeros.

             F. Read the  lowest halfword in the  bottom half of the  chip row,
                verify that it contains all zeros, and write it with  all ones.
                Repeat this process  for every halfword  in the bottom  half of
                the chip row in ascending order. Then, read and verify  the top
                half in ascending order for all ones.  Finally, read and verify
                the bottom half in ascending order for all ones.

        65                  Memory Diagnostic User's Guide               DMEM04
        TEST DESCRIPTIONS                                       August 31, 1990


             G.  Read the  lowest halfword  in the  top half  of the  chip row,
                verify that it contains all ones, and write it with  all zeros.
                Repeat this process for every  halfword in the top half  of the
                chip row in ascending order. Then, read and verify the top half
                in ascending order for all zeros.  Finally, read and verify the
                bottom half in ascending order for all ones.

             H. Read the  lowest halfword in the  bottom half of the  chip row,
                verify that it contains all ones, and write it with  all zeros.
                Repeat this process  for every halfword  in the bottom  half of
                the chip row in ascending order. Then, read and verify  the top
                half  in  ascending order  for  all zeros.   Finally,  read and
                verify the bottom half in ascending order for all zeros.

          3. Repeat  Step 2  but access memory  in the  chip row  in descending
             instead of ascending order.

          4. Define memory  in the 128KB chip  row into new two  "halves".  The
             "top half"  consists of  all halfwords where  MA130 equals  0; The
             "bottom  half" consists  of all  halfwords where  MA130  equals 1.
             Then,  repeat  Steps 2  and  3.  (The "top  half"  consist  of all
             halfwords  with  even numbered  fullword  addresses.   The "bottom
             half"  consists  of  all  halfwords  with  odd  numbered  fullword
             addresses.)

          5. Continue the above  procedure for MA120 through MA000  plus XMA150
             until the  chip row  has been  divided in  halves and  tested with
             Steps 2 and 3 for a total of sixteen (16) times.  (NOTE:  The last
             pair  of  halves, which  are  divided by  XMA150  are  the "usual"
             halves.  One half consists of the first 65K bytes; the  other half
             consists of the second 65K bytes.)

          6. Repeat all of the above for each 128KB chip row in the memory test
             range.




















        66                  Memory Diagnostic User's Guide               DMEM04
        TEST DESCRIPTIONS                                       August 31, 1990


                    11.2.3  TEST 8 - LOW MEMORY TEST

        PURPOSE:

        To test  the first  functional test block  (64KB if  DATARAM, otherwise
        128KB), by relocating the diagnostic code from address 0 to 20000x. The
        first 64KB is not tested by  any other tests, as this area  is occupied
        by the diagnostic code.

        DESCRIPTION:

        As the diagnostic does not  exceed 64KB, the first 64KB  will therefore
        be the only memory not tested by the other tests. The  first functional
        block is checked during this  test.  The diagnostic code will  be moved
        from  address 0 - 64KB to address 128 - 192KB, relocation enabled and a
        checksum  performed  to  ensure the  validity  of  the  relocated code.
        (Should the checksum fail, the low memory test will be  aborted). After
        the test is  completed, the diagnostic will  be restored to  low memory
        and another checksum performed.

        The Low Memory test will operate on either the first 64KB if the memory
        is DATARAM, or 128KB if not.  This test block will be divided  into two
        areas: that below address 540  (Area A), and the remainder of  the test
        block (Area B). Area B is tested first.

        Area B is  tested as a conventional  test block, with  section messages
        and error displays. However,  the only error control option  allowed is
        continue on error, with messages enabled or suppressed.   The following
        tests are not performed on area B, whether selected or not: The Battery
        Backup and Scope Loop tests.

        Area A is more difficult to test. This area is tested in  two sections,
        from C0 to 2FEx, and from 400x to 540x. The other areas below  540x are
        either  read   only  (mac  status   register,  parts   of  segmentation
        registers), or system interrupt vectors.



















        67                  Memory Diagnostic User's Guide               DMEM04
        TEST DESCRIPTIONS                                       August 31, 1990


        The following tests are executed on this area, whether selected or not:

                   1. All ones.
                   2. All zeros.
                   3. Refresh/data retention Mos test.
                   4. Basic Address test.
                   5. Algorithm A.


        Because the I/O interrupt vector  table are being tested (0D0  to 2D0),
        and  because of  the small  size of  this area,  all IO  interrupts are
        disabled  for the  short  duration required  to test  this  memory. Any
        system  level  interrupt that  occurs  during this  period  is trapped,
        identified  and  redirected  to  the  monitor's   particular  interrupt
        handler.   However, due  to the  time required  to print  messages, one
        header message (indicating that testing is about to begin),  is printed
        prior to disabling of interrupts.  Test and section headers, and errors
        found during  the execution of  the above tests;  are not  displayed no
        matter  what  error control  parameter  has been  selected.   (The time
        constraint is  because the diagnostic  must toggle the  watchdog timer,
        normally  accomplished  by  utilizing  the  ATN00  interrupts.  As  all
        interrupts are  disabled during  the actual running  of the  above five
        tests, no messages are displayed until the testing is stopped.  This is
        done to ensure that the watchdog timer does not boot the system).

        After area A has been tested, a count of errors found while  testing is
        displayed.

        CONSOLE DISPLAY:

        While testing area  B, the test and  section number shown on  the front
        console are those of the current section executing.  While testing area
        A, test 8 section  1 is shown on  the front console.  The  block number
        being tested is  always zero. This  is the only  test that will  show a
        block of 00. It is possible to identify all tests being executed by the
        Low Memory test.


















        68                  Memory Diagnostic User's Guide               DMEM04
        TEST DESCRIPTIONS                                       August 31, 1990


        TEST DURATION:

        DEPENDENT ON WHICH TESTS ARE SELECTED.

        INITIAL PATTERN:

        Established by each test.

        PROCEDURE:

          1. Perform a  checksum on the  Memory Diagnostic code.   Relocate the
             code  from  address 0,  to  128KB (20000).   Then  perform another
             checksum on  the diagnostic,  and compare  the checksum  with that
             performed prior to relocation. If not equal, abort this test.

          2. Modify  all interrupt vectors.   Set up the  MAC to allow  for the
             diagnostic relocation, and enable the MAC.

          3.  Print message  indicating  testing of  area B  has  begun.  Begin
             testing area above 540x, by calling all selected tests, except the
             Scope Loop and Battery Backup tests.

          4.  Print message  indicating  that testing  of area  B  is complete.
             Restore the  diagnostic code to its original location, and disable
             the MAC relocation.  Perform  a checksum of the restored  code. If
             the checksum is invalid, abort this test.

          5.  Print   message indicating  that  testing of  area  A  has begun.
             Disable  all I/O  interrupts.   Execute the  following  tests: All
             Ones, All  Zeros, Refresh/Data Retention  Mos Test,  Basic Address
             test, and Algorithm A.

          6. Enable  I/O interrupts.  Restore all  interrupt vectors.  If error
             were found,  print a  count of  the number  of errors  found while
             testing area A.



















        69                  Memory Diagnostic User's Guide               DMEM04
        TEST DESCRIPTIONS                                       August 31, 1990


                    11.2.4  TEST 9 - MOVING INVERSIONS TEST
        PURPOSE:

        To provide a relatively fast, architecturely independent test.  To test
        for faulty device address decoders and sense amplifiers, and  to detect
        coupling between rows  or columns in the  memory matrix.  Since  the 16
        bit data  patterns used will  be either  all ones or  all zeros,  all 6
        syndrome (ECC)  bits will always  have the opposite  value of  the data
        bits.  Thus, all 6 ECC chips will be exercised.  This test  is designed
        for MOS but may also be useful for CORE.

        The  Moving Inversions  Test is  presented in  "Moving  Inversions Test
        Pattern is Thorough, Yet Speedy" in COMPUTER DESIGN, MAY 1976.
        TEST DURATION:

        MAC I, II or (HDLC) Micro-Engine :  11 minutes 43 seconds  ( 1 MB )

        MAC III : 6 minutes 20 seconds

        MAC V : 37 seconds ( 128 KB )

        INITIAL PATTERN:

        Will establish its own initial memory test range state of all
        zeros.

        PROCEDURE:

        After the initial memory test range state has been achieved
        by clearing the memory test range with zeros, perform the
        following steps:

          1.  Read  the  first  halfword and  verify  that  it  contains zeros.
             2.  Store  a data  pattern  of  all ones  at  the  first halfword.
             3. Verify that the correct pattern exists at the first halfword.

          4.  Repeat the  above procedure  on the  next halfword  (in ascending
             order), using  MA014 (halfword  select) to  increment to  the next
             address, until the top of the test block is reached. At this point
             the test block should contain all ones.

          5. Repeat steps 1 to 4, storing ones instead of zeros, until the test
             block contains zeros again.

          6. Repeat steps 1 through  5, but in descending order,  starting with
             the halfword with the highest address in the test block.

          7.  Repeat the  sequence of  steps  1 through  6, but  use  the MA013
             (fullword  select)  bit  as  the  factor  to  calculate  the  next
             successive address,  starting from the  first halfword,  until the
             top (or bottom, if descending) of the test block is  reached. Then
             start  at  the first  address  +  2, using  the  same  factor, and


        70                  Memory Diagnostic User's Guide               DMEM04
        TEST DESCRIPTIONS                                       August 31, 1990


             continue testing until the  top (or bottom, if descending)  of the
             test block is  reached. Continue this  until all halfwords  in the
             test  block have  been tested,  in both  ascending  and descending
             order.

             In other words, this step  involves two passes of steps  1 through
             6. The first pass through  the test block will test  the following
             byte address  locations: 0,  4, 8,  ...  The  second would  do the
             following: 2, 6, A ..

          8. Repeat step 7, changing  the additive factor to the next  power of
             two. This is MA012 (doubleword select).  This step will  contain 4
             passes of steps 1 through 6.

                   First pass: 0,8,10,18,20,...
                   Second pass: 2,A,12,1A,22,...
                   Third pass: 4,C,14,1C,24,...
                   Fourth pass: 6,E,16,1E,26,...

             Step 7 is repeated until  the most significant power of 2  for the
             particular test  block size has  been checked.  This  is 2  to the
             15th for a 128KB test block.   Or 2 to the 17th for a 512KB block.
             The final address  bit tested for a  128KB block will  execute 64K
             passes

                   First pass: 0, 64k
                   Second pass:  2, 64K+2
                   Third pass:   4, 64K+4


























        71                  Memory Diagnostic User's Guide               DMEM04
        TEST DESCRIPTIONS                                       August 31, 1990


                    11.2.5  TEST 10 - MEMORY SCOPE LOOP
        PURPOSE:

        To help an user trouble shoot  memory boards down to the chip  level by
        giving the  user control of  the test parameters  in a scope  loop test
        routine.  Can be run on both Core and MOS.
        DESCRIPTION:

        This test will  drive the hardware under  test as quickly  as possible.
        To speed up  the test, the user  may deselect all checking  for errors.
        If  error  checking  is  eliminated,  the  test  will  provide  a  fast
        repetition rate  for the signals  in the hardware  in order to  give as
        clear and  steady a  trace on  an oscilloscope  as possible.   Once the
        scope loop starts, it can only be interrupted by the user  pressing the
        ESC key on the terminal.

        This test will allow the user to specify the following  parameters: the
        halfword  data test  pattern,  the address  range to  be  accessed, the
        memory functions the test should do (reads, writes, or writes and reads
        to each  accessed location),  what delays (if  any) should  be inserted
        into the scope loop to prevent scope jitter; and whether error checking
        should be performed or not.

        TEST DURATION:

        Forever, unless the user interrupts the scope loop test by pressing the
        ESC on the terminal.

        INITIAL PATTERN:

        If a write cycle has been selected, the test range is  not initialized;
        otherwise, the test pattern is stored throughout the test range.

        PROCEDURE:

        The test accepts terminal  commands which supply the  parameters needed
        to execute the scope loop tests.  The loop will only start when  RUN is
        input.  Once  the RUN  command is entered,  the loop  will continuously
        perform the following:

          1. If a write cycle has been specified, write the halfword pattern at
             the first halfword in the test range.

          2. If a delay time has  been specified, a delay loop is  executed for
             the time input.

          3. If a read cycle has been specified, read the first halfword in the
             test range

          4. If the user has specified that the test range be checked, the data
             at the first halfword is compared with the test pattern.  An error
             is displayed if the halfword does not contain the correct pattern.


        72                  Memory Diagnostic User's Guide               DMEM04
        TEST DESCRIPTIONS                                       August 31, 1990


          5.  Any of  steps 1  to 4  chosen are  repeated for  each successive,
             ascending halfword throughout  the  test range, at which  time the
             process  is  repeated  from  the start  of  the  test  range. This
             continues until the user inputs an ESC character.


















































        73                  Memory Diagnostic User's Guide               DMEM04
        TEST DESCRIPTIONS                                       August 31, 1990


        11.2.5.1  SCOPE LOOP COMMANDS

        The following are a list of the valid scope loop commands. Commands are
        listed alphabetically by SYNTAX. Any number of commands may be input on
        one line,  separated by commas,  as long  as the line  is less  than 80
        characters.  At the start of the scope loop, the prompt is changed from
        an asterisk to a dash ( - ). The asterisk becomes the prompt again when
        the scope loop is exited, (when the user types the EXIT command).


        CHCK - Perform error checking

        SYNTAX:  CHCK

        INITIAL STATE:  Read cycle

        Each halfword in the test  range is compared with the test  pattern. An
        error is displayed if the  halfword does not contain the  test pattern.
        The error checking  cycle is removed from  the loop execution  by using
        the CLR command.


        CLR - Deselects all memory accesses

        SYNTAX:  CLR

        INITIAL STATE: Read cycle

        The read,  write and check-for-errors  memory accesses  are deselected.
        Once this  command has  been input,  a memory  access must  be selected
        before the  RUN command is  input, otherwise an  error message  will be
        output, and the operator will be prompted for an additional  scope loop
        command.


        DISP - Display current test parameters

        SYNTAX:  DISP

        The current  test parameters  selected by  the operator  are displayed.
        These are memory  accesses (read, write  and check), test  range, delay
        factor, and test pattern.


        DLAY - Insert loop delay

        SYNTAX:  DLAY x

        INITIAL STATE: No loop delay is inserted

        VALUES:  x = 0 - 65,535



        74                  Memory Diagnostic User's Guide               DMEM04
        TEST DESCRIPTIONS                                       August 31, 1990


        This commands causes a delay of 4 microseconds for each increment of X.
        (Maximum delay is 0.26 seconds).


        <ESC> - Stop loop execution

        SYNTAX:  <ESC> key

        The escape key is input in order to stop loop execution. The  loop will
        execute indefinitely until halted by  the <ESC> key, at which  time the
        operator is  prompted for  a scope loop  command. Note  that it  is not
        possible to return to the monitor using the escape key. The only way to
        exit the test itself is by typing EXIT.


        EXIT - Exit scope loop test

        SYNTAX:  EXIT

        The EXIT command is the only way to leave the memory scope loop command
        level, and return to the diagnostic monitor level. Note that if LOOP is
        greater than one, and test 10 is the only test selected, the Scope Loop
        test is executed immediately after exiting itself. If this happens, the
        user  should  type  a quick  succession  of  escapes  immediately after
        inputting EX and <CR>.


        HELP - Display list of valid commands

        SYNTAX:  HELP

        A list of commands valid in the memory scope loop test are displayed.


        PATT - Modify test pattern

        SYNTAX:  PATT xxxx

        INITIAL STATE:  FFFF

        VALUES:  xxxx = 0000 to FFFF

        The test pattern is modified to the value of XXXX.


        RANG - Select test range for scope loop

        SYNTAX:  RANG xxxxxx yyyyyy

        INITIAL STATE: 20000 to 30000.

        VALUES:  xxxxx = 10000 to 3FFFFE, yyyyyy = 10000 to 3FFFFE


        75                  Memory Diagnostic User's Guide               DMEM04
        TEST DESCRIPTIONS                                       August 31, 1990


        This  command  selects  the  test range.  Any  value  greater  then the
        diagnostic code may be  specified, but the difference  between starting
        and ending ranges must not  be greater than E0000. Ranges  greater than
        one megabyte will result in the MAC relocation being enabled during the
        scope loop itself.  A range of 10000 to 10000 will access  one halfword
        only.


        READ - Execute read memory cycle

        SYNTAX:  READ

        INITIAL STATE: Read memory cycle

        VALUES:  None

        Selects a read memory cycle to be executed in the scope loop.  The read
        cycle is cleared from the test access cycles by using the CLR command.


        RUN - Begin memory scope loop

        SYNTAX:  RUN  The RUN  command starts scope  loop execution.  The scope
        loop will execute indefinitely until halted by an <ESC> command.


        RIT - Execute write cycle

        SYNTAX:  WRIT

        INITIAL STATE: Read cycle

        This command causes a write cycle to be performed on every  halfword in
        the test range.  The write cycle is cleared from the test access cycles
        by using the CLR command.



















        76                  Memory Diagnostic User's Guide               DMEM04
        TEST DESCRIPTIONS                                       August 31, 1990


                    11.2.6  TEST 11 - BATTERY BACKUP TEST
        PURPOSE:

        To verify the integrity of  data in MOS boards when the  battery backup
        module is used.
        DESCRIPTION:

        The test first asks the user whether he wants to Store the data pattern
        before powering the system down, Verify a previously stored pattern, or
        Exit this test. If the user asks to store the pattern, the  test writes
        alternating all ones and all zeros halfwords throughout the memory test
        range, asks the user to power down, waits for the user to indicate that
        the wait period  is over by selecting  one of the above  three options.
        Normally the  user would choose  to read and  verify all the  data, and
        then  exit the  test.   The alternating  all  ones and  all  zeros test
        pattern  will create  an  alternating pattern  of ones  and  zeros bits
        within the cells of MOS chips.

        This test can be used for  testing one or more MOS boards by  using the
        save switch(es) (SW3) or can be used for testing all MOS memory  in the
        memory test  range by  powering down  the entire  Engine.  If  the user
        powers down the entire Engine, he must restart the diagnostic.

        To keep this test from  exhausting the battery back-up power,  the user
        should not run  the test repeatedly and  should check the  charge level
        before running the test.
        TEST DURATION:

        Depends on the memory range selected, and how long the user wants power
        to remain off.
        INITIAL PATTERN:

        None - Memory in any  state. (Alternating ones and zeros if  the entire
        engine has been powered down after the test pattern has been written by
        a previous execution of this test.)

        PROCEDURE:

          1.  Ask the  user to  select  one of  three options:  Store  the test
             pattern, Verify the test pattern, or Exit the test.

          2. If the user decides  to store the test pattern,  write alternating
             all ones and all zeros halfwords, ask the user to power down, warn
             the user not to keep the power off during this test for  more than
             3 minutes.  Go to Step 1.

          3. If  the user wants  to verify stored  data, check the  memory test
             range  for the  presence  of alternating  all ones  and  all zeros
             halfwords.  Go to Step 1 when complete. Display errors if found.

          4. If the user decides to exit the test, return to calling routine.



        77                  Memory Diagnostic User's Guide               DMEM04
        TEST DESCRIPTIONS                                       August 31, 1990


                    11.2.7  TEST 12 - MOVE INVERSIONS WITH ALGORITHM A IMBEDDED
        PURPOSE:

        By   combine the  Moving Inversions  and algorithm  A tests,  provide a
        relatively fast, architecturely  independent test.  To test  for faulty
        device address  decoders and sense  amplifiers, and to  detect coupling
        between rows or  columns in the memory  matrix.  Since the 16  bit data
        patterns used  will be  either all ones  or all  zeros, all  6 syndrome
        (ECC) bits will always have the opposite value of the data bits.  Thus,
        all 6 ECC chips will be  exercised.  This test is designed for  MOS but
        may also be useful for CORE.

        The  Moving Inversions  Test is  presented in  "Moving  Inversions Test
        Pattern is Thorough, Yet Speedy" in COMPUTER DESIGN, MAY 1976.

        TEST DURATION:

        MAC I, II or (HDLC) Micro-Engine :  21 minutes 42 seconds  ( 1 MB )

        MAC III :  12 minutes 4 seconds

        MAC V :  1 minutes 5 seconds  ( 128 KB )

        INITIAL PATTERN:

        Will establish its own initial memory test range state of all
        zeros.

        PROCEDURE:


          1. Perform the following 16 steps on the first test block:

             A. Read  the  lowest halfword in   the memory test   range, verify
                that it contains all zeros, and write it with all ones.  Repeat
                this process  for every  halfword in the  memory test  range in
                ascending order.   (At the  end of this  step, the  memory test
                range will be full of ones.)

             B. Read and   verify every halfword in  the memory  test  range in
                descending order.

             C. Read  the  lowest halfword in   the memory test   range, verify
                that it contains all ones, and write it with all zeros.  Repeat
                this process  for every  halfword in the  memory test  range in
                ascending order.   (At the  end of this  step, the  memory test
                range will be full of zeros.)

             D. Read and   verify every halfword in  the memory  test  range in
                descending order.

             E. Read the   highest halfword in  the memory  test  range, verify


        78                  Memory Diagnostic User's Guide               DMEM04
        TEST DESCRIPTIONS                                       August 31, 1990


                that it contains all zeros, and write it with all ones.  Repeat
                this process  for every  halfword in the  memory test  range in
                descending order.   (At the end of  this step, the  memory test
                range will be full of ones.)

             F. Read and   verify every halfword in  the memory  test  range in
                ascending order.

             G. Read the   highest halfword in  the memory  test  range, verify
                that it contains all ones, and write it with all zeros.  Repeat
                this process  for every  halfword in the  memory test  range in
                descending order.   (At the end of  this step, the  memory test
                range will be full of zeros.)

             H. Read and   verify every halfword in  the memory  test  range in
                ascending order.

             I. Read  the  lowest halfword in   the memory test   range, verify
                that it contains all zeros, write it with all ones, and rewrite
                it with all  zeros.  Repeat this process for  every halfword in
                the memory test range in ascending  order.  (At the end of this
                step, the memory test range will be full of zeros.)

             J. Read  and verify every  halfword  in the  memory test  range in
                descending order.

             K. Read  the highest  halfword in  the  memory test  range, verify
                that it contains all zeros, write it with all ones, and rewrite
                it with all  zeros.  Repeat this process for  every halfword in
                the memory test range in descending order.  (At the end of this
                step, the memory test range will be full of zeros.)

             L. Read  and verify every  halfword  in the  memory test  range in
                ascending order.

             XX. Set the  memory test range to   ones for use in  the following
                steps.

             M. Read  the  lowest  halfword in the  memory  test  range, verify
                that it contains all ones, write it with all zeros, and rewrite
                it with  all ones.  Repeat this  process for every  halfword in
                the memory test range in ascending  order.  (At the end of this
                step, the memory test range will be full of ones.)

             N. Read  and verify every  halfword  in the  memory test  range in
                descending order.

             O. Read  the highest  halfword in  the  memory test  range, verify
                that it contains all ones, write it with all zeros, and rewrite
                it with  all ones.  Repeat this  process for every  halfword in
                the memory test range in descending order.  (At the end of this
                step, the memory test range will be full of ones.)


        79                  Memory Diagnostic User's Guide               DMEM04
        TEST DESCRIPTIONS                                       August 31, 1990


             P. Read  and verify every  halfword  in the  memory test  range in
                ascending order.

          2.  Repeat the  sequence of  steps  A through  P, but  use  the MA013
             (fullword  select)  bit  as  the  factor  to  calculate  the  next
             successive  address  for  each  step,  starting  from   the  first
             location, until  the top  (or bottom, if  descending) of  the test
             block is reached. Then start  at the first address + 2,  using the
             same factor,  and continue  testing until the  top (or  bottom, if
             descending) of the test block is reached. Continue this  until all
             halfwords in the  test block have  been tested, in  both ascending
             and descending order.

             In other  words, step 2  involves two passes  for each of  steps A
             through P:  the first pass  through the test  block will  test the
             following  locations:  0,  4,  8, ...   The  second  would  do the
             following: 2, 6, A ..

          3. Repeat step 2, changing  the additive factor to the next  power of
             two. This is MA012 (doubleword select).  This step will  contain 4
             passes of steps A through P.

                   First pass: 0,8,10,18,20,...
                   Second pass: 2,A,12,1A,22,...
                   Third pass: 4,C,14,1C,24,...
                   Fourth pass: 6,E,16,1E,26,...

             Step 3 is repeated for each successive power of 2, until  the most
             significant power of 2 for the particular test block size has been
             checked.  This is 2  to the 15th for a  128KB test block, Or  2 to
             the 17th for a 512KB block.

             The final address  bit tested for a  128KB block will  execute 64K
             passes, of steps A through P:

                        First pass: 0, 64k
                        Second pass:  2, 64K+2
                        Third pass:   4, 64K+4
















        80                  Memory Diagnostic User's Guide               DMEM04
        TEST DESCRIPTIONS                                       August 31, 1990


                    11.2.8  TEST 13 - algorithm A, BYTE ACCESSES

            This  test is  functionally equivalent  to test  6,  the difference
        being that all  memory accesses are  made by bytes,  instead halfwords.
        Refer to Section 12.1.6 for details.

        TEST DURATION:

        MAC I, II or (HDLC) Micro-Engine :  1 minute 53 seconds  ( 1 MB )

        MAC III :  1 minute 6 seconds

        MAC V :  1 minute 31 seconds









































        81                  Memory Diagnostic User's Guide               DMEM04
        ERROR DESCRIPTIONS                                      August 31, 1990






                               12 -  ERROR DESCRIPTIONS


        Error messages  displayed on  the terminal  consist of  combinations of
        the following lines, in the following order:

        ERROR xxyyzz        ERROR COUNT xxxx        PASS COUNT xxxx
        DATA READ       xxxxxxxx
        DATA EXPECTED   xxxxxxxx
        DEVICE ADDRESS xx             DEVICE STATUS xx
        READ BUFFER ADDRESS xxxxx     WRITE BUFFER ADDRESS xxxxx
        BUFFER INDEX xxxxx            BUFFER LENGTH xxxxx
        other text
        EXPLANATION OF THIS ERROR:
        explanation text

        Table 13-1 lists the information  contained in each field of  the error
        message.

                         Table 13-1.  Error Message Fields


        Field                             Content

        ERROR                    xx = test number, yy = section number,
                                 zz = error code.

        ERROR COUNT              xxxx = number of errors (in decimal) found
                                 since entry of the last RUN command.

        PASS COUNT               xxxx = number of passes (in decimal) since
                                 the last RUN command was entered.
                                 If the number of passes is greater than
                                 9999, only the four least-significant
                                 digits are displayed.

        DATA READ                xxxxxxxx = the first bad data read.

        DATA EXPECTED            xxxxxxxx = the data that was expected.

        DEVICE ADDRESS           xx = the device addressed when the error
                                 occurred.  Data is not displayed
                                 unless a device was addressed.

        MEMORY ADDRESS           xxxxx = the physical memory address where
                                 the error occurred.  Data is not displayed
                                 unless memory was accessed.

        DEVICE STATUS            xx = the status of the device causing the

        82                  Memory Diagnostic User's Guide               DMEM04
        ERROR DESCRIPTIONS                                      August 31, 1990


                                 error.  Data is not displayed
                                 unless a device was addressed.




















































        83                  Memory Diagnostic User's Guide               DMEM04
        ERROR DESCRIPTIONS                                      August 31, 1990


                         Table 13-1.  Error Message Fields--Continued

        Field                             Content

        READ BUFFER ADDRESS      xxxxx = the starting address of the
                                 read buffer used when the error
                                 occurred. Data is not displayed
                                 unless a buffer is being used.

        WRITE BUFFER ADDRESS     xxxxx = the starting address of the
                                 write buffer used when the error
                                 occurred. Data is not displayed
                                 unless a buffer is being used.

        BUFFER LENGTH            xxxxx = the length of the buffers in
                                 bytes. Data is not displayed unless
                                 a buffer is being used.

        BUFFER INDEX             xxxxx = the index from the start of the buffer
                                 to where the first bad data was
                                 found. Data is not displayed unless
                                 a buffer is being used.

        EXPLANATION OF ERROR:    an explanation of this error is displayed.

        OTHER TEXT               Depending on the error involved,
                                 the following relevant data may be
                                 displayed:

                                   Segmentation Register Number
                                   Segmentation Register Set
                                   Relocation Value
                                   Nonrelocated (virtual) Address
                                   Relocated Address
                                   MAC Status
                                   Segmentation Register Contents Written
                                   Segmentation Register Contents Read
                                   Data Written
                                   Data Read
                                   PSW
                                   Location Counter
                                   Jump Address












        84                  Memory Diagnostic User's Guide               DMEM04
        ERROR DESCRIPTIONS                                      August 31, 1990


                            12.1  Unexpected System Errors


        When the diagnostic is run with a terminal, an unexpected  system error
        will  cause the  monitor to  display an  error message  and  prompt for
        another  command.   If  the  error  occurs  while  no  test  section is
        executing, the test and section portions of the error code  (xxyy) will
        be  0000.  If  the  diagnostic is  being  run without  a  terminal, the
        default tests are automatically restarted.

        Unexpected system errors have the following error codes:

                xxyyF2  Illegal instruction interrupt

                xxyyF5  Unexpected MAC interrupt

                xxyyF9  Unexpected trace interrupt

        The following error messages may also be generated:

           ILLEGAL PROGRAM TERMINATION - A program or hardware error
                                         occurred that does not
                                         allow the Diagnostic to run

           UNEXPECTED I/O INTERRUPT OCCURRED - An unexpected I/O
                                               device interrupted.

           INVALID TEST SELECTED - An attempt was made to run a
                                   nonexistent test.

           UNEXPECTED SVC EXECUTED - An unexpected SVC instruction
                                     Supervisor Call) was executed.

           UNEXPECTED MACHINE MALFUNCTION INTERRUPT - An unexpected machine
                                                      malfunction interrupt
                                                      occurred, caused by
                                                      one of the following:

             o  Recovery from a power failure (same as cold start)

             o  Pressing the front console INI key (which simulates a
                power-fail condition)

             o  A memory parity error

             o  Depressing the SYSCLR switch on the CPU board








        85                  Memory Diagnostic User's Guide               DMEM04
        ERROR DESCRIPTIONS                                      August 31, 1990


                                   12.2  TEST ERRORS


        Errors are usually  data mismatches found  when comparing data  read to
        data written at  a specific location, the  result of scanning  an error
        log (SBE), or a parity interrupt caused by bad parity (CORE) or a multi
        bit error (dynamic RAM).

        Data mismatch and parity errors do increment the error counter, as will
        single bit errors found as a result of an error log scan. The error log
        is scanned and cleared after each test block is checked, and all errors
        logged are displayed.

        The following format is used for  comparison and parity errors:

            ERROR xxyyzz        ERROR COUNT xxxx        PASS COUNT xxxx
            DATA READ       0000xxxx
            DATA EXPECTED   0000xxxx
            BLOCK STARTING ADDRESS:  aaaaaa      MEMORY TYPE:   xxxxxxxx
            MEMORY ERROR ADDRESS:    aaaaaa      BANK SELECT:   b
            COLUMN NUMBER(S) IN ERROR: a b c
            EXPLANATION OF THIS ERROR:
            explanation text


        DATA READ  and DATA EXPECTED  are halfwords, as  all tests  (except 13)
        access halfwords. The MEMORY ERROR ADDRESS is the physical address on a
        particular  memory  board.  BANK SELECT  indicates  which  one megabyte
        memory board is being referred to, where 0 is the first memory board, 1
        the second, 2 the third and 3 the fourth. The Bank Select  message will
        not be displayed on  the MAC V board.   The COLUMN NUMBER line  is only
        displayed when a parity  interrupt has occurred, with the  exception of
        the Refresh/Data Retention test and algorithm A with byte accesses.

        The EXPLANATION text can  have the following formats:      ERROR CAUSED
        BY PARITY INTERRUPT.      DATA MISMATCH FOUND ON COMPARISON.      ERROR
        CAUSED  BY  PARITY INTERRUPT.  NO  ERROR LOG  PRESENT.       It  is the
        EXPLANATION OF ERROR field that differentiates between whether a parity
        interrupt or a data mismatch has occurred, because the error  codes are
        identical














        86                  Memory Diagnostic User's Guide               DMEM04
        ERROR DESCRIPTIONS                                      August 31, 1990


                    12.2.1  ECC ERROR LOG ERROR MESSAGES

        These  messages are  displayed  when a  log  scan shows  that  an error
        occurred.  These massages have the following header:

        SCAN FOUND ERRORS IN ERROR LOG NUMBER:  n

        All  errors found  in the  error log  will cause  one of  the following
        messages to be printed:

        MULTI BIT ERROR. ROW ADDRESS:  y

        SINGLE BIT ERROR. MOS CHIP NUMBER:   Uccc

        FAULTY ERROR LOG STATUS:   ffff

        The row address is printed on multibit errors, while the chip number in
        error is displayed on single bit errors.





                    12.2.2  TEST 1 - BASIC DATA/ECC PATH TEST

        ERROR NUMBER                           CAUSE

        010101            data read from memory is not data that was
                          stored there (0000). (All zeros test).

        010201            data read from memory is not data that was
                          stored there (FFFF). (All ones test).

        010301            data read from memory is not data that was
                          stored there. (Data Line Bit Uniqueness Test).

        010401            data read from memory is not data that was
                          stored there. (ECC Line Bit Uniqueness Test).
















        87                  Memory Diagnostic User's Guide               DMEM04
        ERROR DESCRIPTIONS                                      August 31, 1990


                    12.2.3  TEST 2 - CORE MILPAT TEST

        ERROR NUMBER                           CAUSE

        020101            data read from a memory location is not equal to
                          the data written to that location. (See section
                          12.1.2, Step 4, pattern complemented).

        020102            data read from a memory location is not equal to
                          the data written to that location. (See section
                          12.1.2 Step 2, where the exclusive or equals one).

        020103            data read from a memory location is not equal to
                          the data written to that location. (See section
                          12.1.2, Step 2, where the exclusive or equals 0)







                    12.2.4  TEST 3 - MOS MILPAT TEST

        ERROR NUMBER                           CAUSE

        030101           original data pattern stored was not found.
                         (Step 2).

        030102           pattern read was not complemented data pattern
                         stored. (Step 4).

        030103           data read from complemented intra-chip address was
                         invalid. (Step 5).




















        88                  Memory Diagnostic User's Guide               DMEM04
        ERROR DESCRIPTIONS                                      August 31, 1990


                    12.2.5  TEST 4 - REFRESH/DATA RETENTION MOS TEST

        ERROR NUMBER                           CAUSE

        0401xy           X increases from one to nine, incremented by
                         one for each time the ninth cell is shifted one
                         position. (Step 6). Y is 1 if the halfword was
                         not a 'ninth' halfword, and a two if it was.
                         In each case, the data read was not equal to
                         that written. Note that Y is 0 when a parity
                         interrupt causes an error display.





                    12.2.6  TEST 5 - BASIC ADDRESS TEST

        ERROR NUMBER                          CAUSE

        050101           data read from was not equal to data written.





                    12.2.7  TEST 6 - algorithm A

        ERROR NUMBER                          CAUSE

        0601xx           XX is for each of the sixteen accesses (see steps
                         in test description), where the data read was not
                         equal to data written.





















        89                  Memory Diagnostic User's Guide               DMEM04
        ERROR DESCRIPTIONS                                      August 31, 1990


                    12.2.8  TEST 7 - algorithm B

        ERROR NUMBER                          CAUSE

        0701xx           XX is broken down in the following manner:
                         hhhh.s.aaa
                         where H indicates which bit is being used to divide
                         memory, starting from H = 0 for bit 30 (second
                         least significant bit), and incrementing by one for
                         each successive high-order bit tested. S indicates
                         ascending (1) and descending (0) sequence.
                         The A bits refer to which of the eight memory
                         access sequences referred to in the test description
                         being performed.





                    12.2.9  TEST 8 - LOW MEMORY TEST

            Test 8  executes other tests.  The error codes  of these  tests are
        used.





                    12.2.10  TEST 9 - MOVING INVERSIONS TEST

        ERROR NUMBER                          CAUSE

        0901xx           XX is for each of address line tested, 1 is
                         equivalent to memory address line MA014 (halfword
                         select). XX is  incremented by one for each successive
                         successive address line. XX will go up to N-2, where
                         N is the most significant bit set of the test block
                         size. For example, the most significant bit set for a
                         128KB block is bit 12x, so XX would equal 10. Thus
                         the address line being tested is XMA150.






                    12.2.11  TEST 10 - MEMORY SCOPE LOOP TEST

        ERROR NUMBER                          CAUSE

        100101           When the CHCK option is in effect, this error is
                         displayed when a data read was not equal to data
                         written.

        90                  Memory Diagnostic User's Guide               DMEM04
        ERROR DESCRIPTIONS                                      August 31, 1990


                    12.2.12  TEST 11 - BATTERY BACKUP TEST

        ERROR NUMBER                          CAUSE

        110101           This error occurs (after the system was powered
                         down), when the data read is not equal to data
                         written before the system was powered down.





                    12.2.13  TEST 12 - MOVE INVERSIONS imbedded algorithm A

        ERROR NUMBER                          CAUSE

        1201xx           XX is for each of the sixteen accesses (see steps in
                         in test description numbered A through P, where A
                         A corresponds to 1) , where a data rad was not equal
                         to data written. Th address line being tested is not
                         identified in the error code. To identify the address
                         line, run test 9.





                    12.2.14  TEST 13 - algorithm A, byte accesses

        ERROR NUMBER                          CAUSE

        1301xx           XX is for each of the sixteen accesses (see steps
                         in test description), where the data read was not
                         equal to data written.




















        91                  Memory Diagnostic User's Guide               DMEM04
        DATA PATTERNS                                           August 31, 1990






                                  13 -  DATA PATTERNS


        Each of the tests has its own set of data patterns.  They are  shown in
        the following sections.






                       13.1  TEST 1 - BASIC DATA/ECC PATH TESTS


        The data patterns for each section of test 1 are shown below.


        Section 1   0000

        Section 2   FFFF

        Section 3   Walking one in a field of zeros, and walking
                    zero in a field of ones.

        Section 4   1,E800,E080,C880,A880,6880,2C,17,107,113,115,8001






                            13.2  TEST 2 - CORE MILPAT TEST


        Test 2  has only  one section.   It uses  the following  data patterns:
        0000,FFFF














        92                  Memory Diagnostic User's Guide               DMEM04
        DATA PATTERNS                                           August 31, 1990


                            13.3  TEST 3 - MOS MILPAT TEST


        Test 3  has only  one section.   It uses  the following  data patterns:
        0000,FFFF






                      13.4  TEST 4 - REFRESH/DATA RETENTION TEST


        Test 4  has only  one section.   It uses  the following  data patterns:
        0000,FFFF






                           13.5  TEST 5 - BASIC ADDRESS TEST


        Test 5 has only one section.  An incrementing pattern, starting from 0,
        is stored at each  successive halfword.






                              13.6  TEST 6 - algorithm A


        Test 6  has only  one section.   It uses  the following  data patterns:
        0000,FFFF






                              13.7  TEST 7 - algorithm B


        Test 7  has only  one section.   It uses  the following  data patterns:
        0000,FFFF





        93                  Memory Diagnostic User's Guide               DMEM04
        DATA PATTERNS                                           August 31, 1990


                            13.8  TEST 8 - LOW MEMORY TEST


        Test 8 executes other tests. The patterns of those tests are used.






                         13.9  TEST 9 - MOVING INVERSIONS TEST


        Test 9  has only  one section.   It uses  the following  data patterns:
        0000,FFFF






                        13.10  TEST 10 - MEMORY SCOPE LOOP TEST


        Test  10 has  only  one section.   The  halfword data  pattern  is user
        defined, or a default of: FFFF.






                         13.11  TEST 11 - BATTERY BACKUP TEST


        Test 11 has  only one section.  It  uses a data pattern  of alternating
        halfwords of all ones or all zeros.






                 13.12  TEST 12 - MOVE INVERSIONS imbedded algorithm A


        Test 12  has only one  section.  It uses  the following  data patterns:
        0000,FFFF






        94                  Memory Diagnostic User's Guide               DMEM04
        DATA PATTERNS                                           August 31, 1990


                      13.13  TEST 13 - algorithm A, byte accesses


        Test 13  has only one  section.  It uses  the following  data patterns:
        0000,FFFF

















































        95                  Memory Diagnostic User's Guide               DMEM04
                                                                August 31, 1990



























                      *   ****  ****  ***** *   * ****  ***** *   *
                     * *  *   * *   * *     **  * *   *   *    * * 
                    ***** ****  ****  ****  * * * *   *   *     *  
                    *   * *     *     *     *  ** *   *   *    * * 
                    *   * *     *     ***** *   * ****  ***** *   *
























        96                  Memory Diagnostic User's Guide               DMEM04
        COMMAND SUMMARY                                         August 31, 1990






                             APPENDIX I.   COMMAND SUMMARY



        Valid commands for  all tests of  this diagnostic are  summarized here.
        Some commands  have parameters,  and some do  not.  For  those commands
        having optional  parameters, a  default action  will occur  if optional
        parameters are  omitted.  Except  for control-a,  control-q, control-w,
        and <esc>,  a carriage  return <cr> must  always terminate  the command
        line. See Section 9.0 for detailed command descriptions.


        COMMAND SYNTAX                   FUNCTION

        ADDT xx[yy],...                  adds tests or test sections
                                         default:  yy (all sections)

        BELL                             sounds bell on error message
                                         display

        BOOT                             load engine boot

        BRKP [xx,yyyyy],...              sets 1 to 16 breakpoints

             default:  lists current
                       breakpoints

        CKSM                             perform periodic checksums

        CNFG                             reconfigure memory map

        control-a                        deletes previous character

        control-q                        cancels command entry

        control-w                        deletes previous word

        DELT xx[yy],...                  deletes tests or sections

             default:  yy (all sections)

        DESR b,a,b - b, a - a            deselect memory test range

        DMEM                             display memory map

        DOC                              display on-line source of
                                         current user's guide

        ECON [x],[y],[n]                 controls  error  handling  by  the

        97                  Memory Diagnostic User's Guide               DMEM04
        COMMAND SUMMARY                                         August 31, 1990


                                         monitor
             defaults:  x = 0
                        n = 0

        escape key <esc>                 return to monitor prompt

        EXA  addr, n  halfwords          display memory

        GO addr                          execute from address

        HELP                             displays list of valid commands

        LOOP [n]                         sets number of iterations executed
                                         by the RUN command

             default:  gives current
                       loop value

        MESG x                           controls diagnostic messages

        MOD addr, n halfwords,data       modify memory

        NAME                             print test titles

        NOBE                             sound no bell on error message

        NOKS                             perform no periodic checksum

        NOSP                             no error messages suppression

        OPTN                             display diagnostic options

        RUN                              executes selected tests or test
                                         sections

        SELR b,a,b - b,a - a             select memory test range

        SPRS                             suppress error messages

        STAT                             print last error message














        98                  Memory Diagnostic User's Guide               DMEM04
        DEDICATED MEMORY ALLOCATION                             August 31, 1990






                      APPENDIX II.   DEDICATED MEMORY ALLOCATION



        The  first 96KB  of memory  contains the  code for  the  program.  This
        diagnostic uses the following dedicated memory allocations:


        Label     Address                    Contents

                  A00      Starting address, terminal connected to
                           the terminal interface.

                  A04      Alternate starting address, terminal not
                           connected to the terminal interface.

        CURSEC    C1C      The number of the test section currently
                           running (1 byte).

        CURTST    C1D      The number of the test currently running
                           (1 byte).

        EBUF01    C1E      The error code of the last error for which
                           error information was displayed on the
                           terminal (6 bytes).

        EBUF02    C24      The error count at the time the last error
                           occurred (1 fullword).

        EBUF03    C28      The pass count at the time the last error
                           occurred (1 fullword).

        EBUF04    C2C      The data read at the time the last error
                           occurred (2 fullwords).

        EBUF05    C34      The data expected at the time the last error
                           occurred (2 fullwords).

        EBUF06    C3C      The device address at the time the last error
                           occurred (1 fullword).

        EBUF07    C40      The device status at the time the last error
                           occurred (1 fullword).

        EBUF08    C44      The read buffer address at the time the
                           last error occurred (6 bytes).

        EBUF09    C4A      The write buffer address at the time the
                           last error occurred (6 bytes).

        99                  Memory Diagnostic User's Guide               DMEM04
        DEDICATED MEMORY ALLOCATION                             August 31, 1990


        EBUF10    C50      The read and write buffer length in bytes
                           at the time the last error occurred (6 bytes).

        EBUF11    C56      The offset from the start of
                           the buffer to where the first bad data was
                           found (6 bytes).

        EBUF12    C5E      The OTHER TEXT field at the time the last
                           error occurred (hexadecimal format, 102 bytes).

        ECOUNT    D60      The current error count, which is set to
                           zero each time that a RUN command is executed
                           (1 fullword).

        ERRCNT    D64      The current option selected for control
                           of the error message format (1 halfword).

        ERROPT    D66      The current option selected for specifying
                           what action will be taken when an error is
                           detected (1 halfword).

        FORCE     D68      The current value of force error message
                           option: 0 = do not force error messages,
                           1 = force error message 1 byte, not
                           yet implemented).

        LOPOPT    D6A      The current value of the Loop command
                           (1 halfword).

        MACTYP    D6C      The type of MAC in the system, 1 = MAC I,
                           2 = MAC II, 3 = MAC III and 4 = TSI MAC,
                           6 = MAC V (1 byte).

        MAP       D70      The amount of memory available to the system,
                           one bit is set for each 32K bytes of memory
                           (4 fullwords).

        MSGDEV    D80      The current value of the message device option:
                           <0 = use only line printer, 0 = use only
                           terminal, >0 = use both terminal and line
                           printer (1 halfword, not yet implemented).

        MSGFLG    D82      The current option selected for indicating
                           which types of messages will be displayed
                           on the terminal (1 halfword).

        PCOUNT    D84      The current pass count, which is set to zero
                           when the RUN command is executed (1 fullword).

        SECADR    D88      The starting address of the test section being
                           executed.  If no section is being executed,
                           it contains the starting address of the last
                           section executed (1 fullword).

        100                 Memory Diagnostic User's Guide               DMEM04
        DEDICATED MEMORY ALLOCATION                             August 31, 1990


        TERADD    D8C      The terminal device address (1 byte).

        TERFLG    D8D      The terminal available flag:
                           0 = terminal not available,
                           1 = terminal available,
                           set by the start address (1 byte).

        TERRED    D90      The Read command of the terminal (1 byte).

        TERWRT    D91      The Write command of the terminal (1 byte).

        TEST      D92      A table indicating which tests are selected
                           and the section number of the first section
                           in each test (20 halfwords).

        TRCADR    DD4      The address of optional trace interrupt
                           routine if TRCOPT = 1 (1 fullword, not
                           implemented).

        TRCOPT    DD8      The trace option flag:  0 = trace interrupts
                           disabled, 1 = trace interrupts enabled
                           (1 byte, not yet implemented).

        TYPENG    DD9      The type of Engine the program is running on:
                           0 = UNKNOWN, 1 = NORMAL (Engine or Mini-Engine)
                           , 2 = MICRO, 3 = HDLC Micro-Engine and
                           4 = TSI controller (1 byte).

        CMDTBL    DDC      The name of each command and the starting
                           address of the routine for that command.
























        101                 Memory Diagnostic User's Guide               DMEM04
    
:W