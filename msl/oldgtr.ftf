        INTEGER SDAY(6),EDAY(6),NUMDAY,IDAY(2),SCR(10),FLENAM(5)
     X  ,DATA(19),USRNAM(5),VALNAM(3),CHAR,NEWNAM(5),OUTFLE(5)
     X  ,DAY1,DAY2,RECNO,TOTREC,TYPE,INFLE(5),PNUM(70),PORTS(75,65)
     X  ,PORT,NODE,DASH,FLAG,COUNT,SCR2(4),PT1,PT2,END,IARR(3)
        INTEGER IARR2(260),PRTCNT,YEAR1,YEAR2,MONTH1,MONTH2,RNGFLG
     X  ,TOTDAY

        COMMON SCR2,PORTS
        CALL DBSTRT(5,-1,-1,1,-4,0,21,0,22,1)
        NEWNAM(1)='(NETS'
        NEWNAM(2)='TAT)D'
        NEWNAM(3)='ONOT.'
        NEWNAM(4)='DEL  '
        NEWNAM(5)='     '

        DO 40 I=1,5
        OUTFLE(I)='     '
        INFLE(I)='     '
40      CONTINUE

        DO 50 I=1,75
        DO 50 J=1,64
        PORTS(I,J)=-1
50      CONTINUE

*       INPUT: START AND END DATES

55      TYPE 100
100     FORMAT (1X,'ENTER START DATE AS YYMMDD: ',$)
        ACCEPT 105,(SDAY(I),I=1,6)
105     FORMAT (6I1)

*       CK IF START DATE IS A VALID DATE
        YEAR1=SDAY(1)*10+SDAY(2)
        MONTH1=SDAY(3)*10+SDAY(4)
        DAY1=SDAY(5)*10+SDAY(6)
        IF (MONTH1.LT.13) GO TO 110
        TYPE 107,(SDAY(I),I=1,6)
107     FORMAT (1X,'BAD DATE: ',6I1)
        GO TO 55

110     IF (DAY1.LT.32) GO TO 115
        TYPE 107,(SDAY(I),I=1,6)
        GO TO 55

*       INPUT END DATE AND CK IF VALID
115     TYPE 120
120     FORMAT (1X,'ENTER END DATE AS YYMMDD: ',$)
        ACCEPT 105,(EDAY(I),I=1,6)
        YEAR2=EDAY(1)*10+EDAY(2)
        MONTH2=EDAY(3)*10+EDAY(4)
        DAY2=EDAY(5)*10+EDAY(6)
        IF (MONTH2.LT.13) GO TO 122
        TYPE 107,(EDAY(I),I=1,6)
        GO TO 115

122     IF (DAY2.LT.32) GO TO 124
        TYPE 107,(EDAY(I),I=1,6)
        GO TO 115

124     IF (YEAR1.EQ.YEAR2) GO TO 126
        TYPE 125
125     FORMAT (1X,'BOTH DATES MUST BE IN THE SAME YEAR-REENTER')
        GO TO 55

126     IF (MONTH1.EQ.MONTH2) GO TO 128
        TYPE 127
127     FORMAT (1X,'DATES CAN NOT CROSS MONTH BOUNDARIES-REENTER')
        GO TO 55

*       DETERMINE # OF DAYS TO PROCESS

128     NUMDAY=DAY2-DAY1+1
        IDAY(1)=SDAY(1)*10000+SDAY(2)*1000+SDAY(3)*100+SDAY(4)*10
     X  +SDAY(5)
        IDAY(2)=SDAY(6)-1

*       CK TO SEE OF DATE RANGE EXISTS

        RNGFLG=0
        ENCODE (19,910,FLENAM) (SDAY(I),I=1,6)
910     FORMAT (9H(NETSTAT),6I1,4H.DMS)

        OPEN (21,FLENAM,INPUT,ERR=945)
        CLOSE(21)
920     ENCODE(19,910,FLENAM) (EDAY(I),I=1,6)
        OPEN (21,FLENAM,INPUT,ERR=940)
        CLOSE(21)
        IF (RNGFLG.NE.0) GO TO 930
        TYPE 925
925     FORMAT (1X,'DATE RANGE IS AVAILABLE')
        GO TO 129

930     TYPE 935,(EDAY(I),I=1,6)
935     FORMAT (1X,'DATA IS AVAILABLE THROUGH DAY ',6I1,/,1X,'DO YOU
     X  WISH TO CONTINUE?(Y OR N): ',$)
        ACCEPT 960,ANS
        IF (ANS.NE.'Y') GO TO 700
        DAY2=EDAY(5)*10+EDAY(6)
        NUMDAY=DAY2-DAY1+1
        GO TO 129

940     RNGFLG=1
        EDAY(6)=EDAY(6)-1
        IF(EDAY(6).GE.0) GO TO 920
        EDAY(5)=EDAY(5)-1
        EDAY(6)=9
        GO TO 920

945     TYPE 950,(FLENAM(I),I=1,4)
950     FORMAT (1X,'FILE: ',4A5,' IS UNAVAILABLE.',/,1X,' DO YOU WISH TO
     X  REENTER DATE RANGE?(Y OR N): ',$)
        ACCEPT 960,ANS
960     FORMAT (A1)
        IF (ANS.EQ.'N') GO TO 700
        GO TO 55



*       INPUT: OUTPUT FILE NAME

129     TYPE 130
130     FORMAT (1X,'OUTPUT TO: ',$)
        ACCEPT 140,(OUTFLE(I),I=1,5)
140     FORMAT (5A5)

        CALL RENAM(OUTFLE,NEWNAM,IERR)
        IF (IERR.EQ.0) GO TO 1000
        IF (IERR.NE.3) GO TO 142
        TYPE 141
141     FORMAT (1X,'NEW FILE')
        GO TO 1020

142     TYPE 143
143     FORMAT (1X,'OLD FILE: OK?(Y OR N): ',$)
        ACCEPT 960,ANS
        IF (ANS.EQ.'N') GO TO 700
        GO TO 1020

1000    TYPE 1010
1010    FORMAT (1X,'ERROR IN RENAME ROUTINE.',/,
     X  1X,'PLEASE CONTACT J.JOELS')

1020    OPEN (22,OUTFLE,OUTPUT,ERR=600)


*       INPUT: TYPE OF SEARCH

144     TYPE 145
145     FORMAT (1X,'SEARCH BY NODE,HOST OR NODE-PORT?(N,H,OR P?) ',$)
        ACCEPT 146,TYPE
146     FORMAT(A1)
        IF (TYPE.EQ.'N'.OR.TYPE.EQ.'H'.OR.TYPE.EQ.'P') GO TO 147
        GO TO 144
147     IF (TYPE.NE.'N') GO TO 148
        TYPE ='NODE'
        GO TO 149
148     IF (TYPE.NE.'H') GO TO 151
        TYPE ='HOST'
        GO TO 149
151     TYPE='PORT'

*       INPUT: INPUT FILE NAME

149     TYPE 150
150     FORMAT (1X,'INPUT FILE: ',$)
        ACCEPT 152,(INFLE(I),I=1,5)
152     FORMAT(5A5)
        IF (INFLE(1).NE.'     ') GO TO 800
        IF (TYPE.EQ.'PORT') GO TO 160

*       ***************INPUT FROM TERMINAL**********


*       INPUT: HOST OR NODE NUMBERS

        I=1
        TYPE 154,TYPE
154     FORMAT (1X,'INPUT',1X,A4,1X,'NUMBERS: '/)
155     TYPE 156
156     FORMAT (1X,'? ',$)
        ACCEPT 157,INUM
157     FORMAT(I)
        IF (INUM.EQ.0) GO TO 200
        PORTS(I,1)=INUM
        IF (I.EQ.10) GO TO 200
        I=I+1
        NODE=NODE+1
        GO TO 155

*       INPUT: NODE-PORT COMBINATIONS

160     TYPE 162
162     FORMAT (1X,'INPUT NODE-PORT PAIRS: NODE,PORT,(OR PORT-PORT)')
        COUNT =1
        DASH=0
        FLAG=0
        NODE=1
        PORT=2
        END=0

        DO 193 N=1,10
163     TYPE 156
        ACCEPT 164,(PNUM(J),J=1,70)
        IF (PNUM(1).EQ.' ') GO TO 200
164     FORMAT (70A1)


*       SEARCH STRING AND BREAK OUT NODE AND PORT NUMBERS

166     DO 190 II=1,70
        IF (PNUM(II).NE.' ') GO TO 165
        IF (II.EQ.1) GO TO 195
        END=1
165     IF (PNUM(II).EQ.','.OR.PNUM(II).EQ.'-'.OR.PNUM(II).EQ.' ')
     X  GO TO 169
*       BUILD A NUMBER IN THE 'SCR2' ARRAY


        SCR2(COUNT)=PNUM(II)
        COUNT=COUNT+1
        GO TO 190

169     COUNT=COUNT-1
        IF (PNUM(II).EQ.','.OR.PNUM(II).EQ.' ') GO TO 175

*       SET DASH FLAG-THIS MEANS THAT THIS PORT IS 1ST OF A RANGE
*       AND THAT THE NEXT PORT WILL BE THE LAST OF A RANGE

        DASH=1
        CALL CODE(N,PORT,COUNT)
        COUNT=1
        GO TO 190

*       IF FLAG = 0, THEN THIS IS THE NODE NUMBER

175     IF(FLAG.NE.0) GO TO 177
        IXPRT=1
        CALL CODE(N,IXPRT,COUNT)
        COUNT=1
        FLAG=1
        NODE=N
        GO TO 190

*       IF DASH = 0, THEN THIS IS A SINGLE PORT AND NOT
*       PART OF A RANGE.
177     IF (DASH.NE.0) GO TO 180
        CALL CODE(N,PORT,COUNT)
        IF (END.NE.O) GO TO 191
        COUNT=1
        PORT=PORT+1
        GO TO 190

*       THIS PORT IS LAST OF A RANGE OF PORTS
*       FIND 1ST OF RANGE AND FILL IN BETWEEN.

180     PT1=PORTS(N,PORT)
        L=PORT+1
        CALL CODE(N,L,COUNT)

        ENCODE (3,181,LL) PT1
        DECODE (3,186,LL)(SCR2(J),J=1,3)
181     FORMAT (I3)
186     FORMAT(3I1)
        PT2=PORTS(N,L)-1
*       PT1=1ST PORT OF RANGE, PT2=LAST PORT OF RANGE
*
        DO 185 KK=PT1,PT2
        PORT=PORT+1
        SCR2(3)=SCR2(3)+1
        IF (SCR2(3).NE.8) GO TO 184
 
183     SCR2(2)=SCR2(2)+1
        SCR2(3)=0

184     ENCODE (3,186,LL) (SCR2(J),J=1,3)
        DECODE (3,181,LL) PORTS(N,PORT)

        IF (PORTS(N,PORT).EQ.PT2+1) GO TO 188
185     CONTINUE

188     IF (END.NE.0) GO TO 191
        PORT=PORT+1
        DASH=0
        COUNT=1
190     CONTINUE

191     COUNT=1
        DASH=0
        FLAG=0
        PORT=2
        END=0
195     IF(INPUT.EQ.'FILE') GO TO 830
193     CONTINUE

        GO TO 200


*       ***************INPUT FROM A FILE****************

*       INPUT NODE OR HOST NUMBERS

800     OPEN (21,INFLE,INPUT,ERR=670)
        IF (TYPE.NE.'PORT') GO TO 805
        N=0
        PORT=2
        COUNT=1
        DASH=0
        FLAG=0
        END=0
        GO TO 830
805     I=1
810     READ (21,820,END=200) PORTS(I,1)
820     FORMAT (I)
        IF (PORTS(I,1).EQ.0) GO TO 200
        NODE=NODE+1
        I=I+1
        IF (I.GT.75) GO TO 880
        GO TO 810

*       INPUT NODE-PORT COMBINATIONS

830     INPUT='FILE'
        COUNT=1
        READ (21,840,END=200) (PNUM(I),I=1,70)
840     FORMAT (70A1)
        N=N+1
        IF (N.GT.75) GO TO 880
        GO TO 166

*       EXCEEDED ARRAY SIZE

880     TYPE 890
890     FORMAT (1X,'THIS SEARCH IS LIMITED TO 75 NODES OR HOSTS.',/,
     X  'PLEASE CONTACT J.JOELS FOR ADDITIONAL INFORMATION.')
        GO TO 700

*       *************** PROCESS EACH DAY ***************

200     DO 500 I=1,NUMDAY

*       BUILD THE FILE NAME
201     FORMAT (I5)
202     FORMAT (5I1)
203     FORMAT (I1)
205     FORMAT (9H(NETSTAT),6I1,4H.DMS)

        IDAY(2)=IDAY(2)+1
        IF (IDAY(2).LE.9) GO TO 250
        IDAY(2)=0
        IDAY(1)=IDAY(1)+1
250     ENCODE (5,201,LL)IDAY(1)
        DECODE (5,202,LL)(SCR(J),J=1,5)
        ENCODE (1,203,LL)IDAY(2)
        DECODE (1,203,LL) SCR(6)
        ENCODE (19,205,FLENAM)(SCR(J),J=1,6)
        TYPE 252,(SCR(J),J=1,6)
252     FORMAT (/,1X,'PROCESSING ',6I1,$)

*       OPEN THE CURRENT FILE

        CALL DBOPEN(FLENAM)

*       CREATE THE ARRAYS TO PASS ARGUMENTS THROUGH THE DBFIND
*       COMMAND TO 1022.

        DO 400 N=1,NODE

        PRTCNT=0
        DO 255 JJ=2,65
        IF (PORTS(N,JJ).EQ.-1) GO TO 257
        PRTCNT=PRTCNT+1
255     CONTINUE

257     IARR(1)=2
        IF (TYPE.EQ.'HOST') IARR(1)=7
        IARR(2)='EQ'
        IARR(3)=PORTS(N,1)

*       IF SEARCH IS FOR NODE-PORT COMBINATIONS CONTINUE

        IF (TYPE.NE.'PORT') GO TO 265
        IARR2(1)='LAST'
        IARR2(2)='SAV.'
        IARR2(3)=1
        IARR2(4)=3
        IARR2(5)='EQ'
        IARR2(6)=PORTS(N,2)

        II=7
        IF (PRTCNT.EQ.1) GO TO 263
        DO 260 KK=3,PRTCNT+1
        IARR2(II)='OR'
        IARR2(II+1)=3
        IARR2(II+2)='EQ'
        IARR2(II+3)=PORTS(N,KK)
        II=II+4

260     CONTINUE
263     IARR2(II)='AND'
        IARR2(II+1)='REF.'
        IARR2(II+2)=1
        DAYFLG=1

*       ISSUE FIND COMMANDS TO 1022

265     CALL DBFIND ('FIX.',1,3,IARR)
        IF (TYPE.NE.'PORT') GO TO 270
        CALL DBFIND ('FIX.',1,4*(PRTCNT)+5,IARR2)
270     CALL DBNREC(RECNO)
272     TOTREC=TOTREC+RECNO
        TOTDAY=TOTDAY+RECNO

*       ***PROCESS EACH RECORD***

300     CALL DBGREC($400)
        DO 310 J=1,19
        CALL DBVAL(J,DATA(J))
310     CONTINUE

*       READ USERNAM INTO ARRAY

        CALL DBVAL('USRNAM',USRNAM)


370     WRITE (22,380)(DATA(K),K=1,19),(USRNAM(L),L=1,5)
380     FORMAT(I7,I4,I3,I2,4I3,I6,I4,2I7,I8,I6,I4,I5,I2,I2,I6,5A5)

        GO TO 300

400     CONTINUE
        CALL DBCLOSE
        TYPE 410,TOTDAY
410     FORMAT (1H+,10X,'SESSIONS PROCESSED=',I10)
        TOTDAY=0

500     CONTINUE

        CLOSE (22)
        TYPE 550,TOTREC
550     FORMAT(//,1X,'TOTAL SESSIONS PROCESSED= ',I10)
        GO TO 700

*       UNABLE TO OPEN OUTPUT FILE
600     TYPE 650
650     FORMAT(1X,'UNABLE TO OPEN OUTPUT FILE')

670     TYPE 680,(INFLE(I),I=1,5)
680     FORMAT (1X,'UNABLE TO OPEN FILE: ',5A5)

        GO TO 149


700     CALL DBEND

        END


        SUBROUTINE CODE(NODE,PORT,COUNT)

        COMMON SCR2(4),PORTS(75,65)
        INTEGER NODE,PORT,COUNT
        
        IF (COUNT.NE.1) GO TO 200
        ENCODE (1,110,LL)SCR2(1)
        DECODE (1,111,LL)PORTS(NODE,PORT)
110     FORMAT (A1)
111     FORMAT (I1)
        RETURN

200     IF (COUNT.NE.2) GO TO 300
        ENCODE(2,210,LL) (SCR2(J),J=1,2)
        DECODE(2,211,LL) PORTS(NODE,PORT)
210     FORMAT (2A1)
211     FORMAT (I2)
        RETURN

300     IF (COUNT.NE.3) GO TO 400
        ENCODE (3,310,LL) (SCR2(J),J=1,3)
        DECODE (3,311,LL)PORTS(NODE,PORT)
310     FORMAT(3A1)
311     FORMAT(I3)
        RETURN

400     ENCODE (4,410,LL) (SCR2(J),J=1,4)
        DECODE (4,411,LL)PORTS(NODE,PORT)
410     FORMAT (4A1)
411     FORMAT (I4)
        RETURN
        END

  