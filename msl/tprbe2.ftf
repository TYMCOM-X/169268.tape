
*********************************************************************
*                                                                   *
*                       PROGRAM:  TPRBE2                            *
*                                                                   *
*       THIS PROGRAM USES COMMAND-10 TO INTERPRET IN A MEA-         *
*       NINGFUL WAY THE PROBE OUTPUT OBTAINED BY RUNNING            *
*       TPRBE1. ONE CAUTION HERE: NO ATTEMPT IS MADE TO CHECK       *
*       FOR CONSISTENCY IN THE PROBE OUTPUT. THE DMC FILE TO        *
*       LOAD THIS PROGRAM IS TPRBE2.DMC .                           *
*                                                                   *
*********************************************************************

        INTEGER HCOUNT(1200),TABLE(1234)
        DIMENSION IFILE1(2),LFILE(2),NFILE(2),NODDMS(4),LINDMS(4),
     X  NODE(1200),NNODE(1200),IPTR(1200),NTYP(1200),LCOUNT(1200),
     X  IHOST(1200,30),LNAM(4),NNAM(2),LTEMP1(10),ILINE(72)
C
        COMMON /COMPKG/TABLE
C
        DATA NTEMP/5/
        DATA (LTEMP1(I),I=1,5)/1077,1176,1177,1376,1377/
        DATA IBLANK/1H /
C
        CALL DBSTRT(1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0)
C
        IFILE1(1)=MUSENO('F')
        IFILE1(2)='.DAT'
C
C  OPEN OUTPUT FILE FROM PROGRAM TPRBE1, AND OPEN A FILE WHICH WILL
C CONTAIN A LIST OF ALL NODE NUMBERS "OUT OF PASSTHROUGHS"
C
        OPEN(22,IFILE1,INPUT,SYMBOLIC)
        OPEN (23,'NOPASS.DAT',OUTPUT)
        READ(22,251)(NODDMS(I),I=1,4),(LINDMS(I),I=1,4)
 251    FORMAT(4A5,1X,4A5)
        READ(22,252)(NFILE(I),I=1,2),(LFILE(I),I=1,2)
 252    FORMAT(2A5,1X,2A5)
C
        TYPE 349,LFILE
 349    FORMAT(//10X,'***** CREATING ',2A5,' *****')
C
        CALL DBOPEN(LINDMS)
        OPEN(24,LFILE,OUTPUT,SYMBOLIC)
        CALL ONINT($700)
C
C  FROM NOW ON, USE COMMAND-10 TO INTERPRET PROBE OUTPUT
C
        ICTR=0
        ICOUNT=0
        ASSIGN 650 TO TABLE(8)
        TABLE(3)=22
        TABLE(22)=0
C
C  GET A LINE OF INPUT
C
 450    CALL NEWLINE
C
C  NOW SCAN FOR A PRIMARY COMMAND (LIST # 1)
C
 451    CALL COMMAND(-1,ICHAR,NUM)
        IF (NUM.LT.0) GO TO 600
        IF (NUM.EQ.0) GO TO 450
        GO TO (500,505,510,520,525,530,535,540,545), NUM
C
C  LINE WITH 'NODE NUMBER'
C
 500    ISTEP=1
        IPOS=TABLE(1)
        CALL OCTAL(INT,ISTAT)
        IF (ISTAT.NE.1) GO TO 1800
        TABLE(1)=IPOS
        CALL INTEGER(INT,ISTAT)
        NODENO=INT
        GO TO 450
C
C  LINE WITH 'NO SUCH NODE'
C
 505    IF (ISTEP.NE.1) GO TO 1802
        CALL COMMAND(-7,ICHAR,NUM)
        IF (NUM.LE.0) GO TO 1802
        GO TO 450
C
C  LINE WITH 'VERSION ETC.'
C
 510    IF (ISTEP.NE.1) GO TO 1804
        ISTEP=2
        ICTR=ICTR+1
C
C  STORE THE NODE NO. INTO ARRAY NODE
C
        NODE(ICTR)=NODENO
C
C  ALSO STORE THE NODE NO. INTO ARRAY NNODE, IF NOT ALREADY THERE
C
        IF (ICOUNT.LE.0) GO TO 515
        CALL SEARCH(NNODE,NODENO,ICOUNT,IND)
        IF (IND.LE.ICOUNT) GO TO 516
 515    ICOUNT=ICOUNT+1
        NNODE(ICOUNT)=NODENO
C
        CALL QSORT(NNODE,IPTR,ICOUNT)
C
C  EAT UP INTEGER REPRESENTING THE VERSION OF NODE CODE
C
 516    CALL OCTAL(INT,ISTAT)
        IF (ISTAT.NE.1) GO TO 1804
        CALL COMMAND(-2,ICHAR,NUM)
        IF (NUM.LE.0) GO TO 1804
C
C  RETRIEVE NOW THE NODE TYPE
C
        CALL INTEGER(INT,ISTAT)
        IF (ISTAT.NE.1) GO TO 1804
        IF (INT.GT.9) GO TO 1804
        NTYP(ICTR)=INT
        GO TO 450
C
C  LINE WITH 'PORTS ETC.'
C
 520    IF (ISTEP.NE.2) GO TO 1806
C
C  EAT UP INTEGER REPRESENTING THE NO. OF TERMINATIONS
C
        CALL INTEGER(INT,ISTAT)
        IF (ISTAT.NE.1) GO TO 1806
        CALL COMMAND(-3,ICHAR,NUM)
        IF (NUM.LE.0) GO TO 1806
        IF (NODENO.LT.1000) ISTEP=3
        IF (NODENO.LT.2000.AND.NODENO.GE.1000) ISTEP=4
        IF (NODENO.GE.2000) GO TO 1806
        GO TO 450
C
C  LINE WITH 'AVAILABLE PASSTHROUGHS'
C
 525    IF (ISTEP.NE.2) GO TO 1808
        IF (NTYP(ICTR).NE.9.OR.NODENO.LT.2000) GO TO 1808
        ISTEP=3
        GO TO 450
C
C  LINE WITH 'HOST STATUS'
C
 530    IF (ISTEP.NE.3) GO TO 1810
        ISTEP=4
        HCOUNT(ICTR)=0
        GO TO 450
C
C  LINE WITH 'LINK STATUS'
C
 535    IF (ISTEP.NE.4) GO TO 1812
        ISTEP=5
        LCOUNT(ICTR)=0
        GO TO 450
C
C  IGNORE LINE WITH WORD 'SLEEPING'
C
 540    GO TO 450
C
C  IGNORE LINE WITH WORD 'NEIGHBOR 2XXX'
C
 545    GO TO 1818
C
C  NO MATCH WITH PRIMARY COMMANDS
C  RESCAN THE LINE FOR POSSIBLE STRING 'OUT OF PASSTHROUGHS'
C
 600    TABLE(1)=9
        CALL COMMAND(-3,ICHAR,NUM)
        IF (NUM.NE.1) GO TO 603

C  OUTPUT THIS "OUT OF PASSTHROUGHS" NODE TO THE OUT OF PASSTHROUGHS
C  FILE.

        WRITE(23,602)NODE(ICTR)
602     FORMAT (I4)
        GO TO 450

C
603     TABLE(1)=1
        IF (ISTEP.NE.4) GO TO 605
C
C  RETRIEVE HERE INFORMATION ABOUT HOSTS
C
        CALL INTEGER(INT,ISTAT)
C
C  DONT'T CARE IF THERE IS NO HOST NO.
C
        IF (ISTAT.EQ.1) GO TO 604
        TABLE(1)=1
        GO TO 451
C
 604    CALL COMMAND(-4,ICHAR,NUM)
        IF (NUM.LE.0) GO TO 1810
        HCOUNT(ICTR)=HCOUNT(ICTR)+1
        IHOST(ICTR,HCOUNT(ICTR))=INT
        GO TO 450
C
 605    IF (ISTEP.NE.5) GO TO 1816
C
C  RETRIEVE HERE INFORMATION ABOUT LINES
C
        CALL INTEGER(INT,ISTAT)
        IF (ISTAT.NE.1) GO TO 1812
        IF (INT.NE.LCOUNT(ICTR)) GO TO 1812
        IPOS=TABLE(1)
        CALL OCTAL(INT,ISTAT)
        IF (ISTAT.NE.1) GO TO 1812
        TABLE(1)=IPOS
        CALL INTEGER(INT,ISTAT)
        LCOUNT(ICTR)=LCOUNT(ICTR)+1
C
C  IGNORE LINE IF NODE 1 > NODE 2
C
        IF (NODENO.GT.INT) GO TO 450
C
C  IGNORE LINE IF NEIGHBOR IS A TEMP NODE
C
        DO 606 I=1,NTEMP
        IF (INT.EQ.LTEMP1(I)) GO TO 450
 606    CONTINUE
C
        IF (NODENO.GE.2000) GO TO 610
C
C  RETRIEVE THE NO. OF GROUPS
C
        CALL INTEGER(INT1,ISTAT)
        IF (ISTAT.NE.1) GO TO 1812
        GO TO 615
 610    INT1=512
C
C  RETRIEVE LINE BANDWIDTH
C
 615    CALL COMMAND(-6,ICHAR,NUM)
        IF (NUM.LE.0) GO TO 1812
        IF (NUM.EQ.7.OR.NUM.EQ.8) CALL STC(' ',ICHAR,3)
        IF (NUM.EQ.5.OR.NUM.EQ.6) GO TO 616
        CALL STC(' ',ICHAR,4)
C
C  GET CIRCUIT NAME FROM 'PLOT.LIN' DATA BASE
C
 616    CALL DBFIND('NOD1','EQ',NODENO,'AND','NOD2','EQ',INT,'SAV.',1,
     X  'NOD2','EQ',NODENO,'AND','NOD1','EQ',INT,'OR','REF.',1)
        CALL DBNREC(IREC)
        IF (IREC.NE.1) GO TO 618
        CALL DBGREC($618)
        CALL DBVAL('NAME',LNAM)
        GO TO 620
 618    LNAM(1)='?????'
        DO 619 K=2,4
        LNAM(K)=IBLANK
 619    CONTINUE
C
C  READY TO OUTPUT INFORMATION ON LINE
C
 620    WRITE(24,621) NODENO,INT,(LNAM(K),K=1,4),ICHAR,INT1
 621    FORMAT(2(I4,4X),4A5,1X,A4,1X,I3)
C
C  IF NEIGHBOR NO. IS NEW, STORE IT INTO ARRAY NNODE
C
        CALL SEARCH(NNODE,INT,ICOUNT,IND)
        IF (IND.LE.ICOUNT) GO TO 450
        ICOUNT=ICOUNT+1
        NNODE(ICOUNT)=INT
C
        CALL QSORT(NNODE,IPTR,ICOUNT)
        GO TO 450
C
C  START NOW TO CREATE THE LIST OF NODES
C
 650    CLOSE(24)
        CLOSE(23)
        CLOSE(22)
        CALL DBCLOS
        TYPE 652,NFILE
 652    FORMAT(//10X,'***** CREATING ',2A5,' *****',//)
C
        CALL DBOPEN(NODDMS)
        OPEN(24,NFILE,OUTPUT,SYMBOLIC)
C
C  PROCESS NODE BY NODE
C
        DO 680 I=1,ICOUNT
        ITEMP=NNODE(I)
C
C  GET NODE NAME FROM 'PLOT.NOD' DATA BASE
C
        CALL DBFIND('NODE','EQ',ITEMP)
        CALL DBNREC(IREC)
        IF (IREC.NE.1) GO TO 661
        CALL DBGREC($661)
        CALL DBVAL('NAME',NNAM)
        GO TO 662
 661    NNAM(1)='?????'
        NNAM(2)=IBLANK
C
C  CHECK IF NODE IS DOWN IN PROBE
C
 662    CALL SEARCH(NODE,ITEMP,ICTR,IND)
        IF (IND.LE.ICTR) GO TO 670
        ITYP=-1
        IF (ITEMP.LE.777.OR.ITEMP.GE.2000) GO TO 665
        WRITE(24,664) ITEMP,(NNAM(K),K=1,2),ITYP
 664    FORMAT(I4,1X,2A5,1X,I2)
        GO TO 680
 665    WRITE(24,666) ITEMP,(NNAM(K),K=1,2),ITYP
 666    FORMAT(I4,1X,2A5,1X,I2,//)
        GO TO 680
 670    WRITE(24,664) ITEMP,(NNAM(K),K=1,2),NTYP(IND)
        IF (ITEMP.GE.1000.AND.ITEMP.LE.1777) GO TO 680
        K=HCOUNT(IND)
        WRITE(24,671)(IHOST(IND,J),J=1,30)
 671    FORMAT(5X,14(I4,1X),I4,/,5X,14(I4,1X),I4)
C
 680    CONTINUE
C
C  FINISHED PROCESSING ALL NODES !!
C
 700    CLOSE(24)
        CALL DBCLOS
        CALL DBEND
        CALL EXITPE
C
C  ERROR CONDITIONS WHILE USING COMMAND-10
C
 1800   TYPE 1801
 1801   FORMAT(1X,'ERROR IN INTERPRETING LINE ''NODE NUMBER''')
        GO TO 1830
 1802   TYPE 1803
 1803   FORMAT(1X,'ERROR IN INTERPRETING LINE ''NO SUCH NODE''')
        GO TO 1830
 1804   TYPE 1805
 1805   FORMAT(1X,'ERROR IN INTERPRETING LINE ''VERSION ... TYPE ...''')
        GO TO 1830
 1806   TYPE 1807
 1807   FORMAT(1X,'ERROR IN INTERPRETING LINE ''PORTS ... PASSTHROUGHS',
     X  ' ...''')
        GO TO 1830
 1808   TYPE 1809
 1809   FORMAT(1X,'ERROR IN INTERPRETING LINE ''AVAILABLE PASSTHROUGHS''
     X  ')
        GO TO 1830
 1810   TYPE 1811
 1811   FORMAT(1X,'ERROR IN INTERPRETING LINES FOLLOWING ''HOST STATUS''
     X  ')
        GO TO 1830
 1812   TYPE 1813
 1813   FORMAT(1X,'ERROR IN INTERPRETING LINES FOLLOWING ''LINK STATUS''
     X  ')
        GO TO 1830
 1816   TYPE 1817
 1817   FORMAT(1X,'SOMETHING GOES WRONG WHILE USING COMMAND-10')
        GO TO 1830
 1818   TYPE 1819
 1819   FORMAT(1X,'KEYWORD ''NEIGHBOR'' FOUND')
C
 1830   REREAD 217,(ILINE(K),K=1,72)
        TYPE 218,(ILINE(K),K=1,72)
 217    FORMAT(72A1)
 218    FORMAT(1X,72A1)
        CLOSE(22)
        GO TO 700
C
        END
   