
*********************************************************************
*                                                                   *
*       PROGRAM: TPRBE1                                             *
*       CREATED:                                                    *
*       CREATED BY: MANH DO                                         *
*       LAST UPDATED: APRIL, 1983                                   *
*       LAST UPDATED BY: JO ANN JOELS                               *
*                                                                   *
*       THIS PIECE OF CODE GETS PROBE OUTPUT FOR ALL NODES          *
*       IN THE NETWORK. IT SHOULD BE USED IN CONJUNCTION            *
*       WITH THE PROGRAM TPRBE2 TO CREATE 2 SYMBOLIC FILES          *
*       .NOD  AND  .LIN  DESCRIBING THE NETWORK TOPOLOGY FOR        *
*       THE SIMULATOR. THE DMC FILE TO LOAD THIS PROGRAM            *
*       RESIDES IN TPRBE1.LOD .                                     *
*                                                                   *
*********************************************************************

        INTEGER PORT,COLON,RESULT,CHAR,CR,PROBE(2),USERNA(6),AN(4),
     X  AD(4),PASSWD(9),DNODE(300),SCR(6),QUIT(6)
        DIMENSION KILL(5),IBLOCK(101),ILINE(72),IFILE1(2),IFILE2(2)
        DIMENSION IFILE3(2),IDATE(2),NNODE(1200),NODNUM(4),
     X  N(13),LTEMP1(10),ITMP(20),IFILE4(2),IFILE5(2),IPTR(1200),
     X  NODDMS(4),LINDMS(4),LFILE(2),NFILE(2)
        COMMON /AUX/PORT

        DATA PROBE/'PROBE:*;  '/
        DATA COLON/58/,LF/10/,CR/13/
        DATA KILL/4,69,88,73,13/
        DATA QUIT/5,81,85,73,84,13/
        DATA USERNA/5,68,79,73,84,13/
        DATA PASSWD/8,84,82,79,85,66,76,69,13/
        DATA AN/3,65,78,13/
        DATA AD/3,65,68,13/
        DATA NTEMP/5/
        DATA (LTEMP1(I),I=1,5)/1077,1176,1177,1376,1377/
        DATA ICOLON/"351004020100/
        DATA ILF/"051004020100/

C
C  HOW ABOUT A HEADING FOR FUN ?
C
        CALL DATE(IDATE)
        CALL TIME(ITIME)
        TYPE 50, IDATE,ITIME
 50     FORMAT(//10X,'PROGRAM TOPOLOGY PROBE',5X,'VERSION 2.0',
     X  /15X,2A5,15X,A5,//)
C
C  PROMPT FOR INPUT DATA BASE NAME
C
        TYPE 51
 51     FORMAT(1X,'TOPOLOGY DATA BASE NAME (NO EXT): ',$)
        ACCEPT 52,LINDMS
 52     FORMAT(4A5)
C
C  PUT EXTENSION .NOD AND .LIN TO DATA BASE NAMES
C
        DO 53 I=1,4
        NODDMS(I)=LINDMS(I)
 53     CONTINUE
C
        DO 54 I=1,17
        CALL RTC(ICHAR,LINDMS,I)
        IF (ICHAR.EQ.' ') GO TO 60
 54     CONTINUE
C
        TYPE 57,LINDMS
 57     FORMAT(1X,'DATA BASE NAME ',4A5,' EXCEEDS 17 CHARACTERS')
        CALL EXITPE
C
 60     CALL STC('.',LINDMS,I)
        CALL STC('L',LINDMS,I+1)
        CALL STC('I',LINDMS,I+2)
        CALL STC('N',LINDMS,I+3)
        CALL STC('.',NODDMS,I)
        CALL STC('N',NODDMS,I+1)
        CALL STC('O',NODDMS,I+2)
        CALL STC('D',NODDMS,I+3)
C
C  BUILD OUTPUT FILE NAMES
C
        CALL DATCON(IDATE,NEWDAT,IER)
        ENCODE(6,62,ITEMP) NEWDAT
 62     FORMAT(I6)
        DECODE(6,63,ITEMP) (SCR(I),I=1,6)
 63     FORMAT(6I1)
        ENCODE(10,64,LFILE) (SCR(I),I=1,6)
 64     FORMAT(6I1,'.LIN')
        ENCODE(10,65,NFILE) (SCR(I),I=1,6)
 65     FORMAT(6I1,'.NOD')
C
C  BUILD TEMPORARY FILENAMES
C
        IFILE1(1)=MUSENO('A')
        IFILE1(2)='.TMP'
        IFILE2(1)=MUSENO('B')
        IFILE2(2)='.TMP'
        IFILE3(1)=MUSENO('C')
        IFILE3(2)='.TMP '
        IFILE5(1)=MUSENO('D')
        IFILE5(2)='.TMP'
        IFILE4(1)=MUSENO('F')
        IFILE4(2)='.DAT'
C
C  BUILD AUX CIRCUIT TO TMS
C
        CALL TMSCIR(IERR)
        IF (IERR.EQ.0) GO TO 130
        IF (IERR.EQ.1) TYPE 100
 100    FORMAT(' UNABLE TO BUILD CIRCUIT TO TMS ')
        IF (IERR.EQ.2) TYPE 120
120     FORMAT (' BAD RESPONSE FROM TMS')
        GO TO 2001
C
C  INTO TMS, TELL USER
C
130     TYPE 135
 135    FORMAT(1H+,'LOGGED INTO TMS')
        CALL ONINT($2000)
C
C  SEND OUT THE 'AN' COMMAND
C
        CALL SEND(AN)
C
C  OPEN THE TMP FILE FOR 'AN' OUTPUT

        OPEN(21,IFILE1,OUTPUT)

C  PLACE ALL OF THE OUTPUT FROM THE AUX CIRCUIT TO TMS/PROBE INTO
C  THIS FILE

165     CALL AXFOUT(COLON,21,NUMLIN)

C  CLOSE THE TMP FILE
        CLOSE(21)

C  NOW GET THE LIST OF ALL DOWN NODES
C
 188    OPEN(21,IFILE2,OUTPUT,SYMBOLIC)
        IPOS=1
C
C  SEND OUT THE 'AD' COMMAND
C
        CALL SEND(AD)
C
C  NOW GET OUTPUT FROM PROBE CHAR BY CHAR
C
 190    CALL AXFOUT(COLON,21,ILNUM2)
C
C  DONE HERE WITH THE 'AD' COMMAND
C
 205    CLOSE(21)
C
C  READ THE LIST OF NODES FROM 'AN' COMMAND
C
        OPEN(21,IFILE1,INPUT,SYMBOLIC)
        ICTR=1

C  THE FIRST LINE IS THE HEADER 'AN', IGNORE IT

        READ (21,206)ITEMP
206     FORMAT(A2)

C  NOW READ THE REST OF THE FILE
 210    READ(21,211,ERR=213,END=220) NNODE(ICTR),IVERS,ITYP
 211    FORMAT(3I)
C
C  CHECK FOR CORRECT NODE TYPE TO MAKE SURE
C
        IF (ITYP.LT.0.OR.ITYP.GT.9) GO TO 213
C
C  CHECK FOR CORRECT NODE NO. TO MAKE SURE
C
        IF (NNODE(ICTR).LE.0) GO TO 213
        ICTR=ICTR+1
        GO TO 210
C
C  INPUT LINE IS SUSPICIOUS, PRINT A MESSAGE
C
 213    TYPE 214,ICTR,IFILE1
 214    FORMAT(' FOLLOWING LINE AT POSITION ',I4,' IN FILE ',2A5,
     X  ' MAY NOT BE CORRECT :')
        REREAD 217,(ILINE(K),K=1,72)
 217    FORMAT(72A1)
        TYPE 218,(ILINE(K),K=1,72)
 218    FORMAT(1X,72A1)
C
C  ERROR, IGNORE THIS LINE AND CONTINUE
C
        GO TO 210
C
C  FINISHED READING, CLOSE THE FILE
C
 220    CLOSE(21)
        ICTR=ICTR-1
C
C  CHECK IF ARRAY: NNODE IS REALLY IN ASCENDING ORDER
C
        ITEMP=NNODE(1)
        IF (ITEMP.LE.0) GO TO 1900
        DO 225 I=2,ICTR
        IF (ITEMP.GE.NNODE(I)) GO TO 1900
        ITEMP=NNODE(I)
 225    CONTINUE
C
C  NOW READ THE LIST OF NODES FROM 'AD' COMMAND
C
        OPEN(21,IFILE2,INPUT,SYMBOLIC)
C
C  READ LINE BY LINE
C
        ICOUNT=1

C  FIRST LINE IS THE HEADER 'AD', IGNORE IT

        READ (21,206)ITEMP

C NOW READ THE REST OF THE FILE
 230    READ(21,231,ERR=237,END=239) (ITMP(I),I=1,20)
 231    FORMAT(20I)
        J=1
 235    IF (ITMP(J).EQ.0) GO TO 230
        DNODE(ICOUNT)=ITMP(J)
        ICOUNT=ICOUNT+1
        J=J+1
        IF (J.LE.20) GO TO 235
 237    TYPE 214, ICOUNT,IFILE2
        REREAD 217,(ILINE(K),K=1,72)
        TYPE 218,(ILINE(K),K=1,72)
C
C  ERROR, QUIT THE PROGRAM
C
        GO TO 1910
C
C  FINISHED READING, CLOSE THE FILE
C
 239    CLOSE(21)
        ICOUNT=ICOUNT-1
C
C IF THERE WERE NO DOWN NODES OR ONLY 1 DOWN NODE , CONTINUE
        IF (ICOUNT.EQ.0.OR.ICOUNT.EQ.1) GO TO 241

C  CHECK IF ARRAY: DNODE IS REALLY IN ASCENDING ORDER
C
        ITEMP=DNODE(1)
        IF (ITEMP.LE.0) GO TO 1910
        DO 240 I=2,ICOUNT
        IF (ITEMP.GE.DNODE(I)) GO TO 1910
        ITEMP=DNODE(I)
 240    CONTINUE
C
C  MERGE AND SORT THE 2 ARRAYS NNODE AND DNODE
C
241     I=0
 242    I=I+1
        ICTR=ICTR+1
        NNODE(ICTR)=DNODE(I)
        IF (I.LT.ICOUNT) GO TO 242
        CALL QSORT(NNODE,IPTR,ICTR)
C
C  MERGING IS DONE, CLEAR THE ARRAY: DNODE
C
        DO 243 I=1,ICOUNT
        DNODE(I)=0
 243    CONTINUE
C
C  TYPE OUT LIST OF ALL NODES OTHER THAN TEMP NODES TO THE TMP IFILE3
C  ALSO AVOID DUPLICATE ENTRIES BEFORE WRITING TO THE TMP IFILE3
C
        OPEN(21,IFILE5,OUTPUT,SYMBOLIC)
        ITMP1=ICTR
        K=0
        ITEMP1=0
 245    K=K+1
        IF (K.GT.ITMP1) GO TO 248
        ITEMP=NNODE(K)
        DO 246 I=1,NTEMP
        IF (ITEMP.EQ.LTEMP1(I)) GO TO 247
 246    CONTINUE
        IF (ITEMP1.EQ.ITEMP) GO TO 247
        WRITE(21,255) ITEMP
        ITEMP1=ITEMP
        GO TO 245
 247    ICTR=ICTR-1
        GO TO 245
 248    CLOSE(21)
C
C  PRINT THE TOTAL NUMBER OF NODES
C
        TYPE 244,ICTR
 244    FORMAT(1X,'TOTAL NUMBER OF NODES UP AND DOWN = ',I4)
C
C  CLEAR ARRAY: NNODE
C
        DO 249 I=1,ITMP1
        NNODE(I)=0
 249    CONTINUE
C
C  READ NODE NUMBER ONE BY ONE FROM TMP IFILE3
C
 250    OPEN(21,IFILE5,INPUT,SYMBOLIC)
        IPOS=1
        OPEN(22,IFILE4,OUTPUT,SYMBOLIC)
C
C  WRITE OUT THE FILENAMES
C
        WRITE(22,251) (NODDMS(I),I=1,4),(LINDMS(I),I=1,4)
 251    FORMAT(4A5,1X,4A5)
        WRITE(22,252) (NFILE(I),I=1,2),(LFILE(I),I=1,2)
 252    FORMAT(2A5,1X,2A5)
C
 253    READ(21,255,ERR=260,END=996) NODENO
 254    FORMAT(O4)
 255    FORMAT(I4)
        GO TO 270
C
C  ERROR, GARBAGE FOR NODENO
C
 260    REREAD 261, NODENO
 261    FORMAT(A4)
        TYPE 262, NODENO,IFILE5
 262    FORMAT(' GARBAGE ',A4,' IN FILE ',2A5)
        GO TO 1920
C
C  BUILD THE NODE COMMAND FOR THIS NODE
C
 270    CALL AXBCOM('NODE',NODENO,N)
C
C  SEND OUT THE 'NODE' COMMAND
C
 320    CALL SEND(N)
C
C  NOW GET OUTPUT FROM PROBE CHAR BY CHAR
C
 330    CALL AXFOUT(COLON,22,ILNUM3)

C  GO ISSUE NODE COMMAND FOR NEXT NODE
        GO TO 253
C
C  FINISHED PROCESSING ALL NODES !!
C
 996    CLOSE(21)
        CLOSE(22)
C
C  CLEAN EXIT
C
        CALL SEND(KILL)
        CALL SEND(QUIT)
        TYPE 997
 997    FORMAT(1X,'LOGOUT FROM PROBE')
        CALL EXITPE
C
C  ERROR WHILE READING LIST OF NODES FROM 'AN' COMMAND
C
 1900   TYPE 1903
 1903   FORMAT(' ERROR IN LIST OF NODES FROM ''AN'' COMMAND, TRY ',
     X  'TO RERUN THE PROGRAM')
        GO TO 2000
C
C  ERROR WHILE READING LIST OF NODES FROM 'AD' COMMAND
C
 1910   TYPE 1913
 1913   FORMAT(' ERROR IN LIST OF NODES FROM ''AD'' COMMAND, TRY ',
     X  'TO RERUN THE PROGRAM')
        GO TO 2000
C
C  ERROR WHILE READING THE TMP IFILE3
C
 1920   TYPE 1923, IFILE3
 1923   FORMAT(' ERROR WHILE READING FILE ',2A5,'. TRY TO RERUN ',
     X  'THE PROGRAM')
        GO TO 2000
C
C  SEND 'EXI' COMMAND TO GET OUT FROM PROBE, AND 'QUIT' TO GET OUT OF
C TMS
C
 2000   CALL SEND(KILL)
        CALL SEND(QUIT)
        CALL ZAP(PORT)
 2001   TYPE 2002
 2002   FORMAT(1X,'ABNORMAL EXIT, TO ABORT EXECUTION HIT ESC KEY')
        CALL EXITPE
        END
 